!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
AF	src/test/scala/verilogmain/TypStackSweeper.scala	/^  val AF        = optionkv('AF).asInstanceOf[String]$/;"	l
AF	src/test/scala/verilogmain/TypeStackSweeper16b.scala	/^  val AF        = optionkv('AF).asInstanceOf[String]$/;"	l
AXPROT	src/main/scala/junctions/nasti.scala	/^  def AXPROT(instruction: Bool, nonsecure: Bool, privileged: Bool): UInt =$/;"	m
AXPROT	src/main/scala/junctions/nasti.scala	/^  def AXPROT(instruction: Boolean, nonsecure: Boolean, privileged: Boolean): UInt =$/;"	m
AbstractArbiterTree	src/main/scala/arbiters/ArbiterTree.scala	/^abstract class AbstractArbiterTree[T <: Data](Nops: Int, gen: T)(implicit p: Parameters) $/;"	c
AbstractDeMuxTree	src/main/scala/muxes/Muxes.scala	/^abstract class AbstractDeMuxTree[T <: RouteID](Nops: Int, gen: T)(implicit p: Parameters)$/;"	c
AbstractRFile	src/main/scala/regfile/RegFile.scala	/^abstract class AbstractRFile(size: Int)(implicit val p: Parameters) extends Module with CoreParams {$/;"	c
AccelConfig	src/main/scala/accel/Config.scala	/^class AccelConfig extends MiniConfig() {$/;"	c
AccelTester	src/test/scala/accel/AccelTests.scala	/^class AccelTester(accel: => Accelerator)(implicit val p: config.Parameters) extends BasicTester with CacheParams {$/;"	c
AccelTester01	src/test/scala/accel/coredf/AccelTests01.scala	/^class AccelTester01(accel: => Accelerator)(implicit val p: config.Parameters) extends BasicTester with CacheParams {$/;"	c
AccelTests	src/test/scala/accel/AccelTests.scala	/^class AccelTests extends org.scalatest.FlatSpec {$/;"	c
AccelTests01	src/test/scala/accel/coredf/AccelTests01.scala	/^class AccelTests01 extends org.scalatest.FlatSpec {$/;"	c
Accelerator	src/main/scala/accel/Accelerator.scala	/^class Accelerator(cNum : Int, sNum : Int, coreDF: => CoreT) (implicit p: Parameters)extends AcceleratorIO()(p) {$/;"	c
AcceleratorIO	src/main/scala/accel/Accelerator.scala	/^abstract class AcceleratorIO(implicit val p: Parameters) extends Module with CoreParams {$/;"	c
Add	src/main/scala/FPU/FPALU.scala	/^  val Add = 1$/;"	l
Add	src/main/scala/node/Alu.scala	/^  val Add = 1$/;"	l
Add01DF	src/main/scala/dataflow/tests/Add01.scala	/^class Add01DF(implicit p: Parameters) extends Add01DFIO() {$/;"	c
Add01DFIO	src/main/scala/dataflow/tests/Add01.scala	/^abstract class Add01DFIO(implicit val p: Parameters) extends Module with CoreParams {$/;"	c
Add01Tester	src/test/scala/dataflow/tests/Add01.scala	/^class Add01Tester(df: Add01DF)$/;"	c
Add01Tests	src/test/scala/dataflow/tests/Add01.scala	/^class Add01Tests extends  FlatSpec with Matchers {$/;"	c
AddDF	src/main/scala/dataflow/AdditionDF.scala	/^class AddDF(implicit p: Parameters) extends AddDFIO() {$/;"	c
AddDFIO	src/main/scala/dataflow/AdditionDF.scala	/^abstract class AddDFIO(implicit val p: Parameters) extends Module with CoreParams {$/;"	c
Adder	src/main/scala/dataflow/filter/BasicFilter.scala	/^  val Adder = for (i <- 0 until FilterSize-1) yield {$/;"	l
Adder	src/main/scala/dataflow/filter/VecFilter.scala	/^  val Adder = for (i <- 0 until FilterSize-1) yield {$/;"	l
AdderChild	src/test/scala/concurrent/DecoupledTaskTest.scala	/^  val AdderChild = for (c <- 0 until numChildren) yield {$/;"	l
AllocaIO	src/main/scala/interfaces/interfaces.scala	/^class AllocaIO(implicit p: Parameters) extends CoreBundle()(p) {$/;"	c
AllocaIO	src/main/scala/interfaces/interfaces.scala	/^object AllocaIO {$/;"	c
AllocaNode	src/main/scala/node/Alloca.scala	/^class AllocaNode(NumOuts: Int, ID: Int, RouteID: Int, FrameSize : Int = 16)$/;"	c
AllocaNodeIO	src/main/scala/node/Alloca.scala	/^class AllocaNodeIO(NumOuts: Int) (implicit p: Parameters)$/;"	c
AllocaReq	src/main/scala/interfaces/interfaces.scala	/^class AllocaReq(implicit p: Parameters) extends CoreBundle()(p) with RouteID {$/;"	c
AllocaReq	src/main/scala/interfaces/interfaces.scala	/^object AllocaReq {$/;"	c
AllocaResp	src/main/scala/interfaces/interfaces.scala	/^class AllocaResp(implicit p: Parameters)$/;"	c
AllocaResp	src/main/scala/interfaces/interfaces.scala	/^object AllocaResp {$/;"	c
AllocaTester	src/test/scala/node/allocaNode.scala	/^class AllocaTester(df: AllocaNode)(implicit p: config.Parameters) extends PeekPokeTester(df)  {$/;"	c
AllocaTests	src/test/scala/node/allocaNode.scala	/^class AllocaTests extends  FlatSpec with Matchers {$/;"	c
AluGenerator	src/main/scala/node/Alu.scala	/^object AluGenerator {$/;"	c
AluOpCode	src/main/scala/node/Alu.scala	/^object AluOpCode {$/;"	c
And	src/main/scala/node/Alu.scala	/^  val And = 3$/;"	l
Arbiter	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^module Arbiter($/;"	m
ArbiterReady	src/main/scala/arbiters/ArbiterTree.scala	/^  val ArbiterReady = RegInit(true.B)$/;"	l
ArbiterTester	src/test/scala/arbiters/ArbitersTest.scala	/^class ArbiterTester (bus: WordRegFile)(implicit p: config.Parameters) extends PeekPokeTester(bus)  {$/;"	c
ArbiterTests	src/test/scala/arbiters/ArbitersTest.scala	/^class ArbiterTests extends  FlatSpec with Matchers {$/;"	c
ArbiterTree	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^module ArbiterTree($/;"	m
ArbiterTree	src/main/scala/arbiters/ArbiterTree.scala	/^class ArbiterTree[T <: Data](BaseSize: Int, NumOps: Int, gen: T, Locks: Int)(implicit val p: Parameters) $/;"	c
ArbiterTree_1	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^module ArbiterTree_1($/;"	m
Arbiters_per_Level	src/main/scala/arbiters/ArbiterTree.scala	/^  var Arbiters_per_Level = (NumOps + BaseSize - 1) \/ BaseSize$/;"	l
Args	src/main/scala/loop/LoopEnd.scala	/^  val Args = for (i <- 0 until NumInputs) yield {$/;"	l
Args	src/main/scala/loop/LoopHeader.scala	/^  val Args = for (i <- 0 until NumInputs) yield {$/;"	l
Args	src/main/scala/loop/LoopStart.scala	/^  val Args = for (i <- 0 until NumInputs) yield {$/;"	l
BASEDIR	scripts/TypeStackFile.py	/^BASEDIR = "\/home\/amiralis\/git\/dataflow-lib"$/;"	v
BID	src/main/scala/node/HandShaking.scala	/^                            val BID: Int)(implicit val p: Parameters)$/;"	l
BID	src/main/scala/node/HandShaking.scala	/^                          val BID: Int)(implicit val p: Parameters)$/;"	l
BURST_FIXED	src/main/scala/junctions/nasti.scala	/^  def BURST_FIXED = UInt("b00")$/;"	m
BURST_INCR	src/main/scala/junctions/nasti.scala	/^  def BURST_INCR  = UInt("b01")$/;"	m
BURST_WRAP	src/main/scala/junctions/nasti.scala	/^  def BURST_WRAP  = UInt("b10")$/;"	m
BasicBlockIO	src/main/scala/control/BasicBlock.scala	/^class BasicBlockIO(NumInputs: Int,$/;"	c
BasicBlockLoopHeadNode	src/main/scala/control/BasicBlock.scala	/^class BasicBlockLoopHeadNode(NumInputs: Int,$/;"	c
BasicBlockNoMaskFastIO	src/main/scala/control/BasicBlock.scala	/^class BasicBlockNoMaskFastIO(val NumOuts: Int)(implicit p: Parameters)$/;"	c
BasicBlockNoMaskFastNode	src/main/scala/control/BasicBlock.scala	/^class BasicBlockNoMaskFastNode(BID: Int, val NumInputs: Int, val NumOuts: Int)(implicit val p: Parameters,$/;"	c
BasicBlockNoMaskIO	src/main/scala/control/BasicBlock.scala	/^class BasicBlockNoMaskIO(NumOuts: Int)$/;"	c
BasicBlockNoMaskNode	src/main/scala/control/BasicBlock.scala	/^class BasicBlockNoMaskNode(NumInputs: Int,$/;"	c
BasicBlockNode	src/main/scala/control/BasicBlock.scala	/^class BasicBlockNode(NumInputs: Int,$/;"	c
BasicFilter	src/main/scala/dataflow/filter/BasicFilter.scala	/^class BasicFilter(implicit val p: Parameters) extends Module with CoreParams {$/;"	c
BasicLoader	src/main/scala/dataflow/filter/BasicLoader.scala	/^class BasicLoader(implicit val p: Parameters) extends Module with CoreParams {$/;"	c
Beats	src/main/scala/config/config.scala	/^  val Beats   = Typ_SZ\/xlen$/;"	l
BitCastNode	src/main/scala/node/BitCastNode.scala	/^class BitCastNode(val NumOuts: Int,val ID : Int)(implicit val p: Parameters)$/;"	c
BitCastNodeIO	src/main/scala/node/BitCastNode.scala	/^class BitCastNodeIO(val NumOuts: Int)$/;"	c
BoolEx	src/main/scala/config/cde/Expression.scala	/^case class BoolEx (expr:Ex[Boolean]) {$/;"	c
Bool_IntEx	src/main/scala/config/cde/Expression.scala	/^  implicit def Bool_IntEx(b:Boolean):BoolEx = BoolEx(ExLit[Boolean](b))$/;"	m
BrTests	src/test/scala/node/branchNode.scala	/^class BrTests extends  FlatSpec with Matchers {$/;"	c
BranchTester	src/test/scala/node/branchNode.scala	/^class BranchTester(df: CBranchNode)(implicit p: config.Parameters) extends PeekPokeTester(df)  {$/;"	c
BuildRFile	src/main/scala/config/config.scala	/^case object BuildRFile extends Field[Parameters => AbstractRFile]$/;"	c
CACHE_DEVICE_BUF	src/main/scala/junctions/nasti.scala	/^  def CACHE_DEVICE_BUF   = UInt("b0001")$/;"	m
CACHE_DEVICE_NOBUF	src/main/scala/junctions/nasti.scala	/^  def CACHE_DEVICE_NOBUF = UInt("b0000")$/;"	m
CACHE_NORMAL_NOCACHE_BUF	src/main/scala/junctions/nasti.scala	/^  def CACHE_NORMAL_NOCACHE_BUF   = UInt("b0011")$/;"	m
CACHE_NORMAL_NOCACHE_NOBUF	src/main/scala/junctions/nasti.scala	/^  def CACHE_NORMAL_NOCACHE_NOBUF = UInt("b0010")$/;"	m
CBranchFastIO	src/main/scala/node/BranchNode.scala	/^class CBranchFastIO()(implicit p: Parameters) extends CoreBundle {$/;"	c
CBranchFastNode	src/main/scala/node/BranchNode.scala	/^class CBranchFastNode(ID: Int)$/;"	c
CBranchNode	src/main/scala/node/BranchNode.scala	/^class CBranchNode(ID: Int)$/;"	c
CBranchNodeIO	src/main/scala/node/BranchNode.scala	/^class CBranchNodeIO(NumOuts: Int = 2)$/;"	c
CDEMatchError	src/main/scala/config/cde/Parameters.scala	/^final class CDEMatchError(obj: Any = null) extends Exception {$/;"	c
CMPGenerator	src/main/scala/node/Comparision.scala	/^object CMPGenerator{$/;"	c
COMPONENTS	src/main/scala/config/config.scala	/^case object COMPONENTS extends Field[String]$/;"	c
Cache	src/main/scala/accel/Cache.scala	/^class Cache(implicit val p: Parameters) extends Module with CacheParams {$/;"	c
CacheArb	src/test/scala/generator/cilk/mergesort_test.scala	/^  val CacheArb = Module(new MemArbiter(NumMergesorts))$/;"	l
CacheBlockBytes	src/main/scala/accel/Cache.scala	/^case object CacheBlockBytes extends Field[Int]$/;"	c
CacheIO	src/main/scala/accel/Cache.scala	/^class CacheIO (implicit p: Parameters) extends ParameterizedBundle()(p) {$/;"	c
CacheLoader	src/main/scala/dataflow/filter/CacheLoader.scala	/^class CacheLoader(FilterSize : Int)(implicit val p: Parameters) extends Module with CoreParams {$/;"	c
CacheMem	src/main/scala/dataflow/MemDataFlow.scala	/^	val CacheMem = Module(new UnifiedController(ID=0,Size=32,NReads=ops*2,NWrites=ops*2)$/;"	l
CacheMem	src/main/scala/dataflow/TestCacheDataFlow.scala	/^	val CacheMem = Module(new UnifiedController(ID=0,Size=32,NReads=2,NWrites=2)$/;"	l
CacheMem	src/main/scala/dataflow/filter/CacheLoader.scala	/^  val CacheMem = Module(new UnifiedController(ID=0,Size=32,NReads=FilterSize,NWrites=FilterSize)$/;"	l
CacheMem	src/main/scala/dataflow/filter/CacheVecLoader.scala	/^  val CacheMem = Module(new UnifiedTypController(ID=0,Size=32,NReads=FilterSize,NWrites=2)$/;"	l
CacheMem	src/main/scala/generator/cilk/bgemm.scala	/^	val CacheMem = Module(new UnifiedController(ID=0,Size=32,NReads=2,NWrites=2)$/;"	l
CacheMem	src/main/scala/generator/cilk/bgemm_detach1.scala	/^	val CacheMem = Module(new UnifiedController(ID=0,Size=32,NReads=2,NWrites=2)$/;"	l
CacheMem	src/main/scala/generator/cilk/bgemm_detach2.scala	/^	val CacheMem = Module(new UnifiedController(ID=0,Size=32,NReads=2,NWrites=2)$/;"	l
CacheMem	src/main/scala/generator/cilk/bgemm_detach3.scala	/^	val CacheMem = Module(new UnifiedController(ID=0,Size=32,NReads=3,NWrites=1)$/;"	l
CacheMem	src/main/scala/generator/cilk/cilk_for_test01.scala	/^	val CacheMem = Module(new UnifiedController(ID=0,Size=32,NReads=1,NWrites=1)$/;"	l
CacheMem	src/main/scala/generator/cilk/cilk_for_test02.scala	/^	val CacheMem = Module(new UnifiedController(ID=0,Size=32,NReads=2,NWrites=2)$/;"	l
CacheMem	src/main/scala/generator/cilk/cilk_for_test02_mul.scala	/^	val CacheMem = Module(new UnifiedController(ID=0,Size=32,NReads=1,NWrites=1)$/;"	l
CacheMem	src/main/scala/generator/cilk/cilk_for_test04.scala	/^	val CacheMem = Module(new UnifiedController(ID=0,Size=32,NReads=2,NWrites=2)$/;"	l
CacheMem	src/main/scala/generator/cilk/cilk_for_test04_detach.scala	/^	val CacheMem = Module(new UnifiedController(ID=0,Size=1024,NReads=2,NWrites=1)$/;"	l
CacheMem	src/main/scala/generator/cilk/cilk_for_test05.scala	/^	val CacheMem = Module(new UnifiedController(ID=0,Size=32,NReads=2,NWrites=2)$/;"	l
CacheMem	src/main/scala/generator/cilk/cilk_for_test05_detach.scala	/^	val CacheMem = Module(new UnifiedController(ID=0,Size=32,NReads=6,NWrites=2)$/;"	l
CacheMem	src/main/scala/generator/cilk/cilk_for_test06.scala	/^  val CacheMem = Module(new UnifiedController(ID = 0, Size = 32, NReads = 2, NWrites = 2)$/;"	l
CacheMem	src/main/scala/generator/cilk/cilk_for_test06_detach.scala	/^  val CacheMem = Module(new UnifiedController(ID = 0, Size = 32, NReads = 2, NWrites = 2)$/;"	l
CacheMem	src/main/scala/generator/cilk/cilk_for_test06_detach_2.scala	/^  val CacheMem = Module(new UnifiedController(ID = 0, Size = 32, NReads = 2, NWrites = 1)$/;"	l
CacheMem	src/main/scala/generator/cilk/cilk_for_test07.scala	/^	val CacheMem = Module(new UnifiedController(ID=0,Size=32,NReads=2,NWrites=2)$/;"	l
CacheMem	src/main/scala/generator/cilk/cilk_for_test07_detach.scala	/^	val CacheMem = Module(new UnifiedController(ID=0,Size=1024,NReads=4,NWrites=1)$/;"	l
CacheMem	src/main/scala/generator/cilk/cilk_for_test08.scala	/^	val CacheMem = Module(new UnifiedController(ID=0,Size=32,NReads=2,NWrites=2)$/;"	l
CacheMem	src/main/scala/generator/cilk/cilk_for_test08_detach.scala	/^	val CacheMem = Module(new UnifiedController(ID=0,Size=32,NReads=3,NWrites=3)$/;"	l
CacheMem	src/main/scala/generator/cilk/cilk_for_test09.scala	/^  val CacheMem = Module(new UnifiedController(ID = 0, Size = 32, NReads = 2, NWrites = 2)$/;"	l
CacheMem	src/main/scala/generator/cilk/cilk_for_test09_inner.scala	/^	val CacheMem = Module(new UnifiedController(ID=0,Size=32,NReads=2,NWrites=2)$/;"	l
CacheMem	src/main/scala/generator/cilk/cilk_for_test12.scala	/^  val CacheMem = Module(new UnifiedController(ID=0,Size=32,NReads=2,NWrites=2)$/;"	l
CacheMem	src/main/scala/generator/cilk/cilk_for_test12_detach1.scala	/^  val CacheMem = Module(new UnifiedController(ID=0,Size=32,NReads=2,NWrites=2)$/;"	l
CacheMem	src/main/scala/generator/cilk/cilk_for_test12_detach2.scala	/^  val CacheMem = Module(new UnifiedController(ID=0,Size=32,NReads=1,NWrites=1)$/;"	l
CacheMem	src/main/scala/generator/cilk/cilk_for_test12_detach3.scala	/^  val CacheMem = Module(new UnifiedController(ID=0,Size=32,NReads=1,NWrites=1)$/;"	l
CacheMem	src/main/scala/generator/cilk/cilk_spawn_test01.scala	/^	val CacheMem = Module(new UnifiedController(ID=0,Size=32,NReads=1,NWrites=1)$/;"	l
CacheMem	src/main/scala/generator/cilk/cilk_spawn_test02.scala	/^	val CacheMem = Module(new UnifiedController(ID=0,Size=32,NReads=2,NWrites=2)$/;"	l
CacheMem	src/main/scala/generator/cilk/stencil.scala	/^    val CacheMem = Module(new UnifiedController(ID=0,Size=32,NReads=2,NWrites=2)$/;"	l
CacheMem	src/main/scala/generator/cilk/stencil_detach1.scala	/^  val CacheMem = Module(new UnifiedController(ID = 0, Size = 32, NReads = 1, NWrites = 1)$/;"	l
CacheMem	src/main/scala/generator/cilk/stencil_inner.scala	/^  val CacheMem = Module(new UnifiedController(ID = 0, Size = 32, NReads = 2, NWrites = 1)$/;"	l
CacheMem	src/main/scala/generator/test01.scala	/^  val CacheMem = Module(new UnifiedController(ID = 0, Size = 32, NReads = 2, NWrites = 2)$/;"	l
CacheMem	src/main/scala/generator/test02.scala	/^	val CacheMem = Module(new UnifiedController(ID=0,Size=32,NReads=2,NWrites=2)$/;"	l
CacheMem	src/main/scala/generator/test03.scala	/^  val CacheMem = Module(new UnifiedController(ID = 0, Size = 32, NReads = 2, NWrites = 2)$/;"	l
CacheMem	src/main/scala/generator/test04.scala	/^	val CacheMem = Module(new UnifiedController(ID=0,Size=32,NReads=2,NWrites=2)$/;"	l
CacheMem	src/main/scala/generator/test05.scala	/^  val CacheMem = Module(new UnifiedController(ID=0,Size=32,NReads=3,NWrites=2)$/;"	l
CacheMem	src/main/scala/generator/test05b.scala	/^  val CacheMem = Module(new UnifiedController(ID=0,Size=32,NReads=2,NWrites=1)$/;"	l
CacheMem	src/main/scala/generator/test05c.scala	/^  val CacheMem = Module(new UnifiedController(ID=0,Size=32,NReads=2,NWrites=2)$/;"	l
CacheMem	src/main/scala/generator/test06.scala	/^	val CacheMem = Module(new UnifiedController(ID=0,Size=32,NReads=3,NWrites=3)$/;"	l
CacheMem	src/main/scala/generator/test08.scala	/^	val CacheMem = Module(new UnifiedController(ID=0,Size=32,NReads=2,NWrites=2)$/;"	l
CacheMem	src/main/scala/generator/test09.scala	/^	val CacheMem = Module(new UnifiedController(ID=0,Size=32,NReads=2,NWrites=2)$/;"	l
CacheMem	src/main/scala/generator/test10.scala	/^	val CacheMem = Module(new UnifiedController(ID=0,Size=32,NReads=2,NWrites=1)$/;"	l
CacheMem	src/main/scala/generator/test11.scala	/^	val CacheMem = Module(new UnifiedController(ID=0,Size=32,NReads=2,NWrites=1)$/;"	l
CacheMem	src/main/scala/generator/test11_add.scala	/^	val CacheMem = Module(new UnifiedController(ID=0,Size=32,NReads=2,NWrites=2)$/;"	l
CacheMem	src/main/scala/generator/test12.scala	/^	val CacheMem = Module(new UnifiedController(ID=0,Size=32,NReads=2,NWrites=2)$/;"	l
CacheMem	src/main/scala/generator/test12_inner.scala	/^	val CacheMem = Module(new UnifiedController(ID=0,Size=32,NReads=2,NWrites=2)$/;"	l
CacheMem	src/main/scala/generator/test14.scala	/^	val CacheMem = Module(new UnifiedController(ID=0,Size=32,NReads=2,NWrites=2)$/;"	l
CacheMem	src/main/scala/generator/test14_inner.scala	/^	val CacheMem = Module(new UnifiedController(ID=0,Size=32,NReads=2,NWrites=2)$/;"	l
CacheMem	src/main/scala/generator/test15.scala	/^  val CacheMem = Module(new UnifiedController(ID=0,Size=32,NReads=3,NWrites=3)$/;"	l
CacheModel	src/main/scala/accel/CacheModel.scala	/^class CacheModel(implicit val p: Parameters) extends Module with CacheParams {$/;"	c
CacheModuleIO	src/main/scala/accel/Cache.scala	/^class CacheModuleIO(implicit p: Parameters) extends CoreBundle()(p) {$/;"	c
CacheParams	src/main/scala/accel/Cache.scala	/^trait CacheParams extends CoreParams with HasNastiParameters {$/;"	t
CacheTester	src/test/scala/accel/CacheTests.scala	/^class CacheTester(cache: => Cache)(implicit val p: config.Parameters) extends BasicTester with CacheParams {$/;"	c
CacheTests	src/test/scala/accel/CacheTests.scala	/^class CacheTests extends org.scalatest.FlatSpec {$/;"	c
CacheVecLoader	src/main/scala/dataflow/filter/CacheVecLoader.scala	/^class CacheVecLoader(FilterSize : Int)(implicit val p: Parameters) extends Module with CoreParams {$/;"	c
CacheWrapper	src/test/scala/dataflow/UnTypMemDataflow.scala	/^class CacheWrapper(val ops:Int)(implicit val p: Parameters) extends Module with CacheParams {$/;"	c
Call	src/main/scala/interfaces/interfaces.scala	/^class Call(val argTypes: Seq[Int])(implicit p: Parameters) extends CoreBundle() {$/;"	c
CallDecoupled	src/main/scala/interfaces/interfaces.scala	/^class CallDecoupled(val argTypes: Seq[Int])(implicit p: Parameters) extends CoreBundle() {$/;"	c
CallDecoupledVec	src/main/scala/interfaces/interfaces.scala	/^class CallDecoupledVec(val argTypes: Seq[Int])(implicit p: Parameters) extends CoreBundle() {$/;"	c
CallInNode	src/main/scala/node/CallInNode.scala	/^class CallInNode(ID: Int, argTypes: Seq[Int])$/;"	c
CallInNodeIO	src/main/scala/node/CallInNode.scala	/^class CallInNodeIO(val argTypes: Seq[Int])(implicit p: Parameters)$/;"	c
CallNode	src/main/scala/node/CallNode.scala	/^class CallNode(ID: Int, argTypes: Seq[Int], retTypes: Seq[Int])$/;"	c
CallNodeIO	src/main/scala/node/CallNode.scala	/^class CallNodeIO(val argTypes: Seq[Int], val retTypes: Seq[Int])(implicit p: Parameters)$/;"	c
CallOutNode	src/main/scala/node/CallOutNode.scala	/^class CallOutNode(ID: Int, val argTypes: Seq[Int], NumSuccOps: Int=0, NoReturn: Bool=false.B)$/;"	c
CallOutNodeIO	src/main/scala/node/CallOutNode.scala	/^class CallOutNodeIO(val argTypes: Seq[Int],$/;"	c
Chain	src/main/scala/node/FusedComputeNode.scala	/^class Chain(ID: Int, NumOps: Int, OpCodes: Array[String])(sign: Boolean)(implicit p: Parameters)$/;"	c
ChainParameters	src/main/scala/config/configurations.scala	/^private class ChainParameters(x: Parameters, y: Parameters) extends Parameters {$/;"	c
ChainPeekPoker	src/test/scala/verilogmain/FusedDataflow.scala	/^class ChainPeekPoker(df: Chain)(implicit p: config.Parameters) extends PeekPokeTester(df)  {$/;"	c
ChainTester	src/test/scala/node/FusedComputeNode.scala	/^class ChainTester(df: Chain)$/;"	c
ChainVerilog	src/test/scala/verilogmain/FusedDataflow.scala	/^object ChainVerilog extends App {$/;"	c
ChainView	src/main/scala/config/configurations.scala	/^private class ChainView(head: Parameters, tail: View) extends View {$/;"	c
ChildArb	src/main/scala/concurrent/TaskController.scala	/^  val ChildArb = Module(new RRArbiter(new Call(retTypes), numChild))$/;"	l
CmpIO	src/main/scala/node/BranchNode.scala	/^  val CmpIO = Flipped(Decoupled(new DataBundle))$/;"	l
CmpOpCode	src/main/scala/node/Comparision.scala	/^object CmpOpCode {$/;"	c
Collector	src/main/scala/config/cde/Parameters.scala	/^class Collector($/;"	c
CombineCall	src/main/scala/junctions/CombineDecoupled.scala	/^class CombineCall(val argTypes: Seq[Int])(implicit p: Parameters) extends Module {$/;"	c
CombineCallIO	src/main/scala/junctions/CombineDecoupled.scala	/^class CombineCallIO(val argTypes: Seq[Int])(implicit p: Parameters) extends CoreBundle {$/;"	c
CombineCustom	src/main/scala/junctions/CombineDecoupled.scala	/^class CombineCustom(val argTypes: Seq[Bits])(implicit p: Parameters) extends Module {$/;"	c
CombineCustomIO	src/main/scala/junctions/CombineDecoupled.scala	/^class CombineCustomIO(argTypes: Seq[Bits])(implicit p: Parameters) extends Bundle {$/;"	c
CombineCustomTester	src/test/scala/junctions/CombineDecoupledTest.scala	/^class CombineCustomTester(c: CombineCustom) extends PeekPokeTester(c) {$/;"	c
CombineData	src/main/scala/junctions/CombineDecoupled.scala	/^class CombineData(val argTypes: Seq[Int])(implicit p: Parameters) extends Module {$/;"	c
CombineDataIO	src/main/scala/junctions/CombineDecoupled.scala	/^class CombineDataIO(val argTypes: Seq[Int])(implicit p: Parameters) extends CoreBundle {$/;"	c
CombineDataTester	src/test/scala/junctions/CombineDecoupledTest.scala	/^class CombineDataTester(c: CombineData) extends PeekPokeTester(c) {$/;"	c
CombineDecoupledTests	src/test/scala/junctions/CombineDecoupledTest.scala	/^class CombineDecoupledTests extends FreeSpec with Matchers {$/;"	c
CombineIn	src/main/scala/node/CallNode.scala	/^  val CombineIn = Module(new CombineCall(argTypes))$/;"	l
Command	src/test/scala/accel/AccelTests.scala	/^class Command extends Bundle {$/;"	c
Command	src/test/scala/accel/AccelTests.scala	/^object Command {$/;"	c
Command	src/test/scala/accel/coredf/AccelTests01.scala	/^class Command extends Bundle {$/;"	c
Command	src/test/scala/accel/coredf/AccelTests01.scala	/^object Command {$/;"	c
CompMap	src/main/scala/node/Comparision.scala	/^  val CompMap = Map($/;"	l
CompTests	src/test/scala/node/computeNode.scala	/^class CompTests extends  FlatSpec with Matchers {$/;"	c
CompareBranchIO	src/main/scala/node/BranchNode.scala	/^class CompareBranchIO()(implicit p: Parameters) extends CoreBundle {$/;"	c
CompareBranchNode	src/main/scala/node/BranchNode.scala	/^class CompareBranchNode(ID: Int, opCode: String)$/;"	c
Compute01DF	src/main/scala/dataflow/graph/compute01DF.scala	/^class Compute01DF(implicit val p: Parameters) extends Module with CoreParams {$/;"	c
Compute01Tests	src/test/scala/dataflow/graph/compute01Df.scala	/^class Compute01Tests extends  FlatSpec with Matchers {$/;"	c
Compute02DF	src/main/scala/dataflow/graph/compute02DF.scala	/^class Compute02DF(implicit val p: Parameters) extends Module with CoreParams {$/;"	c
Compute02Tests	src/test/scala/dataflow/graph/compute02Df.scala	/^class Compute02Tests extends  FlatSpec with Matchers {$/;"	c
Compute03DF	src/main/scala/dataflow/graph/compute03DF.scala	/^class Compute03DF(implicit val p: Parameters) extends Module with CoreParams {$/;"	c
Compute03Tests	src/test/scala/dataflow/graph/compute03DF.scala	/^class Compute03Tests extends  FlatSpec with Matchers {$/;"	c
Compute04DF	src/main/scala/dataflow/graph/compute04DF.scala	/^class Compute04DF(implicit val p: Parameters) extends Module with CoreParams {$/;"	c
Compute04Tests	src/test/scala/dataflow/graph/compute04DF.scala	/^class Compute04Tests extends  FlatSpec with Matchers {$/;"	c
ComputeF01Tests	src/test/scala/dataflow/fuse/computeFuse01.scala	/^class ComputeF01Tests extends  FlatSpec with Matchers {$/;"	c
ComputeF02STests	src/test/scala/dataflow/fuse/computeFuse02.scala	/^class ComputeF02STests extends  FlatSpec with Matchers {$/;"	c
ComputeF03CTests	src/test/scala/dataflow/fuse/computeFuse03.scala	/^class ComputeF03CTests extends  FlatSpec with Matchers {$/;"	c
ComputeF04PTests	src/test/scala/dataflow/fuse/computeFuse04.scala	/^class ComputeF04PTests extends  FlatSpec with Matchers {$/;"	c
ComputeFuse01DF	src/main/scala/dataflow/fuse/computeFuse01.scala	/^class ComputeFuse01DF(implicit val p: Parameters) extends Module with CoreParams {$/;"	c
ComputeFuse02PDF	src/main/scala/dataflow/fuse/computeFuse02.scala	/^class ComputeFuse02PDF(implicit val p: Parameters) extends Module with CoreParams {$/;"	c
ComputeFuse02SDF	src/main/scala/dataflow/fuse/computeFuse02.scala	/^class ComputeFuse02SDF(implicit val p: Parameters) extends Module with CoreParams {$/;"	c
ComputeFuse03CDF	src/main/scala/dataflow/fuse/computeFuse03.scala	/^class ComputeFuse03CDF(implicit val p: Parameters) extends Module with CoreParams {$/;"	c
ComputeFuse03PDF	src/main/scala/dataflow/fuse/computeFuse03.scala	/^class ComputeFuse03PDF(implicit val p: Parameters) extends Module with CoreParams {$/;"	c
ComputeFuse03SDF	src/main/scala/dataflow/fuse/computeFuse03.scala	/^class ComputeFuse03SDF(implicit val p: Parameters) extends Module with CoreParams {$/;"	c
ComputeFuse04PDF	src/main/scala/dataflow/fuse/computeFuse04.scala	/^class ComputeFuse04PDF(implicit val p: Parameters) extends Module with CoreParams {$/;"	c
ComputeFuse04SDF	src/main/scala/dataflow/fuse/computeFuse04.scala	/^class ComputeFuse04SDF(implicit val p: Parameters) extends Module with CoreParams {$/;"	c
ComputeNode	src/main/scala/node/ComputeNode.scala	/^class ComputeNode(NumOuts: Int, ID: Int, opCode: String)$/;"	c
ComputeNodeIO	src/main/scala/node/ComputeNode.scala	/^class ComputeNodeIO(NumOuts: Int)$/;"	c
Config	src/main/scala/config/cde/Config.scala	/^class Config($/;"	c
Config	src/main/scala/config/configurations.scala	/^class Config(p: Parameters) extends Parameters {$/;"	c
ConstNode	src/main/scala/node/ConstNode.scala	/^class ConstNode(value: Int, NumOuts: Int, ID: Int)$/;"	c
Constants	src/main/scala/utility/Constants.scala	/^object Constants extends MemoryOpConstants $/;"	c
Constraint	src/main/scala/config/cde/Config.scala	/^  type Constraint = ViewSym=>Ex[Boolean]$/;"	T
Control	src/test/scala/node/LoadSimple.scala	/^  val Control = Map($/;"	l
ControlBundle	src/main/scala/interfaces/interfaces.scala	/^class ControlBundle(implicit p: Parameters) extends CoreBundle()(p) {$/;"	c
ControlBundle	src/main/scala/interfaces/interfaces.scala	/^object ControlBundle {$/;"	c
ControlTests	src/test/scala/node/controlNode.scala	/^class ControlTests extends FlatSpec with Matchers {$/;"	c
Core	src/main/scala/accel/Core.scala	/^class Core(cNum : Int, sNum: Int)(implicit p: Parameters) extends CoreT(cNum,sNum)(p) {$/;"	c
CoreBundle	src/main/scala/config/config.scala	/^abstract class CoreBundle(implicit val p: Parameters) extends ParameterizedBundle()(p) with CoreParams$/;"	c
CoreDFIO	src/main/scala/accel/Core.scala	/^abstract class CoreDFIO(cNum : Int, sNum: Int)(implicit val p: Parameters) extends Module with CoreParams with UniformPrintfs$/;"	c
CoreMain	src/main/scala/accel/Main.scala	/^object CoreMain extends App {$/;"	c
CoreParams	src/main/scala/config/config.scala	/^abstract trait CoreParams {$/;"	t
CoreT	src/main/scala/accel/Core.scala	/^abstract class CoreT(cNum : Int, sNum: Int)(implicit p: Parameters) extends CoreDFIO(cNum,sNum)(p) {$/;"	c
CustomDataBundle	src/main/scala/interfaces/interfaces.scala	/^class CustomDataBundle[T <: Data](gen: T = UInt(32.W))(implicit p: Parameters) extends CoreBundle()(p) {$/;"	c
CustomDataBundle	src/main/scala/interfaces/interfaces.scala	/^object CustomDataBundle {$/;"	c
CustomFunctionalNode	src/main/scala/node/CustomFunctionalUnit.scala	/^class CustomFunctionalNode(NumIns: Int, NumOuts: Int, ID: Int, opCode: String)$/;"	c
CustomFunctionalNodeIO	src/main/scala/node/CustomFunctionalUnit.scala	/^class CustomFunctionalNodeIO(NumIns: Int, NumOuts: Int)$/;"	c
D	src/main/scala/FPU/FPALU.scala	/^  val D = new FType(11, 53)$/;"	l
DESIGN	scripts/TypeStackFile.py	/^DESIGN =  "verilogmain.TypeStackFileVerilog16b" $/;"	v
DMuxE	src/main/scala/switches/Dyser.scala	/^  val DMuxE = Module(new DyserMux(NInputs = param.numInputs("numInE"), Sel = SelE, En = EnE)(p))$/;"	l
DMuxN	src/main/scala/switches/Dyser.scala	/^  val DMuxN = Module(new DyserMux(NInputs = param.numInputs("numInN"), Sel = SelN, En = EnN)(p))$/;"	l
DMuxNE	src/main/scala/switches/Dyser.scala	/^  val DMuxNE = Module(new DyserMux(NInputs= param.numInputs("numInNE"), Sel =SelNE, En= EnNE)(p))$/;"	l
DMuxNW	src/main/scala/switches/Dyser.scala	/^  val DMuxNW = Module(new DyserMux(NInputs =param.numInputs("numInNW") , Sel = SelNW, En = EnNW)(p))$/;"	l
DMuxS	src/main/scala/switches/Dyser.scala	/^  val DMuxS = Module(new DyserMux(NInputs = param.numInputs("numInS"), Sel = SelS, En = EnS)(p))$/;"	l
DMuxSE	src/main/scala/switches/Dyser.scala	/^  val DMuxSE = Module(new DyserMux(NInputs =param.numInputs("numInSE") , Sel = SelSE, En = EnSE)(p))$/;"	l
DMuxSW	src/main/scala/switches/Dyser.scala	/^  val DMuxSW = Module(new DyserMux(NInputs =param.numInputs("numInSW") , Sel = SelSW, En = EnSW)(p))$/;"	l
DMuxW	src/main/scala/switches/Dyser.scala	/^  val DMuxW = Module(new DyserMux(NInputs = param.numInputs("numInW"), Sel = SelW, En = EnW)(p))$/;"	l
Data	src/main/scala/regfile/InputRegFile.scala	/^    val Data = Decoupled(UInt(xlen.W))$/;"	l
Data0	src/main/scala/dataflow/AdditionDF.scala	/^    val Data0 = Flipped(Decoupled(new DataBundle))$/;"	l
Data0	src/main/scala/dataflow/AllocaDF.scala	/^    val Data0 = Flipped(Decoupled(new AllocaIO))$/;"	l
Data0	src/main/scala/dataflow/tests/Add01.scala	/^    val Data0 = Flipped(Decoupled(new DataBundle))$/;"	l
Data0	src/main/scala/switches/example/ex1.scala	/^    val Data0 = Flipped(Decoupled(new DataBundle))$/;"	l
Data1	src/main/scala/dataflow/tests/Add01.scala	/^    val Data1 = Flipped(Decoupled(new DataBundle))$/;"	l
Data1	src/main/scala/switches/example/ex1.scala	/^    val Data1 = Flipped(Decoupled(new DataBundle))$/;"	l
Data2Sign	src/main/scala/node/helpers.scala	/^object Data2Sign$/;"	c
Data2Sign16b	src/main/scala/node/helpers.scala	/^object Data2Sign16b$/;"	c
DataBundle	src/main/scala/interfaces/interfaces.scala	/^class DataBundle(implicit p: Parameters) extends PredicateT with TaskID {$/;"	c
DataBundle	src/main/scala/interfaces/interfaces.scala	/^object DataBundle {$/;"	c
DataBundleReg	src/main/scala/accel/DataBundleReg.scala	/^class DataBundleReg(cNum : Int, sNum: Int)(implicit p: Parameters) extends DataBundleRegIO(cNum,sNum)(p) {$/;"	c
DataBundleRegIO	src/main/scala/accel/DataBundleReg.scala	/^abstract class DataBundleRegIO(cNum : Int, sNum: Int)(implicit val p: Parameters) extends Module with CoreParams$/;"	c
DataIn	src/main/scala/node/Relay.scala	/^    val DataIn    = Flipped(Decoupled(UInt(xlen.W)))$/;"	l
DataNode	src/main/scala/interfaces/interfaces.scala	/^  val DataNode = Decoupled(UInt(xlen.W))$/;"	l
DataValid	src/main/scala/memory/ReadMemoryController.scala	/^  val DataValid = RegInit(false.B)$/;"	l
DataValid	src/main/scala/memory/WriteMemoryController.scala	/^  val DataValid = RegInit(false.B)$/;"	l
DataValid	src/main/scala/node/LoadMaskNode.scala	/^  val DataValid    = RegInit(false.B)$/;"	l
Data_bgemm_FlowParam	src/main/scala/generator/cilk/bgemm.scala	/^object Data_bgemm_FlowParam{$/;"	c
Data_bgemm_detach1_FlowParam	src/main/scala/generator/cilk/bgemm_detach1.scala	/^object Data_bgemm_detach1_FlowParam{$/;"	c
Data_bgemm_detach2_FlowParam	src/main/scala/generator/cilk/bgemm_detach2.scala	/^object Data_bgemm_detach2_FlowParam{$/;"	c
Data_bgemm_detach3_FlowParam	src/main/scala/generator/cilk/bgemm_detach3.scala	/^object Data_bgemm_detach3_FlowParam{$/;"	c
Data_cilk_for_test01_FlowParam	src/main/scala/generator/cilk/cilk_for_test01.scala	/^object Data_cilk_for_test01_FlowParam{$/;"	c
Data_cilk_for_test02_FlowParam	src/main/scala/generator/cilk/cilk_for_test02.scala	/^object Data_cilk_for_test02_FlowParam{$/;"	c
Data_cilk_for_test02_mul_FlowParam	src/main/scala/generator/cilk/cilk_for_test02_mul.scala	/^object Data_cilk_for_test02_mul_FlowParam{$/;"	c
Data_cilk_for_test04_FlowParam	src/main/scala/generator/cilk/cilk_for_test04.scala	/^object Data_cilk_for_test04_FlowParam{$/;"	c
Data_cilk_for_test04_detach_FlowParam	src/main/scala/generator/cilk/cilk_for_test04_detach.scala	/^object Data_cilk_for_test04_detach_FlowParam{$/;"	c
Data_cilk_for_test05_FlowParam	src/main/scala/generator/cilk/cilk_for_test05.scala	/^object Data_cilk_for_test05_FlowParam{$/;"	c
Data_cilk_for_test05_detach_FlowParam	src/main/scala/generator/cilk/cilk_for_test05_detach.scala	/^object Data_cilk_for_test05_detach_FlowParam{$/;"	c
Data_cilk_for_test06_FlowParam	src/main/scala/generator/cilk/cilk_for_test06.scala	/^object Data_cilk_for_test06_FlowParam {$/;"	c
Data_cilk_for_test06_detach_2_FlowParam	src/main/scala/generator/cilk/cilk_for_test06_detach_2.scala	/^object Data_cilk_for_test06_detach_2_FlowParam {$/;"	c
Data_cilk_for_test06_detach_FlowParam	src/main/scala/generator/cilk/cilk_for_test06_detach.scala	/^object Data_cilk_for_test06_detach_FlowParam {$/;"	c
Data_cilk_for_test07_FlowParam	src/main/scala/generator/cilk/cilk_for_test07.scala	/^object Data_cilk_for_test07_FlowParam{$/;"	c
Data_cilk_for_test07_detach_FlowParam	src/main/scala/generator/cilk/cilk_for_test07_detach.scala	/^object Data_cilk_for_test07_detach_FlowParam{$/;"	c
Data_cilk_for_test08_FlowParam	src/main/scala/generator/cilk/cilk_for_test08.scala	/^object Data_cilk_for_test08_FlowParam{$/;"	c
Data_cilk_for_test08_detach_FlowParam	src/main/scala/generator/cilk/cilk_for_test08_detach.scala	/^object Data_cilk_for_test08_detach_FlowParam{$/;"	c
Data_cilk_for_test09_FlowParam	src/main/scala/generator/cilk/cilk_for_test09.scala	/^object Data_cilk_for_test09_FlowParam {$/;"	c
Data_cilk_for_test09_inner_FlowParam	src/main/scala/generator/cilk/cilk_for_test09_inner.scala	/^object Data_cilk_for_test09_inner_FlowParam{$/;"	c
Data_cilk_for_test12_FlowParam	src/main/scala/generator/cilk/cilk_for_test12.scala	/^object Data_cilk_for_test12_FlowParam{$/;"	c
Data_cilk_for_test12_detach1_FlowParam	src/main/scala/generator/cilk/cilk_for_test12_detach1.scala	/^object Data_cilk_for_test12_detach1_FlowParam{$/;"	c
Data_cilk_for_test12_detach2_FlowParam	src/main/scala/generator/cilk/cilk_for_test12_detach2.scala	/^object Data_cilk_for_test12_detach2_FlowParam{$/;"	c
Data_cilk_for_test12_detach3_FlowParam	src/main/scala/generator/cilk/cilk_for_test12_detach3.scala	/^object Data_cilk_for_test12_detach3_FlowParam{$/;"	c
Data_cilk_spawn_test01_FlowParam	src/main/scala/generator/cilk/cilk_spawn_test01.scala	/^object Data_cilk_spawn_test01_FlowParam{$/;"	c
Data_cilk_spawn_test02_FlowParam	src/main/scala/generator/cilk/cilk_spawn_test02.scala	/^object Data_cilk_spawn_test02_FlowParam{$/;"	c
Data_fib_FlowParam	src/main/scala/generator/cilk/fib.scala	/^object Data_fib_FlowParam{$/;"	c
Data_fib_continue_FlowParam	src/main/scala/generator/cilk/fib_continue.scala	/^object Data_fib_continue_FlowParam{$/;"	c
Data_mergesort_FlowParam	src/main/scala/generator/cilk/mergesort.scala	/^object Data_mergesort_FlowParam{$/;"	c
Data_mergesort_merge_FlowParam	src/main/scala/generator/cilk/mergesort_merge.scala	/^object Data_mergesort_merge_FlowParam{$/;"	c
Data_stencil_FlowParam	src/main/scala/generator/cilk/stencil.scala	/^object Data_stencil_FlowParam {$/;"	c
Data_stencil_detach1_FlowParam	src/main/scala/generator/cilk/stencil_detach1.scala	/^object Data_stencil_detach1_FlowParam {$/;"	c
Data_stencil_inner_FlowParam	src/main/scala/generator/cilk/stencil_inner.scala	/^object Data_stencil_inner_FlowParam {$/;"	c
Data_test01_FlowParam	src/main/scala/generator/test01.scala	/^object Data_test01_FlowParam {$/;"	c
Data_test02_FlowParam	src/main/scala/generator/test02.scala	/^object Data_test02_FlowParam{$/;"	c
Data_test03_FlowParam	src/main/scala/generator/test03.scala	/^object Data_test03_FlowParam {$/;"	c
Data_test04_FlowParam	src/main/scala/generator/test04.scala	/^object Data_test04_FlowParam{$/;"	c
Data_test05_FlowParam	src/main/scala/generator/test05.scala	/^object Data_test05_FlowParam{$/;"	c
Data_test05b_FlowParam	src/main/scala/generator/test05b.scala	/^object Data_test05b_FlowParam{$/;"	c
Data_test05c_FlowParam	src/main/scala/generator/test05c.scala	/^object Data_test05c_FlowParam{$/;"	c
Data_test06_FlowParam	src/main/scala/generator/test06.scala	/^object Data_test06_FlowParam{$/;"	c
Data_test08_FlowParam	src/main/scala/generator/test08.scala	/^object Data_test08_FlowParam{$/;"	c
Data_test09_FlowParam	src/main/scala/generator/test09.scala	/^object Data_test09_FlowParam{$/;"	c
Data_test10_FlowParam	src/main/scala/generator/test10.scala	/^object Data_test10_FlowParam{$/;"	c
Data_test11_FlowParam	src/main/scala/generator/test11.scala	/^object Data_test11_FlowParam{$/;"	c
Data_test11_add_FlowParam	src/main/scala/generator/test11_add.scala	/^object Data_test11_add_FlowParam{$/;"	c
Data_test12_FlowParam	src/main/scala/generator/test12.scala	/^object Data_test12_FlowParam{$/;"	c
Data_test12_inner_FlowParam	src/main/scala/generator/test12_inner.scala	/^object Data_test12_inner_FlowParam{$/;"	c
Data_test14_FlowParam	src/main/scala/generator/test14.scala	/^object Data_test14_FlowParam{$/;"	c
Data_test14_inner_FlowParam	src/main/scala/generator/test14_inner.scala	/^object Data_test14_inner_FlowParam{$/;"	c
Data_test15_FlowParam	src/main/scala/generator/test15.scala	/^object Data_test15_FlowParam{$/;"	c
DataflowPeekPoker64	src/test/scala/verilogmain/Dataflow64.scala	/^class DataflowPeekPoker64(df: DataFlow64)(implicit p: config.Parameters) extends PeekPokeTester(df)  {$/;"	c
DataflowVerilog64	src/test/scala/verilogmain/Dataflow64.scala	/^class DataflowVerilog64 extends  FlatSpec with Matchers {$/;"	c
DeMuxTree	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^module DeMuxTree($/;"	m
DeMuxTree	src/main/scala/muxes/Muxes.scala	/^class DeMuxTree[T <: RouteID with ValidT](BaseSize: Int, NumOps: Int, gen: T)(implicit val p: Parameters) extends AbstractDeMuxTree(NumOps, gen)(p) {$/;"	c
DeMuxTree_1	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^module DeMuxTree_1($/;"	m
DecoupledChildDF	src/test/scala/concurrent/DecoupledTaskTest.scala	/^class DecoupledChildDF(val ID:Int)(implicit p: Parameters) extends Module {$/;"	c
DecoupledTaskDF	src/test/scala/concurrent/DecoupledTaskTest.scala	/^class DecoupledTaskDF()(implicit p: Parameters) extends Module {$/;"	c
DecoupledTaskTester1	src/test/scala/concurrent/DecoupledTaskTest.scala	/^class DecoupledTaskTester1(c: DecoupledTaskDF) extends PeekPokeTester(c) {$/;"	c
DecoupledTaskTests	src/test/scala/concurrent/DecoupledTaskTest.scala	/^class DecoupledTaskTests extends FlatSpec with Matchers {$/;"	c
Demux	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^module Demux($/;"	m
Demux	src/main/scala/muxes/Muxes.scala	/^class Demux[T <: ValidT](gen: T, Nops: Int) extends Module {$/;"	c
Demux_1	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^module Demux_1($/;"	m
Demux_2	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^module Demux_2($/;"	m
Demux_3	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^module Demux_3($/;"	m
Demux_io_en	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire  Demux_io_en;$/;"	n
Demux_io_input_RouteID	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire [15:0] Demux_io_input_RouteID;$/;"	n
Demux_io_input_data	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire [15:0] Demux_io_input_data;$/;"	n
Demux_io_input_done	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire  Demux_io_input_done;$/;"	n
Demux_io_input_valid	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire  Demux_io_input_valid;$/;"	n
Demux_io_outputs_0_RouteID	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire [15:0] Demux_io_outputs_0_RouteID;$/;"	n
Demux_io_outputs_0_data	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire [15:0] Demux_io_outputs_0_data;$/;"	n
Demux_io_outputs_0_done	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire  Demux_io_outputs_0_done;$/;"	n
Demux_io_outputs_0_valid	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire  Demux_io_outputs_0_valid;$/;"	n
Demux_io_outputs_1_RouteID	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire [15:0] Demux_io_outputs_1_RouteID;$/;"	n
Demux_io_outputs_1_data	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire [15:0] Demux_io_outputs_1_data;$/;"	n
Demux_io_outputs_1_valid	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire  Demux_io_outputs_1_valid;$/;"	n
Demux_io_sel	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire  Demux_io_sel;$/;"	n
Demuxes	src/main/scala/muxes/Muxes.scala	/^    val Demuxes = Seq.fill(Muxes_Per_Level) { Module(new Demux(gen, BaseSize)).io }$/;"	l
Detach	src/main/scala/concurrent/Detach.scala	/^class Detach(ID: Int)$/;"	c
DetachFast	src/main/scala/concurrent/Detach.scala	/^class DetachFast(ID: Int)(implicit val p: Parameters,$/;"	c
DetachFastIO	src/main/scala/concurrent/Detach.scala	/^class DetachFastIO()(implicit p: Parameters) extends CoreBundle {$/;"	c
DetachIO	src/main/scala/concurrent/Detach.scala	/^class DetachIO()(implicit p: Parameters)$/;"	c
DetachNode	src/main/scala/concurrent/Detach.scala	/^class DetachNode(ID: Int, NumOuts: Int = 1)$/;"	c
DetachTester	src/test/scala/concurrent/DetachTest.scala	/^class DetachTester extends FlatSpec with Matchers {$/;"	c
DetachTests	src/test/scala/concurrent/DetachTest.scala	/^class DetachTests(c: Detach) extends PeekPokeTester(c) {$/;"	c
Div	src/main/scala/node/Alu.scala	/^  val Div = 16$/;"	l
DivOrSqrt	src/main/scala/FPU/FPUDiv.scala	/^  val DivOrSqrt = opCode match {$/;"	l
Dump	src/main/scala/config/cde/Dump.scala	/^object Dump {$/;"	c
Dyser	src/main/scala/switches/Dyser.scala	/^class Dyser(SelN: Int, EnN: Bool,$/;"	c
Dyser1X1	src/main/scala/switches/example/ex1.scala	/^class Dyser1X1(implicit val p: Parameters) extends Module with CoreParams {$/;"	c
DyserIO	src/main/scala/switches/Dyser.scala	/^abstract class DyserIO(implicit val p: Parameters) extends Module with CoreParams {$/;"	c
DyserMux	src/main/scala/switches/DyserSwitch.scala	/^class DyserMux (NInputs : Int, Sel: Int, En: Bool)(implicit p: Parameters) extends DyserMuxIO(NInputs)(p) {$/;"	c
DyserMuxIO	src/main/scala/switches/DyserSwitch.scala	/^abstract class DyserMuxIO(NInputs : Int) (implicit val p: Parameters) extends Module with CoreParams {$/;"	c
DyserMuxTester	src/test/scala/switches/DyserMux.scala	/^class DyserMuxTester extends  FlatSpec with Matchers {$/;"	c
DyserMuxTests	src/test/scala/switches/DyserMux.scala	/^class DyserMuxTests(c: DyserMux)$/;"	c
DyserTester	src/test/scala/switches/Dyser.scala	/^class DyserTester extends  FlatSpec with Matchers {$/;"	c
DyserTests	src/test/scala/switches/Dyser.scala	/^class DyserTests(c: Dyser)$/;"	c
EN	src/main/scala/muxes/TestMux.scala	/^    val EN = Input(Bool())$/;"	l
EQ	src/main/scala/node/Comparision.scala	/^  val EQ      = 1$/;"	l
EmptyParameters	src/main/scala/config/configurations.scala	/^private class EmptyParameters extends Parameters {$/;"	c
Enable	src/main/scala/loop/Example1.scala	/^  val Enable = Flipped(Decoupled(new ControlBundle))$/;"	l
Ex	src/main/scala/config/cde/Expression.scala	/^abstract class Ex[T] {$/;"	c
Ex	src/main/scala/config/cde/Expression.scala	/^object Ex {$/;"	c
ExAdd	src/main/scala/config/cde/Expression.scala	/^final case class ExAdd(a:Ex[Int], b:Ex[Int]) extends Ex[Int]$/;"	c
ExAnd	src/main/scala/config/cde/Expression.scala	/^final case class ExAnd(a:Ex[Boolean], b:Ex[Boolean]) extends Ex[Boolean]$/;"	c
ExBool_BoolEx	src/main/scala/config/cde/Expression.scala	/^  implicit def ExBool_BoolEx(b:Ex[Boolean]):BoolEx = BoolEx(b)$/;"	m
ExEq	src/main/scala/config/cde/Expression.scala	/^final case class ExEq[T](a:Ex[T], b:Ex[T]) extends Ex[Boolean]$/;"	c
ExGt	src/main/scala/config/cde/Expression.scala	/^final case class ExGt(a:Ex[Int], b:Ex[Int]) extends Ex[Boolean]$/;"	c
ExGte	src/main/scala/config/cde/Expression.scala	/^final case class ExGte(a:Ex[Int], b:Ex[Int]) extends Ex[Boolean]$/;"	c
ExInt_IntEx	src/main/scala/config/cde/Expression.scala	/^  implicit def ExInt_IntEx(i:Ex[Int]):IntEx = IntEx(i)$/;"	m
ExLit	src/main/scala/config/cde/Expression.scala	/^final case class ExLit[T](value:T) extends Ex[T]$/;"	c
ExLt	src/main/scala/config/cde/Expression.scala	/^final case class ExLt(a:Ex[Int], b:Ex[Int]) extends Ex[Boolean]$/;"	c
ExLte	src/main/scala/config/cde/Expression.scala	/^final case class ExLte(a:Ex[Int], b:Ex[Int]) extends Ex[Boolean]$/;"	c
ExMod	src/main/scala/config/cde/Expression.scala	/^final case class ExMod(a:Ex[Int], b:Ex[Int]) extends Ex[Int]$/;"	c
ExMul	src/main/scala/config/cde/Expression.scala	/^final case class ExMul(a:Ex[Int], b:Ex[Int]) extends Ex[Int]$/;"	c
ExNeq	src/main/scala/config/cde/Expression.scala	/^final case class ExNeq[T](a:Ex[T], b:Ex[T]) extends Ex[Boolean]$/;"	c
ExOr	src/main/scala/config/cde/Expression.scala	/^final case class ExOr(a:Ex[Boolean], b:Ex[Boolean]) extends Ex[Boolean]$/;"	c
ExSub	src/main/scala/config/cde/Expression.scala	/^final case class ExSub(a:Ex[Int], b:Ex[Int]) extends Ex[Int]$/;"	c
ExVar	src/main/scala/config/cde/Expression.scala	/^final case class ExVar[T](name:Any) extends Ex[T]$/;"	c
ExXor	src/main/scala/config/cde/Expression.scala	/^final case class ExXor(a:Ex[Boolean], b:Ex[Boolean]) extends Ex[Boolean]$/;"	c
ExpandNode	src/main/scala/node/Expand.scala	/^class ExpandNode[T <: Data](NumOuts: Int, ID: Int)(gen: T)$/;"	c
ExpandNodeIO	src/main/scala/node/Expand.scala	/^class ExpandNodeIO[T <: Data](NumOuts: Int)(gen: T)$/;"	c
FNtoFNNode	src/main/scala/FPU/ResizeFN.scala	/^class FNtoFNNode(Src: FType, Des: FType, NumOuts: Int, ID: Int)$/;"	c
FNtoFNNodeIO	src/main/scala/FPU/ResizeFN.scala	/^class FNtoFNNodeIO(Src: FType, Des: FType,NumOuts: Int)$/;"	c
FPAluGenerator	src/main/scala/FPU/FPALU.scala	/^object FPAluGenerator {$/;"	c
FPAluOpCode	src/main/scala/FPU/FPALU.scala	/^object FPAluOpCode {$/;"	c
FPCompareNode	src/main/scala/FPU/FPCompare.scala	/^class FPCompareNode(NumOuts: Int, ID: Int, opCode: String)$/;"	c
FPCompareNodeIO	src/main/scala/FPU/FPCompare.scala	/^class FPCompareNodeIO(NumOuts: Int)$/;"	c
FPCompareNodeTester	src/test/scala/FPU/FPCompareNode.scala	/^class FPCompareNodeTester(df: FPCompareNode)$/;"	c
FPCompareTests	src/test/scala/FPU/FPCompareNode.scala	/^class FPCompareTests extends  FlatSpec with Matchers {$/;"	c
FPComputeNode	src/main/scala/FPU/FPComputeNode.scala	/^class FPComputeNode(NumOuts: Int, ID: Int, opCode: String)$/;"	c
FPComputeNodeIO	src/main/scala/FPU/FPComputeNode.scala	/^class FPComputeNodeIO(NumOuts: Int)$/;"	c
FPComputeNodeTester	src/test/scala/FPU/FPComputeNode.scala	/^class FPComputeNodeTester(df: FPComputeNode)$/;"	c
FPComputeTests	src/test/scala/FPU/FPComputeNode.scala	/^class FPComputeTests extends  FlatSpec with Matchers {$/;"	c
FPDiv	src/main/scala/dataflow/SharedFPDiv.scala	/^	val FPDiv     = Module(new FPDivSqrtNode(NumOuts=1,ID=0,RouteID=0,"SQRT")(t = S))$/;"	l
FPDivDataFlow	src/main/scala/dataflow/SharedFPDiv.scala	/^class FPDivDataFlow(implicit val p: Parameters) extends Module with CoreParams{$/;"	c
FPDivDataFlowTester	src/test/scala/dataflow/FPDivDataFlow.scala	/^class FPDivDataFlowTester(df: FPDivDataFlow)(implicit p: config.Parameters) extends PeekPokeTester(df)  {$/;"	c
FPDivDataflowTests	src/test/scala/dataflow/FPDivDataFlow.scala	/^class FPDivDataflowTests extends ChiselFlatSpec {$/;"	c
FPDivNodeTester	src/test/scala/FPU/FPDiv.scala	/^class FPDivNodeTester(c: FPDivSqrtNode) extends PeekPokeTester(c) {$/;"	c
FPDivNodeTests	src/test/scala/FPU/FPDiv.scala	/^class FPDivNodeTests extends  FlatSpec with Matchers {$/;"	c
FPDivSqrtIO	src/main/scala/FPU/FPUDiv.scala	/^class FPDivSqrtIO(NumOuts: Int,$/;"	c
FPDivSqrtNode	src/main/scala/FPU/FPUDiv.scala	/^class FPDivSqrtNode(NumOuts: Int,$/;"	c
FPResizeTester	src/test/scala/FPU/FPResizeNode.scala	/^class FPResizeTester(df: FNtoFNNode)$/;"	c
FPResizeTests	src/test/scala/FPU/FPResizeNode.scala	/^class FPResizeTests extends  FlatSpec with Matchers {$/;"	c
FPU	src/main/scala/FPU/FPALU.scala	/^package FPU$/;"	p
FPU	src/main/scala/FPU/FPCompare.scala	/^package FPU$/;"	p
FPU	src/main/scala/FPU/FPComputeNode.scala	/^package FPU$/;"	p
FPU	src/main/scala/FPU/FPUDiv.scala	/^package FPU$/;"	p
FPU	src/main/scala/FPU/ResizeFN.scala	/^package FPU$/;"	p
FPU	src/main/scala/FPU/SharedDiv.scala	/^package FPU$/;"	p
FPU	src/test/scala/FPU/FPCompareNode.scala	/^package FPU$/;"	p
FPU	src/test/scala/FPU/FPComputeNode.scala	/^package FPU$/;"	p
FPU	src/test/scala/FPU/FPDiv.scala	/^package FPU$/;"	p
FPU	src/test/scala/FPU/FPResizeNode.scala	/^package FPU$/;"	p
FPU	src/test/scala/FPU/SharedFPDiv.scala	/^package FPU$/;"	p
FPUALU	src/main/scala/FPU/FPALU.scala	/^class FPUALU(val xlen: Int, val opCode: String, t: FType) extends Module {$/;"	c
FPUControl	src/main/scala/FPU/FPALU.scala	/^  def FPUControl(): Unit = { $/;"	m
FTYP	src/main/scala/config/config.scala	/^case object FTYP        extends Field[FType]$/;"	c
FType	src/main/scala/FPU/FPALU.scala	/^case class FType(exp: Int, sig: Int) {$/;"	c
FType	src/main/scala/FPU/FPALU.scala	/^object FType {$/;"	c
FU	src/main/scala/FPU/FPCompare.scala	/^  val FU = Module(new CompareRecFN(t.expWidth, t.sigWidth))$/;"	l
FU	src/main/scala/FPU/FPComputeNode.scala	/^  val FU = Module(new FPUALU(xlen, opCode, t))$/;"	l
FU	src/main/scala/FPU/ResizeFN.scala	/^  val FU = Module(new RecFNToRecFN(Src.expWidth, Src.sigWidth, Des.expWidth, Des.sigWidth))$/;"	l
FU	src/main/scala/node/BranchNode.scala	/^  val FU = Module(new UCMP(xlen, opCode))$/;"	l
FU	src/main/scala/node/ComputeNode.scala	/^  val FU = Module(new UALU(xlen, opCode))$/;"	l
FU	src/main/scala/node/FusedComputeNode.scala	/^ 	val FU = Module(new UALU(xlen, OpCodes(i)))$/;"	l
FU	src/main/scala/node/IcmpNode.scala	/^  val FU = Module(new UCMP(xlen, opCode))$/;"	l
FU	src/main/scala/node/TypCompute.scala	/^  val FU = Module(new OperatorModule(gen, opCode))$/;"	l
FUReq	src/main/scala/FPU/FPUDiv.scala	/^  val FUReq = Decoupled(new FUReq(argTypes))$/;"	l
FUReq	src/main/scala/interfaces/interfaces.scala	/^class FUReq(val argTypes: Seq[Int])(implicit p: Parameters) extends RouteID {$/;"	c
FUResp	src/main/scala/FPU/FPUDiv.scala	/^  val FUResp = Input(Flipped(new FUResp()))$/;"	l
FUResp	src/main/scala/interfaces/interfaces.scala	/^class FUResp(implicit p: Parameters)$/;"	c
FUResp	src/main/scala/interfaces/interfaces.scala	/^object FUResp {$/;"	c
FU_req_fire	src/main/scala/FPU/FPUDiv.scala	/^  val FU_req_fire = a_valid_R && b_valid_R$/;"	l
FUs	src/main/scala/node/FusedComputeNode.scala	/^ val FUs = for (i <- 0 until OpCodes.length) yield {$/;"	l
Field	src/main/scala/config/cde/Parameters.scala	/^class Field[T]$/;"	c
Field	src/main/scala/config/configurations.scala	/^class Field[T]$/;"	c
Filt	src/main/scala/accel/coredf/FilterDFCore.scala	/^  val Filt = Module(new BasicFilter()(p))$/;"	l
Filt	src/main/scala/accel/coredf/VecFilterDFCore.scala	/^  val Filt = Module(new VecFilter()(p))$/;"	l
Filt	src/main/scala/accel/coredf/VecFilterNoKernDFCore.scala	/^  val Filt = Module(new VecFilter()(p))$/;"	l
FilterDFCore	src/main/scala/accel/coredf/FilterDFCore.scala	/^class FilterDFCore(cNum : Int, sNum: Int)(implicit p: Parameters) extends CoreT(cNum,sNum)(p) {$/;"	c
FilterDFMain	src/main/scala/accel/Main.scala	/^object FilterDFMain extends App {$/;"	c
FilterDFTester	src/test/scala/accel/coredf/FilterDFTests.scala	/^class FilterDFTester(accel: => Accelerator)(implicit val p: config.Parameters) extends BasicTester with CacheParams {$/;"	c
FilterDFTests	src/test/scala/accel/coredf/FilterDFTests.scala	/^class FilterDFTests extends org.scalatest.FlatSpec {$/;"	c
FilterSize	src/main/scala/accel/coredf/FilterDFCore.scala	/^  val FilterSize = 3*3$/;"	l
FilterSize	src/main/scala/accel/coredf/VecFilterDFCore.scala	/^  val FilterSize = 3$/;"	l
FilterSize	src/main/scala/accel/coredf/VecFilterNoKernDFCore.scala	/^  val FilterSize = 3$/;"	l
FilterSize	src/main/scala/dataflow/filter/BasicFilter.scala	/^  val FilterSize = 3*3$/;"	l
FilterSize	src/main/scala/dataflow/filter/BasicLoader.scala	/^  val FilterSize = 3*3$/;"	l
FilterSize	src/main/scala/dataflow/filter/VecFilter.scala	/^  val FilterSize = 3$/;"	l
Finish	src/main/scala/loop/Example1.scala	/^  val Finish = Input(Bool())$/;"	l
Finish	src/main/scala/loop/LoopElement.scala	/^  val Finish = Input(Bool())$/;"	l
Finish	src/main/scala/loop/LoopHeader.scala	/^  val Finish = Input(Bool())$/;"	l
Finish	src/main/scala/loop/LoopStart.scala	/^  val Finish = Vec(NumInputs, Flipped(Decoupled(new ControlBundle())))$/;"	l
Finish	src/main/scala/node/StoreNode.scala	/^  val Finish = Output(Bool())$/;"	l
FrameBits	src/main/scala/node/Alloca.scala	/^  val FrameBits = log2Ceil(FrameSize)$/;"	l
Ftyp	src/main/scala/config/config.scala	/^  val Ftyp    = p(FTYP)$/;"	l
FusedCompTests	src/test/scala/node/FusedComputeNode.scala	/^	class FusedCompTests extends  FlatSpec with Matchers {$/;"	c
FusedComputeNode	src/main/scala/node/FusedComputeNode.scala	/^class FusedComputeNode(NumIns: Int, NumOuts: Int, ID: Int, opCode: String)$/;"	c
FusedComputeNodeIO	src/main/scala/node/FusedComputeNode.scala	/^class FusedComputeNodeIO(NumIns: Int, NumOuts: Int)$/;"	c
G	src/test/scala/verilogmain/TypStackSweeper.scala	/^    val G = optionslist.map(options.contains(_))$/;"	l
G	src/test/scala/verilogmain/TypeStackSweeper16b.scala	/^    val G = optionslist.map(options.contains(_))$/;"	l
GEP	src/main/scala/dataflow/filter/BasicLoader.scala	/^  val GEP = for (i <- 0 until FilterSize) yield {$/;"	l
GLEN	src/main/scala/config/config.scala	/^case object GLEN       extends Field[Int]$/;"	c
Gep	src/main/scala/node/LoadMaskNode.scala	/^    val Gep = Flipped(Decoupled(UInt(xlen.W)))$/;"	l
GepAddr	src/main/scala/node/LoadSimple.scala	/^  val GepAddr = Flipped(Decoupled(new DataBundle))$/;"	l
GepAddr	src/main/scala/node/StoreNode.scala	/^  val GepAddr = Flipped(Decoupled(new DataBundle))$/;"	l
GepAddr	src/main/scala/node/StoreSimple.scala	/^  val GepAddr = Flipped(Decoupled(new DataBundle))$/;"	l
GepAddr	src/main/scala/node/TypLoad.scala	/^  val GepAddr = Flipped(Decoupled(new DataBundle))$/;"	l
GepAddr	src/main/scala/node/TypStore.scala	/^  val GepAddr = Flipped(Decoupled(new DataBundle))$/;"	l
GepNodeOneIO	src/main/scala/node/GepNode.scala	/^class GepNodeOneIO(NumOuts: Int)$/;"	c
GepNodeStack	src/main/scala/node/GepNode.scala	/^class GepNodeStack(NumOuts: Int, ID: Int)$/;"	c
GepNodeStackIO	src/main/scala/node/GepNode.scala	/^class GepNodeStackIO(NumOuts: Int)$/;"	c
GepNodeTwoIO	src/main/scala/node/GepNode.scala	/^class GepNodeTwoIO(NumOuts: Int)$/;"	c
GepOneNode	src/main/scala/node/GepNode.scala	/^class GepOneNode(NumOuts: Int, ID: Int)$/;"	c
GepOperand	src/main/scala/node/LoadMaskNode.scala	/^  val GepOperand   = RegInit(0.U(xlen.W))$/;"	l
GepTester	src/test/scala/node/GepNode.scala	/^class GepTester(df: GepOneNode)$/;"	c
GepTests	src/test/scala/node/GepNode.scala	/^class GepTests extends  FlatSpec with Matchers {$/;"	c
GepTwoNode	src/main/scala/node/GepNode.scala	/^class GepTwoNode(NumOuts: Int, ID: Int)$/;"	c
GepValid	src/main/scala/node/LoadMaskNode.scala	/^  val GepValid     = RegInit(false.B)$/;"	l
GlblCtrl	src/main/scala/generator/cilk/mergesort_merge.scala	/^  val GlblCtrl = Module(new UnifiedController(ID=1,Size=64*1024,NReads=4,NWrites=2)$/;"	l
GlblReq	src/main/scala/generator/cilk/mergesort_merge.scala	/^    val GlblReq = Decoupled(new MemReq)$/;"	l
GlblResp	src/main/scala/generator/cilk/mergesort_merge.scala	/^    val GlblResp = Flipped(Valid(new MemResp))$/;"	l
GoldCache	src/test/scala/accel/CacheTests.scala	/^class GoldCache(implicit val p: config.Parameters) extends Module with CacheParams {$/;"	c
H	src/main/scala/FPU/FPALU.scala	/^  val H  = new FType(5, 11)$/;"	l
HALFPrecisionFPConfig	src/main/scala/config/FPConfigs.scala	/^class HALFPrecisionFPConfig extends Config((site, here, up) => {$/;"	c
HandShaking	src/main/scala/node/HandShaking.scala	/^class HandShaking[T <: Data](val NumPredOps: Int,$/;"	c
HandShakingCtrlMask	src/main/scala/node/HandShaking.scala	/^class HandShakingCtrlMask(val NumInputs: Int,$/;"	c
HandShakingCtrlMaskIO	src/main/scala/node/HandShaking.scala	/^class HandShakingCtrlMaskIO(val NumInputs: Int,$/;"	c
HandShakingCtrlNPS	src/main/scala/node/HandShaking.scala	/^class HandShakingCtrlNPS(val NumOuts: Int,$/;"	c
HandShakingCtrlNoMask	src/main/scala/node/HandShaking.scala	/^class HandShakingCtrlNoMask(val NumInputs: Int,$/;"	c
HandShakingCtrlNoMaskIO	src/main/scala/node/HandShaking.scala	/^class HandShakingCtrlNoMaskIO(val NumOuts: Int)(implicit p: Parameters)$/;"	c
HandShakingFused	src/main/scala/node/HandShaking.scala	/^class HandShakingFused[T <: PredicateT](val NumIns: Int, val NumOuts: Int,$/;"	c
HandShakingFusedIO	src/main/scala/node/HandShaking.scala	/^class HandShakingFusedIO[T <: Data](val NumIns: Int, val NumOuts: Int)(gen: T)(implicit p: Parameters)$/;"	c
HandShakingIONPS	src/main/scala/node/HandShaking.scala	/^class HandShakingIONPS[T <: Data](val NumOuts: Int)(gen: T)(implicit p: Parameters)$/;"	c
HandShakingIOPS	src/main/scala/node/HandShaking.scala	/^class HandShakingIOPS[T <: Data](val NumPredOps: Int,$/;"	c
HandShakingNPS	src/main/scala/node/HandShaking.scala	/^class HandShakingNPS[T <: Data](val NumOuts: Int,$/;"	c
HasNastiData	src/main/scala/junctions/nasti.scala	/^trait HasNastiData extends HasNastiParameters {$/;"	t
HasNastiMetadata	src/main/scala/junctions/nasti.scala	/^trait HasNastiMetadata extends HasNastiParameters {$/;"	t
HasNastiParameters	src/main/scala/junctions/nasti.scala	/^trait HasNastiParameters {$/;"	t
ID	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  reg  ID;$/;"	r
ID	src/main/scala/memory/ReadMemoryController.scala	/^  val ID = RegInit(~id.U)$/;"	l
ID	src/main/scala/memory/ReadTypMemoryController.scala	/^  val ID = RegInit(id.U)$/;"	l
ID	src/main/scala/memory/WriteMemoryController.scala	/^  val ID = RegInit(id.U)$/;"	l
ID	src/main/scala/memory/WriteTypMemoryController.scala	/^  val ID = RegInit(id.U)$/;"	l
ID	src/main/scala/node/HandShaking.scala	/^                                        val ID: Int)(gen: T)(implicit val p: Parameters)$/;"	l
ID	src/main/scala/node/HandShaking.scala	/^                                val ID: Int)(gen: T)(implicit val p: Parameters)$/;"	l
ID	src/main/scala/node/HandShaking.scala	/^                             val ID: Int)(gen: T)(implicit val p: Parameters)$/;"	l
ID	src/main/scala/node/HandShaking.scala	/^                         val ID: Int)(implicit val p: Parameters)$/;"	l
ID	src/main/scala/node/LoadMaskNode.scala	/^  val ID :Int = 0)(implicit val p: Parameters) extends Module with CoreParams{$/;"	l
IcmpNode	src/main/scala/node/IcmpNode.scala	/^class IcmpNode(NumOuts: Int, ID: Int, opCode: String)$/;"	c
IcmpNodeIO	src/main/scala/node/IcmpNode.scala	/^class IcmpNodeIO(NumOuts: Int)$/;"	c
Implicits	src/main/scala/config/cde/Expression.scala	/^object Implicits {$/;"	c
In	src/main/scala/junctions/CombineDecoupled.scala	/^  val In =  Flipped(new CallDecoupled(argTypes))$/;"	l
In	src/main/scala/junctions/CombineDecoupled.scala	/^  val In =  Flipped(new VariableDecoupledCustom(argTypes))$/;"	l
In	src/main/scala/junctions/CombineDecoupled.scala	/^  val In =  Flipped(new VariableDecoupledData(argTypes))$/;"	l
In	src/main/scala/junctions/SplitDecoupled.scala	/^  val In = Flipped(Decoupled(new Call(Seq.fill(argTypes.length)(32))))$/;"	l
In	src/main/scala/junctions/SplitDecoupled.scala	/^  val In = Flipped(Decoupled(new Call(argTypes)))$/;"	l
In	src/main/scala/junctions/SplitDecoupled.scala	/^  val In = Flipped(Decoupled(new VariableCustom(argTypes)))$/;"	l
In	src/main/scala/junctions/SplitDecoupled.scala	/^  val In = Flipped(Decoupled(new VariableData(argTypes)))$/;"	l
In	src/main/scala/loop/LoopBlock.scala	/^  val In          = Flipped(Vec(NumIns.length, Decoupled(new DataBundle())))$/;"	l
In	src/main/scala/node/CallInNode.scala	/^  val In   = Flipped(Decoupled(new Call(argTypes))) \/\/ From task$/;"	l
In	src/main/scala/node/CallNode.scala	/^  val In      = Flipped(new CallDecoupled(argTypes))   \/\/ Requests from calling block(s)$/;"	l
In	src/main/scala/node/CallOutNode.scala	/^  val In  = Flipped(new VariableDecoupledData(argTypes))   \/\/ Requests from calling block(s)$/;"	l
In	src/main/scala/node/HandShaking.scala	/^  val In = Flipped(Vec(NumIns, Decoupled(gen)))$/;"	l
In	src/main/scala/node/RetNode.scala	/^  val In  = Flipped(new VariableDecoupledData(retTypes)) \/\/ Data to be returned$/;"	l
In	src/main/scala/node/RetNode.scala	/^  val In = Flipped(new VariableDecoupledData(retTypes)) \/\/ Data to be returned$/;"	l
In	src/test/scala/concurrent/DecoupledTaskTest.scala	/^    val In = Flipped(Decoupled(new Call(List(32,32,32,32))))$/;"	l
In	src/test/scala/concurrent/DecoupledTaskTest.scala	/^   val In = Flipped(Decoupled(new Call(List(32,32,32,32))))$/;"	l
InData	src/main/scala/FPU/SharedDiv.scala	/^  val InData = Vec(NumOps, Flipped(Decoupled(new FUReq(argTypes))))$/;"	l
InData	src/main/scala/loop/LiveInNode.scala	/^  val InData = Flipped(Decoupled(new DataBundle()))$/;"	l
InData	src/main/scala/loop/LiveOutNode.scala	/^  val InData = Flipped(Decoupled(new ControlBundle()))$/;"	l
InData	src/main/scala/loop/LiveOutNode.scala	/^  val InData = Flipped(Decoupled(new DataBundle()))$/;"	l
InData	src/main/scala/node/Expand.scala	/^  val InData = Flipped(Decoupled(gen))$/;"	l
InData	src/main/scala/node/PhiNode.scala	/^  val InData = Vec(NumInputs, Flipped(Decoupled(new DataBundle)))$/;"	l
InData	src/main/scala/stack/StackAlloca.scala	/^  val InData = Vec(NumOps, Flipped(Decoupled(new AllocaReq)))$/;"	l
InReg	src/main/scala/node/HandShaking.scala	/^    val InReg = Reg(gen)$/;"	l
InRegFile	src/main/scala/regfile/InputRegFile.scala	/^abstract class InRegFile(implicit val p: Parameters) extends Module with CoreParams {$/;"	c
InRegTester	src/test/scala/regfile/InputReg.scala	/^class InRegTester(regFile: InputRegFile)(implicit p: config.Parameters) extends PeekPokeTester(regFile)  {$/;"	c
InRegs	src/main/scala/node/HandShaking.scala	/^  val InRegs = for (i <- 0 until NumIns) yield {$/;"	l
IndexCounter	src/main/scala/regfile/InputRegFile.scala	/^class IndexCounter(implicit val p: Parameters) extends Module with CoreParams{$/;"	c
InitParams	src/main/scala/accel/NastiMemSlave.scala	/^class InitParams(implicit p: Parameters) extends CoreBundle()(p) with CacheParams {$/;"	c
Input	src/main/scala/FPU/ResizeFN.scala	/^    val Input = Flipped(Decoupled(new CustomDataBundle(UInt((Src.ieeeWidth).W))))$/;"	l
Input	src/main/scala/node/BitCastNode.scala	/^    val Input = Flipped(Decoupled(new DataBundle()))$/;"	l
Input	src/main/scala/node/JumpNode.scala	/^  val Input = Flipped(Decoupled(new DataBundle()))$/;"	l
Input	src/main/scala/node/SextNode.scala	/^    val Input = Flipped(Decoupled(new DataBundle()))$/;"	l
Input	src/main/scala/node/ZextNode.scala	/^    val Input = Flipped(Decoupled(new DataBundle()))$/;"	l
Input1	src/main/scala/loop/Example1.scala	/^  val Input1 = Flipped(Decoupled(gen))$/;"	l
Input1	src/main/scala/node/SelectNode.scala	/^    val Input1 = Flipped(Decoupled(new DataBundle()))$/;"	l
Input2	src/main/scala/loop/Example1.scala	/^  val Input2 = Flipped(Decoupled(gen))$/;"	l
Input2	src/main/scala/node/SelectNode.scala	/^    val Input2 = Flipped(Decoupled(new DataBundle()))$/;"	l
Input3	src/main/scala/loop/Example1.scala	/^  val Input3 = Flipped(Decoupled(gen))$/;"	l
Input4	src/main/scala/loop/Example1.scala	/^  val Input4 = Flipped(Decoupled(gen))$/;"	l
InputRegFile	src/main/scala/regfile/InputRegFile.scala	/^class InputRegFile (val inData : Array[UInt])(implicit p: Parameters) extends InRegFile()(p){$/;"	c
InputSplitter	src/main/scala/generator/cilk/bgemm.scala	/^  val InputSplitter = Module(new SplitCall(List(32,32,32)))$/;"	l
InputSplitter	src/main/scala/generator/cilk/bgemm_detach1.scala	/^  val InputSplitter = Module(new SplitCall(List(32,32,32,32)))$/;"	l
InputSplitter	src/main/scala/generator/cilk/bgemm_detach2.scala	/^  val InputSplitter = Module(new SplitCall(List(32,32,32,32,32)))$/;"	l
InputSplitter	src/main/scala/generator/cilk/bgemm_detach3.scala	/^  val InputSplitter = Module(new SplitCall(List(32,32,32,32,32,32)))$/;"	l
InputSplitter	src/main/scala/generator/cilk/cilk_for_test01.scala	/^  val InputSplitter = Module(new SplitCall(List(32,32)))$/;"	l
InputSplitter	src/main/scala/generator/cilk/cilk_for_test02.scala	/^  val InputSplitter = Module(new SplitCall(List(32,32)))$/;"	l
InputSplitter	src/main/scala/generator/cilk/cilk_for_test02_mul.scala	/^  val InputSplitter = Module(new SplitCall(List(32,32,32)))$/;"	l
InputSplitter	src/main/scala/generator/cilk/cilk_for_test04.scala	/^  val InputSplitter = Module(new SplitCall(List(32,32,32)))$/;"	l
InputSplitter	src/main/scala/generator/cilk/cilk_for_test04_detach.scala	/^  val InputSplitter = Module(new SplitCall(List(32,32,32,32)))$/;"	l
InputSplitter	src/main/scala/generator/cilk/cilk_for_test05.scala	/^  val InputSplitter = Module(new SplitCall(List(32,32,32)))$/;"	l
InputSplitter	src/main/scala/generator/cilk/cilk_for_test05_detach.scala	/^  val InputSplitter = Module(new SplitCall(List(32,32,32,32)))$/;"	l
InputSplitter	src/main/scala/generator/cilk/cilk_for_test06.scala	/^  val InputSplitter = Module(new SplitCall(List(32, 32, 32)))$/;"	l
InputSplitter	src/main/scala/generator/cilk/cilk_for_test06_detach.scala	/^  val InputSplitter = Module(new SplitCall(List(32, 32, 32, 32)))$/;"	l
InputSplitter	src/main/scala/generator/cilk/cilk_for_test06_detach_2.scala	/^  val InputSplitter = Module(new SplitCall(List(32, 32, 32, 32, 32)))$/;"	l
InputSplitter	src/main/scala/generator/cilk/cilk_for_test07.scala	/^  val InputSplitter = Module(new SplitCall(List(32,32,32)))$/;"	l
InputSplitter	src/main/scala/generator/cilk/cilk_for_test07_detach.scala	/^  val InputSplitter = Module(new SplitCall(List(32,32,32,32)))$/;"	l
InputSplitter	src/main/scala/generator/cilk/cilk_for_test08.scala	/^  val InputSplitter = Module(new SplitCall(List(32,32)))$/;"	l
InputSplitter	src/main/scala/generator/cilk/cilk_for_test08_detach.scala	/^  val InputSplitter = Module(new SplitCall(List(32,32,32)))$/;"	l
InputSplitter	src/main/scala/generator/cilk/cilk_for_test09.scala	/^  val InputSplitter = Module(new SplitCall(List(32, 32)))$/;"	l
InputSplitter	src/main/scala/generator/cilk/cilk_for_test09_inner.scala	/^  val InputSplitter = Module(new SplitCall(List(32)))$/;"	l
InputSplitter	src/main/scala/generator/cilk/cilk_for_test12.scala	/^  val InputSplitter = Module(new SplitCallNew(List(1,1)))$/;"	l
InputSplitter	src/main/scala/generator/cilk/cilk_for_test12_detach1.scala	/^  val InputSplitter = Module(new SplitCallNew(List(2,2,2)))$/;"	l
InputSplitter	src/main/scala/generator/cilk/cilk_for_test12_detach2.scala	/^  val InputSplitter = Module(new SplitCallNew(List(2,2)))$/;"	l
InputSplitter	src/main/scala/generator/cilk/cilk_for_test12_detach3.scala	/^  val InputSplitter = Module(new SplitCallNew(List(2,2)))$/;"	l
InputSplitter	src/main/scala/generator/cilk/cilk_spawn_test01.scala	/^  val InputSplitter = Module(new SplitCall(List(32,32)))$/;"	l
InputSplitter	src/main/scala/generator/cilk/cilk_spawn_test02.scala	/^  val InputSplitter = Module(new SplitCall(List(32,32)))$/;"	l
InputSplitter	src/main/scala/generator/cilk/fib.scala	/^  val InputSplitter = Module(new SplitCallNew(List(4,2)))$/;"	l
InputSplitter	src/main/scala/generator/cilk/fib_continue.scala	/^  val InputSplitter = Module(new SplitCallNew(List(1,1,1)))$/;"	l
InputSplitter	src/main/scala/generator/cilk/mergesort.scala	/^  val InputSplitter = Module(new SplitCallNew(List(3,4,4,3)))$/;"	l
InputSplitter	src/main/scala/generator/cilk/mergesort_merge.scala	/^  val InputSplitter = Module(new SplitCallNew(List(7)))$/;"	l
InputSplitter	src/main/scala/generator/cilk/stencil.scala	/^  val InputSplitter = Module(new SplitCall(List(32, 32)))$/;"	l
InputSplitter	src/main/scala/generator/cilk/stencil_detach1.scala	/^  val InputSplitter = Module(new SplitCall(List(32, 32, 32)))$/;"	l
InputSplitter	src/main/scala/generator/cilk/stencil_inner.scala	/^  val InputSplitter = Module(new SplitCall(List(32, 32, 32, 32, 32)))$/;"	l
InputSplitter	src/main/scala/generator/test01.scala	/^  val InputSplitter = Module(new SplitCall(List(32, 32)))$/;"	l
InputSplitter	src/main/scala/generator/test02.scala	/^  val InputSplitter = Module(new SplitCall(List(32,32)))$/;"	l
InputSplitter	src/main/scala/generator/test03.scala	/^  val InputSplitter = Module(new SplitCall(List(32, 32, 32)))$/;"	l
InputSplitter	src/main/scala/generator/test04.scala	/^  val InputSplitter = Module(new SplitCall(List(32,32)))$/;"	l
InputSplitter	src/main/scala/generator/test05.scala	/^  val InputSplitter = Module(new SplitCallNew(List(3,3)))$/;"	l
InputSplitter	src/main/scala/generator/test05b.scala	/^  val InputSplitter = Module(new SplitCallNew(List(3,3)))$/;"	l
InputSplitter	src/main/scala/generator/test05c.scala	/^  val InputSplitter = Module(new SplitCallNew(List(1,1)))$/;"	l
InputSplitter	src/main/scala/generator/test06.scala	/^  val InputSplitter = Module(new SplitCall(List(32,32)))$/;"	l
InputSplitter	src/main/scala/generator/test08.scala	/^  val InputSplitter = Module(new SplitCall(List(32)))$/;"	l
InputSplitter	src/main/scala/generator/test09.scala	/^  val InputSplitter = Module(new SplitCall(List(32)))$/;"	l
InputSplitter	src/main/scala/generator/test10.scala	/^  val InputSplitter = Module(new SplitCall(List(32,32,32)))$/;"	l
InputSplitter	src/main/scala/generator/test11.scala	/^  val InputSplitter = Module(new SplitCall(List(32,32,32)))$/;"	l
InputSplitter	src/main/scala/generator/test11_add.scala	/^  val InputSplitter = Module(new SplitCall(List(32,32)))$/;"	l
InputSplitter	src/main/scala/generator/test12.scala	/^  val InputSplitter = Module(new SplitCall(List(32)))$/;"	l
InputSplitter	src/main/scala/generator/test12_inner.scala	/^  val InputSplitter = Module(new SplitCall(List(32)))$/;"	l
InputSplitter	src/main/scala/generator/test14.scala	/^  val InputSplitter = Module(new SplitCall(List(32,32)))$/;"	l
InputSplitter	src/main/scala/generator/test14_inner.scala	/^  val InputSplitter = Module(new SplitCall(List(32)))$/;"	l
InputSplitter	src/main/scala/generator/test15.scala	/^  val InputSplitter = Module(new SplitCallNew(List(1,1)))$/;"	l
Input_R	src/main/scala/FPU/ResizeFN.scala	/^  val Input_R = Reg(new CustomDataBundle((UInt((Src.ieeeWidth).W))))$/;"	l
Input_valid_R	src/main/scala/FPU/ResizeFN.scala	/^  val Input_valid_R = RegInit(false.B)$/;"	l
Instance	src/main/scala/config/cde/Parameters.scala	/^class Instance($/;"	c
IntEx	src/main/scala/config/cde/Expression.scala	/^case class IntEx (expr:Ex[Int]) {$/;"	c
Int_IntEx	src/main/scala/config/cde/Expression.scala	/^  implicit def Int_IntEx(i:Int):IntEx = IntEx(ExLit[Int](i))$/;"	m
InterleavedStack	src/main/scala/stack/InterleavedStack.scala	/^class InterleavedStack(val size : Int, ramIdx : List[Int], NumPorts:Int)(implicit p: Parameters)$/;"	c
InterleavedStackIO	src/main/scala/stack/InterleavedStack.scala	/^class InterleavedStackIO(NumPorts:Int)(implicit val p: Parameters) extends Module with CoreParams {$/;"	c
Invalid	src/main/scala/loop/LiveInNode.scala	/^  val Invalid = Flipped(Decoupled(new ControlBundle()))$/;"	l
InvalidIn	src/main/scala/node/HandShaking.scala	/^  def InvalidIn(): Unit = {$/;"	m
InvalidOut	src/main/scala/node/HandShaking.scala	/^  def InvalidOut(): Unit = {$/;"	m
InvalidPred	src/main/scala/node/HandShaking.scala	/^  def InvalidPred(): Unit = {$/;"	m
InvalidSucc	src/main/scala/node/HandShaking.scala	/^  def InvalidSucc(): Unit = {$/;"	m
IsEnable	src/main/scala/node/HandShaking.scala	/^  def IsEnable(): Bool = {$/;"	m
IsEnableValid	src/main/scala/node/HandShaking.scala	/^  def IsEnableValid(): Bool = {$/;"	m
IsInPredicate	src/main/scala/node/HandShaking.scala	/^  def IsInPredicate(): Bool = {$/;"	m
IsInValid	src/main/scala/node/HandShaking.scala	/^  def IsInValid(): Bool = {$/;"	m
IsLiveOutReady	src/main/scala/loop/LoopBlock.scala	/^  def IsLiveOutReady(): Bool = {$/;"	m
IsMaskReady	src/main/scala/node/HandShaking.scala	/^  def IsMaskReady(): Bool = {$/;"	m
IsMaskValid	src/main/scala/node/HandShaking.scala	/^  def IsMaskValid(): Bool = {$/;"	m
IsOutReady	src/main/scala/node/HandShaking.scala	/^  def IsOutReady(): Bool = {$/;"	m
IsOutValid	src/main/scala/node/HandShaking.scala	/^  def IsOutValid(): Bool = {$/;"	m
IsPredValid	src/main/scala/node/HandShaking.scala	/^  def IsPredValid(): Bool = {$/;"	m
IsSuccReady	src/main/scala/node/HandShaking.scala	/^  def IsSuccReady(): Bool = {$/;"	m
J	src/test/scala/verilogmain/TypStackSweeper.scala	/^  val J = Activity match {$/;"	l
J	src/test/scala/verilogmain/TypeStackSweeper16b.scala	/^  val J = Activity match {$/;"	l
JumpNode	src/main/scala/node/JumpNode.scala	/^class JumpNode(NumOuts: Int, ID: Int, Desc : String = "JumpNode")$/;"	c
JumpNodeIO	src/main/scala/node/JumpNode.scala	/^class JumpNodeIO(NumOuts: Int)$/;"	c
KidLookup	src/main/scala/config/cde/Parameters.scala	/^    class KidLookup extends _Lookup {$/;"	c
Knob	src/main/scala/config/cde/Parameters.scala	/^final case class Knob[T](name:Any)$/;"	c
KnobUndefinedException	src/main/scala/config/cde/Parameters.scala	/^class KnobUndefinedException(field:Any, cause:Throwable=null)$/;"	c
LeftIO	src/main/scala/FPU/FPCompare.scala	/^  val LeftIO = Flipped(Decoupled(new DataBundle()))$/;"	l
LeftIO	src/main/scala/FPU/FPComputeNode.scala	/^  val LeftIO = Flipped(Decoupled(new DataBundle()))$/;"	l
LeftIO	src/main/scala/node/BranchNode.scala	/^  val LeftIO = Flipped(Decoupled(new DataBundle))$/;"	l
LeftIO	src/main/scala/node/ComputeNode.scala	/^  val LeftIO = Flipped(Decoupled(new DataBundle()))$/;"	l
LeftIO	src/main/scala/node/IcmpNode.scala	/^  val LeftIO = Flipped(Decoupled(new DataBundle))$/;"	l
LeftIO	src/main/scala/node/TypCompute.scala	/^  val LeftIO = Flipped(Decoupled(new TypBundle))$/;"	l
Level	src/main/scala/muxes/Muxes.scala	/^  var Level = (max(1, log2Ceil(NumOps)) + SelBits - 1) \/ SelBits$/;"	l
ListExInt_ListExInt	src/main/scala/config/cde/Expression.scala	/^  implicit def ListExInt_ListExInt(l:List[Ex[Int]]):List[IntEx] = l.map((x:Ex[Int]) => IntEx(x))$/;"	m
ListInt_ListExInt	src/main/scala/config/cde/Expression.scala	/^  implicit def ListInt_ListExInt(l:List[Int]):List[IntEx] = l.map((x:Int) => IntEx(ExLit[Int](x)))$/;"	m
LiveInNewNode	src/main/scala/loop/LiveInNode.scala	/^class LiveInNewNode(NumOuts: Int, ID: Int)$/;"	c
LiveInNewNodeIO	src/main/scala/loop/LiveInNode.scala	/^class LiveInNewNodeIO(NumOuts: Int)$/;"	c
LiveInNode	src/main/scala/loop/LiveInNode.scala	/^class LiveInNode(NumOuts: Int, ID: Int)$/;"	c
LiveInNodeIO	src/main/scala/loop/LiveInNode.scala	/^class LiveInNodeIO(NumOuts: Int)$/;"	c
LiveInTester	src/test/scala/loop/LiveIn.scala	/^class LiveInTester(df: LiveInNode)$/;"	c
LiveInTests	src/test/scala/loop/LiveIn.scala	/^class LiveInTests extends  FlatSpec with Matchers {$/;"	c
LiveOutControlNode	src/main/scala/loop/LiveOutNode.scala	/^class LiveOutControlNode(NumOuts: Int, ID: Int)$/;"	c
LiveOutControlNodeIO	src/main/scala/loop/LiveOutNode.scala	/^class LiveOutControlNodeIO(NumOuts: Int)$/;"	c
LiveOutNode	src/main/scala/loop/LiveOutNode.scala	/^class LiveOutNode(NumOuts: Int, ID: Int)$/;"	c
LiveOutNodeIO	src/main/scala/loop/LiveOutNode.scala	/^class LiveOutNodeIO(NumOuts: Int)$/;"	c
LiveOutTester	src/test/scala/loop/LiveOut.scala	/^class LiveOutTester(df: LiveOutNode)$/;"	c
LiveOutTests	src/test/scala/loop/LiveOut.scala	/^class LiveOutTests extends  FlatSpec with Matchers {$/;"	c
Load	src/main/scala/dataflow/DataFlow.scala	/^	val Load      = Module(new TypLoad(NumPredOps=1,NumSuccOps=0,NumOuts=1,ID=0,RouteID=0))$/;"	l
Load	src/main/scala/dataflow/TestCacheDataFlow.scala	/^  val Load      = Module(new TypLoad(NumPredOps=1,NumSuccOps=0,NumOuts=2,ID=0,RouteID=0))$/;"	l
Load	src/main/scala/dataflow/TypeMemDataFlow.scala	/^	val Load      = Module(new TypLoad(NumPredOps=1,NumSuccOps=0,NumOuts=2,ID=0,RouteID=0))$/;"	l
Load	src/main/scala/dataflow/filter/BasicLoader.scala	/^  val Load = for (i <- 0 until FilterSize) yield {$/;"	l
Load	src/main/scala/dataflow/filter/CacheLoader.scala	/^  val Load = for (i <- 0 until FilterSize) yield {$/;"	l
Load	src/main/scala/dataflow/filter/CacheVecLoader.scala	/^  val Load = for (i <- 0 until FilterSize) yield {$/;"	l
Load1	src/main/scala/dataflow/TestCacheDataFlow.scala	/^	val Load1     = Module(new TypLoad(NumPredOps=1,NumSuccOps=0,NumOuts=2,ID=0,RouteID=1))$/;"	l
Load1	src/main/scala/dataflow/TypeMemDataFlow.scala	/^	val Load1     = Module(new TypLoad(NumPredOps=1,NumSuccOps=0,NumOuts=2,ID=1,RouteID=1))$/;"	l
LoadIO	src/main/scala/node/LoadSimple.scala	/^class LoadIO(NumPredOps: Int,$/;"	c
LoadMaskIO	src/main/scala/node/LoadMaskNode.scala	/^abstract class LoadMaskIO(NumPredOps :Int = 1, NumSuccOps :Int = 1,$/;"	c
LoadMaskNode	src/main/scala/node/LoadMaskNode.scala	/^class LoadMaskNode(NumPredOps: Int = 1, NumSuccOps: Int = 1)(implicit p: Parameters) extends LoadMaskIO(NumPredOps)(p){$/;"	c
LoadMaskTester	src/test/scala/dataflow/LoadMaskTest.scala	/^class LoadMaskTester extends  FlatSpec with Matchers {$/;"	c
LoadMaskTests	src/test/scala/dataflow/LoadMaskTest.scala	/^class LoadMaskTests (c: LoadMaskNode)(implicit p: config.Parameters) extends PeekPokeTester(c) {$/;"	c
LoadNodeTester	src/test/scala/node/LoadSimple.scala	/^class LoadNodeTester extends  FlatSpec with Matchers {$/;"	c
LoadNodeTests	src/test/scala/node/LoadSimple.scala	/^class LoadNodeTests(c: UnTypLoad) extends PeekPokeTester(c) {$/;"	c
Loader	src/main/scala/accel/coredf/FilterDFCore.scala	/^  val Loader = Module(new CacheLoader(18)(p))$/;"	l
Loader	src/main/scala/accel/coredf/VecFilterDFCore.scala	/^  val Loader = Module(new CacheVecLoader(6)(p))$/;"	l
Loader	src/main/scala/accel/coredf/VecFilterNoKernDFCore.scala	/^  val Loader = Module(new CacheVecLoader(3)(p))$/;"	l
Loads	src/main/scala/dataflow/MemDataFlow.scala	/^ val Loads = for (i <- 0 until ops*2) yield {$/;"	l
LockingRRArbiter	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^module LockingRRArbiter($/;"	m
LockingRRArbiter_1	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^module LockingRRArbiter_1($/;"	m
LockingRRArbiter_2	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^module LockingRRArbiter_2($/;"	m
LockingRRArbiter_3	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^module LockingRRArbiter_3($/;"	m
LockingRRArbiter_4	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^module LockingRRArbiter_4($/;"	m
LockingRRArbiter_clock	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire  LockingRRArbiter_clock;$/;"	n
LockingRRArbiter_io_chosen	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire  LockingRRArbiter_io_chosen;$/;"	n
LockingRRArbiter_io_in_0_bits_RouteID	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire [15:0] LockingRRArbiter_io_in_0_bits_RouteID;$/;"	n
LockingRRArbiter_io_in_0_bits_address	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire [15:0] LockingRRArbiter_io_in_0_bits_address;$/;"	n
LockingRRArbiter_io_in_0_bits_address	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire [5:0] LockingRRArbiter_io_in_0_bits_address;$/;"	n
LockingRRArbiter_io_in_0_bits_data	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire [15:0] LockingRRArbiter_io_in_0_bits_data;$/;"	n
LockingRRArbiter_io_in_0_bits_mask	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire [1:0] LockingRRArbiter_io_in_0_bits_mask;$/;"	n
LockingRRArbiter_io_in_0_ready	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire  LockingRRArbiter_io_in_0_ready;$/;"	n
LockingRRArbiter_io_in_0_valid	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire  LockingRRArbiter_io_in_0_valid;$/;"	n
LockingRRArbiter_io_in_1_bits_RouteID	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire [15:0] LockingRRArbiter_io_in_1_bits_RouteID;$/;"	n
LockingRRArbiter_io_in_1_bits_address	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire [15:0] LockingRRArbiter_io_in_1_bits_address;$/;"	n
LockingRRArbiter_io_in_1_bits_address	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire [5:0] LockingRRArbiter_io_in_1_bits_address;$/;"	n
LockingRRArbiter_io_in_1_bits_data	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire [15:0] LockingRRArbiter_io_in_1_bits_data;$/;"	n
LockingRRArbiter_io_in_1_bits_mask	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire [1:0] LockingRRArbiter_io_in_1_bits_mask;$/;"	n
LockingRRArbiter_io_in_1_ready	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire  LockingRRArbiter_io_in_1_ready;$/;"	n
LockingRRArbiter_io_in_1_valid	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire  LockingRRArbiter_io_in_1_valid;$/;"	n
LockingRRArbiter_io_out_bits_RouteID	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire [15:0] LockingRRArbiter_io_out_bits_RouteID;$/;"	n
LockingRRArbiter_io_out_bits_address	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire [15:0] LockingRRArbiter_io_out_bits_address;$/;"	n
LockingRRArbiter_io_out_bits_address	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire [5:0] LockingRRArbiter_io_out_bits_address;$/;"	n
LockingRRArbiter_io_out_bits_data	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire [15:0] LockingRRArbiter_io_out_bits_data;$/;"	n
LockingRRArbiter_io_out_bits_mask	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire [1:0] LockingRRArbiter_io_out_bits_mask;$/;"	n
LockingRRArbiter_io_out_ready	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire  LockingRRArbiter_io_out_ready;$/;"	n
LockingRRArbiter_io_out_valid	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire  LockingRRArbiter_io_out_valid;$/;"	n
LockingRRArbiter_reset	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire  LockingRRArbiter_reset;$/;"	n
LoopBlock	src/main/scala/loop/LoopBlock.scala	/^class LoopBlock(ID: Int, NumIns : Seq[Int], NumOuts : Int, NumExits : Int)$/;"	c
LoopBlockIO	src/main/scala/loop/LoopBlock.scala	/^class LoopBlockIO(NumIns: Seq[Int], NumOuts : Int, NumExits : Int)(implicit p: Parameters)$/;"	c
LoopElement	src/main/scala/loop/LoopElement.scala	/^class LoopElement(val ID: Int)(implicit val p: Parameters)$/;"	c
LoopElementIO	src/main/scala/loop/LoopElement.scala	/^class LoopElementIO()(implicit p: Parameters) extends CoreBundle() {$/;"	c
LoopEnd	src/main/scala/loop/LoopEnd.scala	/^class LoopEnd(val NumInputs: Int, val NumOuts: Int, val ID: Int)$/;"	c
LoopEndIO	src/main/scala/loop/LoopEnd.scala	/^class LoopEndIO(val NumInputs: Int, val NumOuts: Int)$/;"	c
LoopEx1	src/test/scala/loop/Ex1.scala	/^class LoopEx1(c: LoopExample) extends PeekPokeTester(c) {$/;"	c
LoopEx1Tester	src/test/scala/loop/Ex1.scala	/^class LoopEx1Tester extends  FlatSpec with Matchers {$/;"	c
LoopExample	src/main/scala/loop/Example1.scala	/^class LoopExample(val NumInputs: Int, val ID: Int)$/;"	c
LoopExampleIO	src/main/scala/loop/Example1.scala	/^class LoopExampleIO[T <: Data](val ID: Int)(gen: T)(implicit p: Parameters) extends CoreBundle(){$/;"	c
LoopHead	src/main/scala/control/BasicBlock.scala	/^class LoopHead(val BID: Int, val NumOuts: Int, val NumPhi: Int)$/;"	c
LoopHeadNodeIO	src/main/scala/control/BasicBlock.scala	/^class LoopHeadNodeIO(val NumOuts: Int, val NumPhi: Int)(implicit p: Parameters) extends CoreBundle {$/;"	c
LoopHeadTester	src/test/scala/loop/SerialLoop.scala	/^class LoopHeadTester extends  FlatSpec with Matchers {$/;"	c
LoopHeader	src/main/scala/loop/LoopHeader.scala	/^class LoopHeader(val NumInputs: Int, val NumOuts: Int, val ID: Int)$/;"	c
LoopHeaderIO	src/main/scala/loop/LoopHeader.scala	/^class LoopHeaderIO[T <: Data](val NumInputs: Int, val NumOuts: Int)$/;"	c
LoopOutputBundle	src/main/scala/loop/LoopHeader.scala	/^object LoopOutputBundle{$/;"	c
LoopOutputBundleIO	src/main/scala/loop/LoopHeader.scala	/^class LoopOutputBundleIO[+T <: Data](gen: T) extends Bundle(){$/;"	c
LoopRegTester	src/test/scala/loop/LoopRegnode.scala	/^class LoopRegTester extends  FlatSpec with Matchers {$/;"	c
LoopRegTests	src/test/scala/loop/LoopRegnode.scala	/^class LoopRegTests(c: LoopElement) extends PeekPokeTester(c) {$/;"	c
LoopStart	src/main/scala/loop/LoopStart.scala	/^class LoopStart(val NumInputs: Int, val NumOuts: Int, val ID: Int)$/;"	c
LoopStartIO	src/main/scala/loop/LoopStart.scala	/^class LoopStartIO(val NumInputs: Int, val NumOuts: Int)$/;"	c
LoopTests	src/test/scala/loop/SerialLoop.scala	/^class LoopTests(c: LoopStart) extends PeekPokeTester(c) {$/;"	c
MLPSize	src/main/scala/memory/ReadMemoryController.scala	/^  val MLPSize = NumEntries$/;"	l
MLPSize	src/main/scala/memory/ReadTypMemoryController.scala	/^  val MLPSize = NumEntries$/;"	l
MLPSize	src/main/scala/memory/ReadWriteArbiter.scala	/^  val MLPSize = 2$/;"	l
MLPSize	src/main/scala/memory/WriteMemoryController.scala	/^  val MLPSize = NumEntries$/;"	l
MLPSize	src/main/scala/memory/WriteTypMemoryController.scala	/^  val MLPSize = NumEntries$/;"	l
MSHRLEN	src/main/scala/config/config.scala	/^case object MSHRLEN    extends Field[Int]$/;"	c
MT_B	src/main/scala/utility/Constants.scala	/^   val MT_B  = 1.U(3.W)$/;"	l
MT_BU	src/main/scala/utility/Constants.scala	/^   val MT_BU = 5.U(3.W)$/;"	l
MT_D	src/main/scala/utility/Constants.scala	/^   val MT_D  = 4.U(3.W)$/;"	l
MT_H	src/main/scala/utility/Constants.scala	/^   val MT_H  = 2.U(3.W)$/;"	l
MT_HU	src/main/scala/utility/Constants.scala	/^   val MT_HU = 6.U(3.W)$/;"	l
MT_MAX_SIZE	src/main/scala/utility/Constants.scala	/^   val MT_MAX_SIZE = 2$/;"	l
MT_W	src/main/scala/utility/Constants.scala	/^   val MT_W  = 3.U(3.W)$/;"	l
MT_WU	src/main/scala/utility/Constants.scala	/^   val MT_WU = 7.U(3.W)$/;"	l
MT_X	src/main/scala/utility/Constants.scala	/^      val MT_X,MT_B,MT_H,MT_W,MT_D,MT_BU,MT_HU,MT_WU,MT_2x2=Value$/;"	l
MT_X	src/main/scala/utility/Constants.scala	/^   val MT_X  = 0.U(3.W)$/;"	l
Mac	src/main/scala/FPU/FPALU.scala	/^  val Mac = 4$/;"	l
Main	src/main/scala/verilogmain/TypeMemDataflow.scala	/^object Main extends App {$/;"	c
Margin	src/main/scala/utility/Constants.scala	/^      type Margin = Value;$/;"	T
Margin	src/main/scala/utility/Constants.scala	/^   object Margin extends Enumeration {$/;"	c
Mask	src/main/scala/node/PhiNode.scala	/^  val Mask = Flipped(Decoupled(UInt(NumInputs.W)))$/;"	l
MaskBB	src/main/scala/control/BasicBlock.scala	/^  val MaskBB = Vec(NumPhi, Decoupled(UInt(2.W)))$/;"	l
MaskBB	src/main/scala/node/HandShaking.scala	/^  val MaskBB = Vec(NumPhi, Decoupled(UInt(NumInputs.W)))$/;"	l
MemArbiter	src/main/scala/generator/cilk/cilk_for_test04.scala	/^    val MemArbiter = Module(new MemArbiter(children))$/;"	l
MemArbiter	src/main/scala/generator/cilk/cilk_for_test04.scala	/^  val MemArbiter = Module(new MemArbiter(children))$/;"	l
MemArbiter	src/main/scala/generator/cilk/cilk_for_test05.scala	/^  val MemArbiter = Module(new MemArbiter(children))$/;"	l
MemArbiter	src/main/scala/generator/cilk/cilk_for_test06.scala	/^  val MemArbiter = Module(new MemArbiter(children))$/;"	l
MemArbiter	src/main/scala/generator/cilk/cilk_for_test08.scala	/^  val MemArbiter = Module(new MemArbiter(children))$/;"	l
MemArbiter	src/main/scala/memory/MemArbiter.scala	/^class MemArbiter(NumPorts:Int)(implicit p: Parameters) extends MemArbiterIO(NumPorts)(p) {$/;"	c
MemArbiter	src/test/scala/generator/cilk/bgemm_test.scala	/^  val MemArbiter = Module(new MemArbiter(children))$/;"	l
MemArbiter	src/test/scala/generator/cilk/cilk_for_test04_test.scala	/^  val MemArbiter = Module(new MemArbiter(children))$/;"	l
MemArbiter	src/test/scala/generator/cilk/cilk_for_test06_test.scala	/^  val MemArbiter = Module(new MemArbiter(children))$/;"	l
MemArbiter	src/test/scala/generator/cilk/cilk_for_test07_test.scala	/^  val MemArbiter = Module(new MemArbiter(children))$/;"	l
MemArbiter	src/test/scala/generator/cilk/cilk_for_test08_test.scala	/^  val MemArbiter = Module(new MemArbiter(children))$/;"	l
MemArbiter	src/test/scala/generator/cilk/cilk_for_test09_test.scala	/^  val MemArbiter = Module(new MemArbiter(children))$/;"	l
MemArbiter	src/test/scala/generator/cilk/cilk_for_test12_test.scala	/^  val MemArbiter = Module(new MemArbiter(children1+children2+children3+1))$/;"	l
MemArbiter	src/test/scala/generator/cilk/stencil_test.scala	/^  val MemArbiter = Module(new MemArbiter(2 * children))$/;"	l
MemArbiter	src/test/scala/generator/cilk/stencil_test.scala	/^  val MemArbiter = Module(new MemArbiter(2))$/;"	l
MemArbiter	src/test/scala/generator/test05_test.scala	/^  val MemArbiter = Module(new MemArbiter(2))$/;"	l
MemArbiter	src/test/scala/generator/test05_test.scala	/^  val MemArbiter = Module(new MemArbiter(3))$/;"	l
MemArbiterIO	src/main/scala/memory/MemArbiter.scala	/^class MemArbiterIO(NumPorts:Int)(implicit val p: Parameters)$/;"	c
MemCtrl	src/main/scala/generator/cilk/fib.scala	/^  val MemCtrl = Module(new UnifiedController(ID=0,Size=64*1024,NReads=2,NWrites=2)$/;"	l
MemCtrl	src/main/scala/generator/cilk/fib_continue.scala	/^  val MemCtrl = Module(new UnifiedController(ID=0,Size=64*1024,NReads=3,NWrites=1)$/;"	l
MemDF	src/main/scala/accel/coredf/TestCacheDF.scala	/^  val MemDF = Module(new TestCacheDataFlow())$/;"	l
MemReq	src/main/scala/accel/Cache.scala	/^object MemReq {$/;"	c
MemReq	src/main/scala/dataflow/MemDataFlow.scala	/^		val MemReq = Decoupled(new MemReq)$/;"	l
MemReq	src/main/scala/dataflow/TestCacheDataFlow.scala	/^			val MemReq = Decoupled(new MemReq)$/;"	l
MemReq	src/main/scala/generator/cilk/bgemm.scala	/^    val MemReq = Decoupled(new MemReq)$/;"	l
MemReq	src/main/scala/generator/cilk/bgemm_detach1.scala	/^    val MemReq = Decoupled(new MemReq)$/;"	l
MemReq	src/main/scala/generator/cilk/bgemm_detach2.scala	/^    val MemReq = Decoupled(new MemReq)$/;"	l
MemReq	src/main/scala/generator/cilk/bgemm_detach3.scala	/^    val MemReq = Decoupled(new MemReq)$/;"	l
MemReq	src/main/scala/generator/cilk/cilk_for_test01.scala	/^    val MemReq = Decoupled(new MemReq)$/;"	l
MemReq	src/main/scala/generator/cilk/cilk_for_test02.scala	/^    val MemReq = Decoupled(new MemReq)$/;"	l
MemReq	src/main/scala/generator/cilk/cilk_for_test02_mul.scala	/^    val MemReq = Decoupled(new MemReq)$/;"	l
MemReq	src/main/scala/generator/cilk/cilk_for_test04.scala	/^    val MemReq = Decoupled(new MemReq)$/;"	l
MemReq	src/main/scala/generator/cilk/cilk_for_test04_detach.scala	/^    val MemReq = Decoupled(new MemReq)$/;"	l
MemReq	src/main/scala/generator/cilk/cilk_for_test05.scala	/^    val MemReq = Decoupled(new MemReq)$/;"	l
MemReq	src/main/scala/generator/cilk/cilk_for_test05_detach.scala	/^    val MemReq = Decoupled(new MemReq)$/;"	l
MemReq	src/main/scala/generator/cilk/cilk_for_test06.scala	/^    val MemReq = Decoupled(new MemReq)$/;"	l
MemReq	src/main/scala/generator/cilk/cilk_for_test06_detach.scala	/^    val MemReq = Decoupled(new MemReq)$/;"	l
MemReq	src/main/scala/generator/cilk/cilk_for_test06_detach_2.scala	/^    val MemReq = Decoupled(new MemReq)$/;"	l
MemReq	src/main/scala/generator/cilk/cilk_for_test07_detach.scala	/^    val MemReq = Decoupled(new MemReq)$/;"	l
MemReq	src/main/scala/generator/cilk/cilk_for_test08.scala	/^    val MemReq = Decoupled(new MemReq)$/;"	l
MemReq	src/main/scala/generator/cilk/cilk_for_test08_detach.scala	/^    val MemReq = Decoupled(new MemReq)$/;"	l
MemReq	src/main/scala/generator/cilk/cilk_for_test09.scala	/^    val MemReq = Decoupled(new MemReq)$/;"	l
MemReq	src/main/scala/generator/cilk/cilk_for_test09_inner.scala	/^    val MemReq = Decoupled(new MemReq)$/;"	l
MemReq	src/main/scala/generator/cilk/cilk_for_test12.scala	/^    val MemReq = Decoupled(new MemReq)$/;"	l
MemReq	src/main/scala/generator/cilk/cilk_for_test12_detach1.scala	/^    val MemReq = Decoupled(new MemReq)$/;"	l
MemReq	src/main/scala/generator/cilk/cilk_for_test12_detach2.scala	/^    val MemReq = Decoupled(new MemReq)$/;"	l
MemReq	src/main/scala/generator/cilk/cilk_for_test12_detach3.scala	/^    val MemReq = Decoupled(new MemReq)$/;"	l
MemReq	src/main/scala/generator/cilk/cilk_spawn_test01.scala	/^    val MemReq = Decoupled(new MemReq)$/;"	l
MemReq	src/main/scala/generator/cilk/cilk_spawn_test02.scala	/^    val MemReq = Decoupled(new MemReq)$/;"	l
MemReq	src/main/scala/generator/cilk/fib.scala	/^    val MemReq = Decoupled(new MemReq)$/;"	l
MemReq	src/main/scala/generator/cilk/fib_continue.scala	/^    val MemReq = Decoupled(new MemReq)$/;"	l
MemReq	src/main/scala/generator/cilk/stencil_detach1.scala	/^    val MemReq = Decoupled(new MemReq)$/;"	l
MemReq	src/main/scala/generator/cilk/stencil_inner.scala	/^    val MemReq = Decoupled(new MemReq)$/;"	l
MemReq	src/main/scala/generator/test01.scala	/^    val MemReq = Decoupled(new MemReq)$/;"	l
MemReq	src/main/scala/generator/test02.scala	/^    val MemReq = Decoupled(new MemReq)$/;"	l
MemReq	src/main/scala/generator/test03.scala	/^    val MemReq = Decoupled(new MemReq)$/;"	l
MemReq	src/main/scala/generator/test04.scala	/^    val MemReq = Decoupled(new MemReq)$/;"	l
MemReq	src/main/scala/generator/test05.scala	/^    val MemReq = Decoupled(new MemReq)$/;"	l
MemReq	src/main/scala/generator/test05b.scala	/^    val MemReq = Decoupled(new MemReq)$/;"	l
MemReq	src/main/scala/generator/test05c.scala	/^    val MemReq = Decoupled(new MemReq)$/;"	l
MemReq	src/main/scala/generator/test06.scala	/^    val MemReq = Decoupled(new MemReq)$/;"	l
MemReq	src/main/scala/generator/test08.scala	/^    val MemReq = Decoupled(new MemReq)$/;"	l
MemReq	src/main/scala/generator/test09.scala	/^    val MemReq = Decoupled(new MemReq)$/;"	l
MemReq	src/main/scala/generator/test10.scala	/^    val MemReq = Decoupled(new MemReq)$/;"	l
MemReq	src/main/scala/generator/test11.scala	/^    val MemReq = Decoupled(new MemReq)$/;"	l
MemReq	src/main/scala/generator/test11_add.scala	/^    val MemReq = Decoupled(new MemReq)$/;"	l
MemReq	src/main/scala/generator/test12.scala	/^    val MemReq = Decoupled(new MemReq)$/;"	l
MemReq	src/main/scala/generator/test12_inner.scala	/^    val MemReq = Decoupled(new MemReq)$/;"	l
MemReq	src/main/scala/generator/test14.scala	/^    val MemReq = Decoupled(new MemReq)$/;"	l
MemReq	src/main/scala/generator/test14_inner.scala	/^    val MemReq = Decoupled(new MemReq)$/;"	l
MemReq	src/main/scala/generator/test15.scala	/^    val MemReq = Decoupled(new MemReq)$/;"	l
MemReq	src/main/scala/interfaces/interfaces.scala	/^class MemReq(implicit p: Parameters) extends CoreBundle()(p) {$/;"	c
MemReq	src/main/scala/interfaces/interfaces.scala	/^object MemReq {$/;"	c
MemReq	src/main/scala/memory/MemArbiter.scala	/^      val MemReq   = Decoupled(new MemReq)$/;"	l
MemReq	src/main/scala/memory/MemArbiter.scala	/^      val MemReq   = Vec(NumPorts, Flipped(Decoupled(new MemReq)))$/;"	l
MemReq	src/main/scala/memory/ReadMemoryController.scala	/^    val MemReq = Decoupled(new MemReq)$/;"	l
MemReq	src/main/scala/memory/ReadWriteArbiter.scala	/^    val MemReq = Decoupled(new MemReq)$/;"	l
MemReq	src/main/scala/memory/UnifiedController.scala	/^    val MemReq = Decoupled(new MemReq)$/;"	l
MemReq	src/main/scala/memory/UnifiedTypController.scala	/^    val MemReq = Decoupled(new MemReq)$/;"	l
MemReq	src/main/scala/memory/WriteMemoryController.scala	/^    val MemReq = Decoupled(new MemReq)$/;"	l
MemReq	src/main/scala/node/LoadMaskNode.scala	/^    val MemReq    = Decoupled(new ReadReq())$/;"	l
MemReq	src/main/scala/stack/InterleavedStack.scala	/^      val MemReq   = Vec(NumPorts, Flipped(Decoupled(new MemReq)))$/;"	l
MemResp	src/main/scala/accel/Cache.scala	/^class MemResp(implicit p: Parameters) extends CoreBundle()(p) with ValidT {$/;"	c
MemResp	src/main/scala/accel/Cache.scala	/^object MemResp {$/;"	c
MemResp	src/main/scala/dataflow/MemDataFlow.scala	/^		val MemResp = Flipped(Valid(new MemResp))$/;"	l
MemResp	src/main/scala/dataflow/TestCacheDataFlow.scala	/^			val MemResp = Flipped(Valid(new MemResp))$/;"	l
MemResp	src/main/scala/generator/cilk/bgemm.scala	/^    val MemResp = Flipped(Valid(new MemResp))$/;"	l
MemResp	src/main/scala/generator/cilk/bgemm_detach1.scala	/^    val MemResp = Flipped(Valid(new MemResp))$/;"	l
MemResp	src/main/scala/generator/cilk/bgemm_detach2.scala	/^    val MemResp = Flipped(Valid(new MemResp))$/;"	l
MemResp	src/main/scala/generator/cilk/bgemm_detach3.scala	/^    val MemResp = Flipped(Valid(new MemResp))$/;"	l
MemResp	src/main/scala/generator/cilk/cilk_for_test01.scala	/^    val MemResp = Flipped(Valid(new MemResp))$/;"	l
MemResp	src/main/scala/generator/cilk/cilk_for_test02.scala	/^    val MemResp = Flipped(Valid(new MemResp))$/;"	l
MemResp	src/main/scala/generator/cilk/cilk_for_test02_mul.scala	/^    val MemResp = Flipped(Valid(new MemResp))$/;"	l
MemResp	src/main/scala/generator/cilk/cilk_for_test04.scala	/^    val MemResp = Flipped(Valid(new MemResp))$/;"	l
MemResp	src/main/scala/generator/cilk/cilk_for_test04_detach.scala	/^    val MemResp = Flipped(Valid(new MemResp))$/;"	l
MemResp	src/main/scala/generator/cilk/cilk_for_test05.scala	/^    val MemResp = Flipped(Valid(new MemResp))$/;"	l
MemResp	src/main/scala/generator/cilk/cilk_for_test05_detach.scala	/^    val MemResp = Flipped(Valid(new MemResp))$/;"	l
MemResp	src/main/scala/generator/cilk/cilk_for_test06.scala	/^    val MemResp = Flipped(Valid(new MemResp))$/;"	l
MemResp	src/main/scala/generator/cilk/cilk_for_test06_detach.scala	/^    val MemResp = Flipped(Valid(new MemResp))$/;"	l
MemResp	src/main/scala/generator/cilk/cilk_for_test06_detach_2.scala	/^    val MemResp = Flipped(Valid(new MemResp))$/;"	l
MemResp	src/main/scala/generator/cilk/cilk_for_test07_detach.scala	/^    val MemResp = Flipped(Valid(new MemResp))$/;"	l
MemResp	src/main/scala/generator/cilk/cilk_for_test08.scala	/^    val MemResp = Flipped(Valid(new MemResp))$/;"	l
MemResp	src/main/scala/generator/cilk/cilk_for_test08_detach.scala	/^    val MemResp = Flipped(Valid(new MemResp))$/;"	l
MemResp	src/main/scala/generator/cilk/cilk_for_test09.scala	/^    val MemResp = Flipped(Valid(new MemResp))$/;"	l
MemResp	src/main/scala/generator/cilk/cilk_for_test09_inner.scala	/^    val MemResp = Flipped(Valid(new MemResp))$/;"	l
MemResp	src/main/scala/generator/cilk/cilk_for_test12.scala	/^    val MemResp = Flipped(Valid(new MemResp))$/;"	l
MemResp	src/main/scala/generator/cilk/cilk_for_test12_detach1.scala	/^    val MemResp = Flipped(Valid(new MemResp))$/;"	l
MemResp	src/main/scala/generator/cilk/cilk_for_test12_detach2.scala	/^    val MemResp = Flipped(Valid(new MemResp))$/;"	l
MemResp	src/main/scala/generator/cilk/cilk_for_test12_detach3.scala	/^    val MemResp = Flipped(Valid(new MemResp))$/;"	l
MemResp	src/main/scala/generator/cilk/cilk_spawn_test01.scala	/^    val MemResp = Flipped(Valid(new MemResp))$/;"	l
MemResp	src/main/scala/generator/cilk/cilk_spawn_test02.scala	/^    val MemResp = Flipped(Valid(new MemResp))$/;"	l
MemResp	src/main/scala/generator/cilk/fib.scala	/^    val MemResp = Flipped(Valid(new MemResp))$/;"	l
MemResp	src/main/scala/generator/cilk/fib_continue.scala	/^    val MemResp = Flipped(Valid(new MemResp))$/;"	l
MemResp	src/main/scala/generator/cilk/stencil_detach1.scala	/^    val MemResp = Flipped(Valid(new MemResp))$/;"	l
MemResp	src/main/scala/generator/cilk/stencil_inner.scala	/^    val MemResp = Flipped(Valid(new MemResp))$/;"	l
MemResp	src/main/scala/generator/test01.scala	/^    val MemResp = Flipped(Valid(new MemResp))$/;"	l
MemResp	src/main/scala/generator/test02.scala	/^    val MemResp = Flipped(Valid(new MemResp))$/;"	l
MemResp	src/main/scala/generator/test03.scala	/^    val MemResp = Flipped(Valid(new MemResp))$/;"	l
MemResp	src/main/scala/generator/test04.scala	/^    val MemResp = Flipped(Valid(new MemResp))$/;"	l
MemResp	src/main/scala/generator/test05.scala	/^    val MemResp = Flipped(Valid(new MemResp))$/;"	l
MemResp	src/main/scala/generator/test05b.scala	/^    val MemResp = Flipped(Valid(new MemResp))$/;"	l
MemResp	src/main/scala/generator/test05c.scala	/^    val MemResp = Flipped(Valid(new MemResp))$/;"	l
MemResp	src/main/scala/generator/test06.scala	/^    val MemResp = Flipped(Valid(new MemResp))$/;"	l
MemResp	src/main/scala/generator/test08.scala	/^    val MemResp = Flipped(Valid(new MemResp))$/;"	l
MemResp	src/main/scala/generator/test09.scala	/^    val MemResp = Flipped(Valid(new MemResp))$/;"	l
MemResp	src/main/scala/generator/test10.scala	/^    val MemResp = Flipped(Valid(new MemResp))$/;"	l
MemResp	src/main/scala/generator/test11.scala	/^    val MemResp = Flipped(Valid(new MemResp))$/;"	l
MemResp	src/main/scala/generator/test11_add.scala	/^    val MemResp = Flipped(Valid(new MemResp))$/;"	l
MemResp	src/main/scala/generator/test12.scala	/^    val MemResp = Flipped(Valid(new MemResp))$/;"	l
MemResp	src/main/scala/generator/test12_inner.scala	/^    val MemResp = Flipped(Valid(new MemResp))$/;"	l
MemResp	src/main/scala/generator/test14.scala	/^    val MemResp = Flipped(Valid(new MemResp))$/;"	l
MemResp	src/main/scala/generator/test14_inner.scala	/^    val MemResp = Flipped(Valid(new MemResp))$/;"	l
MemResp	src/main/scala/generator/test15.scala	/^    val MemResp = Flipped(Valid(new MemResp))$/;"	l
MemResp	src/main/scala/interfaces/interfaces.scala	/^class MemResp(implicit p: Parameters) extends CoreBundle()(p) with ValidT {$/;"	c
MemResp	src/main/scala/interfaces/interfaces.scala	/^object MemResp {$/;"	c
MemResp	src/main/scala/memory/MemArbiter.scala	/^      val MemResp  = Input(Valid(new MemResp))$/;"	l
MemResp	src/main/scala/memory/MemArbiter.scala	/^      val MemResp  = Vec(NumPorts, Output(Valid(new MemResp)))$/;"	l
MemResp	src/main/scala/memory/ReadMemoryController.scala	/^    val MemResp = Flipped(Valid(new MemResp))$/;"	l
MemResp	src/main/scala/memory/ReadMemoryController.scala	/^    val MemResp = Input(new MemResp)$/;"	l
MemResp	src/main/scala/memory/ReadWriteArbiter.scala	/^    val MemResp = Flipped(Valid(new MemResp))$/;"	l
MemResp	src/main/scala/memory/UnifiedController.scala	/^    val MemResp = Flipped(Valid(new MemResp))$/;"	l
MemResp	src/main/scala/memory/UnifiedTypController.scala	/^    val MemResp = Flipped(Valid(new MemResp))$/;"	l
MemResp	src/main/scala/memory/WriteMemoryController.scala	/^    val MemResp = Flipped(Valid(new MemResp))$/;"	l
MemResp	src/main/scala/memory/WriteMemoryController.scala	/^    val MemResp = Input(new MemResp)$/;"	l
MemResp	src/main/scala/node/LoadMaskNode.scala	/^    val MemResp   = Flipped(Decoupled(new ReadResp()))$/;"	l
MemResp	src/main/scala/stack/InterleavedStack.scala	/^      val MemResp  = Vec(NumPorts, Output(Valid(new MemResp)))$/;"	l
MemoryOpConstants	src/main/scala/utility/Constants.scala	/^trait MemoryOpConstants $/;"	t
MetaData	src/main/scala/accel/Cache.scala	/^class MetaData(implicit val p: Parameters) extends ParameterizedBundle()(p) with CacheParams {$/;"	c
MiniConfig	src/main/scala/config/config.scala	/^class MiniConfig extends Config((site, here, up) => {$/;"	c
MixedDataflowConfig	src/main/scala/config/TestConfigs.scala	/^class MixedDataflowConfig extends Config((site, here, up) => {$/;"	c
MixedDataflowPeekPoker32	src/test/scala/verilogmain/MixedDataflow32.scala	/^class MixedDataflowPeekPoker32(df: MixedDataFlow32)(implicit p: config.Parameters) extends PeekPokeTester(df)  {$/;"	c
MixedDataflowPeekPoker64	src/test/scala/verilogmain/MixedDataflow64.scala	/^class MixedDataflowPeekPoker64(df: MixedDataFlow64)(implicit p: config.Parameters) extends PeekPokeTester(df)  {$/;"	c
MixedDataflowVerilog32	src/test/scala/verilogmain/MixedDataflow32.scala	/^class MixedDataflowVerilog32 extends  FlatSpec with Matchers {$/;"	c
MixedDataflowVerilog64	src/test/scala/verilogmain/MixedDataflow64.scala	/^class MixedDataflowVerilog64 extends  FlatSpec with Matchers {$/;"	c
Mul	src/main/scala/FPU/FPALU.scala	/^  val Mul = 3$/;"	l
Mul	src/main/scala/node/Alu.scala	/^  val Mul = 15$/;"	l
Multiplier	src/main/scala/dataflow/filter/BasicFilter.scala	/^  val Multiplier = for (i <- 0 until FilterSize) yield {$/;"	l
Multiplier	src/main/scala/dataflow/filter/VecFilter.scala	/^  val Multiplier = for (i <- 0 until FilterSize) yield {$/;"	l
Mux	src/main/scala/muxes/Muxes.scala	/^class Mux[ T <: ValidT](gen: T, Nops: Int) extends Module {$/;"	c
Muxes_Per_Level	src/main/scala/muxes/Muxes.scala	/^  var Muxes_Per_Level = (NumOps + BaseSize - 1) \/ BaseSize$/;"	l
N	src/test/scala/node/LoadSimple.scala	/^  def N = false$/;"	m
NE	src/main/scala/node/Comparision.scala	/^  val NE      = 2$/;"	l
NSets	src/main/scala/accel/Cache.scala	/^case object NSets extends Field[Int]$/;"	c
NWays	src/main/scala/accel/Cache.scala	/^case object NWays extends Field[Int]$/;"	c
NastiAddressChannel	src/main/scala/junctions/nasti.scala	/^class NastiAddressChannel(implicit p: Parameters) extends NastiMasterToSlaveChannel()(p)$/;"	c
NastiArbiter	src/main/scala/junctions/nasti.scala	/^class NastiArbiter(val arbN: Int)(implicit p: Parameters) extends NastiModule {$/;"	c
NastiArbiterIO	src/main/scala/junctions/nasti.scala	/^class NastiArbiterIO(arbN: Int)(implicit p: Parameters) extends Bundle {$/;"	c
NastiBundle	src/main/scala/junctions/nasti.scala	/^abstract class NastiBundle(implicit val p: Parameters) extends ParameterizedBundle()(p)$/;"	c
NastiChannel	src/main/scala/junctions/nasti.scala	/^abstract class NastiChannel(implicit p: Parameters) extends NastiBundle()(p)$/;"	c
NastiConstants	src/main/scala/junctions/nasti.scala	/^object NastiConstants {$/;"	c
NastiIO	src/main/scala/junctions/nasti.scala	/^class NastiIO(implicit val p: Parameters) extends ParameterizedBundle()(p) {$/;"	c
NastiKey	src/main/scala/junctions/nasti.scala	/^case object NastiKey extends Field[NastiParameters]$/;"	c
NastiMaster	src/main/scala/accel/NastiMaster.scala	/^class NastiMaster()(implicit p: Parameters) extends NastiMasterIO()(p) {$/;"	c
NastiMasterIO	src/main/scala/accel/NastiMaster.scala	/^abstract class NastiMasterIO()(implicit val p: Parameters) extends Module with CoreParams$/;"	c
NastiMasterReq	src/main/scala/accel/NastiMaster.scala	/^class NastiMasterReq(implicit p: Parameters) extends CoreBundle()(p) {$/;"	c
NastiMasterReq	src/main/scala/accel/NastiMaster.scala	/^object NastiMasterReq {$/;"	c
NastiMasterResp	src/main/scala/accel/NastiMaster.scala	/^class NastiMasterResp(implicit p: Parameters) extends CoreBundle()(p) {$/;"	c
NastiMasterResp	src/main/scala/accel/NastiMaster.scala	/^object NastiMasterResp {$/;"	c
NastiMasterToSlaveChannel	src/main/scala/junctions/nasti.scala	/^abstract class NastiMasterToSlaveChannel(implicit p: Parameters) extends NastiChannel()(p)$/;"	c
NastiMemSlave	src/main/scala/accel/NastiMemSlave.scala	/^class NastiMemSlave(val depth : Int = 1<<16)(implicit val p: Parameters) extends Module with CacheParams {$/;"	c
NastiMemSlaveIO	src/main/scala/accel/NastiMemSlave.scala	/^class NastiMemSlaveIO(implicit p: Parameters) extends CoreBundle()(p) with CacheParams {$/;"	c
NastiModule	src/main/scala/junctions/nasti.scala	/^abstract class NastiModule(implicit val p: Parameters) extends Module$/;"	c
NastiParameters	src/main/scala/junctions/nasti.scala	/^case class NastiParameters(dataBits: Int, addrBits: Int, idBits: Int)$/;"	c
NastiReadAddressChannel	src/main/scala/junctions/nasti.scala	/^class NastiReadAddressChannel(implicit p: Parameters) extends NastiAddressChannel()(p) {$/;"	c
NastiReadAddressChannel	src/main/scala/junctions/nasti.scala	/^object NastiReadAddressChannel {$/;"	c
NastiReadDataChannel	src/main/scala/junctions/nasti.scala	/^class NastiReadDataChannel(implicit p: Parameters) extends NastiResponseChannel()(p)$/;"	c
NastiReadDataChannel	src/main/scala/junctions/nasti.scala	/^object NastiReadDataChannel {$/;"	c
NastiReadIO	src/main/scala/junctions/nasti.scala	/^class NastiReadIO(implicit val p: Parameters) extends ParameterizedBundle()(p) {$/;"	c
NastiResponseChannel	src/main/scala/junctions/nasti.scala	/^class NastiResponseChannel(implicit p: Parameters) extends NastiSlaveToMasterChannel()(p) {$/;"	c
NastiSlaveToMasterChannel	src/main/scala/junctions/nasti.scala	/^abstract class NastiSlaveToMasterChannel(implicit p: Parameters) extends NastiChannel()(p)$/;"	c
NastiWriteAddressChannel	src/main/scala/junctions/nasti.scala	/^class NastiWriteAddressChannel(implicit p: Parameters) extends NastiAddressChannel()(p) {$/;"	c
NastiWriteAddressChannel	src/main/scala/junctions/nasti.scala	/^object NastiWriteAddressChannel {$/;"	c
NastiWriteDataChannel	src/main/scala/junctions/nasti.scala	/^class NastiWriteDataChannel(implicit p: Parameters) extends NastiMasterToSlaveChannel()(p)$/;"	c
NastiWriteDataChannel	src/main/scala/junctions/nasti.scala	/^object NastiWriteDataChannel {$/;"	c
NastiWriteIO	src/main/scala/junctions/nasti.scala	/^class NastiWriteIO(implicit val p: Parameters) extends ParameterizedBundle()(p) {$/;"	c
NastiWriteResponseChannel	src/main/scala/junctions/nasti.scala	/^class NastiWriteResponseChannel(implicit p: Parameters) extends NastiResponseChannel()(p) {$/;"	c
NastiWriteResponseChannel	src/main/scala/junctions/nasti.scala	/^object NastiWriteResponseChannel {$/;"	c
NodeReq	src/main/scala/memory/ReadMemoryController.scala	/^    val NodeReq = Flipped(Decoupled(Input(new ReadReq)))$/;"	l
NodeReq	src/main/scala/memory/WriteMemoryController.scala	/^    val NodeReq = Flipped(Decoupled(Input(new WriteReq)))$/;"	l
NumFibs	src/test/scala/generator/cilk/fib_test.scala	/^  val NumFibs = tiles$/;"	l
NumMergesorts	src/test/scala/generator/cilk/mergesort_test.scala	/^  val NumMergesorts = tiles$/;"	l
NumOuts	src/main/scala/node/HandShaking.scala	/^                                 val NumOuts: Int)(gen: T)(implicit p: Parameters)$/;"	l
NumOuts	src/main/scala/node/HandShaking.scala	/^                             val NumOuts: Int,$/;"	l
NumOuts	src/main/scala/node/HandShaking.scala	/^                            val NumOuts: Int,$/;"	l
NumOuts	src/main/scala/node/HandShaking.scala	/^                          val NumOuts: Int,$/;"	l
NumPhi	src/main/scala/node/HandShaking.scala	/^                            val NumPhi: Int)(implicit p: Parameters)$/;"	l
NumPhi	src/main/scala/node/HandShaking.scala	/^                          val NumPhi: Int,$/;"	l
NumSuccOps	src/main/scala/node/HandShaking.scala	/^                                 val NumSuccOps: Int,$/;"	l
NumSuccOps	src/main/scala/node/HandShaking.scala	/^                             val NumSuccOps: Int,$/;"	l
Numbers	src/main/scala/node/TypCompute.scala	/^class Numbers(implicit p: Parameters) extends CoreBundle()(p) {$/;"	c
OOBasicBlockNode	src/main/scala/control/BasicBlock.scala	/^class OOBasicBlockNode(NumInputs: Int,$/;"	c
OPSize	scripts/TypeStackFile.py	/^OPSize = [2,8,16,32]$/;"	v
OUTDIR	scripts/TypeStackFile.py	/^OUTDIR = ".\/Output16b\/"$/;"	v
OperatorLike	src/main/scala/node/TypCompute.scala	/^  object OperatorLike {$/;"	c
OperatorLike	src/main/scala/node/TypCompute.scala	/^  trait OperatorLike[T] {$/;"	t
OperatorModule	src/main/scala/node/TypCompute.scala	/^class OperatorModule[T <: Numbers: OperatorLike](gen: => T, val opCode: String)(implicit val p: Parameters) extends Module {$/;"	c
Ops	src/main/scala/dataflow/MemDataFlow.scala	/^  val Ops = for (i <- 0 until ops) yield {$/;"	l
OptionMap	src/test/scala/verilogmain/TypStackSweeper.scala	/^  type OptionMap = Map[Symbol, Any]$/;"	T
OptionMap	src/test/scala/verilogmain/TypeStackSweeper16b.scala	/^  type OptionMap = Map[Symbol, Any]$/;"	T
Or	src/main/scala/node/Alu.scala	/^  val Or = 4$/;"	l
OrderedDict	scripts/TypeStackFile.py	/^from collections import OrderedDict$/;"	i
Out	src/main/scala/concurrent/Detach.scala	/^  val Out = Vec(3, Decoupled(new ControlBundle))$/;"	l
Out	src/main/scala/concurrent/Reattach.scala	/^  val Out = Vec(NumOuts, Decoupled(new ControlBundle()))$/;"	l
Out	src/main/scala/concurrent/Sync.scala	/^  val Out = Vec(NumOuts, Decoupled(new ControlBundle()))$/;"	l
Out	src/main/scala/control/BasicBlock.scala	/^  val Out = Vec(NumOuts, Decoupled(new ControlBundle))$/;"	l
Out	src/main/scala/dataflow/MemDataFlow.scala	/^		val Out = Vec(ops, Decoupled(new DataBundle()))$/;"	l
Out	src/main/scala/junctions/CombineDecoupled.scala	/^  val Out = Decoupled(new Call(argTypes))$/;"	l
Out	src/main/scala/junctions/CombineDecoupled.scala	/^  val Out = Decoupled(new VariableCustom(argTypes))$/;"	l
Out	src/main/scala/junctions/CombineDecoupled.scala	/^  val Out = Decoupled(new VariableData(argTypes))$/;"	l
Out	src/main/scala/junctions/SplitDecoupled.scala	/^  val Out = new CallDecoupled(argTypes)$/;"	l
Out	src/main/scala/junctions/SplitDecoupled.scala	/^  val Out = new CallDecoupledVec(argTypes)$/;"	l
Out	src/main/scala/junctions/SplitDecoupled.scala	/^  val Out = new VariableDecoupledCustom(argTypes)$/;"	l
Out	src/main/scala/junctions/SplitDecoupled.scala	/^  val Out = new VariableDecoupledData(argTypes)$/;"	l
Out	src/main/scala/node/BitCastNode.scala	/^    val Out = Vec(NumOuts, Decoupled(new DataBundle()))$/;"	l
Out	src/main/scala/node/BranchNode.scala	/^  val Out = Vec(1, Decoupled(new ControlBundle))$/;"	l
Out	src/main/scala/node/BranchNode.scala	/^  val Out = Vec(2, Decoupled(new ControlBundle))$/;"	l
Out	src/main/scala/node/CallInNode.scala	/^  val Out  = new CallDecoupled(argTypes)            \/\/ Returns to calling block(s)$/;"	l
Out	src/main/scala/node/CallNode.scala	/^  val Out     = new CallDecoupled(retTypes)            \/\/ Returns to calling block(s)$/;"	l
Out	src/main/scala/node/HandShaking.scala	/^  val Out = Vec(NumOuts, Decoupled(gen))$/;"	l
Out	src/main/scala/node/HandShaking.scala	/^  val Out = Vec(NumOuts, Decoupled(new ControlBundle))$/;"	l
Out	src/main/scala/node/RetNode.scala	/^  val Out = Decoupled(new Call(retTypes)) \/\/ Returns to calling block(s)$/;"	l
Out	src/main/scala/node/SelectNode.scala	/^    val Out = Vec(nout, Decoupled(new DataBundle()))$/;"	l
Out	src/main/scala/node/SextNode.scala	/^    val Out = Vec(nout, Decoupled(new DataBundle()))$/;"	l
Out	src/main/scala/node/ZextNode.scala	/^    val Out = Vec(nout, Decoupled(new DataBundle()))$/;"	l
Out	src/test/scala/concurrent/DecoupledTaskTest.scala	/^    val Out = Decoupled(new Call(List(32)))$/;"	l
Out	src/test/scala/dataflow/UnTypMemDataflow.scala	/^    val Out = Vec(ops, Decoupled(new DataBundle()))$/;"	l
OutData	src/main/scala/FPU/SharedDiv.scala	/^  val OutData = Vec(NumOps, Output(new FUResp))$/;"	l
OutData	src/main/scala/stack/StackAlloca.scala	/^  val OutData = Vec(NumOps, (new AllocaResp))$/;"	l
OutIO	src/main/scala/node/Relay.scala	/^    val OutIO = Vec(NumConsum, new RelayOutput())$/;"	l
PHITests	src/test/scala/node/PhiNode.scala	/^class PHITests extends  FlatSpec with Matchers {$/;"	c
ParameterDump	src/main/scala/config/cde/Dump.scala	/^object ParameterDump {$/;"	c
ParameterUndefinedException	src/main/scala/config/cde/Parameters.scala	/^class ParameterUndefinedException(field:Any, cause:Throwable=null)$/;"	c
ParameterizedBundle	src/main/scala/config/util.scala	/^class ParameterizedBundle(implicit p: Parameters) extends Bundle {$/;"	c
Parameters	src/main/scala/config/cde/Parameters.scala	/^final class Parameters($/;"	c
Parameters	src/main/scala/config/cde/Parameters.scala	/^object Parameters {$/;"	c
Parameters	src/main/scala/config/configurations.scala	/^abstract class Parameters extends View {$/;"	c
Parameters	src/main/scala/config/configurations.scala	/^object Parameters {$/;"	c
ParentBundle	src/main/scala/concurrent/TaskController.scala	/^class ParentBundle()(implicit p: Parameters) extends CoreBundle  {$/;"	c
PartialParameters	src/main/scala/config/configurations.scala	/^private class PartialParameters(f: (View, View, View) => PartialFunction[Any, Any]) extends Parameters {$/;"	c
PassA	src/main/scala/node/Alu.scala	/^  val PassA = 13$/;"	l
PassB	src/main/scala/node/Alu.scala	/^  val PassB = 14$/;"	l
PerfectCacheIO	src/main/scala/accel/PerfectCacheModel.scala	/^class PerfectCacheIO(implicit p: Parameters) extends CoreBundle()(p) with CacheParams {$/;"	c
PerfectCacheModel	src/main/scala/accel/PerfectCacheModel.scala	/^class PerfectCacheModel(val depth : Int = 1<<16)(implicit val p: Parameters) extends Module with CacheParams {$/;"	c
PhiNode	src/main/scala/node/PhiNode.scala	/^class PhiNode(NumInputs: Int,$/;"	c
PhiNodeIO	src/main/scala/node/PhiNode.scala	/^class PhiNodeIO(NumInputs: Int, NumOuts: Int)$/;"	c
PhiTester	src/test/scala/node/PhiNode.scala	/^class PhiTester(df: PhiNode)(implicit p: config.Parameters) extends PeekPokeTester(df)  {$/;"	c
PredOp	src/main/scala/node/HandShaking.scala	/^  val PredOp = Vec(NumPredOps, Flipped(Decoupled(new ControlBundle)))$/;"	l
PredOp	src/main/scala/node/LoadMaskNode.scala	/^    val PredOp = Vec(NumPredOps, Flipped(Decoupled(UInt(1.W))))$/;"	l
PredOp	src/main/scala/node/RetNode.scala	/^  val PredOp = Flipped(Vec(NumPredOps, Decoupled(new ControlBundle())))$/;"	l
PredicateT	src/main/scala/interfaces/interfaces.scala	/^trait PredicateT extends CoreBundle {$/;"	t
PrintOut	src/main/scala/node/CustomFunctionalUnit.scala	/^  def PrintOut(): Unit = {$/;"	m
PrintOut	src/main/scala/node/FusedComputeNode.scala	/^def PrintOut(): Unit = {$/;"	m
RANDOMIZE	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^`define RANDOMIZE$/;"	c
RController	src/main/scala/memory/ReadMemoryController.scala	/^abstract class RController(NumOps: Int, BaseSize: Int, NumEntries: Int)(implicit val p: Parameters)$/;"	c
RESP_DECERR	src/main/scala/junctions/nasti.scala	/^  def RESP_DECERR = UInt("b11")$/;"	m
RESP_EXOKAY	src/main/scala/junctions/nasti.scala	/^  def RESP_EXOKAY = UInt("b01")$/;"	m
RESP_OKAY	src/main/scala/junctions/nasti.scala	/^  def RESP_OKAY = UInt("b00")$/;"	m
RESP_SLVERR	src/main/scala/junctions/nasti.scala	/^  def RESP_SLVERR = UInt("b10")$/;"	m
RESULT	scripts/TypeStackFile.py	/^RESULT = "Out"$/;"	v
RFile	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^module RFile($/;"	m
RFile	src/main/scala/regfile/RegFile.scala	/^class RFile(size: Int)(implicit p: Parameters) extends AbstractRFile(size)(p) {$/;"	c
RMux	src/main/scala/muxes/TestMux.scala	/^    val RMux   = Module(new Mux(new ReadResp(),NReads))$/;"	l
ROM	src/main/scala/regfile/InputRegFile.scala	/^  val ROM    = VecInit(inData)$/;"	l
RRArbiter	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^module RRArbiter($/;"	m
RRArbiter_1	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^module RRArbiter_1($/;"	m
RWController	src/main/scala/memory/ReadWriteArbiter.scala	/^abstract class RWController(implicit val p: Parameters)$/;"	c
RdIdx	src/main/scala/memory/ReadWriteArbiter.scala	/^  val RdIdx = 0$/;"	l
ReadArbiterReg	src/main/scala/arbiters/ReadArbiter.scala	/^  val ReadArbiterReg   = RegNext(next = ReadReqArbiter.io.out.bits)$/;"	l
ReadBitMask	src/main/scala/node/helpers.scala	/^object ReadBitMask$/;"	c
ReadByteMask	src/main/scala/node/helpers.scala	/^object ReadByteMask$/;"	c
ReadController	src/main/scala/arbiters/TypeStackFile.scala	/^  val ReadController = Module(RControl)$/;"	l
ReadController	src/main/scala/memory/UnifiedController.scala	/^  val ReadController = Module(RControl)$/;"	l
ReadController	src/main/scala/memory/UnifiedTypController.scala	/^  val ReadController = Module(RControl)$/;"	l
ReadController_clock	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire  ReadController_clock;$/;"	n
ReadController_io_CacheReq_bits_addr	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire [15:0] ReadController_io_CacheReq_bits_addr;$/;"	n
ReadController_io_CacheReq_bits_tag	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire [7:0] ReadController_io_CacheReq_bits_tag;$/;"	n
ReadController_io_CacheReq_ready	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire  ReadController_io_CacheReq_ready;$/;"	n
ReadController_io_CacheReq_valid	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire  ReadController_io_CacheReq_valid;$/;"	n
ReadController_io_CacheResp_bits_data	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire [15:0] ReadController_io_CacheResp_bits_data;$/;"	n
ReadController_io_CacheResp_bits_tag	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire [7:0] ReadController_io_CacheResp_bits_tag;$/;"	n
ReadController_io_CacheResp_bits_valid	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire  ReadController_io_CacheResp_bits_valid;$/;"	n
ReadController_io_CacheResp_valid	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire  ReadController_io_CacheResp_valid;$/;"	n
ReadController_io_ReadIn_0_bits_RouteID	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire [15:0] ReadController_io_ReadIn_0_bits_RouteID;$/;"	n
ReadController_io_ReadIn_0_bits_address	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire [15:0] ReadController_io_ReadIn_0_bits_address;$/;"	n
ReadController_io_ReadIn_0_ready	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire  ReadController_io_ReadIn_0_ready;$/;"	n
ReadController_io_ReadIn_0_valid	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire  ReadController_io_ReadIn_0_valid;$/;"	n
ReadController_io_ReadIn_1_bits_RouteID	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire [15:0] ReadController_io_ReadIn_1_bits_RouteID;$/;"	n
ReadController_io_ReadIn_1_bits_address	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire [15:0] ReadController_io_ReadIn_1_bits_address;$/;"	n
ReadController_io_ReadIn_1_ready	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire  ReadController_io_ReadIn_1_ready;$/;"	n
ReadController_io_ReadIn_1_valid	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire  ReadController_io_ReadIn_1_valid;$/;"	n
ReadController_io_ReadOut_0_RouteID	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire [15:0] ReadController_io_ReadOut_0_RouteID;$/;"	n
ReadController_io_ReadOut_0_data	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire [15:0] ReadController_io_ReadOut_0_data;$/;"	n
ReadController_io_ReadOut_0_valid	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire  ReadController_io_ReadOut_0_valid;$/;"	n
ReadController_io_ReadOut_1_RouteID	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire [15:0] ReadController_io_ReadOut_1_RouteID;$/;"	n
ReadController_io_ReadOut_1_data	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire [15:0] ReadController_io_ReadOut_1_data;$/;"	n
ReadController_io_ReadOut_1_valid	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire  ReadController_io_ReadOut_1_valid;$/;"	n
ReadController_reset	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire  ReadController_reset;$/;"	n
ReadEntryIO	src/main/scala/memory/ReadMemoryController.scala	/^abstract class ReadEntryIO()(implicit val p: Parameters)$/;"	c
ReadIn	src/main/scala/arbiters/ReadArbiter.scala	/^  val ReadIn    = Vec(NReads,Flipped(Decoupled(new ReadReq())))$/;"	l
ReadIn	src/main/scala/arbiters/TypeStackFile.scala	/^    val ReadIn = Vec(NReads, Flipped(Decoupled(new ReadReq())))$/;"	l
ReadIn	src/main/scala/memory/ReadMemoryController.scala	/^    val ReadIn = Vec(NumOps, Flipped(Decoupled(new ReadReq())))$/;"	l
ReadIn	src/main/scala/memory/UnifiedController.scala	/^    val ReadIn = Vec(NReads, Flipped(Decoupled(new ReadReq())))$/;"	l
ReadIn	src/main/scala/memory/UnifiedTypController.scala	/^    val ReadIn = Vec(NReads, Flipped(Decoupled(new ReadReq())))$/;"	l
ReadIn	src/main/scala/muxes/TestMux.scala	/^    val ReadIn    = Input(Vec(NReads,new ReadResp()))$/;"	l
ReadInputChosen	src/main/scala/arbiters/ReadArbiter.scala	/^  val ReadInputChosen  = RegNext(init = 0.U(max(1,log2Ceil(NReads)).W),next=ReadReqArbiter.io.chosen)$/;"	l
ReadInputValid	src/main/scala/arbiters/ReadArbiter.scala	/^  val ReadInputValid   = RegNext(init  = false.B,next=ReadReqArbiter.io.out.valid)$/;"	l
ReadMemReq	src/main/scala/memory/ReadWriteArbiter.scala	/^    val ReadMemReq = Flipped(Decoupled(new MemReq))$/;"	l
ReadMemResp	src/main/scala/memory/ReadWriteArbiter.scala	/^    val ReadMemResp = Valid(new MemResp)$/;"	l
ReadMemoryController	src/main/scala/memory/ReadMemoryController.scala	/^class ReadMemoryController$/;"	c
ReadMemoryControllerTester	src/test/scala/memory/ReadMemoryController.scala	/^class ReadMemoryControllerTester extends  FlatSpec with Matchers {$/;"	c
ReadMemoryControllerTests	src/test/scala/memory/ReadMemoryController.scala	/^class ReadMemoryControllerTests(c: ReadMemoryController)$/;"	c
ReadOut	src/main/scala/arbiters/ReadArbiter.scala	/^  val ReadOut   = Vec(NReads,Output(new ReadResp()))$/;"	l
ReadOut	src/main/scala/arbiters/TypeStackFile.scala	/^    val ReadOut = Vec(NReads, Output(new ReadResp()))$/;"	l
ReadOut	src/main/scala/memory/ReadMemoryController.scala	/^    val ReadOut = Vec(NumOps, Output(new ReadResp()))$/;"	l
ReadOut	src/main/scala/memory/UnifiedController.scala	/^    val ReadOut = Vec(NReads, Output(new ReadResp()))$/;"	l
ReadOut	src/main/scala/memory/UnifiedTypController.scala	/^    val ReadOut = Vec(NReads, Output(new ReadResp()))$/;"	l
ReadOut	src/main/scala/muxes/TestMux.scala	/^    val ReadOut = Output(new ReadResp())$/;"	l
ReadOutputChosen	src/main/scala/arbiters/ReadArbiter.scala	/^  val ReadOutputChosen = RegNext(init = 0.U(max(1,log2Ceil(NReads)).W), next = ReadInputChosen)$/;"	l
ReadOutputValid	src/main/scala/arbiters/ReadArbiter.scala	/^  val ReadOutputValid  = RegNext(init = false.B, next = ReadInputValid)$/;"	l
ReadReq	src/main/scala/arbiters/TypeStackFile.scala	/^  val ReadReq     = RegNext(next = ReadController.io.MemReq.bits)$/;"	l
ReadReq	src/main/scala/interfaces/interfaces.scala	/^class ReadReq(implicit p: Parameters)$/;"	c
ReadReq	src/main/scala/interfaces/interfaces.scala	/^object ReadReq {$/;"	c
ReadReqArbiter	src/main/scala/arbiters/ReadArbiter.scala	/^  val ReadReqArbiter  = Module(new RRArbiter(new ReadReq(),NReads));$/;"	l
ReadReq_tag	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  reg [7:0] ReadReq_tag;$/;"	r
ReadResp	src/main/scala/interfaces/interfaces.scala	/^class ReadResp(implicit p: Parameters)$/;"	c
ReadResp	src/main/scala/interfaces/interfaces.scala	/^object ReadResp {$/;"	c
ReadRespDeMux	src/main/scala/arbiters/ReadArbiter.scala	/^  val ReadRespDeMux   = Module(new Demux(new ReadResp(),NReads));$/;"	l
ReadTable	src/main/scala/memory/ReadMemoryController.scala	/^  val ReadTable = for (i <- 0 until MLPSize) yield {$/;"	l
ReadTable	src/main/scala/memory/ReadTypMemoryController.scala	/^  val ReadTable = for (i <- 0 until MLPSize) yield {$/;"	l
ReadTableEntry	src/main/scala/memory/ReadMemoryController.scala	/^class ReadTableEntry(id: Int)(implicit p: Parameters) extends ReadEntryIO()(p) with UniformPrintfs {$/;"	c
ReadTableEntryTester	src/test/scala/memory/MSHR.scala	/^class ReadTableEntryTester extends  FlatSpec with Matchers {$/;"	c
ReadTableEntryTests	src/test/scala/memory/MSHR.scala	/^class ReadTableEntryTests(c: ReadTableEntry)$/;"	c
ReadTable_0_clock	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire  ReadTable_0_clock;$/;"	n
ReadTable_0_io_MemReq_bits_addr	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire [15:0] ReadTable_0_io_MemReq_bits_addr;$/;"	n
ReadTable_0_io_MemReq_bits_tag	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire [7:0] ReadTable_0_io_MemReq_bits_tag;$/;"	n
ReadTable_0_io_MemReq_ready	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire  ReadTable_0_io_MemReq_ready;$/;"	n
ReadTable_0_io_MemReq_valid	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire  ReadTable_0_io_MemReq_valid;$/;"	n
ReadTable_0_io_MemResp_data	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire [15:0] ReadTable_0_io_MemResp_data;$/;"	n
ReadTable_0_io_MemResp_valid	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire  ReadTable_0_io_MemResp_valid;$/;"	n
ReadTable_0_io_NodeReq_bits_RouteID	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire [15:0] ReadTable_0_io_NodeReq_bits_RouteID;$/;"	n
ReadTable_0_io_NodeReq_bits_address	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire [15:0] ReadTable_0_io_NodeReq_bits_address;$/;"	n
ReadTable_0_io_NodeReq_ready	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire  ReadTable_0_io_NodeReq_ready;$/;"	n
ReadTable_0_io_NodeReq_valid	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire  ReadTable_0_io_NodeReq_valid;$/;"	n
ReadTable_0_io_free	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire  ReadTable_0_io_free;$/;"	n
ReadTable_0_io_output_bits_RouteID	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire [15:0] ReadTable_0_io_output_bits_RouteID;$/;"	n
ReadTable_0_io_output_bits_data	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire [15:0] ReadTable_0_io_output_bits_data;$/;"	n
ReadTable_0_io_output_bits_valid	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire  ReadTable_0_io_output_bits_valid;$/;"	n
ReadTable_0_io_output_ready	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire  ReadTable_0_io_output_ready;$/;"	n
ReadTable_0_io_output_valid	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire  ReadTable_0_io_output_valid;$/;"	n
ReadTable_0_reset	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire  ReadTable_0_reset;$/;"	n
ReadTable_1_clock	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire  ReadTable_1_clock;$/;"	n
ReadTable_1_io_MemReq_bits_addr	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire [15:0] ReadTable_1_io_MemReq_bits_addr;$/;"	n
ReadTable_1_io_MemReq_bits_tag	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire [7:0] ReadTable_1_io_MemReq_bits_tag;$/;"	n
ReadTable_1_io_MemReq_ready	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire  ReadTable_1_io_MemReq_ready;$/;"	n
ReadTable_1_io_MemReq_valid	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire  ReadTable_1_io_MemReq_valid;$/;"	n
ReadTable_1_io_MemResp_data	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire [15:0] ReadTable_1_io_MemResp_data;$/;"	n
ReadTable_1_io_MemResp_valid	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire  ReadTable_1_io_MemResp_valid;$/;"	n
ReadTable_1_io_NodeReq_bits_RouteID	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire [15:0] ReadTable_1_io_NodeReq_bits_RouteID;$/;"	n
ReadTable_1_io_NodeReq_bits_address	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire [15:0] ReadTable_1_io_NodeReq_bits_address;$/;"	n
ReadTable_1_io_NodeReq_ready	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire  ReadTable_1_io_NodeReq_ready;$/;"	n
ReadTable_1_io_NodeReq_valid	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire  ReadTable_1_io_NodeReq_valid;$/;"	n
ReadTable_1_io_free	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire  ReadTable_1_io_free;$/;"	n
ReadTable_1_io_output_bits_RouteID	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire [15:0] ReadTable_1_io_output_bits_RouteID;$/;"	n
ReadTable_1_io_output_bits_data	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire [15:0] ReadTable_1_io_output_bits_data;$/;"	n
ReadTable_1_io_output_bits_valid	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire  ReadTable_1_io_output_bits_valid;$/;"	n
ReadTable_1_io_output_ready	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire  ReadTable_1_io_output_ready;$/;"	n
ReadTable_1_io_output_valid	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire  ReadTable_1_io_output_valid;$/;"	n
ReadTable_1_reset	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire  ReadTable_1_reset;$/;"	n
ReadTypMemoryController	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^module ReadTypMemoryController($/;"	m
ReadTypMemoryController	src/main/scala/memory/ReadTypMemoryController.scala	/^class ReadTypMemoryController(NumOps: Int,$/;"	c
ReadTypMemoryControllerTester	src/test/scala/memory/MemoryController.scala	/^class ReadTypMemoryControllerTester extends  FlatSpec with Matchers {$/;"	c
ReadTypMemoryControllerTests	src/test/scala/memory/MemoryController.scala	/^class ReadTypMemoryControllerTests(c: ReadTypMemoryController)$/;"	c
ReadTypTableEntry	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^module ReadTypTableEntry($/;"	m
ReadTypTableEntry	src/main/scala/memory/ReadTypMemoryController.scala	/^class ReadTypTableEntry(id: Int)(implicit p: Parameters)$/;"	c
ReadTypTableEntryTester	src/test/scala/memory/ReadTypTableEntry.scala	/^class ReadTypTableEntryTester extends  FlatSpec with Matchers {$/;"	c
ReadTypTableEntryTests	src/test/scala/memory/ReadTypTableEntry.scala	/^class ReadTypTableEntryTests(c: ReadTypTableEntry)$/;"	c
ReadTypTableEntry_1	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^module ReadTypTableEntry_1($/;"	m
ReadValid	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  reg  ReadValid;$/;"	r
ReadValid	src/main/scala/arbiters/TypeStackFile.scala	/^  val ReadValid   = RegNext(init  = false.B, next=ReadController.io.MemReq.fire())$/;"	l
ReadWriteArbiter	src/main/scala/memory/ReadWriteArbiter.scala	/^class ReadWriteArbiter()$/;"	c
ReadWriteArbiter	src/main/scala/memory/UnifiedController.scala	/^  val ReadWriteArbiter = Module(RWArbiter)$/;"	l
ReadWriteArbiter	src/main/scala/memory/UnifiedTypController.scala	/^  val ReadWriteArbiter = Module(RWArbiter)$/;"	l
ReadWriteArbiterTester	src/test/scala/memory/deprecated/ReadWriteArbiter.scala	/^class ReadWriteArbiterTester extends org.scalatest.FlatSpec {$/;"	c
ReadWriteArbiterTester01	src/test/scala/memory/ReadWriteArbiter01.scala	/^class ReadWriteArbiterTester01 extends  FlatSpec with Matchers {$/;"	c
ReadWriteArbiterTests	src/test/scala/memory/deprecated/ReadWriteArbiter.scala	/^class ReadWriteArbiterTests(c: => ReadWriteArbiter) (implicit p: config.Parameters)$/;"	c
ReadWriteArbiterTests01	src/test/scala/memory/ReadWriteArbiter01.scala	/^class ReadWriteArbiterTests01(c: => ReadWriteArbiter) (implicit p: config.Parameters)$/;"	c
Reattach	src/main/scala/concurrent/Reattach.scala	/^class Reattach(val NumPredOps: Int, ID: Int)$/;"	c
ReattachIO	src/main/scala/concurrent/Reattach.scala	/^class ReattachIO(val NumPredOps: Int)(implicit p: Parameters)$/;"	c
ReattachNode	src/main/scala/concurrent/Reattach.scala	/^class ReattachNode(val NumOuts: Int = 1, ID: Int)$/;"	c
ReattachNodeIO	src/main/scala/concurrent/Reattach.scala	/^class ReattachNodeIO(val NumOuts: Int)(implicit p: Parameters)$/;"	c
ReattachNodeSYNC	src/main/scala/concurrent/Reattach.scala	/^class ReattachNodeSYNC(val NumPredIn: Int = 1, ID: Int)$/;"	c
ReattachNodeSYNCIO	src/main/scala/concurrent/Reattach.scala	/^class ReattachNodeSYNCIO(val NumPredIn: Int)(implicit p: Parameters)$/;"	c
ReattachTest01	src/test/scala/concurrent/ReattachTest.scala	/^class ReattachTest01(c: Reattach) extends PeekPokeTester(c) {$/;"	c
ReattachTester	src/test/scala/concurrent/ReattachTest.scala	/^class ReattachTester extends FlatSpec with Matchers {$/;"	c
RegFile	src/main/scala/arbiters/ReadArbiter.scala	/^  val RegFile     = Module(new RFile(Size)(p))$/;"	l
RegFile	src/main/scala/arbiters/TypeStackFile.scala	/^  val RegFile = Module(new RFile(Size*(1<<tlen))(p))$/;"	l
RegFileBundle	src/main/scala/regfile/RegFile.scala	/^class RegFileBundle(size: Int)(implicit p: Parameters) extends CoreBundle()(p) {$/;"	c
RegFile_clock	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire  RegFile_clock;$/;"	n
RegFile_io_raddr1	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire [1:0] RegFile_io_raddr1;$/;"	n
RegFile_io_raddr2	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire [1:0] RegFile_io_raddr2;$/;"	n
RegFile_io_rdata1	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire [15:0] RegFile_io_rdata1;$/;"	n
RegFile_io_waddr	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire [1:0] RegFile_io_waddr;$/;"	n
RegFile_io_wdata	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire [15:0] RegFile_io_wdata;$/;"	n
RegFile_io_wen	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire  RegFile_io_wen;$/;"	n
RegFile_io_wmask	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire [1:0] RegFile_io_wmask;$/;"	n
RegisterFile	src/main/scala/generator/cilk/bgemm.scala	/^	val RegisterFile = Module(new TypeStackFile(ID=0,Size=32,NReads=2,NWrites=2)$/;"	l
RegisterFile	src/main/scala/generator/cilk/bgemm_detach1.scala	/^	val RegisterFile = Module(new TypeStackFile(ID=0,Size=32,NReads=2,NWrites=2)$/;"	l
RegisterFile	src/main/scala/generator/cilk/bgemm_detach2.scala	/^	val RegisterFile = Module(new TypeStackFile(ID=0,Size=32,NReads=2,NWrites=2)$/;"	l
RegisterFile	src/main/scala/generator/cilk/bgemm_detach3.scala	/^	val RegisterFile = Module(new TypeStackFile(ID=0,Size=32,NReads=3,NWrites=1)$/;"	l
RegisterFile	src/main/scala/generator/cilk/cilk_for_test01.scala	/^	val RegisterFile = Module(new TypeStackFile(ID=0,Size=32,NReads=1,NWrites=1)$/;"	l
RegisterFile	src/main/scala/generator/cilk/cilk_for_test02.scala	/^	val RegisterFile = Module(new TypeStackFile(ID=0,Size=32,NReads=2,NWrites=2)$/;"	l
RegisterFile	src/main/scala/generator/cilk/cilk_for_test02_mul.scala	/^	val RegisterFile = Module(new TypeStackFile(ID=0,Size=32,NReads=1,NWrites=1)$/;"	l
RegisterFile	src/main/scala/generator/cilk/cilk_for_test04.scala	/^	val RegisterFile = Module(new TypeStackFile(ID=0,Size=32,NReads=2,NWrites=2)$/;"	l
RegisterFile	src/main/scala/generator/cilk/cilk_for_test05.scala	/^	val RegisterFile = Module(new TypeStackFile(ID=0,Size=32,NReads=2,NWrites=2)$/;"	l
RegisterFile	src/main/scala/generator/cilk/cilk_for_test05_detach.scala	/^	val RegisterFile = Module(new TypeStackFile(ID=0,Size=32,NReads=6,NWrites=2)$/;"	l
RegisterFile	src/main/scala/generator/cilk/cilk_for_test06.scala	/^  val RegisterFile = Module(new TypeStackFile(ID = 0, Size = 32, NReads = 2, NWrites = 2)$/;"	l
RegisterFile	src/main/scala/generator/cilk/cilk_for_test06_detach.scala	/^  val RegisterFile = Module(new TypeStackFile(ID = 0, Size = 32, NReads = 2, NWrites = 2)$/;"	l
RegisterFile	src/main/scala/generator/cilk/cilk_for_test06_detach_2.scala	/^  val RegisterFile = Module(new TypeStackFile(ID = 0, Size = 32, NReads = 2, NWrites = 1)$/;"	l
RegisterFile	src/main/scala/generator/cilk/cilk_for_test07.scala	/^	val RegisterFile = Module(new TypeStackFile(ID=0,Size=32,NReads=2,NWrites=2)$/;"	l
RegisterFile	src/main/scala/generator/cilk/cilk_for_test08.scala	/^	val RegisterFile = Module(new TypeStackFile(ID=0,Size=32,NReads=2,NWrites=2)$/;"	l
RegisterFile	src/main/scala/generator/cilk/cilk_for_test08_detach.scala	/^	val RegisterFile = Module(new TypeStackFile(ID=0,Size=32,NReads=3,NWrites=3)$/;"	l
RegisterFile	src/main/scala/generator/cilk/cilk_for_test09.scala	/^  val RegisterFile = Module(new TypeStackFile(ID = 0, Size = 32, NReads = 2, NWrites = 2)$/;"	l
RegisterFile	src/main/scala/generator/cilk/cilk_for_test09_inner.scala	/^	val RegisterFile = Module(new TypeStackFile(ID=0,Size=32,NReads=2,NWrites=2)$/;"	l
RegisterFile	src/main/scala/generator/cilk/cilk_for_test12.scala	/^  val RegisterFile = Module(new TypeStackFile(ID=0,Size=32,NReads=2,NWrites=2)$/;"	l
RegisterFile	src/main/scala/generator/cilk/cilk_for_test12_detach1.scala	/^  val RegisterFile = Module(new TypeStackFile(ID=0,Size=32,NReads=2,NWrites=2)$/;"	l
RegisterFile	src/main/scala/generator/cilk/cilk_for_test12_detach2.scala	/^  val RegisterFile = Module(new TypeStackFile(ID=0,Size=32,NReads=1,NWrites=1)$/;"	l
RegisterFile	src/main/scala/generator/cilk/cilk_for_test12_detach3.scala	/^  val RegisterFile = Module(new TypeStackFile(ID=0,Size=32,NReads=1,NWrites=1)$/;"	l
RegisterFile	src/main/scala/generator/cilk/cilk_spawn_test01.scala	/^	val RegisterFile = Module(new TypeStackFile(ID=0,Size=32,NReads=1,NWrites=1)$/;"	l
RegisterFile	src/main/scala/generator/cilk/cilk_spawn_test02.scala	/^	val RegisterFile = Module(new TypeStackFile(ID=0,Size=32,NReads=2,NWrites=2)$/;"	l
RegisterFile	src/main/scala/generator/cilk/fib.scala	/^  val RegisterFile = Module(new TypeStackFile(ID=0,Size=32,NReads=2,NWrites=2)$/;"	l
RegisterFile	src/main/scala/generator/cilk/mergesort.scala	/^  val RegisterFile = Module(new TypeStackFile(ID=0,Size=32,NReads=2,NWrites=5)$/;"	l
RegisterFile	src/main/scala/generator/cilk/mergesort_merge.scala	/^  val RegisterFile = Module(new TypeStackFile(ID=0,Size=32,NReads=11,NWrites=2)$/;"	l
RegisterFile	src/main/scala/generator/cilk/stencil.scala	/^    val RegisterFile = Module(new TypeStackFile(ID=0,Size=32,NReads=2,NWrites=2)$/;"	l
RegisterFile	src/main/scala/generator/cilk/stencil_detach1.scala	/^  val RegisterFile = Module(new TypeStackFile(ID = 0, Size = 32, NReads = 1, NWrites = 1)$/;"	l
RegisterFile	src/main/scala/generator/cilk/stencil_inner.scala	/^  val RegisterFile = Module(new TypeStackFile(ID = 0, Size = 32, NReads = 2, NWrites = 1)$/;"	l
RegisterFile	src/main/scala/generator/test01.scala	/^  val RegisterFile = Module(new TypeStackFile(ID = 0, Size = 32, NReads = 2, NWrites = 2)$/;"	l
RegisterFile	src/main/scala/generator/test02.scala	/^	val RegisterFile = Module(new TypeStackFile(ID=0,Size=32,NReads=2,NWrites=2)$/;"	l
RegisterFile	src/main/scala/generator/test03.scala	/^  val RegisterFile = Module(new TypeStackFile(ID = 0, Size = 32, NReads = 2, NWrites = 2)$/;"	l
RegisterFile	src/main/scala/generator/test04.scala	/^	val RegisterFile = Module(new TypeStackFile(ID=0,Size=32,NReads=2,NWrites=2)$/;"	l
RegisterFile	src/main/scala/generator/test05.scala	/^  val RegisterFile = Module(new TypeStackFile(ID=0,Size=32,NReads=3,NWrites=2)$/;"	l
RegisterFile	src/main/scala/generator/test05b.scala	/^  val RegisterFile = Module(new TypeStackFile(ID=0,Size=32,NReads=2,NWrites=1)$/;"	l
RegisterFile	src/main/scala/generator/test05c.scala	/^  val RegisterFile = Module(new TypeStackFile(ID=0,Size=32,NReads=2,NWrites=2)$/;"	l
RegisterFile	src/main/scala/generator/test06.scala	/^	val RegisterFile = Module(new TypeStackFile(ID=0,Size=64,NReads=3,NWrites=3)$/;"	l
RegisterFile	src/main/scala/generator/test08.scala	/^	val RegisterFile = Module(new TypeStackFile(ID=0,Size=32,NReads=2,NWrites=2)$/;"	l
RegisterFile	src/main/scala/generator/test09.scala	/^	val RegisterFile = Module(new TypeStackFile(ID=0,Size=32,NReads=2,NWrites=2)$/;"	l
RegisterFile	src/main/scala/generator/test10.scala	/^	val RegisterFile = Module(new TypeStackFile(ID=0,Size=32,NReads=2,NWrites=1)$/;"	l
RegisterFile	src/main/scala/generator/test11.scala	/^	val RegisterFile = Module(new TypeStackFile(ID=0,Size=32,NReads=2,NWrites=1)$/;"	l
RegisterFile	src/main/scala/generator/test11_add.scala	/^	val RegisterFile = Module(new TypeStackFile(ID=0,Size=32,NReads=2,NWrites=2)$/;"	l
RegisterFile	src/main/scala/generator/test12.scala	/^	val RegisterFile = Module(new TypeStackFile(ID=0,Size=32,NReads=2,NWrites=2)$/;"	l
RegisterFile	src/main/scala/generator/test12_inner.scala	/^	val RegisterFile = Module(new TypeStackFile(ID=0,Size=32,NReads=2,NWrites=2)$/;"	l
RegisterFile	src/main/scala/generator/test14.scala	/^	val RegisterFile = Module(new TypeStackFile(ID=0,Size=32,NReads=2,NWrites=2)$/;"	l
RegisterFile	src/main/scala/generator/test14_inner.scala	/^	val RegisterFile = Module(new TypeStackFile(ID=0,Size=32,NReads=2,NWrites=2)$/;"	l
RegisterFile	src/main/scala/generator/test15.scala	/^  val RegisterFile = Module(new TypeStackFile(ID=0,Size=32,NReads=3,NWrites=3)$/;"	l
RelTests	src/test/scala/node/relayNode.scala	/^class RelTests extends  FlatSpec with Matchers {$/;"	c
RelayDecoupledNode	src/main/scala/node/Relay.scala	/^class RelayDecoupledNode(val NumConsum: Int = 2)(implicit p : Parameters) extends RelayNode(NumConsum)(p){$/;"	c
RelayNode	src/main/scala/node/Relay.scala	/^abstract class RelayNode(NumConsum: Int)(implicit val p: Parameters) extends Module with CoreParams {$/;"	c
RelayOutput	src/main/scala/interfaces/interfaces.scala	/^class RelayOutput(implicit p: Parameters) extends CoreBundle()(p) {$/;"	c
RelayTester	src/test/scala/node/relayNode.scala	/^class RelayTester(df: RelayDecoupledNode)(implicit p: config.Parameters) extends PeekPokeTester(df)  {$/;"	c
ReqAddress	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  reg [15:0] ReqAddress;$/;"	r
ReqAddress	src/main/scala/memory/ReadMemoryController.scala	/^  val ReqAddress = RegInit(0.U(xlen.W))$/;"	l
ReqAddress	src/main/scala/memory/ReadTypMemoryController.scala	/^  val ReqAddress = RegInit(0.U(xlen.W))$/;"	l
ReqAddress	src/main/scala/memory/WriteMemoryController.scala	/^  val ReqAddress = RegInit(0.U(xlen.W))$/;"	l
ReqAddress	src/main/scala/memory/WriteTypMemoryController.scala	/^  val ReqAddress = RegInit(0.U(xlen.W))$/;"	l
ReqAddress	src/main/scala/node/LoadMaskNode.scala	/^  val ReqAddress   = RegNext((GepOperand >> log2Ceil(xlen\/8)) << log2Ceil(xlen\/8), 0.U(xlen.W))$/;"	l
ReqValid	src/main/scala/memory/ReadMemoryController.scala	/^  val ReqValid = RegInit(false.B)$/;"	l
ReqValid	src/main/scala/memory/WriteMemoryController.scala	/^  val ReqValid = RegInit(false.B)$/;"	l
ReqValid	src/main/scala/node/LoadMaskNode.scala	/^  val ReqValid     = RegInit(false.B)$/;"	l
ReqValid	src/main/scala/node/StoreNode.scala	/^  val ReqValid = RegInit(false.B)$/;"	l
Reset	src/main/scala/node/HandShaking.scala	/^  def Reset(): Unit = {$/;"	m
ResetEnable	src/main/scala/node/HandShaking.scala	/^  def ResetEnable(): Unit = {$/;"	m
Result	src/main/scala/loop/Example1.scala	/^  val Result = Decoupled(gen)$/;"	l
RetNode	src/main/scala/node/RetNode.scala	/^class RetNode(NumPredOps: Int = 0, retTypes: Seq[Int], ID: Int)$/;"	c
RetNode	src/main/scala/node/RetNode.scala	/^class RetNode(retTypes: Seq[Int], ID: Int)$/;"	c
RetNodeIO	src/main/scala/node/RetNode.scala	/^class RetNodeIO(val NumPredOps: Int, val retTypes: Seq[Int])(implicit p: Parameters)$/;"	c
RetNodeIO	src/main/scala/node/RetNode.scala	/^class RetNodeIO(val retTypes: Seq[Int])(implicit p: Parameters)$/;"	c
RightIO	src/main/scala/FPU/FPCompare.scala	/^  val RightIO = Flipped(Decoupled(new DataBundle()))$/;"	l
RightIO	src/main/scala/FPU/FPComputeNode.scala	/^  val RightIO = Flipped(Decoupled(new DataBundle()))$/;"	l
RightIO	src/main/scala/node/BranchNode.scala	/^  val RightIO = Flipped(Decoupled(new DataBundle))$/;"	l
RightIO	src/main/scala/node/ComputeNode.scala	/^  val RightIO = Flipped(Decoupled(new DataBundle()))$/;"	l
RightIO	src/main/scala/node/IcmpNode.scala	/^  val RightIO = Flipped(Decoupled(new DataBundle))$/;"	l
RightIO	src/main/scala/node/TypCompute.scala	/^  val RightIO = Flipped(Decoupled(new TypBundle))$/;"	l
RouteID	src/main/scala/interfaces/interfaces.scala	/^  val RouteID = UInt (glen.W)$/;"	l
RouteID	src/main/scala/interfaces/interfaces.scala	/^trait RouteID extends CoreBundle {$/;"	t
RouteQ	src/main/scala/FPU/SharedDiv.scala	/^  val RouteQ = Module(new Queue(UInt(tlen.W), PipeDepth))$/;"	l
S	src/main/scala/FPU/FPALU.scala	/^  val S = new FType(8, 24)$/;"	l
SALU	src/main/scala/node/Alu.scala	/^class SALU(val xlen: Int, val opCode: String) extends Module {$/;"	c
SBTCMD	scripts/TypeStackFile.py	/^SBTCMD = "sbt \\"test:run-main " + DESIGN + " -td "+TARGETDIR+" -tbn verilator -tts 1"$/;"	v
SCMP	src/main/scala/node/Comparision.scala	/^class SCMP(val xlen: Int, val opCode: String) extends Module {$/;"	c
SEL	src/main/scala/muxes/TestMux.scala	/^    val SEL = Input(UInt(max(1, log2Ceil(NReads)).W))$/;"	l
SGE	src/main/scala/node/Comparision.scala	/^  val SGE     = 8$/;"	l
SGT	src/main/scala/node/Comparision.scala	/^  val SGT     = 7$/;"	l
SLE	src/main/scala/node/Comparision.scala	/^  val SLE     = 10$/;"	l
SLT	src/main/scala/node/Comparision.scala	/^  val SLT     = 9$/;"	l
SP	src/main/scala/stack/StackAlloca.scala	/^  val SP = RegInit(0.U)$/;"	l
ST_CTIME	scripts/TypeStackFile.py	/^from stat import S_ISREG, ST_CTIME, ST_MODE$/;"	i
ST_MODE	scripts/TypeStackFile.py	/^from stat import S_ISREG, ST_CTIME, ST_MODE$/;"	i
S_ISREG	scripts/TypeStackFile.py	/^from stat import S_ISREG, ST_CTIME, ST_MODE$/;"	i
Sample01Tester	src/test/scala/dataflow/01-sample.scala	/^class Sample01Tester(df: AddDF)$/;"	c
Sample01Tests	src/test/scala/dataflow/01-sample.scala	/^class Sample01Tests extends  FlatSpec with Matchers {$/;"	c
Sample02Tester	src/test/scala/dataflow/02-alloca.scala	/^class Sample02Tester(df: StackDF)$/;"	c
Sample02Tests	src/test/scala/dataflow/02-alloca.scala	/^class Sample02Tests extends  FlatSpec with Matchers {$/;"	c
SelBits	src/main/scala/muxes/Muxes.scala	/^  val SelBits = max(1, log2Ceil(BaseSize))$/;"	l
SelHIndex	src/main/scala/muxes/Muxes.scala	/^  var SelHIndex = 0$/;"	l
SelectNode	src/main/scala/node/SelectNode.scala	/^class SelectNode(val NumOuts: Int, val ID: Int)(implicit val p: Parameters)$/;"	c
SelectNodeIO	src/main/scala/node/SelectNode.scala	/^class SelectNodeIO(val nout: Int)$/;"	c
SetLessThan	src/main/scala/node/Alu.scala	/^  val SetLessThan = 11$/;"	l
SetLessThanUnsigned	src/main/scala/node/Alu.scala	/^  val SetLessThanUnsigned = 12$/;"	l
SextNode	src/main/scala/node/SextNode.scala	/^class SextNode(val SrcW: Int, val DesW: Int, val NumOuts: Int)(implicit val p: Parameters)$/;"	c
SextNodeIO	src/main/scala/node/SextNode.scala	/^class SextNodeIO(val src: Int, val des: Int, val nout: Int)$/;"	c
SharedDiv	src/main/scala/dataflow/SharedFPDiv.scala	/^	val SharedDiv = Module(new SharedFPU(NumOps=1, 32)(t=S))$/;"	l
SharedFPU	src/main/scala/FPU/SharedDiv.scala	/^class SharedFPU(NumOps: Int, PipeDepth: Int)(t: FType)$/;"	c
SharedFPUIO	src/main/scala/FPU/SharedDiv.scala	/^class SharedFPUIO(NumOps: Int, argTypes: Seq[Int])$/;"	c
SharedFPUTester	src/test/scala/FPU/SharedFPDiv.scala	/^class SharedFPUTester extends  FlatSpec with Matchers {$/;"	c
SharedFPUTests	src/test/scala/FPU/SharedFPDiv.scala	/^class SharedFPUTests(c: SharedFPU)$/;"	c
ShiftLeft	src/main/scala/node/Alu.scala	/^  val ShiftLeft = 7$/;"	l
ShiftRight	src/main/scala/node/Alu.scala	/^  val ShiftRight = 8$/;"	l
ShiftRightArithmetic	src/main/scala/node/Alu.scala	/^  val ShiftRightArithmetic = 10$/;"	l
ShiftRightLogical	src/main/scala/node/Alu.scala	/^  val ShiftRightLogical = 9$/;"	l
SimpleReg	src/main/scala/accel/SimpleReg.scala	/^class SimpleReg(cNum : Int, sNum: Int)(implicit p: Parameters) extends SimpleRegIO(cNum,sNum)(p) {$/;"	c
SimpleRegIO	src/main/scala/accel/SimpleReg.scala	/^abstract class SimpleRegIO(cNum : Int, sNum: Int)(implicit val p: Parameters) extends Module with CoreParams$/;"	c
SinglePrecisionFPConfig	src/main/scala/config/FPConfigs.scala	/^class SinglePrecisionFPConfig extends Config((site, here, up) => {$/;"	c
SplitCall	src/main/scala/junctions/SplitDecoupled.scala	/^class SplitCall(val argTypes: Seq[Int])(implicit p: Parameters) extends Module {$/;"	c
SplitCallIO	src/main/scala/junctions/SplitDecoupled.scala	/^class SplitCallIO(val argTypes: Seq[Int])(implicit p: Parameters) extends Bundle {$/;"	c
SplitCallNew	src/main/scala/junctions/SplitDecoupled.scala	/^class SplitCallNew(val argTypes: Seq[Int])(implicit p: Parameters) extends Module {$/;"	c
SplitCallNewIO	src/main/scala/junctions/SplitDecoupled.scala	/^class SplitCallNewIO(val argTypes: Seq[Int])(implicit p: Parameters) extends Bundle {$/;"	c
SplitCustom	src/main/scala/junctions/SplitDecoupled.scala	/^class SplitCustom(val argTypes: Seq[Bits])(implicit p: Parameters) extends Module {$/;"	c
SplitCustomIO	src/main/scala/junctions/SplitDecoupled.scala	/^class SplitCustomIO(argTypes: Seq[Bits])(implicit p: Parameters) extends Bundle {$/;"	c
SplitCustomTester	src/test/scala/junctions/SplitDecoupledTest.scala	/^class SplitCustomTester(c: SplitCustom) extends PeekPokeTester(c) {$/;"	c
SplitData	src/main/scala/junctions/SplitDecoupled.scala	/^class SplitData(val argTypes: Seq[Int])(implicit p: Parameters) extends Module {$/;"	c
SplitDataIO	src/main/scala/junctions/SplitDecoupled.scala	/^class SplitDataIO(val argTypes: Seq[Int])(implicit p: Parameters) extends Bundle {$/;"	c
SplitDataTester	src/test/scala/junctions/SplitDecoupledTest.scala	/^class SplitDataTester(c: SplitData) extends PeekPokeTester(c) {$/;"	c
SplitDecoupledTests	src/test/scala/junctions/SplitDecoupledTest.scala	/^class SplitDecoupledTests extends FreeSpec with Matchers {$/;"	c
SplitOut	src/main/scala/node/CallNode.scala	/^  val SplitOut = Module(new SplitCall(retTypes))$/;"	l
Stack	src/main/scala/stack/StackAlloca.scala	/^class Stack(NumOps: Int)$/;"	c
Stack	src/test/scala/generator/cilk/fib_test.scala	/^  val Stack = Module(new InterleavedStack((1 << tlen)*16, List(4,4), 2*NumFibs))$/;"	l
Stack	src/test/scala/generator/cilk/fib_test.scala	/^  val Stack = Module(new StackMem((1 << tlen)*4))$/;"	l
Stack	src/test/scala/generator/cilk/mergesort_test.scala	/^  val Stack = Module(new StackMem((1 << tlen)*4))$/;"	l
StackArb	src/test/scala/generator/cilk/fib_test.scala	/^  val StackArb = Module(new MemArbiter((2*NumFibs)))$/;"	l
StackArb	src/test/scala/generator/cilk/mergesort_test.scala	/^  val StackArb = Module(new MemArbiter(2*NumMergesorts))$/;"	l
StackCtrl	src/main/scala/generator/cilk/mergesort.scala	/^  val StackCtrl = Module(new UnifiedController(ID=0,Size=64*1024,NReads=2,NWrites=5)$/;"	l
StackCtrl	src/main/scala/generator/cilk/mergesort_merge.scala	/^  val StackCtrl = Module(new ReadMemoryController(NumOps=7,BaseSize=2,NumEntries=2))$/;"	l
StackCtrl	src/main/scala/generator/cilk/mergesort_merge.scala	/^  val StackCtrl = Module(new UnifiedController(ID=0,Size=64*1024,NReads=7,NWrites=1)$/;"	l
StackDF	src/main/scala/dataflow/AllocaDF.scala	/^class StackDF(implicit p: Parameters) extends StackDFIO() {$/;"	c
StackDFIO	src/main/scala/dataflow/AllocaDF.scala	/^abstract class StackDFIO(implicit val p: Parameters) extends Module with CoreParams {$/;"	c
StackFile	src/main/scala/dataflow/DataFlow.scala	/^	val StackFile = Module(new TypeStackFile(ID=0,Size=32,NReads=1,NWrites=1)$/;"	l
StackFile	src/main/scala/dataflow/MemDataFlow.scala	/^	val StackFile = Module(new TypeStackFile(ID=0,Size=32,NReads=ops*2,NWrites=ops*2)$/;"	l
StackFile	src/main/scala/dataflow/TypeMemDataFlow.scala	/^	val StackFile = Module(new TypeStackFile(ID=0,Size=32,NReads=2,NWrites=2)$/;"	l
StackFile	src/main/scala/dataflow/filter/BasicLoader.scala	/^  val StackFile = Module(new TypeStackFile(ID=0,Size=32,NReads=9,NWrites=9)$/;"	l
StackIO	src/main/scala/stack/StackAlloca.scala	/^class StackIO(NumOps: Int)$/;"	c
StackMem	src/main/scala/stack/StackMem.scala	/^class StackMem(val size : Int)(implicit val p: Parameters) extends Module with CoreParams {$/;"	c
StackMemIO	src/main/scala/stack/StackMem.scala	/^class StackMemIO(implicit p: Parameters) extends CoreBundle()(p) with CoreParams {$/;"	c
StackPointer	src/main/scala/generator/cilk/bgemm.scala	/^	val StackPointer = Module(new Stack(NumOps = 1))$/;"	l
StackPointer	src/main/scala/generator/cilk/bgemm_detach1.scala	/^	val StackPointer = Module(new Stack(NumOps = 1))$/;"	l
StackPointer	src/main/scala/generator/cilk/bgemm_detach2.scala	/^	val StackPointer = Module(new Stack(NumOps = 1))$/;"	l
StackPointer	src/main/scala/generator/cilk/bgemm_detach3.scala	/^	val StackPointer = Module(new Stack(NumOps = 1))$/;"	l
StackPointer	src/main/scala/generator/cilk/cilk_for_test01.scala	/^	val StackPointer = Module(new Stack(NumOps = 1))$/;"	l
StackPointer	src/main/scala/generator/cilk/cilk_for_test02.scala	/^	val StackPointer = Module(new Stack(NumOps = 1))$/;"	l
StackPointer	src/main/scala/generator/cilk/cilk_for_test02_mul.scala	/^	val StackPointer = Module(new Stack(NumOps = 1))$/;"	l
StackPointer	src/main/scala/generator/cilk/cilk_for_test04.scala	/^	val StackPointer = Module(new Stack(NumOps = 1))$/;"	l
StackPointer	src/main/scala/generator/cilk/cilk_for_test04_detach.scala	/^	val StackPointer = Module(new Stack(NumOps = 1))$/;"	l
StackPointer	src/main/scala/generator/cilk/cilk_for_test05.scala	/^	val StackPointer = Module(new Stack(NumOps = 1))$/;"	l
StackPointer	src/main/scala/generator/cilk/cilk_for_test05_detach.scala	/^	val StackPointer = Module(new Stack(NumOps = 1))$/;"	l
StackPointer	src/main/scala/generator/cilk/cilk_for_test06.scala	/^  val StackPointer = Module(new Stack(NumOps = 1))$/;"	l
StackPointer	src/main/scala/generator/cilk/cilk_for_test06_detach.scala	/^  val StackPointer = Module(new Stack(NumOps = 1))$/;"	l
StackPointer	src/main/scala/generator/cilk/cilk_for_test06_detach_2.scala	/^  val StackPointer = Module(new Stack(NumOps = 1))$/;"	l
StackPointer	src/main/scala/generator/cilk/cilk_for_test07.scala	/^	val StackPointer = Module(new Stack(NumOps = 1))$/;"	l
StackPointer	src/main/scala/generator/cilk/cilk_for_test07_detach.scala	/^	val StackPointer = Module(new Stack(NumOps = 1))$/;"	l
StackPointer	src/main/scala/generator/cilk/cilk_for_test08.scala	/^	val StackPointer = Module(new Stack(NumOps = 1))$/;"	l
StackPointer	src/main/scala/generator/cilk/cilk_for_test08_detach.scala	/^	val StackPointer = Module(new Stack(NumOps = 1))$/;"	l
StackPointer	src/main/scala/generator/cilk/cilk_for_test09.scala	/^  val StackPointer = Module(new Stack(NumOps = 1))$/;"	l
StackPointer	src/main/scala/generator/cilk/cilk_for_test09_inner.scala	/^	val StackPointer = Module(new Stack(NumOps = 1))$/;"	l
StackPointer	src/main/scala/generator/cilk/cilk_for_test12.scala	/^  val StackPointer = Module(new Stack(NumOps = 1))$/;"	l
StackPointer	src/main/scala/generator/cilk/cilk_for_test12_detach1.scala	/^  val StackPointer = Module(new Stack(NumOps = 1))$/;"	l
StackPointer	src/main/scala/generator/cilk/cilk_for_test12_detach2.scala	/^  val StackPointer = Module(new Stack(NumOps = 1))$/;"	l
StackPointer	src/main/scala/generator/cilk/cilk_for_test12_detach3.scala	/^  val StackPointer = Module(new Stack(NumOps = 1))$/;"	l
StackPointer	src/main/scala/generator/cilk/cilk_spawn_test01.scala	/^	val StackPointer = Module(new Stack(NumOps = 1))$/;"	l
StackPointer	src/main/scala/generator/cilk/cilk_spawn_test02.scala	/^	val StackPointer = Module(new Stack(NumOps = 2))$/;"	l
StackPointer	src/main/scala/generator/cilk/fib.scala	/^  val StackPointer = Module(new Stack(NumOps = 3))$/;"	l
StackPointer	src/main/scala/generator/cilk/mergesort.scala	/^  val StackPointer = Module(new Stack(NumOps = 1))$/;"	l
StackPointer	src/main/scala/generator/cilk/mergesort_merge.scala	/^  val StackPointer = Module(new Stack(NumOps = 1))$/;"	l
StackPointer	src/main/scala/generator/cilk/stencil.scala	/^    val StackPointer = Module(new Stack(NumOps = 1))$/;"	l
StackPointer	src/main/scala/generator/cilk/stencil_detach1.scala	/^  val StackPointer = Module(new Stack(NumOps = 1))$/;"	l
StackPointer	src/main/scala/generator/cilk/stencil_inner.scala	/^  val StackPointer = Module(new Stack(NumOps = 1))$/;"	l
StackPointer	src/main/scala/generator/test01.scala	/^  val StackPointer = Module(new Stack(NumOps = 1))$/;"	l
StackPointer	src/main/scala/generator/test02.scala	/^	val StackPointer = Module(new Stack(NumOps = 1))$/;"	l
StackPointer	src/main/scala/generator/test03.scala	/^  val StackPointer = Module(new Stack(NumOps = 1))$/;"	l
StackPointer	src/main/scala/generator/test04.scala	/^	val StackPointer = Module(new Stack(NumOps = 1))$/;"	l
StackPointer	src/main/scala/generator/test05.scala	/^  val StackPointer = Module(new Stack(NumOps = 1))$/;"	l
StackPointer	src/main/scala/generator/test05b.scala	/^  val StackPointer = Module(new Stack(NumOps = 1))$/;"	l
StackPointer	src/main/scala/generator/test05c.scala	/^  val StackPointer = Module(new Stack(NumOps = 1))$/;"	l
StackPointer	src/main/scala/generator/test06.scala	/^	val StackPointer = Module(new Stack(NumOps = 2))$/;"	l
StackPointer	src/main/scala/generator/test08.scala	/^	val StackPointer = Module(new Stack(NumOps = 1))$/;"	l
StackPointer	src/main/scala/generator/test09.scala	/^	val StackPointer = Module(new Stack(NumOps = 1))$/;"	l
StackPointer	src/main/scala/generator/test10.scala	/^	val StackPointer = Module(new Stack(NumOps = 1))$/;"	l
StackPointer	src/main/scala/generator/test11.scala	/^	val StackPointer = Module(new Stack(NumOps = 1))$/;"	l
StackPointer	src/main/scala/generator/test11_add.scala	/^	val StackPointer = Module(new Stack(NumOps = 1))$/;"	l
StackPointer	src/main/scala/generator/test12.scala	/^	val StackPointer = Module(new Stack(NumOps = 1))$/;"	l
StackPointer	src/main/scala/generator/test12_inner.scala	/^	val StackPointer = Module(new Stack(NumOps = 1))$/;"	l
StackPointer	src/main/scala/generator/test14.scala	/^	val StackPointer = Module(new Stack(NumOps = 1))$/;"	l
StackPointer	src/main/scala/generator/test14_inner.scala	/^	val StackPointer = Module(new Stack(NumOps = 1))$/;"	l
StackPointer	src/main/scala/generator/test15.scala	/^  val StackPointer = Module(new Stack(NumOps = 1))$/;"	l
StackReq	src/main/scala/generator/cilk/mergesort.scala	/^    val StackReq = Decoupled(new MemReq)$/;"	l
StackReq	src/main/scala/generator/cilk/mergesort_merge.scala	/^    val StackReq = Decoupled(new MemReq)$/;"	l
StackResp	src/main/scala/generator/cilk/mergesort.scala	/^    val StackResp = Flipped(Valid(new MemResp))$/;"	l
StackResp	src/main/scala/generator/cilk/mergesort_merge.scala	/^    val StackResp = Flipped(Valid(new MemResp))$/;"	l
StackTester	src/test/scala/stack/StackTest.scala	/^class StackTester(df: Stack)$/;"	c
StackTests	src/test/scala/stack/StackTest.scala	/^class StackTests extends  FlatSpec with Matchers {$/;"	c
Start	src/main/scala/loop/LoopHeader.scala	/^  val Start = Output(Bool())$/;"	l
Store	src/main/scala/dataflow/DataFlow.scala	/^	val Store     = Module(new TypStore(NumPredOps=0,NumSuccOps=1,NumOuts=1,ID=0,RouteID=0))$/;"	l
Store	src/main/scala/dataflow/TestCacheDataFlow.scala	/^	val Store     = Module(new TypStore(NumPredOps=0,NumSuccOps=1,NumOuts=1,ID=0,RouteID=0))$/;"	l
Store	src/main/scala/dataflow/TypeMemDataFlow.scala	/^	val Store     = Module(new TypStore(NumPredOps=0,NumSuccOps=1,NumOuts=1,ID=0,RouteID=0))$/;"	l
Store	src/main/scala/dataflow/filter/CacheVecLoader.scala	/^  val Store = Module(new TypStore(NumPredOps=0, NumSuccOps=0, NumOuts=1,ID=0,RouteID=0))$/;"	l
Store1	src/main/scala/dataflow/TestCacheDataFlow.scala	/^	val Store1    = Module(new TypStore(NumPredOps=0,NumSuccOps=1,NumOuts=1,ID=0,RouteID=1))$/;"	l
Store1	src/main/scala/dataflow/TypeMemDataFlow.scala	/^	val Store1    = Module(new TypStore(NumPredOps=0,NumSuccOps=1,NumOuts=1,ID=1,RouteID=1))$/;"	l
StoreIO	src/main/scala/node/StoreSimple.scala	/^class StoreIO(NumPredOps: Int,$/;"	c
StoreNode	src/main/scala/node/StoreNode.scala	/^class StoreNode(Typ: UInt = MT_W, ID: Int, RouteID: Int)(implicit val p: Parameters)$/;"	c
StoreNodeIO	src/main/scala/node/StoreNode.scala	/^class StoreNodeIO()(implicit p: Parameters) extends CoreBundle()(p) {$/;"	c
StoreNodeTester	src/test/scala/node/StoreSimple.scala	/^class StoreNodeTester extends  FlatSpec with Matchers {$/;"	c
StoreNodeTests	src/test/scala/node/StoreSimple.scala	/^class StoreNodeTests(c: UnTypStore) extends PeekPokeTester(c) {$/;"	c
Stores	src/main/scala/dataflow/MemDataFlow.scala	/^	val Stores = for (i <- 0 until ops*2) yield {$/;"	l
Sub	src/main/scala/FPU/FPALU.scala	/^  val Sub = 2$/;"	l
Sub	src/main/scala/node/Alu.scala	/^  val Sub = 2$/;"	l
SuccOp	src/main/scala/node/HandShaking.scala	/^  val SuccOp = Vec(NumSuccOps, Decoupled(new ControlBundle()))$/;"	l
SuccOp	src/main/scala/node/LoadMaskNode.scala	/^    val SuccOp = Vec(NumPredOps, Decoupled(UInt(1.W))) $/;"	l
SwitchInControl	src/main/scala/switches/DyserSwitch.scala	/^class SwitchInControl (implicit p: Parameters) extends SwitchInControlIO()(p) {$/;"	c
SwitchInControlIO	src/main/scala/switches/DyserSwitch.scala	/^class SwitchInControlIO (implicit val p: Parameters) extends Module with CoreParams {$/;"	c
SwitchInControlTester	src/test/scala/switches/SwitchInControl.scala	/^class SwitchInControlTester extends  FlatSpec with Matchers {$/;"	c
SwitchInControlTests	src/test/scala/switches/SwitchInControl.scala	/^class SwitchInControlTests(c: SwitchInControl)$/;"	c
Sync	src/main/scala/concurrent/Sync.scala	/^class Sync(NumOuts: Int, NumInc: Int, NumDec: Int, ID: Int)$/;"	c
SyncIO	src/main/scala/concurrent/Sync.scala	/^class SyncIO(NumOuts: Int, NumInc: Int, NumDec: Int)(implicit p: Parameters)$/;"	c
SyncNode	src/main/scala/concurrent/Sync.scala	/^class SyncNode(NumOuts: Int, ID: Int)$/;"	c
SyncNodeIO	src/main/scala/concurrent/Sync.scala	/^class SyncNodeIO(val NumOuts: Int)(implicit p: Parameters)$/;"	c
SyncTC	src/main/scala/concurrent/Sync.scala	/^class SyncTC(NumOuts : Int,  NumInc : Int, NumDec : Int, ID: Int)$/;"	c
SyncTC2	src/main/scala/concurrent/Sync.scala	/^class SyncTC2(NumOuts : Int,  NumInc : Int, NumDec : Int, ID: Int)$/;"	c
TARGETDIR	scripts/TypeStackFile.py	/^TARGETDIR = "\/tmp\/build-stuff\/"$/;"	v
TC	src/test/scala/generator/cilk/fib_test.scala	/^  val TC = Module(new TaskController(List(32,32), List(32), 1+(2*NumFibs), NumFibs))$/;"	l
TC	src/test/scala/generator/cilk/mergesort_test.scala	/^  val TC = Module(new TaskController(List(32,32,32,32), List(32), 1+(2*NumMergesorts), NumMergesorts))$/;"	l
TLEN	src/main/scala/config/config.scala	/^case object TLEN       extends Field[Int]$/;"	c
TRACE	src/main/scala/config/config.scala	/^case object TRACE      extends Field[Boolean]$/;"	c
TYPSZ	src/main/scala/config/config.scala	/^case object TYPSZ      extends Field[Int]$/;"	c
TaskController	src/main/scala/concurrent/TaskController.scala	/^class TaskController(val argTypes: Seq[Int], val retTypes: Seq[Int], numParent: Int, numChild: Int)$/;"	c
TaskControllerIO	src/main/scala/concurrent/TaskController.scala	/^class TaskControllerIO(val argTypes: Seq[Int], val retTypes: Seq[Int], numParent: Int, numChild: Int)(implicit p: Parameters)$/;"	c
TaskControllerModule	src/main/scala/generator/cilk/cilk_for_test04.scala	/^    val TaskControllerModule = Module(new TaskController(List(32,32,32,32), List(32), 1, children))$/;"	l
TaskControllerModule	src/main/scala/generator/cilk/cilk_for_test04.scala	/^  val TaskControllerModule = Module(new TaskController(List(32,32,32,32), List(32), 1, children))$/;"	l
TaskControllerModule	src/main/scala/generator/cilk/cilk_for_test05.scala	/^  val TaskControllerModule = Module(new TaskController(List(32,32,32,32), List(32), 1, children))$/;"	l
TaskControllerModule	src/main/scala/generator/cilk/cilk_for_test06.scala	/^  val TaskControllerModule = Module(new TaskController(List(32, 32, 32, 32), List(32), 1, children))$/;"	l
TaskControllerModule	src/main/scala/generator/cilk/cilk_for_test08.scala	/^  val TaskControllerModule = Module(new TaskController(List(32,32,32), List(32), 1, children))$/;"	l
TaskControllerModule	src/test/scala/concurrent/DecoupledTaskTest.scala	/^  val TaskControllerModule = Module(new TaskController(List(32,32,32,32), List(32), 1, numChildren)(p.alterPartial({case TLEN => 6})))$/;"	l
TaskControllerModule	src/test/scala/generator/cilk/bgemm_test.scala	/^  val TaskControllerModule = Module(new TaskController(List(32,32,32,32), List(32), 1, children))$/;"	l
TaskControllerModule	src/test/scala/generator/cilk/cilk_for_test02_test.scala	/^  val TaskControllerModule = Module(new TaskController(List(32,32), List(32), 1, 1))$/;"	l
TaskControllerModule	src/test/scala/generator/cilk/cilk_for_test04_test.scala	/^  val TaskControllerModule = Module(new TaskController(List(32,32,32,32), List(32), 1, children))$/;"	l
TaskControllerModule	src/test/scala/generator/cilk/cilk_for_test05_test.scala	/^  val TaskControllerModule = Module(new TaskController(List(32,32,32,32), List(32), 1, children))$/;"	l
TaskControllerModule	src/test/scala/generator/cilk/cilk_for_test06_test.scala	/^  val TaskControllerModule = Module(new TaskController(List(32, 32, 32, 32), List(32), 1, children))$/;"	l
TaskControllerModule	src/test/scala/generator/cilk/cilk_for_test07_test.scala	/^  val TaskControllerModule = Module(new TaskController(List(32,32,32,32), List(32), 1, children))$/;"	l
TaskControllerModule	src/test/scala/generator/cilk/cilk_for_test08_test.scala	/^  val TaskControllerModule = Module(new TaskController(List(32,32,32), List(32), 1, children))$/;"	l
TaskControllerModule	src/test/scala/generator/cilk/cilk_for_test09_test.scala	/^  val TaskControllerModule = Module(new TaskController(List(32,32,32), List(32), 1, children))$/;"	l
TaskControllerModule	src/test/scala/generator/cilk/stencil_test.scala	/^  val TaskControllerModule = Module(new TaskController(List(32, 32, 32), List(32), 1, children))$/;"	l
TaskControllerModule1	src/test/scala/generator/cilk/cilk_for_test12_test.scala	/^  val TaskControllerModule1 = Module(new TaskController(List(32,32,32), List(32), 1, children1))$/;"	l
TaskControllerModule2	src/test/scala/generator/cilk/cilk_for_test12_test.scala	/^  val TaskControllerModule2 = Module(new TaskController(List(32,32), List(32), children1, children2))$/;"	l
TaskControllerModule3	src/test/scala/generator/cilk/cilk_for_test12_test.scala	/^  val TaskControllerModule3 = Module(new TaskController(List(32,32), List(32), children2, children3))$/;"	l
TaskControllerTester	src/test/scala/concurrent/TaskControllerTest.scala	/^class TaskControllerTester(c: TaskController, backpressure: Boolean) extends PeekPokeTester(c) {$/;"	c
TaskControllerTests	src/test/scala/concurrent/TaskControllerTest.scala	/^class TaskControllerTests extends FlatSpec with Matchers {$/;"	c
TaskID	src/main/scala/interfaces/interfaces.scala	/^trait TaskID extends CoreBundle {$/;"	t
TerminalView	src/main/scala/config/configurations.scala	/^private class TerminalView extends View {$/;"	c
TestCFU	src/main/scala/node/CustomFunctionalUnit.scala	/^class TestCFU(ID: Int, NumOps: Int, NumIns: Int, NumOuts: Int)(sign: Boolean)(implicit p: Parameters)$/;"	c
TestCacheDF	src/main/scala/accel/coredf/TestCacheDF.scala	/^class TestCacheDF(cNum : Int, sNum: Int)(implicit p: Parameters) extends CoreT(cNum,sNum)(p) {$/;"	c
TestCacheDataFlow	src/main/scala/dataflow/TestCacheDataFlow.scala	/^class TestCacheDataFlow(implicit val p: Parameters) extends Module with CoreParams{$/;"	c
TestCacheMain	src/main/scala/accel/Main.scala	/^object TestCacheMain extends App {$/;"	c
TestCore	src/main/scala/accel/coredf/CoreDF.scala	/^class TestCore(cNum : Int, sNum: Int)(implicit p: Parameters) extends CoreT(cNum,sNum)(p) {$/;"	c
TestMux	src/main/scala/muxes/TestMux.scala	/^class  TestMux(NReads: Int)(implicit val p: Parameters) extends Module with CoreParams {$/;"	c
TestMuxTester	src/test/scala/muxes/TestMux.scala	/^class TestMuxTester extends  FlatSpec with Matchers {$/;"	c
TestMuxTests	src/test/scala/muxes/TestMux.scala	/^class TestMuxTests(df: TestMux)$/;"	c
TokenIn	src/main/scala/node/Relay.scala	/^    val TokenIn   = Input(UInt(tlen.W))$/;"	l
TokenNode	src/main/scala/interfaces/interfaces.scala	/^  val TokenNode = Input(UInt(tlen.W))$/;"	l
TopBits	src/main/scala/muxes/Muxes.scala	/^  var TopBits = Level * SelBits - 1$/;"	l
TopDefs	src/main/scala/config/cde/Parameters.scala	/^  type TopDefs = (\/*pname:*\/Any,\/*site:*\/View,\/*here:*\/View) => Any\/*Knob[_] | Ex[_] | Any*\/$/;"	T
TopLookup	src/main/scala/config/cde/Parameters.scala	/^    class TopLookup extends _Lookup {$/;"	c
Tree	src/main/scala/node/LoadMaskNode.scala	/^ val Tree = Module(new ArbiterTree(BaseSize = 2, NumOps = 8, UInt(32.W), Locks = 1))$/;"	l
Typ	src/main/scala/interfaces/interfaces.scala	/^  val Typ = UInt(8.W)$/;"	l
Typ2BitMask	src/main/scala/node/helpers.scala	/^object Typ2BitMask$/;"	c
Typ2ByteMask	src/main/scala/node/helpers.scala	/^object Typ2ByteMask$/;"	c
TypBundle	src/main/scala/interfaces/interfaces.scala	/^class TypBundle(implicit p: Parameters) extends ValidT with PredicateT with TaskID {$/;"	c
TypBundle	src/main/scala/interfaces/interfaces.scala	/^object TypBundle {$/;"	c
TypCompTester	src/test/scala/node/TypCompute.scala	/^class TypCompTester extends  FlatSpec with Matchers {$/;"	c
TypCompTests	src/test/scala/node/TypCompute.scala	/^class TypCompTests(df: TypCompute[mat2x2])$/;"	c
TypCompute	src/main/scala/node/TypCompute.scala	/^class TypCompute[T <: Numbers: OperatorLike](NumOuts: Int, ID: Int, opCode: String)(sign: Boolean)(gen: => T)(implicit p: Parameters)$/;"	c
TypComputeIO	src/main/scala/node/TypCompute.scala	/^class TypComputeIO(NumOuts: Int)(implicit p: Parameters)$/;"	c
TypLoad	src/main/scala/node/TypLoad.scala	/^class TypLoad(NumPredOps: Int,$/;"	c
TypLoadIO	src/main/scala/node/TypLoad.scala	/^class TypLoadIO(NumPredOps: Int, NumSuccOps: Int, NumOuts: Int)(implicit p: Parameters) extends HandShakingIOPS(NumPredOps, NumSuccOps, NumOuts)(new TypBundle) {$/;"	c
TypLoadTester	src/test/scala/node/TypLoad.scala	/^class TypLoadTester extends  FlatSpec with Matchers {$/;"	c
TypLoadTests	src/test/scala/node/TypLoad.scala	/^class TypLoadTests(c: TypLoad) extends PeekPokeTester(c) {$/;"	c
TypStore	src/main/scala/node/TypStore.scala	/^class TypStore(NumPredOps: Int,$/;"	c
TypStoreIO	src/main/scala/node/TypStore.scala	/^class TypStoreIO(NumPredOps: Int,$/;"	c
TypStoreTester	src/test/scala/node/TypStore.scala	/^class TypStoreTester extends  FlatSpec with Matchers {$/;"	c
TypStoreTests	src/test/scala/node/TypStore.scala	/^class TypStoreTests(c: TypStore) extends PeekPokeTester(c) {$/;"	c
Typ_SZ	src/main/scala/config/config.scala	/^  val Typ_SZ  = p(TYPSZ)$/;"	l
Type	src/main/scala/utility/Constants.scala	/^   var Type = scala.collection.mutable.Map$/;"	l
TypeLoadDataFlow	src/main/scala/dataflow/DataFlow.scala	/^class TypeLoadDataFlow(implicit val p: Parameters) extends Module with CoreParams{$/;"	c
TypeLoadDataFlowTester	src/test/scala/dataflow/TypeLoadDataflow.scala	/^class TypeLoadDataFlowTester(df: TypeLoadDataFlow)(implicit p: config.Parameters) extends PeekPokeTester(df)  {$/;"	c
TypeLoadDataflowTests	src/test/scala/dataflow/TypeLoadDataflow.scala	/^class TypeLoadDataflowTests extends  FlatSpec with Matchers {$/;"	c
TypeMemDataFlow	src/main/scala/dataflow/TypeMemDataFlow.scala	/^class TypeMemDataFlow(implicit val p: Parameters) extends Module with CoreParams{$/;"	c
TypeMemDataFlowTester	src/test/scala/dataflow/TypeMemDataFlow.scala	/^class TypeMemDataFlowTester(df: TypeMemDataFlow)(implicit p: config.Parameters) extends PeekPokeTester(df)  {$/;"	c
TypeMemDataflowTests	src/test/scala/dataflow/TypeMemDataFlow.scala	/^class TypeMemDataflowTests extends ChiselFlatSpec {$/;"	c
TypeStackFile	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^module TypeStackFile($/;"	m
TypeStackFile	src/main/scala/arbiters/TypeStackFile.scala	/^class TypeStackFile(ID: Int,$/;"	c
TypeStackFileTester	src/test/scala/memory/MemoryController2.scala	/^class TypeStackFileTester extends  FlatSpec with Matchers {$/;"	c
TypeStackFileVerilog	src/test/scala/verilogmain/TypStackSweeper.scala	/^object TypeStackFileVerilog extends App {$/;"	c
TypeStackFileVerilog16b	src/test/scala/verilogmain/TypeStackSweeper16b.scala	/^object TypeStackFileVerilog16b extends App {$/;"	c
TypeStackFileVerilog16bConfig	src/main/scala/config/TestConfigs.scala	/^class TypeStackFileVerilog16bConfig extends Config((site, here, up) => {$/;"	c
TypeStackPeekPoker	src/test/scala/verilogmain/TypStackSweeper.scala	/^class TypeStackPeekPoker(c: TypeStackFile, Writes: Int, Reads: Int, Activity: String)(implicit p: config.Parameters) extends PeekPokeTester(c) {$/;"	c
TypeStackPeekPoker16b	src/test/scala/verilogmain/TypeStackSweeper16b.scala	/^class TypeStackPeekPoker16b(c: TypeStackFile, Writes: Int, Reads: Int, Activity: String)(implicit p: config.Parameters) extends PeekPokeTester(c) {$/;"	c
TypeStackTests	src/test/scala/memory/MemoryController2.scala	/^class TypeStackTests(c: TypeStackFile)(implicit p: config.Parameters) extends PeekPokeTester(c) {$/;"	c
UALU	src/main/scala/node/Alu.scala	/^class UALU(val xlen: Int, val opCode: String) extends Module {$/;"	c
UBranchEndNode	src/main/scala/node/BranchNode.scala	/^class UBranchEndNode(ID: Int, NumOuts: Int = 1)$/;"	c
UBranchFastIO	src/main/scala/node/BranchNode.scala	/^class UBranchFastIO()(implicit p: Parameters) extends CoreBundle {$/;"	c
UBranchFastNode	src/main/scala/node/BranchNode.scala	/^class UBranchFastNode(ID: Int)$/;"	c
UBranchNode	src/main/scala/node/BranchNode.scala	/^class UBranchNode(NumPredOps: Int = 0,$/;"	c
UCMP	src/main/scala/node/Comparision.scala	/^class UCMP(val xlen: Int, val opCode: String) extends Module {$/;"	c
UGE	src/main/scala/node/Comparision.scala	/^  val UGE     = 4$/;"	l
UGT	src/main/scala/node/Comparision.scala	/^  val UGT     = 3$/;"	l
ULE	src/main/scala/node/Comparision.scala	/^  val ULE     = 6$/;"	l
ULT	src/main/scala/node/Comparision.scala	/^  val ULT     = 5$/;"	l
UnTypLoad	src/main/scala/node/LoadSimple.scala	/^class UnTypLoad(NumPredOps: Int,$/;"	c
UnTypMemDataFlow	src/main/scala/dataflow/MemDataFlow.scala	/^class UnTypMemDataFlow(val ops:Int)(implicit val p: Parameters) extends Module with CoreParams{$/;"	c
UnTypMemDataFlowTester	src/test/scala/dataflow/UnTypMemDataflow.scala	/^class UnTypMemDataFlowTester(df: CacheWrapper)(implicit p: config.Parameters) extends PeekPokeTester(df)  {$/;"	c
UnTypMemDataflowTests	src/test/scala/dataflow/UnTypMemDataflow.scala	/^class UnTypMemDataflowTests extends  FlatSpec with Matchers {$/;"	c
UnTypStore	src/main/scala/node/StoreSimple.scala	/^class UnTypStore(NumPredOps: Int,$/;"	c
UnifiedController	src/main/scala/memory/UnifiedController.scala	/^class UnifiedController (ID: Int,$/;"	c
UnifiedControllerTester	src/test/scala/memory/UnifiedController.scala	/^class UnifiedControllerTester extends  FlatSpec with Matchers {$/;"	c
UnifiedControllerTests	src/test/scala/memory/UnifiedController.scala	/^class UnifiedControllerTests (c: UnifiedController)(implicit p: config.Parameters) extends PeekPokeTester(c) {$/;"	c
UnifiedTypController	src/main/scala/memory/UnifiedTypController.scala	/^class UnifiedTypController (ID: Int,$/;"	c
UniformPrintfs	src/main/scala/utility/Printf.scala	/^trait UniformPrintfs {$/;"	t
Unusable	src/main/scala/config/configurations.scala	/^  private class Unusable$/;"	c
VERBOSITY	src/main/scala/config/config.scala	/^case object VERBOSITY  extends Field[String]$/;"	c
ValidIn	src/main/scala/node/HandShaking.scala	/^  def ValidIn(): Unit = {$/;"	m
ValidOut	src/main/scala/node/HandShaking.scala	/^  def ValidOut(): Unit = {$/;"	m
ValidPred	src/main/scala/node/HandShaking.scala	/^  def ValidPred(): Unit = {$/;"	m
ValidSucc	src/main/scala/node/HandShaking.scala	/^  def ValidSucc(): Unit = {$/;"	m
ValidT	src/main/scala/interfaces/interfaces.scala	/^trait ValidT extends CoreBundle {$/;"	t
Valids	src/main/scala/regfile/InputRegFile.scala	/^  val Valids = RegInit(VecInit(Seq.fill(inData.size)(true.B)))$/;"	l
VariableCustom	src/main/scala/interfaces/interfaces.scala	/^class VariableCustom(val argTypes: Seq[Bits])(implicit p: Parameters) extends Record {$/;"	c
VariableData	src/main/scala/interfaces/interfaces.scala	/^class VariableData(val argTypes: Seq[Int])(implicit p: Parameters) extends Record {$/;"	c
VariableDecoupledCustom	src/main/scala/interfaces/interfaces.scala	/^class VariableDecoupledCustom(val argTypes: Seq[Bits])(implicit p: Parameters) extends Record {$/;"	c
VariableDecoupledData	src/main/scala/interfaces/interfaces.scala	/^class VariableDecoupledData(val argTypes: Seq[Int])(implicit p: Parameters) extends Record {$/;"	c
VariableDecoupledVec	src/main/scala/interfaces/interfaces.scala	/^class VariableDecoupledVec(val argTypes: Seq[Int])(implicit p: Parameters) extends Record {$/;"	c
VecFilter	src/main/scala/dataflow/filter/VecFilter.scala	/^class VecFilter(implicit val p: Parameters) extends Module with CoreParams {$/;"	c
VecFilterDFConfig	src/main/scala/accel/Config.scala	/^class VecFilterDFConfig extends Config((site, here, up) => {$/;"	c
VecFilterDFCore	src/main/scala/accel/coredf/VecFilterDFCore.scala	/^class VecFilterDFCore(cNum : Int, sNum: Int)(implicit p: Parameters) extends CoreT(cNum,sNum)(p) {$/;"	c
VecFilterDFMain	src/main/scala/accel/Main.scala	/^object VecFilterDFMain extends App {$/;"	c
VecFilterNoKernDFCore	src/main/scala/accel/coredf/VecFilterNoKernDFCore.scala	/^class VecFilterNoKernDFCore(cNum : Int, sNum: Int)(implicit p: Parameters) extends CoreT(cNum,sNum)(p) {$/;"	c
VecFilterNoKernDFMain	src/main/scala/accel/Main.scala	/^object VecFilterNoKernDFMain extends App {$/;"	c
VecFilterNoKernDFTester	src/test/scala/accel/coredf/VecFilterNoKernDFTests.scala	/^class VecFilterNoKernDFTester(accel: => Accelerator)(implicit val p: config.Parameters) extends BasicTester with CacheParams {$/;"	c
VecFilterNoKernDFTests	src/test/scala/accel/coredf/VecFilterNoKernDFTests.scala	/^class VecFilterNoKernDFTests extends org.scalatest.FlatSpec {$/;"	c
View	src/main/scala/config/cde/Parameters.scala	/^abstract class View {$/;"	c
View	src/main/scala/config/configurations.scala	/^abstract class View {$/;"	c
ViewSym	src/main/scala/config/cde/Parameters.scala	/^final case class ViewSym(view:View) {$/;"	c
WController	src/main/scala/memory/WriteMemoryController.scala	/^abstract class WController(NumOps: Int, BaseSize: Int, NumEntries: Int)(implicit val p: Parameters) extends Module with CoreParams {$/;"	c
WordRegFile	src/main/scala/arbiters/ReadArbiter.scala	/^class  WordRegFile(Size: Int, NReads: Int, NWrites: Int)(implicit val p: Parameters) extends Module with CoreParams {$/;"	c
World	src/main/scala/config/cde/Parameters.scala	/^abstract class World($/;"	c
World	src/main/scala/config/cde/Parameters.scala	/^object World {$/;"	c
WrIdx	src/main/scala/memory/ReadWriteArbiter.scala	/^  val WrIdx = 1$/;"	l
WriteArbiterReg	src/main/scala/arbiters/ReadArbiter.scala	/^  val WriteArbiterReg   = RegNext(next = WriteReqArbiter.io.out.bits)$/;"	l
WriteController	src/main/scala/arbiters/TypeStackFile.scala	/^  val WriteController = Module(WControl)$/;"	l
WriteController	src/main/scala/memory/UnifiedController.scala	/^  val WriteController = Module(WControl)$/;"	l
WriteController	src/main/scala/memory/UnifiedTypController.scala	/^  val WriteController = Module(WControl)$/;"	l
WriteController_clock	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire  WriteController_clock;$/;"	n
WriteController_io_CacheReq_bits_addr	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire [15:0] WriteController_io_CacheReq_bits_addr;$/;"	n
WriteController_io_CacheReq_bits_data	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire [15:0] WriteController_io_CacheReq_bits_data;$/;"	n
WriteController_io_CacheReq_bits_mask	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire [1:0] WriteController_io_CacheReq_bits_mask;$/;"	n
WriteController_io_CacheReq_ready	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire  WriteController_io_CacheReq_ready;$/;"	n
WriteController_io_CacheReq_valid	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire  WriteController_io_CacheReq_valid;$/;"	n
WriteController_io_CacheResp_valid	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire  WriteController_io_CacheResp_valid;$/;"	n
WriteController_io_WriteIn_0_bits_RouteID	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire [15:0] WriteController_io_WriteIn_0_bits_RouteID;$/;"	n
WriteController_io_WriteIn_0_bits_address	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire [5:0] WriteController_io_WriteIn_0_bits_address;$/;"	n
WriteController_io_WriteIn_0_bits_data	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire [15:0] WriteController_io_WriteIn_0_bits_data;$/;"	n
WriteController_io_WriteIn_0_bits_mask	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire [1:0] WriteController_io_WriteIn_0_bits_mask;$/;"	n
WriteController_io_WriteIn_0_ready	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire  WriteController_io_WriteIn_0_ready;$/;"	n
WriteController_io_WriteIn_0_valid	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire  WriteController_io_WriteIn_0_valid;$/;"	n
WriteController_io_WriteOut_0_RouteID	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire [15:0] WriteController_io_WriteOut_0_RouteID;$/;"	n
WriteController_io_WriteOut_0_done	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire  WriteController_io_WriteOut_0_done;$/;"	n
WriteController_io_WriteOut_0_valid	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire  WriteController_io_WriteOut_0_valid;$/;"	n
WriteController_reset	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire  WriteController_reset;$/;"	n
WriteEntryIO	src/main/scala/memory/WriteMemoryController.scala	/^abstract class WriteEntryIO()(implicit val p: Parameters)$/;"	c
WriteIn	src/main/scala/arbiters/ReadArbiter.scala	/^  val WriteIn   = Vec(NWrites,Flipped(Decoupled(new WriteReq())))$/;"	l
WriteIn	src/main/scala/arbiters/TypeStackFile.scala	/^    val WriteIn = Vec(NWrites, Flipped(Decoupled(new WriteReq())))$/;"	l
WriteIn	src/main/scala/memory/UnifiedController.scala	/^    val WriteIn = Vec(NWrites, Flipped(Decoupled(new WriteReq())))$/;"	l
WriteIn	src/main/scala/memory/UnifiedTypController.scala	/^    val WriteIn = Vec(NWrites, Flipped(Decoupled(new WriteReq())))$/;"	l
WriteIn	src/main/scala/memory/WriteMemoryController.scala	/^    val WriteIn = Vec(NumOps, Flipped(Decoupled(new WriteReq())))$/;"	l
WriteInputChosen	src/main/scala/arbiters/ReadArbiter.scala	/^  val WriteInputChosen  = RegNext(init = 0.U(max(1,log2Ceil(NWrites)).W),next=WriteReqArbiter.io.chosen)$/;"	l
WriteInputValid	src/main/scala/arbiters/ReadArbiter.scala	/^  val WriteInputValid   = RegNext(init  = false.B,next=WriteReqArbiter.io.out.valid)$/;"	l
WriteMemReq	src/main/scala/memory/ReadWriteArbiter.scala	/^    val WriteMemReq = Flipped(Decoupled(new MemReq))$/;"	l
WriteMemResp	src/main/scala/memory/ReadWriteArbiter.scala	/^    val WriteMemResp = Valid(new MemResp)$/;"	l
WriteMemoryController	src/main/scala/memory/WriteMemoryController.scala	/^class WriteMemoryController(NumOps: Int, BaseSize: Int, NumEntries: Int)(implicit p: Parameters) extends WController(NumOps,BaseSize,NumEntries)(p) {$/;"	c
WriteMemoryControllerTester	src/test/scala/memory/WriteMemoryController.scala	/^class WriteMemoryControllerTester extends  FlatSpec with Matchers {$/;"	c
WriteMemoryControllerTests	src/test/scala/memory/WriteMemoryController.scala	/^class WriteMemoryControllerTests(c: WriteMemoryController)(implicit p: config.Parameters) extends PeekPokeTester(c) {$/;"	c
WriteOut	src/main/scala/arbiters/ReadArbiter.scala	/^  val WriteOut  = Vec(NWrites,Output(new WriteResp()))$/;"	l
WriteOut	src/main/scala/arbiters/TypeStackFile.scala	/^    val WriteOut = Vec(NWrites, Output(new WriteResp()))$/;"	l
WriteOut	src/main/scala/memory/UnifiedController.scala	/^    val WriteOut = Vec(NWrites, Output(new WriteResp()))$/;"	l
WriteOut	src/main/scala/memory/UnifiedTypController.scala	/^    val WriteOut = Vec(NWrites, Output(new WriteResp()))$/;"	l
WriteOut	src/main/scala/memory/WriteMemoryController.scala	/^    val WriteOut = Vec(NumOps, Output(new WriteResp()))$/;"	l
WriteOutputChosen	src/main/scala/arbiters/ReadArbiter.scala	/^  val WriteOutputChosen = RegNext(init = 0.U(max(1,log2Ceil(NWrites)).W), next = WriteInputChosen)$/;"	l
WriteOutputValid	src/main/scala/arbiters/ReadArbiter.scala	/^  val WriteOutputValid  = RegNext(init = false.B, next = WriteInputValid)$/;"	l
WriteReq	src/main/scala/arbiters/TypeStackFile.scala	/^  val WriteReq     = RegNext(next = WriteController.io.MemReq.bits)$/;"	l
WriteReq	src/main/scala/interfaces/interfaces.scala	/^class WriteReq(implicit p: Parameters)$/;"	c
WriteReq	src/main/scala/interfaces/interfaces.scala	/^object WriteReq {$/;"	c
WriteReqArbiter	src/main/scala/arbiters/ReadArbiter.scala	/^  val WriteReqArbiter  = Module(new RRArbiter(new WriteReq(),NWrites));$/;"	l
WriteResp	src/main/scala/interfaces/interfaces.scala	/^class WriteResp(implicit p: Parameters)$/;"	c
WriteRespDeMux	src/main/scala/arbiters/ReadArbiter.scala	/^  val WriteRespDeMux   = Module(new Demux(new WriteResp(),NWrites));$/;"	l
WriteTable	src/main/scala/memory/WriteMemoryController.scala	/^  val WriteTable = for (i <- 0 until MLPSize) yield {$/;"	l
WriteTable	src/main/scala/memory/WriteTypMemoryController.scala	/^  val WriteTable = for (i <- 0 until MLPSize) yield {$/;"	l
WriteTableEntry	src/main/scala/memory/WriteMemoryController.scala	/^class WriteTableEntry(id: Int)(implicit p: Parameters) extends WriteEntryIO()(p) {$/;"	c
WriteTable_0_clock	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire  WriteTable_0_clock;$/;"	n
WriteTable_0_io_MemReq_bits_addr	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire [15:0] WriteTable_0_io_MemReq_bits_addr;$/;"	n
WriteTable_0_io_MemReq_bits_data	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire [15:0] WriteTable_0_io_MemReq_bits_data;$/;"	n
WriteTable_0_io_MemReq_bits_mask	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire [1:0] WriteTable_0_io_MemReq_bits_mask;$/;"	n
WriteTable_0_io_MemReq_ready	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire  WriteTable_0_io_MemReq_ready;$/;"	n
WriteTable_0_io_MemReq_valid	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire  WriteTable_0_io_MemReq_valid;$/;"	n
WriteTable_0_io_MemResp_valid	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire  WriteTable_0_io_MemResp_valid;$/;"	n
WriteTable_0_io_NodeReq_bits_RouteID	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire [15:0] WriteTable_0_io_NodeReq_bits_RouteID;$/;"	n
WriteTable_0_io_NodeReq_bits_address	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire [5:0] WriteTable_0_io_NodeReq_bits_address;$/;"	n
WriteTable_0_io_NodeReq_bits_data	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire [15:0] WriteTable_0_io_NodeReq_bits_data;$/;"	n
WriteTable_0_io_NodeReq_bits_mask	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire [1:0] WriteTable_0_io_NodeReq_bits_mask;$/;"	n
WriteTable_0_io_NodeReq_ready	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire  WriteTable_0_io_NodeReq_ready;$/;"	n
WriteTable_0_io_NodeReq_valid	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire  WriteTable_0_io_NodeReq_valid;$/;"	n
WriteTable_0_io_free	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire  WriteTable_0_io_free;$/;"	n
WriteTable_0_io_output_bits_RouteID	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire [15:0] WriteTable_0_io_output_bits_RouteID;$/;"	n
WriteTable_0_io_output_bits_done	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire  WriteTable_0_io_output_bits_done;$/;"	n
WriteTable_0_io_output_bits_valid	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire  WriteTable_0_io_output_bits_valid;$/;"	n
WriteTable_0_io_output_ready	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire  WriteTable_0_io_output_ready;$/;"	n
WriteTable_0_io_output_valid	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire  WriteTable_0_io_output_valid;$/;"	n
WriteTable_0_reset	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire  WriteTable_0_reset;$/;"	n
WriteTypMemoryController	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^module WriteTypMemoryController($/;"	m
WriteTypMemoryController	src/main/scala/memory/WriteTypMemoryController.scala	/^class WriteTypMemoryController$/;"	c
WriteTypTableEntry	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^module WriteTypTableEntry($/;"	m
WriteTypTableEntry	src/main/scala/memory/WriteTypMemoryController.scala	/^class WriteTypTableEntry$/;"	c
WriteValid	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  reg  WriteValid;$/;"	r
WriteValid	src/main/scala/arbiters/TypeStackFile.scala	/^  val WriteValid   = RegNext(init  = false.B,next=WriteController.io.MemReq.fire())$/;"	l
XLEN	src/main/scala/config/config.scala	/^case object XLEN       extends Field[Int]$/;"	c
Xnor	src/main/scala/node/Alu.scala	/^  val Xnor = 6$/;"	l
Xor	src/main/scala/node/Alu.scala	/^  val Xor = 5$/;"	l
Y	src/test/scala/node/LoadSimple.scala	/^  def Y = true$/;"	m
ZextNode	src/main/scala/node/ZextNode.scala	/^class ZextNode(val SrcW: Int, val DesW: Int, val NumOuts: Int)(implicit val p: Parameters)$/;"	c
ZextNodeIO	src/main/scala/node/ZextNode.scala	/^class ZextNodeIO(val src: Int, val des: Int, val nout: Int)$/;"	c
_GEN_0	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire  _GEN_0;$/;"	n
_GEN_0	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire [15:0] _GEN_0;$/;"	n
_GEN_0_valid	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire  _GEN_0_valid;$/;"	n
_GEN_1	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire [15:0] _GEN_1;$/;"	n
_GEN_1	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire [1:0] _GEN_1;$/;"	n
_GEN_10	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire  _GEN_10;$/;"	n
_GEN_10	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire [5:0] _GEN_10;$/;"	n
_GEN_11	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire  _GEN_11;$/;"	n
_GEN_11	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire [15:0] _GEN_11;$/;"	n
_GEN_11	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire [7:0] _GEN_11;$/;"	n
_GEN_12	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire  _GEN_12;$/;"	n
_GEN_12	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire [1:0] _GEN_12;$/;"	n
_GEN_13	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire  _GEN_13;$/;"	n
_GEN_13	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire [15:0] _GEN_13;$/;"	n
_GEN_14	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire  _GEN_14;$/;"	n
_GEN_14	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire [15:0] _GEN_14;$/;"	n
_GEN_15	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire  _GEN_15;$/;"	n
_GEN_15	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire [15:0] _GEN_15;$/;"	n
_GEN_16	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire  _GEN_16;$/;"	n
_GEN_16	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire [15:0] _GEN_16;$/;"	n
_GEN_17	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire  _GEN_17;$/;"	n
_GEN_17	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire [15:0] _GEN_17;$/;"	n
_GEN_17	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire [1:0] _GEN_17;$/;"	n
_GEN_18	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire  _GEN_18;$/;"	n
_GEN_18	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire [15:0] _GEN_18;$/;"	n
_GEN_18	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire [1:0] _GEN_18;$/;"	n
_GEN_19	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire  _GEN_19;$/;"	n
_GEN_19	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire [1:0] _GEN_19;$/;"	n
_GEN_19	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire [20:0] _GEN_19;$/;"	n
_GEN_1_bits_data	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire [15:0] _GEN_1_bits_data;$/;"	n
_GEN_2	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire  _GEN_2;$/;"	n
_GEN_2	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire [15:0] _GEN_2;$/;"	n
_GEN_20	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire  _GEN_20;$/;"	n
_GEN_20	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire [15:0] _GEN_20;$/;"	n
_GEN_21	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire [15:0] _GEN_21;$/;"	n
_GEN_21	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire [1:0] _GEN_21;$/;"	n
_GEN_22	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire [1:0] _GEN_22;$/;"	n
_GEN_23	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire [1:0] _GEN_23;$/;"	n
_GEN_24	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire [1:0] _GEN_24;$/;"	n
_GEN_25	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire [1:0] _GEN_25;$/;"	n
_GEN_26	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire  _GEN_26;$/;"	n
_GEN_29	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire [1:0] _GEN_29;$/;"	n
_GEN_2_bits_RouteID	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire [15:0] _GEN_2_bits_RouteID;$/;"	n
_GEN_2_bits_tag	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire [7:0] _GEN_2_bits_tag;$/;"	n
_GEN_3	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire  _GEN_3;$/;"	n
_GEN_3	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire [1:0] _GEN_3;$/;"	n
_GEN_30	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire [1:0] _GEN_30;$/;"	n
_GEN_31	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire [1:0] _GEN_31;$/;"	n
_GEN_32	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire [1:0] _GEN_32;$/;"	n
_GEN_33	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire  _GEN_33;$/;"	n
_GEN_33	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire [20:0] _GEN_33;$/;"	n
_GEN_34	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire [15:0] _GEN_34;$/;"	n
_GEN_34	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire [1:0] _GEN_34;$/;"	n
_GEN_35	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire [15:0] _GEN_35;$/;"	n
_GEN_35	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire [1:0] _GEN_35;$/;"	n
_GEN_3_bits_address	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire [15:0] _GEN_3_bits_address;$/;"	n
_GEN_3_bits_mask	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire [1:0] _GEN_3_bits_mask;$/;"	n
_GEN_3_bits_valid	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire  _GEN_3_bits_valid;$/;"	n
_GEN_4	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire [15:0] _GEN_4;$/;"	n
_GEN_40	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire [1:0] _GEN_40;$/;"	n
_GEN_41	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire [20:0] _GEN_41;$/;"	n
_GEN_42	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire [1:0] _GEN_42;$/;"	n
_GEN_43	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire [1:0] _GEN_43;$/;"	n
_GEN_45	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire [5:0] _GEN_45;$/;"	n
_GEN_46	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire [20:0] _GEN_46;$/;"	n
_GEN_47	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire [15:0] _GEN_47;$/;"	n
_GEN_4_bits_RouteID	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire [15:0] _GEN_4_bits_RouteID;$/;"	n
_GEN_4_bits_data	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire [15:0] _GEN_4_bits_data;$/;"	n
_GEN_5	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire  _GEN_5;$/;"	n
_GEN_5	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire [15:0] _GEN_5;$/;"	n
_GEN_5_bits_addr	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire [15:0] _GEN_5_bits_addr;$/;"	n
_GEN_5_bits_address	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire [5:0] _GEN_5_bits_address;$/;"	n
_GEN_6	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire  _GEN_6;$/;"	n
_GEN_6	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire [1:0] _GEN_6;$/;"	n
_GEN_6_bits_RouteID	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire [15:0] _GEN_6_bits_RouteID;$/;"	n
_GEN_7	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire  _GEN_7;$/;"	n
_GEN_7	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire [15:0] _GEN_7;$/;"	n
_GEN_7	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire [1:0] _GEN_7;$/;"	n
_GEN_8	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire  _GEN_8;$/;"	n
_GEN_8	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire [15:0] _GEN_8;$/;"	n
_GEN_8	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire [1:0] _GEN_8;$/;"	n
_GEN_9	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire  _GEN_9;$/;"	n
_GEN_9	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire [15:0] _GEN_9;$/;"	n
_Lookup	src/main/scala/config/cde/Parameters.scala	/^abstract class _Lookup {$/;"	c
_RAND_0	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  reg [31:0] _RAND_0;$/;"	r
_RAND_1	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  reg [31:0] _RAND_1;$/;"	r
_RAND_2	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  reg [31:0] _RAND_2;$/;"	r
_RAND_3	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  reg [31:0] _RAND_3;$/;"	r
_RAND_4	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  reg [31:0] _RAND_4;$/;"	r
_RAND_5	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  reg [31:0] _RAND_5;$/;"	r
_RAND_6	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  reg [31:0] _RAND_6;$/;"	r
_RAND_7	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  reg [31:0] _RAND_7;$/;"	r
_RAND_8	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  reg [31:0] _RAND_8;$/;"	r
_RAND_9	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  reg [31:0] _RAND_9;$/;"	r
_T_100	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire [15:0] _T_100;$/;"	n
_T_102	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire  _T_102;$/;"	n
_T_104	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire [2:0] _T_104;$/;"	n
_T_105	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire [1:0] _T_105;$/;"	n
_T_112	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire [2:0] _T_112;$/;"	n
_T_113	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire [1:0] _T_113;$/;"	n
_T_114	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire  _T_114;$/;"	n
_T_117	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire  _T_117;$/;"	n
_T_119	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire  _T_119;$/;"	n
_T_120	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire  _T_120;$/;"	n
_T_121	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire  _T_121;$/;"	n
_T_122	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire  _T_122;$/;"	n
_T_123	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire  _T_123;$/;"	n
_T_124	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire [2:0] _T_124;$/;"	n
_T_124	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire [4:0] _T_124;$/;"	n
_T_125	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire [1:0] _T_125;$/;"	n
_T_125	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire [5:0] _T_125;$/;"	n
_T_128	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire  _T_128;$/;"	n
_T_129	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire  _T_129;$/;"	n
_T_131	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire  _T_131;$/;"	n
_T_132	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire  _T_132;$/;"	n
_T_135	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire [21:0] _T_135;$/;"	n
_T_136	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire [20:0] _T_136;$/;"	n
_T_137	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire  _T_137;$/;"	n
_T_139	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire [2:0] _T_139;$/;"	n
_T_140	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire [16:0] _T_140;$/;"	n
_T_141	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire [15:0] _T_141;$/;"	n
_T_145	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire  _T_145;$/;"	n
_T_152	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire  _T_152;$/;"	n
_T_154	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire [2:0] _T_154;$/;"	n
_T_155	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire [1:0] _T_155;$/;"	n
_T_159	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire [2:0] _T_159;$/;"	n
_T_16	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire  _T_16;$/;"	n
_T_160	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire [1:0] _T_160;$/;"	n
_T_162	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire  _T_162;$/;"	n
_T_163	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire [1:0] _T_163;$/;"	n
_T_167	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire  _T_167;$/;"	n
_T_19	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire  _T_19;$/;"	n
_T_28	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire [15:0] _T_28;$/;"	n
_T_29_RouteID	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire [15:0] _T_29_RouteID;$/;"	n
_T_30	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire [15:0] _T_30;$/;"	n
_T_37	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire  _T_37;$/;"	n
_T_38	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire  _T_38;$/;"	n
_T_39	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire  _T_39;$/;"	n
_T_41	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire  _T_41;$/;"	n
_T_45	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire  _T_45;$/;"	n
_T_46	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire  _T_46;$/;"	n
_T_47	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire  _T_47;$/;"	n
_T_47	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire [7:0] _T_47;$/;"	n
_T_48	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire [7:0] _T_48;$/;"	n
_T_49	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire  _T_49;$/;"	n
_T_51	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire  _T_51;$/;"	n
_T_51_0	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire [7:0] _T_51_0;$/;"	n
_T_51_1	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire [7:0] _T_51_1;$/;"	n
_T_52	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire  _T_52;$/;"	n
_T_53_0	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire [15:0] _T_53_0;$/;"	n
_T_53_1	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire [15:0] _T_53_1;$/;"	n
_T_53_2	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire [15:0] _T_53_2;$/;"	n
_T_56	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire  _T_56;$/;"	n
_T_56	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire [1:0] _T_56;$/;"	n
_T_57	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire  _T_57;$/;"	n
_T_58	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire [1:0] _T_58;$/;"	n
_T_6	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire  _T_6;$/;"	n
_T_60	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire  _T_60;$/;"	n
_T_62	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  reg  _T_62;$/;"	r
_T_62_0	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire [15:0] _T_62_0;$/;"	n
_T_62_1	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire [15:0] _T_62_1;$/;"	n
_T_65	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire  _T_65;$/;"	n
_T_66	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire  _T_66;$/;"	n
_T_69	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire  _T_69;$/;"	n
_T_71	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire  _T_71;$/;"	n
_T_71	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire [1:0] _T_71;$/;"	n
_T_72	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire  _T_72;$/;"	n
_T_75	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire  _T_75;$/;"	n
_T_76	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire  _T_76;$/;"	n
_T_77	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire  _T_77;$/;"	n
_T_79	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire  _T_79;$/;"	n
_T_83	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire  _T_83;$/;"	n
_T_85	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire  _T_85;$/;"	n
_T_88	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire  _T_88;$/;"	n
_T_89	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire  _T_89;$/;"	n
_T_89_0	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire [1:0] _T_89_0;$/;"	n
_T_89_1	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire [1:0] _T_89_1;$/;"	n
_T_90	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire [14:0] _T_90;$/;"	n
_T_91	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire  _T_91;$/;"	n
_T_91	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire [15:0] _T_91;$/;"	n
_T_92	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire  _T_92;$/;"	n
_T_93	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire  _T_93;$/;"	n
_T_96	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire  _T_96;$/;"	n
_T_97	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire  _T_97;$/;"	n
_T_98	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire [2:0] _T_98;$/;"	n
_T_99	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire [16:0] _T_99;$/;"	n
_Var	src/main/scala/config/cde/Parameters.scala	/^sealed abstract class _Var[T]$/;"	c
_VarKnob	src/main/scala/config/cde/Parameters.scala	/^final case class _VarKnob[T](kname:Any) extends _Var[T] {$/;"	c
_VarLet	src/main/scala/config/cde/Parameters.scala	/^final case class _VarLet[T](pname:Any,expr:Ex[T]) extends _Var[T] {$/;"	c
_View	src/main/scala/config/cde/Parameters.scala	/^  abstract class _View extends View {$/;"	c
_alter	src/main/scala/config/cde/Parameters.scala	/^  private def _alter(mask:(\/*field*\/Any,\/*site*\/View,\/*here*\/View,\/*up*\/View)=>Any) = {$/;"	m
_bindLet	src/main/scala/config/cde/Parameters.scala	/^  def _bindLet[T](pname:Any,expr:Ex[T]):Ex[T] = expr$/;"	m
_bindLet	src/main/scala/config/cde/Parameters.scala	/^  def _bindLet[T](pname:Any,expr:Ex[T]):Ex[T] = {$/;"	m
_bindLet	src/main/scala/config/cde/Parameters.scala	/^  def _bindLet[T](pname:Any,expr:Ex[T]):Ex[T]$/;"	m
_constrain	src/main/scala/config/cde/Parameters.scala	/^  def _constrain(c:Ex[Boolean]) = {$/;"	m
_constrain	src/main/scala/config/cde/Parameters.scala	/^  def _constrain(e:Ex[Boolean]) = {}$/;"	m
_constrain	src/main/scala/config/cde/Parameters.scala	/^  def _constrain(e:Ex[Boolean]):Unit$/;"	m
_constraints	src/main/scala/config/cde/Parameters.scala	/^  val _constraints = new mutable.HashSet[Ex[Boolean]]$/;"	l
_deft	src/main/scala/config/cde/Parameters.scala	/^    val _deft = deftSite$/;"	l
_eval	src/main/scala/config/cde/Parameters.scala	/^  def _eval[T](e:Ex[T]):T = {$/;"	m
_in	src/main/scala/config/cde/Expression.scala	/^  private def _in (x:List[IntEx]):Ex[Boolean] = {$/;"	m
_knobValue	src/main/scala/config/cde/Parameters.scala	/^  def _knobValue(kname:Any) = {$/;"	m
_knobValue	src/main/scala/config/cde/Parameters.scala	/^  def _knobValue(kname:Any):Any$/;"	m
_knobs	src/main/scala/config/cde/Parameters.scala	/^  val _knobs = new mutable.HashSet[Any]$/;"	l
_look	src/main/scala/config/cde/Parameters.scala	/^    private val _look: _Lookup$/;"	l
_look	src/main/scala/config/cde/Parameters.scala	/^    val _look = look$/;"	l
_otherView	src/main/scala/config/cde/Parameters.scala	/^  def _otherView(look:_Lookup, deftSite:View):View = {$/;"	m
_site	src/main/scala/config/cde/Parameters.scala	/^  private def _site() = _world._siteView(_look)$/;"	m
_siteView	src/main/scala/config/cde/Parameters.scala	/^  def _siteView(look:_Lookup):View = {$/;"	m
_topLook	src/main/scala/config/cde/Parameters.scala	/^  def _topLook():_Lookup = {$/;"	m
_world	src/main/scala/config/cde/Parameters.scala	/^    private val _world: World,$/;"	l
a	src/main/scala/FPU/FPUDiv.scala	/^  val a = Flipped(Decoupled(new DataBundle))$/;"	l
a	src/main/scala/node/TypCompute.scala	/^    val a = Flipped(Valid(gen))$/;"	l
a_R	src/main/scala/FPU/FPUDiv.scala	/^  val a_R = RegInit(DataBundle.default)$/;"	l
a_ar	src/main/scala/junctions/nasti.scala	/^      val a_ar = ar_arb.io.in(i)$/;"	l
a_aw	src/main/scala/junctions/nasti.scala	/^      val a_aw = aw_arb.io.in(i)$/;"	l
a_valid_R	src/main/scala/FPU/FPUDiv.scala	/^  val a_valid_R = RegInit(false.B)$/;"	l
abort	src/main/scala/accel/Cache.scala	/^  val abort = Input(Bool())$/;"	l
accel	src/main/scala/accel/Accelerator.scala	/^package accel$/;"	p
accel	src/main/scala/accel/Cache.scala	/^package accel$/;"	p
accel	src/main/scala/accel/CacheModel.scala	/^package accel$/;"	p
accel	src/main/scala/accel/Config.scala	/^package accel$/;"	p
accel	src/main/scala/accel/Core.scala	/^package accel$/;"	p
accel	src/main/scala/accel/DataBundleReg.scala	/^package accel$/;"	p
accel	src/main/scala/accel/Main.scala	/^package accel$/;"	p
accel	src/main/scala/accel/NastiMaster.scala	/^package accel$/;"	p
accel	src/main/scala/accel/NastiMemSlave.scala	/^package accel$/;"	p
accel	src/main/scala/accel/PerfectCacheModel.scala	/^package accel$/;"	p
accel	src/main/scala/accel/SimpleReg.scala	/^package accel$/;"	p
accel	src/main/scala/stack/InterleavedStack.scala	/^package accel$/;"	p
accel	src/main/scala/stack/StackMem.scala	/^package accel$/;"	p
accel	src/test/scala/accel/AccelTests.scala	/^package accel$/;"	p
accel	src/test/scala/accel/CacheTests.scala	/^package accel$/;"	p
accel.coredf	src/main/scala/accel/coredf/CoreDF.scala	/^package accel.coredf$/;"	p
accel.coredf	src/main/scala/accel/coredf/FilterDFCore.scala	/^package accel.coredf$/;"	p
accel.coredf	src/main/scala/accel/coredf/TestCacheDF.scala	/^package accel.coredf$/;"	p
accel.coredf	src/main/scala/accel/coredf/VecFilterDFCore.scala	/^package accel.coredf$/;"	p
accel.coredf	src/main/scala/accel/coredf/VecFilterNoKernDFCore.scala	/^package accel.coredf$/;"	p
accel.coredf	src/test/scala/accel/coredf/AccelTests01.scala	/^package accel.coredf$/;"	p
accel.coredf	src/test/scala/accel/coredf/FilterDFTests.scala	/^package accel.coredf$/;"	p
accel.coredf	src/test/scala/accel/coredf/VecFilterNoKernDFTests.scala	/^package accel.coredf$/;"	p
ack	src/main/scala/switches/DyserSwitch.scala	/^    val ack = Flipped(Decoupled(new AckBundle()))$/;"	l
ack_R	src/main/scala/switches/DyserSwitch.scala	/^  val ack_R = RegInit(false.B)$/;"	l
activate	src/main/scala/control/BasicBlock.scala	/^  val activate = Flipped(Decoupled(new ControlBundle))$/;"	l
activate	src/main/scala/loop/LoopBlock.scala	/^  val activate    = Decoupled(new ControlBundle())$/;"	l
activate_R	src/main/scala/loop/LoopBlock.scala	/^  val activate_R  = RegInit(ControlBundle.default)$/;"	l
activate_R_valid	src/main/scala/loop/LoopBlock.scala	/^  val activate_R_valid = RegInit(false.B)$/;"	l
active	src/main/scala/dataflow/filter/BasicFilter.scala	/^  val active = RegInit(init = false.B)$/;"	l
active	src/main/scala/dataflow/filter/VecFilter.scala	/^  val active = RegInit(init = false.B)$/;"	l
active	src/main/scala/interfaces/interfaces.scala	/^  def active(data:UInt=0.U)(implicit p: Parameters): DataBundle = {$/;"	m
active	src/main/scala/interfaces/interfaces.scala	/^  def active(taskID:UInt=0.U)(implicit p: Parameters): ControlBundle = {$/;"	m
activeID	src/main/scala/concurrent/TaskController.scala	/^  val activeID = RegInit(VecInit(Seq.fill(1<<tlen)(false.B)))$/;"	l
active_R	src/main/scala/control/BasicBlock.scala	/^  val active_R = RegInit(ControlBundle.default)$/;"	l
active_r	src/main/scala/dataflow/filter/BasicFilter.scala	/^  val active_r = RegInit(init = false.B)$/;"	l
active_r	src/main/scala/dataflow/filter/VecFilter.scala	/^  val active_r = RegInit(init = false.B)$/;"	l
active_valid_R	src/main/scala/control/BasicBlock.scala	/^  val active_valid_R = RegInit(false.B)$/;"	l
activity	scripts/extract_activity.py	/^activity = collections.defaultdict(list)$/;"	v
add	src/main/scala/dataflow/filter/BasicFilter.scala	/^    val add = Module(new ComputeNode(NumOuts = 1, ID = 0, opCode = "Add")(sign = false))$/;"	l
add	src/main/scala/dataflow/filter/VecFilter.scala	/^    val add = Module(new TypCompute(NumOuts = 1, ID = 0, opCode = "Add")(sign = false)(new vec3))$/;"	l
add	src/main/scala/switches/example/ex1.scala	/^  val add = Module(new ComputeNode(NumOuts = 1, ID = 0, opCode = "Add")(sign = false))$/;"	l
add0	src/main/scala/generator/test11_add.scala	/^  val add0 = Module (new ComputeNode(NumOuts = 1, ID = 0, opCode = "add")(sign=false))$/;"	l
add0_in	src/main/scala/generator/test11_add.scala	/^  val add0_in = Map($/;"	l
add1	src/main/scala/generator/cilk/bgemm_detach1.scala	/^  val add1 = Module (new ComputeNode(NumOuts = 1, ID = 1, opCode = "add")(sign=false))$/;"	l
add1	src/main/scala/generator/cilk/bgemm_detach2.scala	/^  val add1 = Module (new ComputeNode(NumOuts = 1, ID = 1, opCode = "add")(sign=false))$/;"	l
add10	src/main/scala/generator/cilk/cilk_for_test08_detach.scala	/^  val add10 = Module (new ComputeNode(NumOuts = 1, ID = 10, opCode = "add")(sign=false))$/;"	l
add10	src/main/scala/generator/test05.scala	/^  val add10 = Module (new ComputeNode(NumOuts = 1, ID = 10, opCode = "add")(sign=false))$/;"	l
add10	src/main/scala/generator/test06.scala	/^  val add10 = Module (new ComputeNode(NumOuts = 1, ID = 10, opCode = "add")(sign=false))$/;"	l
add10_in	src/main/scala/generator/cilk/cilk_for_test08_detach.scala	/^  val add10_in = Map($/;"	l
add10_in	src/main/scala/generator/test05.scala	/^  val add10_in = Map($/;"	l
add10_in	src/main/scala/generator/test06.scala	/^  val add10_in = Map($/;"	l
add11	src/main/scala/generator/cilk/cilk_for_test12_detach1.scala	/^  val add11 = Module (new ComputeNode(NumOuts = 1, ID = 11, opCode = "add")(sign=false))$/;"	l
add11	src/main/scala/generator/cilk/cilk_for_test12_detach2.scala	/^  val add11 = Module (new ComputeNode(NumOuts = 1, ID = 11, opCode = "add")(sign=false))$/;"	l
add11	src/main/scala/generator/cilk/stencil_detach1.scala	/^  val add11 = Module(new ComputeNode(NumOuts = 1, ID = 11, opCode = "add")(sign = false))$/;"	l
add11	src/main/scala/generator/test05b.scala	/^  val add11 = Module (new ComputeNode(NumOuts = 1, ID = 11, opCode = "add")(sign=false))$/;"	l
add11_in	src/main/scala/generator/cilk/cilk_for_test12_detach1.scala	/^  val add11_in = Map($/;"	l
add11_in	src/main/scala/generator/cilk/cilk_for_test12_detach2.scala	/^  val add11_in = Map($/;"	l
add11_in	src/main/scala/generator/cilk/stencil_detach1.scala	/^  val add11_in = Map($/;"	l
add11_in	src/main/scala/generator/test05b.scala	/^  val add11_in = Map($/;"	l
add12	src/main/scala/generator/cilk/cilk_for_test01.scala	/^  val add12 = Module (new ComputeNode(NumOuts = 1, ID = 12, opCode = "add")(sign=false))$/;"	l
add12	src/main/scala/generator/cilk/cilk_for_test07_detach.scala	/^  val add12 = Module (new ComputeNode(NumOuts = 1, ID = 12, opCode = "add")(sign=false))$/;"	l
add12	src/main/scala/generator/test10.scala	/^  val add12 = Module (new ComputeNode(NumOuts = 1, ID = 12, opCode = "add")(sign=false))$/;"	l
add12	src/main/scala/generator/test11.scala	/^  val add12 = Module (new ComputeNode(NumOuts = 1, ID = 12, opCode = "add")(sign=false))$/;"	l
add12_in	src/main/scala/generator/cilk/cilk_for_test01.scala	/^  val add12_in = Map($/;"	l
add12_in	src/main/scala/generator/cilk/cilk_for_test07_detach.scala	/^  val add12_in = Map($/;"	l
add12_in	src/main/scala/generator/test10.scala	/^  val add12_in = Map($/;"	l
add12_in	src/main/scala/generator/test11.scala	/^  val add12_in = Map($/;"	l
add13	src/main/scala/generator/cilk/cilk_for_test09.scala	/^  val add13 = Module(new ComputeNode(NumOuts = 1, ID = 13, opCode = "add")(sign = false))$/;"	l
add13	src/main/scala/generator/cilk/cilk_spawn_test02.scala	/^  val add13 = Module (new ComputeNode(NumOuts = 1, ID = 13, opCode = "add")(sign=false))$/;"	l
add13	src/main/scala/generator/cilk/mergesort.scala	/^  val add13 = Module (new ComputeNode(NumOuts = 1, ID = 13, opCode = "add")(sign=false))$/;"	l
add13	src/main/scala/generator/cilk/stencil_inner.scala	/^  val add13 = Module(new ComputeNode(NumOuts = 1, ID = 13, opCode = "add")(sign = false))$/;"	l
add13_in	src/main/scala/generator/cilk/cilk_for_test09.scala	/^  val add13_in = Map($/;"	l
add13_in	src/main/scala/generator/cilk/cilk_spawn_test02.scala	/^  val add13_in = Map($/;"	l
add13_in	src/main/scala/generator/cilk/mergesort.scala	/^  val add13_in = Map($/;"	l
add13_in	src/main/scala/generator/cilk/stencil_inner.scala	/^  val add13_in = Map($/;"	l
add14	src/main/scala/generator/cilk/cilk_for_test12_detach1.scala	/^  val add14 = Module (new ComputeNode(NumOuts = 1, ID = 14, opCode = "add")(sign=false))$/;"	l
add14	src/main/scala/generator/cilk/stencil_detach1.scala	/^  val add14 = Module(new ComputeNode(NumOuts = 1, ID = 14, opCode = "add")(sign = false))$/;"	l
add14_in	src/main/scala/generator/cilk/cilk_for_test12_detach1.scala	/^  val add14_in = Map($/;"	l
add14_in	src/main/scala/generator/cilk/stencil_detach1.scala	/^  val add14_in = Map($/;"	l
add15	src/main/scala/generator/test05.scala	/^  val add15 = Module (new ComputeNode(NumOuts = 1, ID = 15, opCode = "add")(sign=false))$/;"	l
add15_in	src/main/scala/generator/test05.scala	/^  val add15_in = Map($/;"	l
add16	src/main/scala/generator/cilk/cilk_for_test08_detach.scala	/^  val add16 = Module (new ComputeNode(NumOuts = 1, ID = 16, opCode = "add")(sign=false))$/;"	l
add16_in	src/main/scala/generator/cilk/cilk_for_test08_detach.scala	/^  val add16_in = Map($/;"	l
add17	src/main/scala/generator/cilk/bgemm_detach3.scala	/^  val add17 = Module (new ComputeNode(NumOuts = 1, ID = 17, opCode = "add")(sign=false))$/;"	l
add17	src/main/scala/generator/cilk/stencil_detach1.scala	/^  val add17 = Module(new ComputeNode(NumOuts = 1, ID = 17, opCode = "add")(sign = false))$/;"	l
add17	src/main/scala/generator/cilk/stencil_inner.scala	/^  val add17 = Module(new ComputeNode(NumOuts = 1, ID = 17, opCode = "add")(sign = false))$/;"	l
add17_in	src/main/scala/generator/cilk/bgemm_detach3.scala	/^  val add17_in = Map($/;"	l
add17_in	src/main/scala/generator/cilk/stencil_detach1.scala	/^  val add17_in = Map($/;"	l
add17_in	src/main/scala/generator/cilk/stencil_inner.scala	/^  val add17_in = Map($/;"	l
add18	src/main/scala/generator/cilk/bgemm_detach3.scala	/^  val add18 = Module (new ComputeNode(NumOuts = 1, ID = 18, opCode = "add")(sign=false))$/;"	l
add18	src/main/scala/generator/cilk/cilk_for_test08_detach.scala	/^  val add18 = Module (new ComputeNode(NumOuts = 1, ID = 18, opCode = "add")(sign=false))$/;"	l
add18_in	src/main/scala/generator/cilk/bgemm_detach3.scala	/^  val add18_in = Map($/;"	l
add18_in	src/main/scala/generator/cilk/cilk_for_test08_detach.scala	/^  val add18_in = Map($/;"	l
add19	src/main/scala/generator/test15.scala	/^  val add19 = Module (new ComputeNode(NumOuts = 1, ID = 19, opCode = "add")(sign=false))$/;"	l
add19_in	src/main/scala/generator/test15.scala	/^  val add19_in = Map($/;"	l
add1_in	src/main/scala/generator/cilk/bgemm_detach1.scala	/^  val add1_in = Map($/;"	l
add1_in	src/main/scala/generator/cilk/bgemm_detach2.scala	/^  val add1_in = Map($/;"	l
add2	src/main/scala/generator/cilk/cilk_spawn_test01.scala	/^  val add2 = Module (new ComputeNode(NumOuts = 1, ID = 2, opCode = "add")(sign=false))$/;"	l
add2	src/main/scala/generator/cilk/fib_continue.scala	/^  val add2 = Module (new ComputeNode(NumOuts = 1, ID = 2, opCode = "add")(sign=false))$/;"	l
add20	src/main/scala/generator/cilk/stencil_inner.scala	/^  val add20 = Module(new ComputeNode(NumOuts = 1, ID = 20, opCode = "add")(sign = false))$/;"	l
add20_in	src/main/scala/generator/cilk/stencil_inner.scala	/^  val add20_in = Map($/;"	l
add22	src/main/scala/generator/cilk/bgemm_detach3.scala	/^  val add22 = Module (new ComputeNode(NumOuts = 1, ID = 22, opCode = "add")(sign=false))$/;"	l
add22_in	src/main/scala/generator/cilk/bgemm_detach3.scala	/^  val add22_in = Map($/;"	l
add23	src/main/scala/generator/cilk/bgemm_detach3.scala	/^  val add23 = Module (new ComputeNode(NumOuts = 1, ID = 23, opCode = "add")(sign=false))$/;"	l
add23_in	src/main/scala/generator/cilk/bgemm_detach3.scala	/^  val add23_in = Map($/;"	l
add24	src/main/scala/generator/cilk/cilk_for_test08_detach.scala	/^  val add24 = Module (new ComputeNode(NumOuts = 1, ID = 24, opCode = "add")(sign=false))$/;"	l
add24	src/main/scala/generator/test15.scala	/^  val add24 = Module (new ComputeNode(NumOuts = 1, ID = 24, opCode = "add")(sign=false))$/;"	l
add24_in	src/main/scala/generator/cilk/cilk_for_test08_detach.scala	/^  val add24_in = Map($/;"	l
add24_in	src/main/scala/generator/test15.scala	/^  val add24_in = Map($/;"	l
add25	src/main/scala/generator/cilk/stencil_inner.scala	/^  val add25 = Module(new ComputeNode(NumOuts = 1, ID = 25, opCode = "add")(sign = false))$/;"	l
add25_in	src/main/scala/generator/cilk/stencil_inner.scala	/^  val add25_in = Map($/;"	l
add26	src/main/scala/generator/cilk/bgemm_detach3.scala	/^  val add26 = Module (new ComputeNode(NumOuts = 1, ID = 26, opCode = "add")(sign=false))$/;"	l
add26	src/main/scala/generator/cilk/cilk_for_test08_detach.scala	/^  val add26 = Module (new ComputeNode(NumOuts = 1, ID = 26, opCode = "add")(sign=false))$/;"	l
add26_in	src/main/scala/generator/cilk/bgemm_detach3.scala	/^  val add26_in = Map($/;"	l
add26_in	src/main/scala/generator/cilk/cilk_for_test08_detach.scala	/^  val add26_in = Map($/;"	l
add27	src/main/scala/generator/test15.scala	/^  val add27 = Module (new ComputeNode(NumOuts = 1, ID = 27, opCode = "add")(sign=false))$/;"	l
add27_in	src/main/scala/generator/test15.scala	/^  val add27_in = Map($/;"	l
add29	src/main/scala/generator/cilk/bgemm_detach3.scala	/^  val add29 = Module (new ComputeNode(NumOuts = 1, ID = 29, opCode = "add")(sign=false))$/;"	l
add29_in	src/main/scala/generator/cilk/bgemm_detach3.scala	/^  val add29_in = Map($/;"	l
add2_in	src/main/scala/generator/cilk/cilk_spawn_test01.scala	/^  val add2_in = Map($/;"	l
add2_in	src/main/scala/generator/cilk/fib_continue.scala	/^  val add2_in = Map($/;"	l
add3	src/main/scala/generator/cilk/cilk_spawn_test02.scala	/^  val add3 = Module (new ComputeNode(NumOuts = 1, ID = 3, opCode = "add")(sign=false))$/;"	l
add3	src/main/scala/generator/test02.scala	/^  val add3 = Module (new ComputeNode(NumOuts = 1, ID = 3, opCode = "add")(sign=false))$/;"	l
add32	src/main/scala/generator/cilk/bgemm_detach3.scala	/^  val add32 = Module (new ComputeNode(NumOuts = 1, ID = 32, opCode = "add")(sign=false))$/;"	l
add32	src/main/scala/generator/test15.scala	/^  val add32 = Module (new ComputeNode(NumOuts = 1, ID = 32, opCode = "add")(sign=false))$/;"	l
add32_in	src/main/scala/generator/cilk/bgemm_detach3.scala	/^  val add32_in = Map($/;"	l
add32_in	src/main/scala/generator/test15.scala	/^  val add32_in = Map($/;"	l
add34	src/main/scala/generator/cilk/mergesort_merge.scala	/^  val add34 = Module (new ComputeNode(NumOuts = 1, ID = 34, opCode = "add")(sign=false))$/;"	l
add34	src/main/scala/generator/test15.scala	/^  val add34 = Module (new ComputeNode(NumOuts = 1, ID = 34, opCode = "add")(sign=false))$/;"	l
add34_in	src/main/scala/generator/cilk/mergesort_merge.scala	/^  val add34_in = Map($/;"	l
add34_in	src/main/scala/generator/test15.scala	/^  val add34_in = Map($/;"	l
add36	src/main/scala/generator/test15.scala	/^  val add36 = Module (new ComputeNode(NumOuts = 1, ID = 36, opCode = "add")(sign=false))$/;"	l
add36_in	src/main/scala/generator/test15.scala	/^  val add36_in = Map($/;"	l
add3_in	src/main/scala/generator/cilk/cilk_spawn_test02.scala	/^  val add3_in = Map($/;"	l
add3_in	src/main/scala/generator/test02.scala	/^  val add3_in = Map($/;"	l
add4	src/main/scala/generator/cilk/cilk_for_test04_detach.scala	/^  val add4 = Module (new ComputeNode(NumOuts = 1, ID = 4, opCode = "add")(sign=false))$/;"	l
add4	src/main/scala/generator/cilk/stencil_inner.scala	/^  val add4 = Module(new ComputeNode(NumOuts = 1, ID = 4, opCode = "add")(sign = false))$/;"	l
add40	src/main/scala/generator/cilk/mergesort_merge.scala	/^  val add40 = Module (new ComputeNode(NumOuts = 1, ID = 40, opCode = "add")(sign=false))$/;"	l
add40_in	src/main/scala/generator/cilk/mergesort_merge.scala	/^  val add40_in = Map($/;"	l
add45	src/main/scala/generator/cilk/mergesort_merge.scala	/^  val add45 = Module (new ComputeNode(NumOuts = 1, ID = 45, opCode = "add")(sign=false))$/;"	l
add45_in	src/main/scala/generator/cilk/mergesort_merge.scala	/^  val add45_in = Map($/;"	l
add4_in	src/main/scala/generator/cilk/cilk_for_test04_detach.scala	/^  val add4_in = Map($/;"	l
add4_in	src/main/scala/generator/cilk/stencil_inner.scala	/^  val add4_in = Map($/;"	l
add5	src/main/scala/generator/cilk/cilk_for_test04.scala	/^  val add5 = Module (new ComputeNode(NumOuts = 1, ID = 5, opCode = "add")(sign=false))$/;"	l
add5	src/main/scala/generator/cilk/cilk_for_test05.scala	/^  val add5 = Module (new ComputeNode(NumOuts = 1, ID = 5, opCode = "add")(sign=false))$/;"	l
add5	src/main/scala/generator/cilk/cilk_for_test06.scala	/^  val add5 = Module(new ComputeNode(NumOuts = 1, ID = 5, opCode = "add")(sign = false))$/;"	l
add5	src/main/scala/generator/cilk/cilk_for_test06_detach.scala	/^  val add5 = Module(new ComputeNode(NumOuts = 1, ID = 5, opCode = "add")(sign = false))$/;"	l
add5	src/main/scala/generator/cilk/cilk_for_test07.scala	/^  val add5 = Module (new ComputeNode(NumOuts = 2, ID = 5, opCode = "add")(sign=false))$/;"	l
add5	src/main/scala/generator/cilk/cilk_for_test08.scala	/^  val add5 = Module (new ComputeNode(NumOuts = 2, ID = 5, opCode = "add")(sign=false))$/;"	l
add5	src/main/scala/generator/cilk/cilk_for_test09_inner.scala	/^  val add5 = Module (new ComputeNode(NumOuts = 1, ID = 5, opCode = "add")(sign=false))$/;"	l
add5	src/main/scala/generator/cilk/cilk_for_test12_detach1.scala	/^  val add5 = Module (new ComputeNode(NumOuts = 1, ID = 5, opCode = "add")(sign=false))$/;"	l
add5	src/main/scala/generator/cilk/cilk_for_test12_detach2.scala	/^  val add5 = Module (new ComputeNode(NumOuts = 1, ID = 5, opCode = "add")(sign=false))$/;"	l
add5	src/main/scala/generator/cilk/cilk_spawn_test01.scala	/^  val add5 = Module (new ComputeNode(NumOuts = 1, ID = 5, opCode = "add")(sign=false))$/;"	l
add5	src/main/scala/generator/cilk/stencil.scala	/^  val add5 = Module(new ComputeNode(NumOuts = 1, ID = 5, opCode = "add")(sign = false))$/;"	l
add5	src/main/scala/generator/test03.scala	/^  val add5 = Module(new ComputeNode(NumOuts = 1, ID = 5, opCode = "add")(sign = false))$/;"	l
add5	src/main/scala/generator/test08.scala	/^  val add5 = Module (new ComputeNode(NumOuts = 1, ID = 5, opCode = "add")(sign=false))$/;"	l
add5	src/main/scala/generator/test09.scala	/^  val add5 = Module (new ComputeNode(NumOuts = 1, ID = 5, opCode = "add")(sign=false))$/;"	l
add5	src/main/scala/generator/test12_inner.scala	/^  val add5 = Module (new ComputeNode(NumOuts = 1, ID = 5, opCode = "add")(sign=false))$/;"	l
add5	src/main/scala/generator/test14_inner.scala	/^  val add5 = Module (new ComputeNode(NumOuts = 1, ID = 5, opCode = "add")(sign=false))$/;"	l
add5_in	src/main/scala/generator/cilk/cilk_for_test04.scala	/^  val add5_in = Map($/;"	l
add5_in	src/main/scala/generator/cilk/cilk_for_test05.scala	/^  val add5_in = Map($/;"	l
add5_in	src/main/scala/generator/cilk/cilk_for_test06.scala	/^  val add5_in = Map($/;"	l
add5_in	src/main/scala/generator/cilk/cilk_for_test06_detach.scala	/^  val add5_in = Map($/;"	l
add5_in	src/main/scala/generator/cilk/cilk_for_test07.scala	/^  val add5_in = Map($/;"	l
add5_in	src/main/scala/generator/cilk/cilk_for_test08.scala	/^  val add5_in = Map($/;"	l
add5_in	src/main/scala/generator/cilk/cilk_for_test09_inner.scala	/^  val add5_in = Map($/;"	l
add5_in	src/main/scala/generator/cilk/cilk_for_test12_detach1.scala	/^  val add5_in = Map($/;"	l
add5_in	src/main/scala/generator/cilk/cilk_for_test12_detach2.scala	/^  val add5_in = Map($/;"	l
add5_in	src/main/scala/generator/cilk/cilk_spawn_test01.scala	/^  val add5_in = Map($/;"	l
add5_in	src/main/scala/generator/cilk/stencil.scala	/^  val add5_in = Map($/;"	l
add5_in	src/main/scala/generator/test03.scala	/^  val add5_in = Map($/;"	l
add5_in	src/main/scala/generator/test08.scala	/^  val add5_in = Map($/;"	l
add5_in	src/main/scala/generator/test09.scala	/^  val add5_in = Map($/;"	l
add5_in	src/main/scala/generator/test12_inner.scala	/^  val add5_in = Map($/;"	l
add5_in	src/main/scala/generator/test14_inner.scala	/^  val add5_in = Map($/;"	l
add6	src/main/scala/generator/cilk/bgemm.scala	/^  val add6 = Module (new ComputeNode(NumOuts = 1, ID = 6, opCode = "add")(sign=false))$/;"	l
add6	src/main/scala/generator/cilk/bgemm_detach3.scala	/^  val add6 = Module (new ComputeNode(NumOuts = 1, ID = 6, opCode = "add")(sign=false))$/;"	l
add6	src/main/scala/generator/cilk/cilk_for_test06_detach_2.scala	/^  val add6 = Module(new ComputeNode(NumOuts = 1, ID = 6, opCode = "add")(sign = false))$/;"	l
add6	src/main/scala/generator/cilk/stencil_inner.scala	/^  val add6 = Module(new ComputeNode(NumOuts = 1, ID = 6, opCode = "add")(sign = false))$/;"	l
add6	src/main/scala/generator/test05b.scala	/^  val add6 = Module (new ComputeNode(NumOuts = 1, ID = 6, opCode = "add")(sign=false))$/;"	l
add6	src/main/scala/generator/test05c.scala	/^  val add6 = Module (new ComputeNode(NumOuts = 1, ID = 6, opCode = "add")(sign=false))$/;"	l
add6	src/main/scala/generator/test12.scala	/^  val add6 = Module (new ComputeNode(NumOuts = 1, ID = 6, opCode = "add")(sign=false))$/;"	l
add6	src/main/scala/generator/test14.scala	/^  val add6 = Module (new ComputeNode(NumOuts = 1, ID = 6, opCode = "add")(sign=false))$/;"	l
add6_in	src/main/scala/generator/cilk/bgemm.scala	/^  val add6_in = Map($/;"	l
add6_in	src/main/scala/generator/cilk/bgemm_detach3.scala	/^  val add6_in = Map($/;"	l
add6_in	src/main/scala/generator/cilk/cilk_for_test06_detach_2.scala	/^  val add6_in = Map($/;"	l
add6_in	src/main/scala/generator/cilk/stencil_inner.scala	/^  val add6_in = Map($/;"	l
add6_in	src/main/scala/generator/test05b.scala	/^  val add6_in = Map($/;"	l
add6_in	src/main/scala/generator/test05c.scala	/^  val add6_in = Map($/;"	l
add6_in	src/main/scala/generator/test12.scala	/^  val add6_in = Map($/;"	l
add6_in	src/main/scala/generator/test14.scala	/^  val add6_in = Map($/;"	l
add7	src/main/scala/generator/cilk/cilk_for_test09_inner.scala	/^  val add7 = Module (new ComputeNode(NumOuts = 1, ID = 7, opCode = "add")(sign=false))$/;"	l
add7	src/main/scala/generator/cilk/cilk_for_test12.scala	/^  val add7 = Module (new ComputeNode(NumOuts = 1, ID = 7, opCode = "add")(sign=false))$/;"	l
add7	src/main/scala/generator/cilk/cilk_spawn_test02.scala	/^  val add7 = Module (new ComputeNode(NumOuts = 1, ID = 7, opCode = "add")(sign=false))$/;"	l
add7	src/main/scala/generator/test08.scala	/^  val add7 = Module (new ComputeNode(NumOuts = 1, ID = 7, opCode = "add")(sign=false))$/;"	l
add7	src/main/scala/generator/test09.scala	/^  val add7 = Module (new ComputeNode(NumOuts = 1, ID = 7, opCode = "add")(sign=false))$/;"	l
add7	src/main/scala/generator/test12_inner.scala	/^  val add7 = Module (new ComputeNode(NumOuts = 1, ID = 7, opCode = "add")(sign=false))$/;"	l
add7	src/main/scala/generator/test14_inner.scala	/^  val add7 = Module (new ComputeNode(NumOuts = 1, ID = 7, opCode = "add")(sign=false))$/;"	l
add7_in	src/main/scala/generator/cilk/cilk_for_test09_inner.scala	/^  val add7_in = Map($/;"	l
add7_in	src/main/scala/generator/cilk/cilk_for_test12.scala	/^  val add7_in = Map($/;"	l
add7_in	src/main/scala/generator/cilk/cilk_spawn_test02.scala	/^  val add7_in = Map($/;"	l
add7_in	src/main/scala/generator/test08.scala	/^  val add7_in = Map($/;"	l
add7_in	src/main/scala/generator/test09.scala	/^  val add7_in = Map($/;"	l
add7_in	src/main/scala/generator/test12_inner.scala	/^  val add7_in = Map($/;"	l
add7_in	src/main/scala/generator/test14_inner.scala	/^  val add7_in = Map($/;"	l
add8	src/main/scala/generator/cilk/bgemm_detach1.scala	/^  val add8 = Module (new ComputeNode(NumOuts = 1, ID = 8, opCode = "add")(sign=false))$/;"	l
add8	src/main/scala/generator/cilk/bgemm_detach2.scala	/^  val add8 = Module (new ComputeNode(NumOuts = 1, ID = 8, opCode = "add")(sign=false))$/;"	l
add8	src/main/scala/generator/cilk/bgemm_detach3.scala	/^  val add8 = Module (new ComputeNode(NumOuts = 1, ID = 8, opCode = "add")(sign=false))$/;"	l
add8	src/main/scala/generator/cilk/cilk_for_test02.scala	/^  val add8 = Module (new ComputeNode(NumOuts = 1, ID = 8, opCode = "add")(sign=false))$/;"	l
add8	src/main/scala/generator/cilk/cilk_for_test08_detach.scala	/^  val add8 = Module (new ComputeNode(NumOuts = 1, ID = 8, opCode = "add")(sign=false))$/;"	l
add8	src/main/scala/generator/cilk/cilk_spawn_test01.scala	/^  val add8 = Module (new ComputeNode(NumOuts = 1, ID = 8, opCode = "add")(sign=false))$/;"	l
add8	src/main/scala/generator/cilk/stencil_detach1.scala	/^  val add8 = Module(new ComputeNode(NumOuts = 1, ID = 8, opCode = "add")(sign = false))$/;"	l
add8	src/main/scala/generator/test03.scala	/^  val add8 = Module(new ComputeNode(NumOuts = 1, ID = 8, opCode = "add")(sign = false))$/;"	l
add8	src/main/scala/generator/test05c.scala	/^  val add8 = Module (new ComputeNode(NumOuts = 1, ID = 8, opCode = "add")(sign=false))$/;"	l
add8	src/main/scala/generator/test10.scala	/^  val add8 = Module (new ComputeNode(NumOuts = 1, ID = 8, opCode = "add")(sign=false))$/;"	l
add8	src/main/scala/generator/test12.scala	/^  val add8 = Module (new ComputeNode(NumOuts = 1, ID = 8, opCode = "add")(sign=false))$/;"	l
add8	src/main/scala/generator/test14.scala	/^  val add8 = Module (new ComputeNode(NumOuts = 1, ID = 8, opCode = "add")(sign=false))$/;"	l
add8_in	src/main/scala/generator/cilk/bgemm_detach1.scala	/^  val add8_in = Map($/;"	l
add8_in	src/main/scala/generator/cilk/bgemm_detach2.scala	/^  val add8_in = Map($/;"	l
add8_in	src/main/scala/generator/cilk/bgemm_detach3.scala	/^  val add8_in = Map($/;"	l
add8_in	src/main/scala/generator/cilk/cilk_for_test02.scala	/^  val add8_in = Map($/;"	l
add8_in	src/main/scala/generator/cilk/cilk_for_test08_detach.scala	/^  val add8_in = Map($/;"	l
add8_in	src/main/scala/generator/cilk/cilk_spawn_test01.scala	/^  val add8_in = Map($/;"	l
add8_in	src/main/scala/generator/cilk/stencil_detach1.scala	/^  val add8_in = Map($/;"	l
add8_in	src/main/scala/generator/test03.scala	/^  val add8_in = Map($/;"	l
add8_in	src/main/scala/generator/test05c.scala	/^  val add8_in = Map($/;"	l
add8_in	src/main/scala/generator/test10.scala	/^  val add8_in = Map($/;"	l
add8_in	src/main/scala/generator/test12.scala	/^  val add8_in = Map($/;"	l
add8_in	src/main/scala/generator/test14.scala	/^  val add8_in = Map($/;"	l
add9	src/main/scala/generator/cilk/bgemm_detach3.scala	/^  val add9 = Module (new ComputeNode(NumOuts = 1, ID = 9, opCode = "add")(sign=false))$/;"	l
add9	src/main/scala/generator/cilk/cilk_for_test09.scala	/^  val add9 = Module(new ComputeNode(NumOuts = 1, ID = 9, opCode = "add")(sign = false))$/;"	l
add9_in	src/main/scala/generator/cilk/bgemm_detach3.scala	/^  val add9_in = Map($/;"	l
add9_in	src/main/scala/generator/cilk/cilk_for_test09.scala	/^  val add9_in = Map($/;"	l
addConstraints	src/main/scala/config/cde/Config.scala	/^  def addConstraints(that: List[Constraint]):List[Constraint] = {$/;"	m
addDF	src/main/scala/accel/coredf/CoreDF.scala	/^  val addDF = Module(new Add01DF())$/;"	l
addDefinitions	src/main/scala/config/cde/Config.scala	/^  def addDefinitions(that: World.TopDefs): World.TopDefs = {$/;"	m
addKnobValues	src/main/scala/config/cde/Config.scala	/^  def addKnobValues(that: Any=>Any): Any=>Any = { case x =>$/;"	m
addModule1	src/test/scala/concurrent/DecoupledTaskTest.scala	/^  val addModule1 = Module(new ComputeNode(NumOuts = 1, ID = 0, opCode = "Add")(sign = false))$/;"	l
addModule2	src/test/scala/concurrent/DecoupledTaskTest.scala	/^  val addModule2 = Module(new ComputeNode(NumOuts = 1, ID = 1, opCode = "Add")(sign = false))$/;"	l
addModule3	src/test/scala/concurrent/DecoupledTaskTest.scala	/^  val addModule3 = Module(new ComputeNode(NumOuts = 1, ID = 2, opCode = "Add")(sign = false))$/;"	l
addToDump	src/main/scala/config/cde/Dump.scala	/^  def addToDump(key:Any,value:Any) = dump += ((key,value))$/;"	m
add_result_reg	src/main/scala/accel/coredf/CoreDF.scala	/^  val add_result_reg = Reg(Decoupled(new DataBundle))$/;"	l
add_result_reg	src/main/scala/accel/coredf/TestCacheDF.scala	/^  val add_result_reg = Reg(UInt(xlen.W))$/;"	l
adder	src/test/scala/concurrent/DecoupledTaskTest.scala	/^    val adder = Module(new DecoupledChildDF(c))$/;"	l
addition	src/main/scala/node/TypCompute.scala	/^      def addition(l: mat2x2, r: mat2x2)(implicit p: Parameters): mat2x2 = {$/;"	m
addition	src/main/scala/node/TypCompute.scala	/^      def addition(l: vec2, r: vec2)(implicit p: Parameters): vec2 = {$/;"	m
addition	src/main/scala/node/TypCompute.scala	/^      def addition(l: vec3, r: vec3)(implicit p: Parameters): vec3 = {$/;"	m
addition	src/main/scala/node/TypCompute.scala	/^    def addition(l: T, r: T)(implicit p: Parameters): T$/;"	m
addition	src/main/scala/node/TypCompute.scala	/^    def addition[T](l: T, r: T)(implicit op: OperatorLike[T], p: Parameters): T = op.addition(l, r)$/;"	m
addr	src/main/scala/accel/Cache.scala	/^  val addr     = io.cpu.req.bits.addr$/;"	l
addr	src/main/scala/accel/Cache.scala	/^  val addr    = UInt(xlen.W)$/;"	l
addr	src/main/scala/accel/NastiMaster.scala	/^  val addr = UInt(xlen.W)$/;"	l
addr	src/main/scala/accel/NastiMemSlave.scala	/^  val addr = UInt(nastiXAddrBits.W)$/;"	l
addr	src/main/scala/interfaces/interfaces.scala	/^  val addr    = UInt(xlen.W)$/;"	l
addr	src/main/scala/junctions/nasti.scala	/^  val addr   = UInt(width = nastiXAddrBits)$/;"	l
addr	src/main/scala/stack/StackMem.scala	/^  val addr = io.req.bits.addr(wordindex + log2Ceil(size) - 1, wordindex)$/;"	l
addr	src/test/scala/generator/cilk/bgemm_test.scala	/^    val addr = Input(UInt(nastiXAddrBits.W))  \/\/ Initialization address$/;"	l
addr	src/test/scala/generator/cilk/cilk_for_test04_test.scala	/^    val addr = Input(UInt(nastiXAddrBits.W))$/;"	l
addr	src/test/scala/generator/cilk/cilk_for_test06_test.scala	/^    val addr = Input(UInt(nastiXAddrBits.W)) \/\/ Initialization address$/;"	l
addr	src/test/scala/generator/cilk/cilk_for_test07_test.scala	/^    val addr = Input(UInt(nastiXAddrBits.W))  \/\/ Initialization address$/;"	l
addr	src/test/scala/generator/cilk/cilk_for_test08_test.scala	/^    val addr = Input(UInt(nastiXAddrBits.W))  \/\/ Initialization address$/;"	l
addr	src/test/scala/generator/cilk/cilk_for_test09_test.scala	/^    val addr = Input(UInt(nastiXAddrBits.W))  \/\/ Initialization address$/;"	l
addr	src/test/scala/generator/cilk/cilk_for_test12_test.scala	/^    val addr = Input(UInt(nastiXAddrBits.W))$/;"	l
addr	src/test/scala/generator/cilk/fib_test.scala	/^    val addr = Input(UInt(nastiXAddrBits.W))$/;"	l
addr	src/test/scala/generator/cilk/mergesort_test.scala	/^    val addr = Input(UInt(nastiXAddrBits.W))$/;"	l
addr	src/test/scala/generator/cilk/stencil_test.scala	/^    val addr = Input(UInt(nastiXAddrBits.W))$/;"	l
addr	src/test/scala/generator/test05_test.scala	/^    val addr = Input(UInt(nastiXAddrBits.W))$/;"	l
addr	src/test/scala/generator/test15_test.scala	/^    val addr = Input(UInt(nastiXAddrBits.W))$/;"	l
addrState	src/main/scala/accel/NastiMaster.scala	/^  val addrState = RegInit(sAIdle); \/\/ Address channel state$/;"	l
addrVec	src/test/scala/generator/cilk/cilk_for_test05_test.scala	/^  val addrVec = VecInit( 0.U, 1.U, 2.U, 3.U, 4.U, 5.U, 6.U, 7.U, 8.U, 9.U,$/;"	l
addrVec	src/test/scala/generator/test10_test.scala	/^  val addrVec = VecInit(0.U,1.U,2.U,3.U)$/;"	l
addrVec	src/test/scala/generator/test11_test.scala	/^  val addrVec = VecInit(0.U,1.U,2.U,3.U)$/;"	l
addrVec	src/test/scala/generator/test12_test.scala	/^  val addrVec = VecInit(0.U, 1.U, 2.U, 3.U)$/;"	l
addr_R	src/main/scala/node/LoadSimple.scala	/^  val addr_R = RegInit(DataBundle.default)$/;"	l
addr_R	src/main/scala/node/StoreNode.scala	/^  val addr_R = RegInit(DataBundle.default)$/;"	l
addr_R	src/main/scala/node/StoreSimple.scala	/^  val addr_R = RegInit(DataBundle.default)$/;"	l
addr_R	src/main/scala/node/TypLoad.scala	/^  val addr_R = RegInit(DataBundle.default)$/;"	l
addr_R	src/main/scala/node/TypStore.scala	/^  val addr_R = RegInit(DataBundle.default)$/;"	l
addr_reg	src/main/scala/accel/Cache.scala	/^  val addr_reg = Reg(io.cpu.req.bits.addr.cloneType)$/;"	l
addr_valid_R	src/main/scala/node/LoadSimple.scala	/^  val addr_valid_R = RegInit(false.B)$/;"	l
addr_valid_R	src/main/scala/node/StoreNode.scala	/^  val addr_valid_R = RegInit(false.B)$/;"	l
addr_valid_R	src/main/scala/node/StoreSimple.scala	/^  val addr_valid_R = RegInit(false.B)$/;"	l
addr_valid_R	src/main/scala/node/TypLoad.scala	/^  val addr_valid_R = RegInit(false.B)$/;"	l
addr_valid_R	src/main/scala/node/TypStore.scala	/^  val addr_valid_R = RegInit(false.B)$/;"	l
address	src/main/scala/interfaces/interfaces.scala	/^  val address = UInt((xlen - 10).W)$/;"	l
address	src/main/scala/interfaces/interfaces.scala	/^  val address = UInt(xlen.W)$/;"	l
alignment	src/main/scala/node/helpers.scala	/^      val alignment = Cat(address(log2Ceil(xlen\/8)-1,0),0.U(3.W))$/;"	l
alignment	src/main/scala/node/helpers.scala	/^      val alignment = address(log2Ceil(xlen\/8)-1,0)$/;"	l
allReady	src/main/scala/control/BasicBlock.scala	/^  val allReady = io.Out.map(_.ready).reduceLeft(_ && _)$/;"	l
allValid	src/main/scala/junctions/SplitDecoupled.scala	/^    val allValid = outputValidReg(i).reduceLeft(_ || _)$/;"	l
allValid	src/main/scala/junctions/SplitDecoupled.scala	/^  val allValid = for(i <- argTypes.indices) yield {$/;"	l
allValid	src/main/scala/loop/LoopBlock.scala	/^    val allValid = liveIn_R_valid(i).reduceLeft(_ || _)$/;"	l
allValid	src/main/scala/loop/LoopBlock.scala	/^  val allValid = for(i <- NumIns.indices) yield {$/;"	l
alloc_arb	src/main/scala/memory/ReadMemoryController.scala	/^  val alloc_arb = Module(new Arbiter(Bool(), MLPSize))$/;"	l
alloc_arb	src/main/scala/memory/ReadTypMemoryController.scala	/^  val alloc_arb = Module(new Arbiter(Bool(), MLPSize))$/;"	l
alloc_arb	src/main/scala/memory/WriteMemoryController.scala	/^  val alloc_arb = Module(new Arbiter(Bool(), MLPSize))$/;"	l
alloc_arb	src/main/scala/memory/WriteTypMemoryController.scala	/^  val alloc_arb = Module(new LockingRRArbiter(Bool(),MLPSize,count=Beats))$/;"	l
alloc_arb_io_in_0_ready	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire  alloc_arb_io_in_0_ready;$/;"	n
alloc_arb_io_in_0_valid	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire  alloc_arb_io_in_0_valid;$/;"	n
alloc_arb_io_in_1_ready	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire  alloc_arb_io_in_1_ready;$/;"	n
alloc_arb_io_in_1_valid	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire  alloc_arb_io_in_1_valid;$/;"	n
alloc_arb_io_out_ready	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire  alloc_arb_io_out_ready;$/;"	n
alloc_arb_io_out_valid	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire  alloc_arb_io_out_valid;$/;"	n
alloca0	src/main/scala/generator/cilk/cilk_for_test09.scala	/^  val alloca0 = Module(new AllocaNode(NumOuts = 4, RouteID = 0, ID = 0))$/;"	l
alloca0	src/main/scala/generator/cilk/cilk_for_test12.scala	/^  val alloca0 = Module(new AllocaNode(NumOuts=5, RouteID=0, ID=0))$/;"	l
alloca0	src/main/scala/generator/cilk/cilk_spawn_test01.scala	/^  val alloca0 = Module(new AllocaNode(NumOuts=2, RouteID=0, ID=0))$/;"	l
alloca0	src/main/scala/generator/cilk/cilk_spawn_test02.scala	/^  val alloca0 = Module(new AllocaNode(NumOuts=2, RouteID=0, ID=0))$/;"	l
alloca0	src/main/scala/generator/test06.scala	/^  val alloca0 = Module(new AllocaNode(NumOuts=4, RouteID=0, ID=0, FrameSize=12))$/;"	l
alloca0_in	src/main/scala/generator/cilk/cilk_for_test09.scala	/^  val alloca0_in = Map($/;"	l
alloca0_in	src/main/scala/generator/cilk/cilk_for_test12.scala	/^  val alloca0_in = Map($/;"	l
alloca0_in	src/main/scala/generator/cilk/cilk_spawn_test01.scala	/^  val alloca0_in = Map($/;"	l
alloca0_in	src/main/scala/generator/cilk/cilk_spawn_test02.scala	/^  val alloca0_in = Map($/;"	l
alloca0_in	src/main/scala/generator/cilk/fib.scala	/^  val alloca0_in = Map($/;"	l
alloca0_in	src/main/scala/generator/cilk/mergesort.scala	/^  val alloca0_in = Map($/;"	l
alloca0_in	src/main/scala/generator/test06.scala	/^  val alloca0_in = Map($/;"	l
alloca1	src/main/scala/generator/cilk/cilk_spawn_test02.scala	/^  val alloca1 = Module(new AllocaNode(NumOuts=2, RouteID=1, ID=1))$/;"	l
alloca1	src/main/scala/generator/test06.scala	/^  val alloca1 = Module(new AllocaNode(NumOuts=2, RouteID=1, ID=1, FrameSize=12))$/;"	l
alloca1_in	src/main/scala/generator/cilk/cilk_spawn_test02.scala	/^  val alloca1_in = Map($/;"	l
alloca1_in	src/main/scala/generator/cilk/fib.scala	/^  val alloca1_in = Map($/;"	l
alloca1_in	src/main/scala/generator/test06.scala	/^  val alloca1_in = Map($/;"	l
alloca2_in	src/main/scala/generator/cilk/fib.scala	/^  val alloca2_in = Map($/;"	l
allocaInputIO	src/main/scala/node/Alloca.scala	/^  val allocaInputIO = Flipped(Decoupled(new AllocaIO()))$/;"	l
allocaReqIO	src/main/scala/node/Alloca.scala	/^  val allocaReqIO = Decoupled(new AllocaReq())$/;"	l
allocaRespIO	src/main/scala/node/Alloca.scala	/^  val allocaRespIO = Input(Flipped(new AllocaResp()))$/;"	l
alloca_R	src/main/scala/node/Alloca.scala	/^  val alloca_R = RegInit(AllocaIO.default)$/;"	l
alloca_req_R	src/main/scala/node/Alloca.scala	/^  val alloca_req_R = RegInit(AllocaReq.default)$/;"	l
alloca_resp_R	src/main/scala/node/Alloca.scala	/^  val alloca_resp_R = RegInit(AllocaResp.default)$/;"	l
alter	src/main/scala/config/cde/Parameters.scala	/^  def alter(mask:(\/*field*\/Any,\/*site*\/View,\/*here*\/View,\/*up*\/View)=>Any) =$/;"	m
alter	src/main/scala/config/cde/Parameters.scala	/^  def alter[T](mask:Map[T,Any]) =$/;"	m
alter	src/main/scala/config/configurations.scala	/^  final def alter(f: (View, View, View) => PartialFunction[Any, Any]): Parameters = Parameters(f) ++ this$/;"	m
alterPartial	src/main/scala/config/cde/Parameters.scala	/^  def alterPartial(mask:PartialFunction[Any,Any]) =$/;"	m
alterPartial	src/main/scala/config/configurations.scala	/^  final def alterPartial(f: PartialFunction[Any, Any]): Parameters = Parameters((_, _, _) => f) ++ this$/;"	m
aluOp	src/main/scala/node/Alu.scala	/^    val aluOp = Array($/;"	l
aluOp	src/main/scala/node/Alu.scala	/^  val aluOp = Array($/;"	l
aluOp	src/main/scala/node/Comparision.scala	/^  val aluOp = Array($/;"	l
and1	src/main/scala/generator/cilk/stencil_detach1.scala	/^  val and1 = Module(new ComputeNode(NumOuts = 3, ID = 1, opCode = "and")(sign = false))$/;"	l
and1_in	src/main/scala/generator/cilk/stencil_detach1.scala	/^  val and1_in = Map($/;"	l
anyvalid	src/main/scala/accel/DataBundleReg.scala	/^  val anyvalid = valid.contains(true.B)$/;"	l
apply	src/main/scala/FPU/FPALU.scala	/^  def apply[S <: Int, T <: Data](key: S, mapping: Seq[(S, T)]): T = {$/;"	m
apply	src/main/scala/accel/NastiMaster.scala	/^  def apply(addr : UInt = 0.U, data: UInt = 0.U, read: UInt = 0.U,$/;"	m
apply	src/main/scala/accel/NastiMaster.scala	/^  def apply(data: UInt = 0.U, tag: UInt = 0.U)(implicit p: Parameters): NastiMasterResp =$/;"	m
apply	src/main/scala/arbiters/ArbiterTree.scala	/^    def apply(i: Int, BaseSize: Int): Int = {$/;"	m
apply	src/main/scala/config/cde/Dump.scala	/^  def apply[T](key:Any,value:T):T = ParameterDump.apply(key, value)$/;"	m
apply	src/main/scala/config/cde/Dump.scala	/^  def apply[T](key:Any,value:T):T = {addToDump(key,value); value}$/;"	m
apply	src/main/scala/config/cde/Dump.scala	/^  def apply[T](key_base:String,values:Seq[T]):Seq[T] = {$/;"	m
apply	src/main/scala/config/cde/Dump.scala	/^  def apply[T](knob:Knob[T]):Knob[T] = ParameterDump.apply(knob)$/;"	m
apply	src/main/scala/config/cde/Dump.scala	/^  def apply[T](knob:Knob[T]):Knob[T] = {knobList += knob.name; knob}$/;"	m
apply	src/main/scala/config/cde/Parameters.scala	/^      def apply[T](f:Any, site:View):Ex[T] = {$/;"	m
apply	src/main/scala/config/cde/Parameters.scala	/^      def apply[T](pname:Any, site:View) = me.apply(pname, site)$/;"	m
apply	src/main/scala/config/cde/Parameters.scala	/^      def apply[T](pname:Any, site:View):Ex[T] = {$/;"	m
apply	src/main/scala/config/cde/Parameters.scala	/^    def apply[T](knob:Knob[T]):T = {$/;"	m
apply	src/main/scala/config/cde/Parameters.scala	/^    def apply[T](pname:Any, site:View):T = {$/;"	m
apply	src/main/scala/config/cde/Parameters.scala	/^  def apply[T](f:Any):Ex[T] = view.sym[T](f)$/;"	m
apply	src/main/scala/config/cde/Parameters.scala	/^  def apply[T](f:Any, site:View):Ex[T] = view.sym[T](f, site)$/;"	m
apply	src/main/scala/config/cde/Parameters.scala	/^  def apply[T](f:Field[T]):Ex[T] = view.sym[T](f)$/;"	m
apply	src/main/scala/config/cde/Parameters.scala	/^  def apply[T](f:Field[T], site:View):Ex[T] = view.sym[T](f, site)$/;"	m
apply	src/main/scala/config/cde/Parameters.scala	/^  def apply[T](field:Any):T =$/;"	m
apply	src/main/scala/config/cde/Parameters.scala	/^  def apply[T](field:Field[T]):T =$/;"	m
apply	src/main/scala/config/cde/Parameters.scala	/^  def apply[T](knob:Knob[T]):T$/;"	m
apply	src/main/scala/config/cde/Parameters.scala	/^  def apply[T](pname:Any, site:View):Ex[T]$/;"	m
apply	src/main/scala/config/cde/Parameters.scala	/^  def apply[T](pname:Any, site:View):T$/;"	m
apply	src/main/scala/config/cde/Parameters.scala	/^  final def apply[T](field:Field[T]):T = apply[T](field.asInstanceOf[Any], deftSite)$/;"	m
apply	src/main/scala/config/cde/Parameters.scala	/^  final def apply[T](pname:Any):T = apply[T](pname, deftSite)$/;"	m
apply	src/main/scala/config/configurations.scala	/^  def apply(f: (View, View, View) => PartialFunction[Any, Any]): Parameters = new PartialParameters(f)$/;"	m
apply	src/main/scala/config/configurations.scala	/^  final def apply[T](pname: Field[T]): T = apply(pname, this)$/;"	m
apply	src/main/scala/config/configurations.scala	/^  final def apply[T](pname: Field[T], site: View): T = find(pname, site).asInstanceOf[T]$/;"	m
apply	src/main/scala/interfaces/interfaces.scala	/^  def apply(control:Bool=false.B,taskID:UInt=0.U)(implicit p: Parameters): ControlBundle = {$/;"	m
apply	src/main/scala/interfaces/interfaces.scala	/^  def apply(elt: String)= elements(elt)$/;"	m
apply	src/main/scala/interfaces/interfaces.scala	/^  def apply[T <: Data](gen: T = UInt(32.W))(implicit p: Parameters): CustomDataBundle[T] = new CustomDataBundle(gen)$/;"	m
apply	src/main/scala/junctions/nasti.scala	/^  def apply(data: UInt, strb: Option[UInt] = None,$/;"	m
apply	src/main/scala/junctions/nasti.scala	/^  def apply(id: UInt, addr: UInt, size: UInt,$/;"	m
apply	src/main/scala/junctions/nasti.scala	/^  def apply(id: UInt, data: UInt, last: Bool = Bool(true), resp: UInt = UInt(0))($/;"	m
apply	src/main/scala/junctions/nasti.scala	/^  def apply(id: UInt, resp: UInt = UInt(0))(implicit p: Parameters) = {$/;"	m
apply	src/main/scala/loop/LoopHeader.scala	/^  def apply[T <: Data](gen: T): LoopOutputBundleIO[T] = new LoopOutputBundleIO(gen)$/;"	m
apply	src/main/scala/muxes/Muxes.scala	/^    def apply(i: Int, BaseSize: Int): Int = {$/;"	m
apply	src/main/scala/node/Alu.scala	/^  def apply[S <: Int, T <: Data](key: S, mapping: Seq[(S, T)]): T = {$/;"	m
apply	src/main/scala/node/Comparision.scala	/^  def apply[S <: Int, T <: Data] (key : S, mapping: Seq[(S, T)]): T = {$/;"	m
apply	src/main/scala/node/helpers.scala	/^   def apply(sel: UInt): UInt = $/;"	m
apply	src/main/scala/node/helpers.scala	/^   def apply(sel: UInt): UInt =$/;"	m
apply	src/main/scala/node/helpers.scala	/^   def apply(sel: UInt, address: UInt, xlen: Int): UInt = $/;"	m
apply	src/main/scala/node/helpers.scala	/^  def apply(data: Bits, typ: Bits, xlen: Int) : Bits =$/;"	m
apply	src/test/scala/accel/AccelTests.scala	/^  def apply(opCode: UInt, op0: UInt = 0.U, op1: UInt = 0.U, op2: UInt = 0.U, op3: UInt = 0.U): Command = {$/;"	m
apply	src/test/scala/accel/coredf/AccelTests01.scala	/^  def apply(opCode: UInt, op0: UInt = 0.U, op1: UInt = 0.U, op2: UInt = 0.U, op3: UInt = 0.U): Command = {$/;"	m
ar	src/main/scala/junctions/nasti.scala	/^    val ar = Wire(new NastiReadAddressChannel)$/;"	l
ar	src/main/scala/junctions/nasti.scala	/^  val ar = Decoupled(new NastiReadAddressChannel)$/;"	l
ar_arb	src/main/scala/junctions/nasti.scala	/^    val ar_arb = Module(new RRArbiter(new NastiReadAddressChannel, arbN))$/;"	l
ar_r	src/main/scala/accel/NastiMaster.scala	/^  val ar_r = RegInit(NastiReadAddressChannel(0.U, 0.U, 0.U))$/;"	l
ar_valid_r	src/main/scala/accel/NastiMaster.scala	/^  val ar_valid_r = RegInit(false.B)$/;"	l
arb	src/main/scala/stack/InterleavedStack.scala	/^    val arb = Module(new MemArbiter(NumPorts))$/;"	l
arbIdBits	src/main/scala/junctions/nasti.scala	/^    val arbIdBits = log2Up(arbN)$/;"	l
arbiters	src/main/scala/arbiters/ArbiterTree.scala	/^    val arbiters = Seq.fill(Arbiters_per_Level) { Module(new LockingRRArbiter(gen, BaseSize, count=Locks)).io }$/;"	l
arbiters	src/main/scala/arbiters/ArbiterTree.scala	/^package arbiters$/;"	p
arbiters	src/main/scala/arbiters/ReadArbiter.scala	/^package arbiters$/;"	p
arbiters	src/main/scala/arbiters/TypeStackFile.scala	/^package arbiters$/;"	p
arbiters	src/test/scala/arbiters/ArbitersTest.scala	/^package arbiters $/;"	p
arbs	src/main/scala/stack/InterleavedStack.scala	/^  val arbs = for (i <- 0 until numRAMs) yield {$/;"	l
arg	src/main/scala/loop/LoopEnd.scala	/^    val arg = Module(new LiveOutNode(NumOuts = 1, ID = i))$/;"	l
arg	src/main/scala/loop/LoopHeader.scala	/^    val arg = Module(new LoopElement(ID = i))$/;"	l
arg	src/main/scala/loop/LoopStart.scala	/^    val arg = Module(new LiveInNode(NumOuts = 1, ID = i))$/;"	l
argTypes	src/main/scala/FPU/SharedDiv.scala	/^  val argTypes = List(xlen, xlen, 1)$/;"	l
arglist	src/test/scala/verilogmain/TypStackSweeper.scala	/^    val arglist = designargs.toList$/;"	l
arglist	src/test/scala/verilogmain/TypeStackSweeper16b.scala	/^    val arglist = designargs.toList$/;"	l
argparse	scripts/TypeStackFile.py	/^import argparse$/;"	i
argparse	scripts/extract_activity.py	/^import argparse$/;"	i
args	scripts/extract_activity.py	/^args = parser.parse_args()$/;"	v
asControlBundle	src/main/scala/interfaces/interfaces.scala	/^  def asControlBundle(): ControlBundle = {$/;"	m
asDataBundle	src/main/scala/interfaces/interfaces.scala	/^  def asDataBundle(): DataBundle = {$/;"	m
ashr11	src/main/scala/generator/cilk/cilk_for_test08_detach.scala	/^  val ashr11 = Module (new ComputeNode(NumOuts = 1, ID = 11, opCode = "lshr")(sign=false))  \/\/ Manually changed to lshr$/;"	l
ashr11_in	src/main/scala/generator/cilk/cilk_for_test08_detach.scala	/^  val ashr11_in = Map($/;"	l
ashr19	src/main/scala/generator/cilk/cilk_for_test08_detach.scala	/^  val ashr19 = Module (new ComputeNode(NumOuts = 1, ID = 19, opCode = "lshr")(sign=false)) \/\/ Manually changed to lshr$/;"	l
ashr19_in	src/main/scala/generator/cilk/cilk_for_test08_detach.scala	/^  val ashr19_in = Map($/;"	l
ashr27	src/main/scala/generator/cilk/cilk_for_test08_detach.scala	/^  val ashr27 = Module (new ComputeNode(NumOuts = 1, ID = 27, opCode = "lshr")(sign=false)) \/\/ Manually changed to lshr$/;"	l
ashr27_in	src/main/scala/generator/cilk/cilk_for_test08_detach.scala	/^  val ashr27_in = Map($/;"	l
aw	src/main/scala/junctions/nasti.scala	/^    val aw = Wire(new NastiWriteAddressChannel)$/;"	l
aw	src/main/scala/junctions/nasti.scala	/^  val aw = Decoupled(new NastiWriteAddressChannel)$/;"	l
aw_arb	src/main/scala/junctions/nasti.scala	/^    val aw_arb = Module(new RRArbiter(new NastiWriteAddressChannel, arbN))$/;"	l
aw_r	src/main/scala/accel/NastiMaster.scala	/^  val aw_r = RegInit(NastiWriteAddressChannel(0.U, 0.U, 0.U))$/;"	l
aw_valid_r	src/main/scala/accel/NastiMaster.scala	/^  val aw_valid_r = RegInit(false.B)$/;"	l
b	src/main/scala/FPU/FPUDiv.scala	/^  val b = Flipped(Decoupled(new DataBundle))$/;"	l
b	src/main/scala/junctions/nasti.scala	/^    val b = Wire(new NastiWriteResponseChannel)$/;"	l
b	src/main/scala/junctions/nasti.scala	/^  val b  = Decoupled(new NastiWriteResponseChannel).flip$/;"	l
b	src/main/scala/node/TypCompute.scala	/^    val b = Flipped(Valid(gen))$/;"	l
b0_entry	src/main/scala/dataflow/AdditionDF.scala	/^  val b0_entry = Module(new BasicBlockNoMaskNode(NumInputs = 1, NumOuts = 2, BID = 0))$/;"	l
b0_entry	src/main/scala/dataflow/AllocaDF.scala	/^  val b0_entry = Module(new BasicBlockNoMaskNode(NumInputs = 1, NumOuts = 5, BID = 0))$/;"	l
b0_entry	src/main/scala/dataflow/tests/Add01.scala	/^  val b0_entry = Module(new BasicBlockNoMaskNode(NumInputs = 1, NumOuts = 1, BID = 0))$/;"	l
b0_entry_activate	src/main/scala/dataflow/AdditionDF.scala	/^  val b0_entry_activate = Map($/;"	l
b0_entry_pred	src/main/scala/dataflow/AdditionDF.scala	/^  val b0_entry_pred = Map($/;"	l
b1_then	src/main/scala/dataflow/AdditionDF.scala	/^  val b1_then = Module(new BasicBlockNoMaskNode(NumInputs = 1, NumOuts = 2, BID = 1))$/;"	l
b1_then_activate	src/main/scala/dataflow/AdditionDF.scala	/^  val b1_then_activate = Map($/;"	l
b1_then_pred	src/main/scala/dataflow/AdditionDF.scala	/^  val b1_then_pred = Map($/;"	l
b2_end	src/main/scala/dataflow/AdditionDF.scala	/^  val b2_end = Module(new BasicBlockNode(NumInputs = 2, NumOuts = 2, NumPhi = 1, BID = 2))$/;"	l
b2_end_activate	src/main/scala/dataflow/AdditionDF.scala	/^  val b2_end_activate = Map($/;"	l
b2_end_pred	src/main/scala/dataflow/AdditionDF.scala	/^  val b2_end_pred = Map($/;"	l
bBits	src/main/scala/accel/Cache.scala	/^  val bBits  = bBytes << 3$/;"	l
bBytes	src/main/scala/accel/Cache.scala	/^  val bBytes = p(CacheBlockBytes)$/;"	l
bState	src/main/scala/accel/NastiMaster.scala	/^  val bState = RegInit(sIdle);    \/\/ Write response channel state$/;"	l
b_R	src/main/scala/FPU/FPUDiv.scala	/^  val b_R = RegInit(DataBundle.default)$/;"	l
b_valid_R	src/main/scala/FPU/FPUDiv.scala	/^  val b_valid_R = RegInit(false.B)$/;"	l
bankSelBit	src/main/scala/accel/DataBundleReg.scala	/^  val bankSelBit = 11$/;"	l
bankSelBit	src/main/scala/accel/SimpleReg.scala	/^  val bankSelBit = 11$/;"	l
baseAddress	src/main/scala/node/GepNode.scala	/^  val baseAddress = Flipped(Decoupled(new DataBundle()))$/;"	l
base_addr_R	src/main/scala/node/GepNode.scala	/^  val base_addr_R = RegInit(DataBundle.default)$/;"	l
base_addr_valid_R	src/main/scala/node/GepNode.scala	/^  val base_addr_valid_R = RegInit(false.B)$/;"	l
basesize	src/test/scala/verilogmain/TypStackSweeper.scala	/^  val basesize = optionkv('BaseSize).asInstanceOf[Int]$/;"	l
basesize	src/test/scala/verilogmain/TypeStackSweeper16b.scala	/^  val basesize = optionkv('BaseSize).asInstanceOf[Int]$/;"	l
bb	src/test/scala/concurrent/DecoupledTaskTest.scala	/^  val bb = Module(new BasicBlockNoMaskNode(NumInputs = 1, NumOuts = 2, BID = 0))$/;"	l
bb_Minim_Loop	src/main/scala/generator/test04.scala	/^  val bb_Minim_Loop = Module(new BasicBlockNoMaskNode(NumInputs = 1, NumOuts = 1, BID = 1))$/;"	l
bb_Minim_Loop_activate	src/main/scala/generator/test04.scala	/^  val bb_Minim_Loop_activate = Map($/;"	l
bb_Minim_Loop_pred	src/main/scala/generator/test04.scala	/^  val bb_Minim_Loop_pred = Map($/;"	l
bb_det_achd	src/main/scala/generator/cilk/cilk_spawn_test01.scala	/^  val bb_det_achd = Module(new BasicBlockNoMaskNode(NumInputs = 1, NumOuts = 3, BID = 1))$/;"	l
bb_det_achd	src/main/scala/generator/cilk/cilk_spawn_test02.scala	/^  val bb_det_achd = Module(new BasicBlockNoMaskNode(NumInputs = 1, NumOuts = 3, BID = 1))$/;"	l
bb_det_achd	src/main/scala/generator/cilk/fib.scala	/^  val bb_det_achd = Module(new BasicBlockNoMaskNode(NumInputs = 1, NumOuts = 2, BID = 3))$/;"	l
bb_det_achd	src/main/scala/generator/cilk/mergesort.scala	/^  val bb_det_achd = Module(new BasicBlockNoMaskNode(NumInputs = 1, NumOuts = 1, BID = 3))$/;"	l
bb_det_achd1	src/main/scala/generator/cilk/cilk_spawn_test02.scala	/^  val bb_det_achd1 = Module(new BasicBlockNoMaskNode(NumInputs = 1, NumOuts = 3, BID = 3))$/;"	l
bb_det_achd1_activate	src/main/scala/generator/cilk/cilk_spawn_test02.scala	/^  val bb_det_achd1_activate = Map($/;"	l
bb_det_achd1_pred	src/main/scala/generator/cilk/cilk_spawn_test02.scala	/^  val bb_det_achd1_pred = Map($/;"	l
bb_det_achd2	src/main/scala/generator/cilk/fib.scala	/^  val bb_det_achd2 = Module(new BasicBlockNoMaskNode(NumInputs = 1, NumOuts = 2, BID = 5))$/;"	l
bb_det_achd2_activate	src/main/scala/generator/cilk/fib.scala	/^  val bb_det_achd2_activate = Map($/;"	l
bb_det_achd2_pred	src/main/scala/generator/cilk/fib.scala	/^  val bb_det_achd2_pred = Map($/;"	l
bb_det_achd6	src/main/scala/generator/cilk/mergesort.scala	/^  val bb_det_achd6 = Module(new BasicBlockNoMaskNode(NumInputs = 1, NumOuts = 1, BID = 5))$/;"	l
bb_det_achd6_activate	src/main/scala/generator/cilk/mergesort.scala	/^  val bb_det_achd6_activate = Map($/;"	l
bb_det_achd6_pred	src/main/scala/generator/cilk/mergesort.scala	/^  val bb_det_achd6_pred = Map($/;"	l
bb_det_achd_activate	src/main/scala/generator/cilk/cilk_spawn_test01.scala	/^  val bb_det_achd_activate = Map($/;"	l
bb_det_achd_activate	src/main/scala/generator/cilk/cilk_spawn_test02.scala	/^  val bb_det_achd_activate = Map($/;"	l
bb_det_achd_activate	src/main/scala/generator/cilk/fib.scala	/^  val bb_det_achd_activate = Map($/;"	l
bb_det_achd_activate	src/main/scala/generator/cilk/mergesort.scala	/^  val bb_det_achd_activate = Map($/;"	l
bb_det_achd_pred	src/main/scala/generator/cilk/cilk_spawn_test01.scala	/^  val bb_det_achd_pred = Map($/;"	l
bb_det_achd_pred	src/main/scala/generator/cilk/cilk_spawn_test02.scala	/^  val bb_det_achd_pred = Map($/;"	l
bb_det_achd_pred	src/main/scala/generator/cilk/fib.scala	/^  val bb_det_achd_pred = Map($/;"	l
bb_det_achd_pred	src/main/scala/generator/cilk/mergesort.scala	/^  val bb_det_achd_pred = Map($/;"	l
bb_det_cont	src/main/scala/generator/cilk/cilk_spawn_test01.scala	/^  val bb_det_cont = Module(new BasicBlockNoMaskNode(NumInputs = 2, NumOuts = 2, BID = 2))$/;"	l
bb_det_cont	src/main/scala/generator/cilk/cilk_spawn_test02.scala	/^  val bb_det_cont = Module(new BasicBlockNoMaskNode(NumInputs = 2, NumOuts = 1, BID = 2))$/;"	l
bb_det_cont	src/main/scala/generator/cilk/fib.scala	/^  val bb_det_cont = Module(new BasicBlockNoMaskNode(NumInputs = 2, NumOuts = 2, BID = 4))$/;"	l
bb_det_cont	src/main/scala/generator/cilk/mergesort.scala	/^  val bb_det_cont = Module(new BasicBlockNoMaskNode(NumInputs = 2, NumOuts = 1, BID = 4))$/;"	l
bb_det_cont3	src/main/scala/generator/cilk/cilk_spawn_test02.scala	/^  val bb_det_cont3 = Module(new BasicBlockNoMaskNode(NumInputs = 2, NumOuts = 1, BID = 4))$/;"	l
bb_det_cont3	src/main/scala/generator/cilk/fib.scala	/^  val bb_det_cont3 = Module(new BasicBlockNoMaskNode(NumInputs = 2, NumOuts = 1, BID = 6))$/;"	l
bb_det_cont3_activate	src/main/scala/generator/cilk/cilk_spawn_test02.scala	/^  val bb_det_cont3_activate = Map($/;"	l
bb_det_cont3_activate	src/main/scala/generator/cilk/fib.scala	/^  val bb_det_cont3_activate = Map($/;"	l
bb_det_cont3_pred	src/main/scala/generator/cilk/cilk_spawn_test02.scala	/^  val bb_det_cont3_pred = Map($/;"	l
bb_det_cont3_pred	src/main/scala/generator/cilk/fib.scala	/^  val bb_det_cont3_pred = Map($/;"	l
bb_det_cont7	src/main/scala/generator/cilk/mergesort.scala	/^  val bb_det_cont7 = Module(new BasicBlockNoMaskNode(NumInputs = 2, NumOuts = 1, BID = 6))$/;"	l
bb_det_cont7_activate	src/main/scala/generator/cilk/mergesort.scala	/^  val bb_det_cont7_activate = Map($/;"	l
bb_det_cont7_pred	src/main/scala/generator/cilk/mergesort.scala	/^  val bb_det_cont7_pred = Map($/;"	l
bb_det_cont_activate	src/main/scala/generator/cilk/cilk_spawn_test01.scala	/^  val bb_det_cont_activate = Map($/;"	l
bb_det_cont_activate	src/main/scala/generator/cilk/cilk_spawn_test02.scala	/^  val bb_det_cont_activate = Map($/;"	l
bb_det_cont_activate	src/main/scala/generator/cilk/fib.scala	/^  val bb_det_cont_activate = Map($/;"	l
bb_det_cont_activate	src/main/scala/generator/cilk/mergesort.scala	/^  val bb_det_cont_activate = Map($/;"	l
bb_det_cont_pred	src/main/scala/generator/cilk/cilk_spawn_test01.scala	/^  val bb_det_cont_pred = Map($/;"	l
bb_det_cont_pred	src/main/scala/generator/cilk/cilk_spawn_test02.scala	/^  val bb_det_cont_pred = Map($/;"	l
bb_det_cont_pred	src/main/scala/generator/cilk/fib.scala	/^  val bb_det_cont_pred = Map($/;"	l
bb_det_cont_pred	src/main/scala/generator/cilk/mergesort.scala	/^  val bb_det_cont_pred = Map($/;"	l
bb_entry	src/main/scala/generator/cilk/bgemm.scala	/^  val bb_entry = Module(new BasicBlockNoMaskNode(NumInputs = 1, NumOuts = 1, BID = 0))$/;"	l
bb_entry	src/main/scala/generator/cilk/cilk_for_test01.scala	/^  val bb_entry = Module(new BasicBlockNoMaskNode(NumInputs = 1, NumOuts = 1, BID = 0))$/;"	l
bb_entry	src/main/scala/generator/cilk/cilk_for_test02.scala	/^  val bb_entry = Module(new BasicBlockNoMaskNode(NumInputs = 1, NumOuts = 1, BID = 0))$/;"	l
bb_entry	src/main/scala/generator/cilk/cilk_for_test02_mul.scala	/^  val bb_entry = Module(new BasicBlockNoMaskNode(NumInputs = 1, NumOuts = 6, BID = 0))$/;"	l
bb_entry	src/main/scala/generator/cilk/cilk_for_test04.scala	/^  val bb_entry = Module(new BasicBlockNoMaskNode(NumInputs = 1, NumOuts = 1, BID = 0))$/;"	l
bb_entry	src/main/scala/generator/cilk/cilk_for_test05.scala	/^  val bb_entry = Module(new BasicBlockNoMaskNode(NumInputs = 1, NumOuts = 1, BID = 0))$/;"	l
bb_entry	src/main/scala/generator/cilk/cilk_for_test06.scala	/^  val bb_entry = Module(new BasicBlockNoMaskNode(NumInputs = 1, NumOuts = 4, BID = 0))$/;"	l
bb_entry	src/main/scala/generator/cilk/cilk_for_test07.scala	/^  val bb_entry = Module(new BasicBlockNoMaskNode(NumInputs = 1, NumOuts = 1, BID = 0))$/;"	l
bb_entry	src/main/scala/generator/cilk/cilk_for_test08.scala	/^  val bb_entry = Module(new BasicBlockNoMaskNode(NumInputs = 1, NumOuts = 1, BID = 0))$/;"	l
bb_entry	src/main/scala/generator/cilk/cilk_for_test09.scala	/^  val bb_entry = Module(new BasicBlockNoMaskNode(NumInputs = 1, NumOuts = 3, BID = 0))$/;"	l
bb_entry	src/main/scala/generator/cilk/cilk_for_test09_inner.scala	/^  val bb_entry = Module(new BasicBlockNoMaskNode(NumInputs = 1, NumOuts = 1, BID = 0))$/;"	l
bb_entry	src/main/scala/generator/cilk/cilk_for_test12.scala	/^  val bb_entry = Module(new BasicBlockNoMaskNode(NumInputs = 1, NumOuts = 3, BID = 0))$/;"	l
bb_entry	src/main/scala/generator/cilk/cilk_spawn_test01.scala	/^  val bb_entry = Module(new BasicBlockNoMaskNode(NumInputs = 1, NumOuts = 2, BID = 0))$/;"	l
bb_entry	src/main/scala/generator/cilk/cilk_spawn_test02.scala	/^  val bb_entry = Module(new BasicBlockNoMaskNode(NumInputs = 1, NumOuts = 3, BID = 0))$/;"	l
bb_entry	src/main/scala/generator/cilk/fib.scala	/^  val bb_entry = Module(new BasicBlockNoMaskNode(NumInputs = 1, NumOuts = 4, BID = 0))$/;"	l
bb_entry	src/main/scala/generator/cilk/fib_continue.scala	/^  val bb_entry = Module(new BasicBlockNoMaskNode(NumInputs = 1, NumOuts = 6, BID = 0))$/;"	l
bb_entry	src/main/scala/generator/cilk/mergesort.scala	/^  val bb_entry = Module(new BasicBlockNoMaskNode(NumInputs = 1, NumOuts = 11, BID = 0))$/;"	l
bb_entry	src/main/scala/generator/cilk/mergesort_merge.scala	/^  val bb_entry = Module(new BasicBlockNoMaskNode(NumInputs = 1, NumOuts = 15, BID = 0))$/;"	l
bb_entry	src/main/scala/generator/cilk/stencil.scala	/^  val bb_entry = Module(new BasicBlockNoMaskNode(NumInputs = 1, NumOuts = 3, BID = 0))$/;"	l
bb_entry	src/main/scala/generator/cilk/stencil_inner.scala	/^  val bb_entry = Module(new BasicBlockNoMaskNode(NumInputs = 1, NumOuts = 6, BID = 0))$/;"	l
bb_entry	src/main/scala/generator/test01.scala	/^  val bb_entry = Module(new BasicBlockNoMaskNode(NumInputs = 1, NumOuts = 3, BID = 0))$/;"	l
bb_entry	src/main/scala/generator/test02.scala	/^  val bb_entry = Module(new BasicBlockNoMaskNode(NumInputs = 1, NumOuts = 3, BID = 0))$/;"	l
bb_entry	src/main/scala/generator/test03.scala	/^  val bb_entry = Module(new BasicBlockNoMaskNode(NumInputs = 1, NumOuts = 1, BID = 0))$/;"	l
bb_entry	src/main/scala/generator/test04.scala	/^  val bb_entry = Module(new BasicBlockNoMaskNode(NumInputs = 1, NumOuts = 1, BID = 0))$/;"	l
bb_entry	src/main/scala/generator/test05.scala	/^  val bb_entry = Module(new BasicBlockNoMaskNode(NumInputs = 1, NumOuts = 1, BID = 0))$/;"	l
bb_entry	src/main/scala/generator/test05b.scala	/^  val bb_entry = Module(new BasicBlockNoMaskNode(NumInputs = 1, NumOuts = 1, BID = 0))$/;"	l
bb_entry	src/main/scala/generator/test05c.scala	/^  val bb_entry = Module(new BasicBlockNoMaskNode(NumInputs = 1, NumOuts = 1, BID = 0))$/;"	l
bb_entry	src/main/scala/generator/test06.scala	/^  val bb_entry = Module(new BasicBlockNoMaskNode(NumInputs = 1, NumOuts = 16, BID = 0))$/;"	l
bb_entry	src/main/scala/generator/test08.scala	/^  val bb_entry = Module(new BasicBlockNoMaskNode(NumInputs = 1, NumOuts = 1, BID = 0))$/;"	l
bb_entry	src/main/scala/generator/test09.scala	/^  val bb_entry = Module(new BasicBlockNoMaskNode(NumInputs = 1, NumOuts = 1, BID = 0))$/;"	l
bb_entry	src/main/scala/generator/test10.scala	/^  val bb_entry = Module(new BasicBlockNoMaskNode(NumInputs = 1, NumOuts = 1, BID = 0))$/;"	l
bb_entry	src/main/scala/generator/test11.scala	/^  val bb_entry = Module(new BasicBlockNoMaskNode(NumInputs = 1, NumOuts = 1, BID = 0))$/;"	l
bb_entry	src/main/scala/generator/test11_add.scala	/^  val bb_entry = Module(new BasicBlockNoMaskNode(NumInputs = 1, NumOuts = 2, BID = 0))$/;"	l
bb_entry	src/main/scala/generator/test12.scala	/^  val bb_entry = Module(new BasicBlockNoMaskNode(NumInputs = 1, NumOuts = 1, BID = 0))$/;"	l
bb_entry	src/main/scala/generator/test12_inner.scala	/^  val bb_entry = Module(new BasicBlockNoMaskNode(NumInputs = 1, NumOuts = 1, BID = 0))$/;"	l
bb_entry	src/main/scala/generator/test14.scala	/^  val bb_entry = Module(new BasicBlockNoMaskNode(NumInputs = 1, NumOuts = 1, BID = 0))$/;"	l
bb_entry	src/main/scala/generator/test14_inner.scala	/^  val bb_entry = Module(new BasicBlockNoMaskNode(NumInputs = 1, NumOuts = 1, BID = 0))$/;"	l
bb_entry	src/main/scala/generator/test15.scala	/^  val bb_entry = Module(new BasicBlockNoMaskNode(NumInputs = 1, NumOuts = 1, BID = 0))$/;"	l
bb_entry_activate	src/main/scala/generator/cilk/bgemm.scala	/^  val bb_entry_activate = Map($/;"	l
bb_entry_activate	src/main/scala/generator/cilk/cilk_for_test01.scala	/^  val bb_entry_activate = Map($/;"	l
bb_entry_activate	src/main/scala/generator/cilk/cilk_for_test02.scala	/^  val bb_entry_activate = Map($/;"	l
bb_entry_activate	src/main/scala/generator/cilk/cilk_for_test02_mul.scala	/^  val bb_entry_activate = Map($/;"	l
bb_entry_activate	src/main/scala/generator/cilk/cilk_for_test04.scala	/^  val bb_entry_activate = Map($/;"	l
bb_entry_activate	src/main/scala/generator/cilk/cilk_for_test05.scala	/^  val bb_entry_activate = Map($/;"	l
bb_entry_activate	src/main/scala/generator/cilk/cilk_for_test06.scala	/^  val bb_entry_activate = Map($/;"	l
bb_entry_activate	src/main/scala/generator/cilk/cilk_for_test07.scala	/^  val bb_entry_activate = Map($/;"	l
bb_entry_activate	src/main/scala/generator/cilk/cilk_for_test08.scala	/^  val bb_entry_activate = Map($/;"	l
bb_entry_activate	src/main/scala/generator/cilk/cilk_for_test09.scala	/^  val bb_entry_activate = Map($/;"	l
bb_entry_activate	src/main/scala/generator/cilk/cilk_for_test09_inner.scala	/^  val bb_entry_activate = Map($/;"	l
bb_entry_activate	src/main/scala/generator/cilk/cilk_for_test12.scala	/^  val bb_entry_activate = Map($/;"	l
bb_entry_activate	src/main/scala/generator/cilk/cilk_spawn_test01.scala	/^  val bb_entry_activate = Map($/;"	l
bb_entry_activate	src/main/scala/generator/cilk/cilk_spawn_test02.scala	/^  val bb_entry_activate = Map($/;"	l
bb_entry_activate	src/main/scala/generator/cilk/fib.scala	/^  val bb_entry_activate = Map($/;"	l
bb_entry_activate	src/main/scala/generator/cilk/fib_continue.scala	/^  val bb_entry_activate = Map($/;"	l
bb_entry_activate	src/main/scala/generator/cilk/mergesort.scala	/^  val bb_entry_activate = Map($/;"	l
bb_entry_activate	src/main/scala/generator/cilk/mergesort_merge.scala	/^  val bb_entry_activate = Map($/;"	l
bb_entry_activate	src/main/scala/generator/cilk/stencil.scala	/^  val bb_entry_activate = Map($/;"	l
bb_entry_activate	src/main/scala/generator/cilk/stencil_inner.scala	/^  val bb_entry_activate = Map($/;"	l
bb_entry_activate	src/main/scala/generator/test01.scala	/^  val bb_entry_activate = Map($/;"	l
bb_entry_activate	src/main/scala/generator/test02.scala	/^  val bb_entry_activate = Map($/;"	l
bb_entry_activate	src/main/scala/generator/test03.scala	/^  val bb_entry_activate = Map($/;"	l
bb_entry_activate	src/main/scala/generator/test04.scala	/^  val bb_entry_activate = Map($/;"	l
bb_entry_activate	src/main/scala/generator/test05.scala	/^  val bb_entry_activate = Map($/;"	l
bb_entry_activate	src/main/scala/generator/test05b.scala	/^  val bb_entry_activate = Map($/;"	l
bb_entry_activate	src/main/scala/generator/test05c.scala	/^  val bb_entry_activate = Map($/;"	l
bb_entry_activate	src/main/scala/generator/test06.scala	/^  val bb_entry_activate = Map($/;"	l
bb_entry_activate	src/main/scala/generator/test08.scala	/^  val bb_entry_activate = Map($/;"	l
bb_entry_activate	src/main/scala/generator/test09.scala	/^  val bb_entry_activate = Map($/;"	l
bb_entry_activate	src/main/scala/generator/test10.scala	/^  val bb_entry_activate = Map($/;"	l
bb_entry_activate	src/main/scala/generator/test11.scala	/^  val bb_entry_activate = Map($/;"	l
bb_entry_activate	src/main/scala/generator/test11_add.scala	/^  val bb_entry_activate = Map($/;"	l
bb_entry_activate	src/main/scala/generator/test12.scala	/^  val bb_entry_activate = Map($/;"	l
bb_entry_activate	src/main/scala/generator/test12_inner.scala	/^  val bb_entry_activate = Map($/;"	l
bb_entry_activate	src/main/scala/generator/test14.scala	/^  val bb_entry_activate = Map($/;"	l
bb_entry_activate	src/main/scala/generator/test14_inner.scala	/^  val bb_entry_activate = Map($/;"	l
bb_entry_activate	src/main/scala/generator/test15.scala	/^  val bb_entry_activate = Map($/;"	l
bb_entry_pred	src/main/scala/generator/cilk/bgemm.scala	/^  val bb_entry_pred = Map($/;"	l
bb_entry_pred	src/main/scala/generator/cilk/cilk_for_test01.scala	/^  val bb_entry_pred = Map($/;"	l
bb_entry_pred	src/main/scala/generator/cilk/cilk_for_test02.scala	/^  val bb_entry_pred = Map($/;"	l
bb_entry_pred	src/main/scala/generator/cilk/cilk_for_test02_mul.scala	/^  val bb_entry_pred = Map($/;"	l
bb_entry_pred	src/main/scala/generator/cilk/cilk_for_test04.scala	/^  val bb_entry_pred = Map($/;"	l
bb_entry_pred	src/main/scala/generator/cilk/cilk_for_test05.scala	/^  val bb_entry_pred = Map($/;"	l
bb_entry_pred	src/main/scala/generator/cilk/cilk_for_test06.scala	/^  val bb_entry_pred = Map($/;"	l
bb_entry_pred	src/main/scala/generator/cilk/cilk_for_test07.scala	/^  val bb_entry_pred = Map($/;"	l
bb_entry_pred	src/main/scala/generator/cilk/cilk_for_test08.scala	/^  val bb_entry_pred = Map($/;"	l
bb_entry_pred	src/main/scala/generator/cilk/cilk_for_test09.scala	/^  val bb_entry_pred = Map($/;"	l
bb_entry_pred	src/main/scala/generator/cilk/cilk_for_test09_inner.scala	/^  val bb_entry_pred = Map($/;"	l
bb_entry_pred	src/main/scala/generator/cilk/cilk_for_test12.scala	/^  val bb_entry_pred = Map($/;"	l
bb_entry_pred	src/main/scala/generator/cilk/cilk_spawn_test01.scala	/^  val bb_entry_pred = Map($/;"	l
bb_entry_pred	src/main/scala/generator/cilk/cilk_spawn_test02.scala	/^  val bb_entry_pred = Map($/;"	l
bb_entry_pred	src/main/scala/generator/cilk/fib.scala	/^  val bb_entry_pred = Map($/;"	l
bb_entry_pred	src/main/scala/generator/cilk/fib_continue.scala	/^  val bb_entry_pred = Map($/;"	l
bb_entry_pred	src/main/scala/generator/cilk/mergesort.scala	/^  val bb_entry_pred = Map($/;"	l
bb_entry_pred	src/main/scala/generator/cilk/mergesort_merge.scala	/^  val bb_entry_pred = Map($/;"	l
bb_entry_pred	src/main/scala/generator/cilk/stencil.scala	/^  val bb_entry_pred = Map($/;"	l
bb_entry_pred	src/main/scala/generator/cilk/stencil_inner.scala	/^  val bb_entry_pred = Map($/;"	l
bb_entry_pred	src/main/scala/generator/test01.scala	/^  val bb_entry_pred = Map($/;"	l
bb_entry_pred	src/main/scala/generator/test02.scala	/^  val bb_entry_pred = Map($/;"	l
bb_entry_pred	src/main/scala/generator/test03.scala	/^  val bb_entry_pred = Map($/;"	l
bb_entry_pred	src/main/scala/generator/test04.scala	/^  val bb_entry_pred = Map($/;"	l
bb_entry_pred	src/main/scala/generator/test05.scala	/^  val bb_entry_pred = Map($/;"	l
bb_entry_pred	src/main/scala/generator/test05b.scala	/^  val bb_entry_pred = Map($/;"	l
bb_entry_pred	src/main/scala/generator/test05c.scala	/^  val bb_entry_pred = Map($/;"	l
bb_entry_pred	src/main/scala/generator/test06.scala	/^  val bb_entry_pred = Map($/;"	l
bb_entry_pred	src/main/scala/generator/test08.scala	/^  val bb_entry_pred = Map($/;"	l
bb_entry_pred	src/main/scala/generator/test09.scala	/^  val bb_entry_pred = Map($/;"	l
bb_entry_pred	src/main/scala/generator/test10.scala	/^  val bb_entry_pred = Map($/;"	l
bb_entry_pred	src/main/scala/generator/test11.scala	/^  val bb_entry_pred = Map($/;"	l
bb_entry_pred	src/main/scala/generator/test11_add.scala	/^  val bb_entry_pred = Map($/;"	l
bb_entry_pred	src/main/scala/generator/test12.scala	/^  val bb_entry_pred = Map($/;"	l
bb_entry_pred	src/main/scala/generator/test12_inner.scala	/^  val bb_entry_pred = Map($/;"	l
bb_entry_pred	src/main/scala/generator/test14.scala	/^  val bb_entry_pred = Map($/;"	l
bb_entry_pred	src/main/scala/generator/test14_inner.scala	/^  val bb_entry_pred = Map($/;"	l
bb_entry_pred	src/main/scala/generator/test15.scala	/^  val bb_entry_pred = Map($/;"	l
bb_for_body	src/main/scala/generator/cilk/cilk_for_test09_inner.scala	/^  val bb_for_body = Module(new BasicBlockNoMaskNode(NumInputs = 1, NumOuts = 2, BID = 2))$/;"	l
bb_for_body	src/main/scala/generator/cilk/mergesort_merge.scala	/^  val bb_for_body = Module(new BasicBlockNoMaskNode(NumInputs = 1, NumOuts = 2, BID = 2))$/;"	l
bb_for_body	src/main/scala/generator/cilk/stencil_inner.scala	/^  val bb_for_body = Module(new BasicBlockNoMaskNode(NumInputs = 1, NumOuts = 13, BID = 2))$/;"	l
bb_for_body	src/main/scala/generator/test03.scala	/^  val bb_for_body = Module(new BasicBlockNoMaskFastNode(NumInputs = 1, NumOuts = 3, BID = 2))$/;"	l
bb_for_body	src/main/scala/generator/test05.scala	/^  val bb_for_body = Module(new BasicBlockNoMaskNode(NumInputs = 1, NumOuts = 6, BID = 2))$/;"	l
bb_for_body	src/main/scala/generator/test05b.scala	/^  val bb_for_body = Module(new BasicBlockNoMaskNode(NumInputs = 1, NumOuts = 3, BID = 2))$/;"	l
bb_for_body	src/main/scala/generator/test05c.scala	/^  val bb_for_body = Module(new BasicBlockNoMaskNode(NumInputs = 1, NumOuts = 4, BID = 2))$/;"	l
bb_for_body	src/main/scala/generator/test08.scala	/^  val bb_for_body = Module(new BasicBlockNoMaskNode(NumInputs = 1, NumOuts = 2, BID = 2))$/;"	l
bb_for_body	src/main/scala/generator/test09.scala	/^  val bb_for_body = Module(new BasicBlockNoMaskNode(NumInputs = 1, NumOuts = 2, BID = 2))$/;"	l
bb_for_body	src/main/scala/generator/test10.scala	/^  val bb_for_body = Module(new BasicBlockNoMaskNode(NumInputs = 1, NumOuts = 8, BID = 2))$/;"	l
bb_for_body	src/main/scala/generator/test11.scala	/^  val bb_for_body = Module(new BasicBlockNoMaskNode(NumInputs = 1, NumOuts = 8, BID = 2))$/;"	l
bb_for_body	src/main/scala/generator/test12.scala	/^  val bb_for_body = Module(new BasicBlockNoMaskNode(NumInputs = 1, NumOuts = 3, BID = 2))$/;"	l
bb_for_body	src/main/scala/generator/test12_inner.scala	/^  val bb_for_body = Module(new BasicBlockNoMaskNode(NumInputs = 1, NumOuts = 2, BID = 2))$/;"	l
bb_for_body	src/main/scala/generator/test14.scala	/^  val bb_for_body = Module(new BasicBlockNoMaskNode(NumInputs = 1, NumOuts = 3, BID = 2))$/;"	l
bb_for_body	src/main/scala/generator/test14_inner.scala	/^  val bb_for_body = Module(new BasicBlockNoMaskNode(NumInputs = 1, NumOuts = 2, BID = 2))$/;"	l
bb_for_body	src/main/scala/generator/test15.scala	/^  val bb_for_body = Module(new BasicBlockNoMaskNode(NumInputs = 1, NumOuts = 1, BID = 2))$/;"	l
bb_for_body3	src/main/scala/generator/test15.scala	/^  val bb_for_body3 = Module(new BasicBlockNoMaskNode(NumInputs = 1, NumOuts = 1, BID = 4))$/;"	l
bb_for_body3_activate	src/main/scala/generator/test15.scala	/^  val bb_for_body3_activate = Map($/;"	l
bb_for_body3_pred	src/main/scala/generator/test15.scala	/^  val bb_for_body3_pred = Map($/;"	l
bb_for_body6	src/main/scala/generator/test15.scala	/^  val bb_for_body6 = Module(new BasicBlockNoMaskNode(NumInputs = 1, NumOuts = 6, BID = 6))$/;"	l
bb_for_body6_activate	src/main/scala/generator/test15.scala	/^  val bb_for_body6_activate = Map($/;"	l
bb_for_body6_pred	src/main/scala/generator/test15.scala	/^  val bb_for_body6_pred = Map($/;"	l
bb_for_body_activate	src/main/scala/generator/cilk/cilk_for_test09_inner.scala	/^  val bb_for_body_activate = Map($/;"	l
bb_for_body_activate	src/main/scala/generator/cilk/mergesort_merge.scala	/^  val bb_for_body_activate = Map($/;"	l
bb_for_body_activate	src/main/scala/generator/cilk/stencil_inner.scala	/^  val bb_for_body_activate = Map($/;"	l
bb_for_body_activate	src/main/scala/generator/test03.scala	/^  val bb_for_body_activate = Map($/;"	l
bb_for_body_activate	src/main/scala/generator/test05.scala	/^  val bb_for_body_activate = Map($/;"	l
bb_for_body_activate	src/main/scala/generator/test05b.scala	/^  val bb_for_body_activate = Map($/;"	l
bb_for_body_activate	src/main/scala/generator/test05c.scala	/^  val bb_for_body_activate = Map($/;"	l
bb_for_body_activate	src/main/scala/generator/test08.scala	/^  val bb_for_body_activate = Map($/;"	l
bb_for_body_activate	src/main/scala/generator/test09.scala	/^  val bb_for_body_activate = Map($/;"	l
bb_for_body_activate	src/main/scala/generator/test10.scala	/^  val bb_for_body_activate = Map($/;"	l
bb_for_body_activate	src/main/scala/generator/test11.scala	/^  val bb_for_body_activate = Map($/;"	l
bb_for_body_activate	src/main/scala/generator/test12.scala	/^  val bb_for_body_activate = Map($/;"	l
bb_for_body_activate	src/main/scala/generator/test12_inner.scala	/^  val bb_for_body_activate = Map($/;"	l
bb_for_body_activate	src/main/scala/generator/test14.scala	/^  val bb_for_body_activate = Map($/;"	l
bb_for_body_activate	src/main/scala/generator/test14_inner.scala	/^  val bb_for_body_activate = Map($/;"	l
bb_for_body_activate	src/main/scala/generator/test15.scala	/^  val bb_for_body_activate = Map($/;"	l
bb_for_body_pred	src/main/scala/generator/cilk/cilk_for_test09_inner.scala	/^  val bb_for_body_pred = Map($/;"	l
bb_for_body_pred	src/main/scala/generator/cilk/mergesort_merge.scala	/^  val bb_for_body_pred = Map($/;"	l
bb_for_body_pred	src/main/scala/generator/cilk/stencil_inner.scala	/^  val bb_for_body_pred = Map($/;"	l
bb_for_body_pred	src/main/scala/generator/test03.scala	/^  val bb_for_body_pred = Map($/;"	l
bb_for_body_pred	src/main/scala/generator/test05.scala	/^  val bb_for_body_pred = Map($/;"	l
bb_for_body_pred	src/main/scala/generator/test05b.scala	/^  val bb_for_body_pred = Map($/;"	l
bb_for_body_pred	src/main/scala/generator/test05c.scala	/^  val bb_for_body_pred = Map($/;"	l
bb_for_body_pred	src/main/scala/generator/test08.scala	/^  val bb_for_body_pred = Map($/;"	l
bb_for_body_pred	src/main/scala/generator/test09.scala	/^  val bb_for_body_pred = Map($/;"	l
bb_for_body_pred	src/main/scala/generator/test10.scala	/^  val bb_for_body_pred = Map($/;"	l
bb_for_body_pred	src/main/scala/generator/test11.scala	/^  val bb_for_body_pred = Map($/;"	l
bb_for_body_pred	src/main/scala/generator/test12.scala	/^  val bb_for_body_pred = Map($/;"	l
bb_for_body_pred	src/main/scala/generator/test12_inner.scala	/^  val bb_for_body_pred = Map($/;"	l
bb_for_body_pred	src/main/scala/generator/test14.scala	/^  val bb_for_body_pred = Map($/;"	l
bb_for_body_pred	src/main/scala/generator/test14_inner.scala	/^  val bb_for_body_pred = Map($/;"	l
bb_for_body_pred	src/main/scala/generator/test15.scala	/^  val bb_for_body_pred = Map($/;"	l
bb_for_cond	src/main/scala/generator/cilk/cilk_for_test09_inner.scala	/^  val bb_for_cond = Module(new BasicBlockLoopHeadNode(NumInputs = 2, NumOuts = 4, NumPhi = 2, BID = 1))$/;"	l
bb_for_cond	src/main/scala/generator/cilk/mergesort_merge.scala	/^  val bb_for_cond = Module(new LoopHead(NumOuts = 5, NumPhi = 3, BID = 1))$/;"	l
bb_for_cond	src/main/scala/generator/cilk/stencil_inner.scala	/^  val bb_for_cond = Module(new LoopHead(NumOuts = 3, NumPhi = 1, BID = 1))$/;"	l
bb_for_cond	src/main/scala/generator/test03.scala	/^  val bb_for_cond = Module(new LoopHead(NumOuts = 3, NumPhi = 2, BID = 1))$/;"	l
bb_for_cond	src/main/scala/generator/test05.scala	/^  val bb_for_cond = Module(new LoopHead(NumOuts = 3, NumPhi = 1, BID = 1))$/;"	l
bb_for_cond	src/main/scala/generator/test05b.scala	/^  val bb_for_cond = Module(new LoopHead(NumOuts = 3, NumPhi = 1, BID = 1))$/;"	l
bb_for_cond	src/main/scala/generator/test05c.scala	/^  val bb_for_cond = Module(new LoopHead(NumOuts = 4, NumPhi = 2, BID = 1)) \/\/ Manual$/;"	l
bb_for_cond	src/main/scala/generator/test08.scala	/^  val bb_for_cond = Module(new LoopHead(NumOuts = 4, NumPhi = 2, BID = 1))$/;"	l
bb_for_cond	src/main/scala/generator/test09.scala	/^  val bb_for_cond = Module(new BasicBlockLoopHeadNode(NumInputs = 2, NumOuts = 4, NumPhi = 2, BID = 1))$/;"	l
bb_for_cond	src/main/scala/generator/test10.scala	/^  val bb_for_cond = Module(new BasicBlockLoopHeadNode(NumInputs = 2, NumOuts = 3, NumPhi = 1, BID = 1))$/;"	l
bb_for_cond	src/main/scala/generator/test11.scala	/^  val bb_for_cond = Module(new BasicBlockLoopHeadNode(NumInputs = 2, NumOuts = 3, NumPhi = 1, BID = 1))$/;"	l
bb_for_cond	src/main/scala/generator/test12.scala	/^  val bb_for_cond = Module(new BasicBlockLoopHeadNode(NumInputs = 2, NumOuts = 4, NumPhi = 2, BID = 1))$/;"	l
bb_for_cond	src/main/scala/generator/test12_inner.scala	/^  val bb_for_cond = Module(new BasicBlockLoopHeadNode(NumInputs = 2, NumOuts = 4, NumPhi = 2, BID = 1))$/;"	l
bb_for_cond	src/main/scala/generator/test14.scala	/^  val bb_for_cond = Module(new LoopHead(NumOuts = 4, NumPhi = 2, BID = 1))$/;"	l
bb_for_cond	src/main/scala/generator/test14_inner.scala	/^  val bb_for_cond = Module(new LoopHead(NumOuts = 4, NumPhi = 2, BID = 1))$/;"	l
bb_for_cond	src/main/scala/generator/test15.scala	/^  val bb_for_cond = Module(new LoopHead(NumOuts = 4, NumPhi = 2, BID = 1))$/;"	l
bb_for_cond1	src/main/scala/generator/test15.scala	/^  val bb_for_cond1 = Module(new LoopHead(NumOuts = 3, NumPhi = 1, BID = 3))$/;"	l
bb_for_cond1_activate	src/main/scala/generator/test15.scala	/^  val bb_for_cond1_activate = Map($/;"	l
bb_for_cond1_pred	src/main/scala/generator/test15.scala	/^  val bb_for_cond1_pred = Map($/;"	l
bb_for_cond4	src/main/scala/generator/test15.scala	/^  val bb_for_cond4 = Module(new LoopHead(NumOuts = 3, NumPhi = 1, BID = 5))$/;"	l
bb_for_cond4_activate	src/main/scala/generator/test15.scala	/^  val bb_for_cond4_activate = Map($/;"	l
bb_for_cond4_pred	src/main/scala/generator/test15.scala	/^  val bb_for_cond4_pred = Map($/;"	l
bb_for_cond_activate	src/main/scala/generator/cilk/cilk_for_test09_inner.scala	/^  val bb_for_cond_activate = Map($/;"	l
bb_for_cond_activate	src/main/scala/generator/cilk/mergesort_merge.scala	/^  val bb_for_cond_activate = Map($/;"	l
bb_for_cond_activate	src/main/scala/generator/cilk/stencil_inner.scala	/^  val bb_for_cond_activate = Map($/;"	l
bb_for_cond_activate	src/main/scala/generator/test03.scala	/^  val bb_for_cond_activate = Map($/;"	l
bb_for_cond_activate	src/main/scala/generator/test05.scala	/^  val bb_for_cond_activate = Map($/;"	l
bb_for_cond_activate	src/main/scala/generator/test05b.scala	/^  val bb_for_cond_activate = Map($/;"	l
bb_for_cond_activate	src/main/scala/generator/test05c.scala	/^  val bb_for_cond_activate = Map($/;"	l
bb_for_cond_activate	src/main/scala/generator/test08.scala	/^  val bb_for_cond_activate = Map($/;"	l
bb_for_cond_activate	src/main/scala/generator/test09.scala	/^  val bb_for_cond_activate = Map($/;"	l
bb_for_cond_activate	src/main/scala/generator/test10.scala	/^  val bb_for_cond_activate = Map($/;"	l
bb_for_cond_activate	src/main/scala/generator/test11.scala	/^  val bb_for_cond_activate = Map($/;"	l
bb_for_cond_activate	src/main/scala/generator/test12.scala	/^  val bb_for_cond_activate = Map($/;"	l
bb_for_cond_activate	src/main/scala/generator/test12_inner.scala	/^  val bb_for_cond_activate = Map($/;"	l
bb_for_cond_activate	src/main/scala/generator/test14.scala	/^  val bb_for_cond_activate = Map($/;"	l
bb_for_cond_activate	src/main/scala/generator/test14_inner.scala	/^  val bb_for_cond_activate = Map($/;"	l
bb_for_cond_activate	src/main/scala/generator/test15.scala	/^  val bb_for_cond_activate = Map($/;"	l
bb_for_cond_pred	src/main/scala/generator/cilk/cilk_for_test09_inner.scala	/^  val bb_for_cond_pred = Map($/;"	l
bb_for_cond_pred	src/main/scala/generator/cilk/mergesort_merge.scala	/^  val bb_for_cond_pred = Map($/;"	l
bb_for_cond_pred	src/main/scala/generator/cilk/stencil_inner.scala	/^  val bb_for_cond_pred = Map($/;"	l
bb_for_cond_pred	src/main/scala/generator/test03.scala	/^  val bb_for_cond_pred = Map($/;"	l
bb_for_cond_pred	src/main/scala/generator/test05.scala	/^  val bb_for_cond_pred = Map($/;"	l
bb_for_cond_pred	src/main/scala/generator/test05b.scala	/^  val bb_for_cond_pred = Map($/;"	l
bb_for_cond_pred	src/main/scala/generator/test05c.scala	/^  val bb_for_cond_pred = Map($/;"	l
bb_for_cond_pred	src/main/scala/generator/test08.scala	/^  val bb_for_cond_pred = Map($/;"	l
bb_for_cond_pred	src/main/scala/generator/test09.scala	/^  val bb_for_cond_pred = Map($/;"	l
bb_for_cond_pred	src/main/scala/generator/test10.scala	/^  val bb_for_cond_pred = Map($/;"	l
bb_for_cond_pred	src/main/scala/generator/test11.scala	/^  val bb_for_cond_pred = Map($/;"	l
bb_for_cond_pred	src/main/scala/generator/test12.scala	/^  val bb_for_cond_pred = Map($/;"	l
bb_for_cond_pred	src/main/scala/generator/test12_inner.scala	/^  val bb_for_cond_pred = Map($/;"	l
bb_for_cond_pred	src/main/scala/generator/test14.scala	/^  val bb_for_cond_pred = Map($/;"	l
bb_for_cond_pred	src/main/scala/generator/test14_inner.scala	/^  val bb_for_cond_pred = Map($/;"	l
bb_for_cond_pred	src/main/scala/generator/test15.scala	/^  val bb_for_cond_pred = Map($/;"	l
bb_for_end	src/main/scala/generator/cilk/cilk_for_test09_inner.scala	/^  val bb_for_end = Module(new BasicBlockNoMaskNode(NumInputs = 1, NumOuts = 3, BID = 4))$/;"	l
bb_for_end	src/main/scala/generator/cilk/mergesort_merge.scala	/^  val bb_for_end = Module(new BasicBlockNoMaskNode(NumInputs = 1, NumOuts = 1, BID = 9))$/;"	l
bb_for_end	src/main/scala/generator/cilk/stencil_inner.scala	/^  val bb_for_end = Module(new BasicBlockNoMaskNode(NumInputs = 1, NumOuts = 6, BID = 8))$/;"	l
bb_for_end	src/main/scala/generator/test03.scala	/^  val bb_for_end = Module(new BasicBlockNoMaskNode(NumInputs = 1, NumOuts = 5, BID = 4))$/;"	l
bb_for_end	src/main/scala/generator/test05.scala	/^  val bb_for_end = Module(new BasicBlockNoMaskNode(NumInputs = 1, NumOuts = 9, BID = 4))$/;"	l
bb_for_end	src/main/scala/generator/test05b.scala	/^  val bb_for_end = Module(new BasicBlockNoMaskNode(NumInputs = 1, NumOuts = 9, BID = 4))$/;"	l
bb_for_end	src/main/scala/generator/test05c.scala	/^  val bb_for_end = Module(new BasicBlockNoMaskNode(NumInputs = 1, NumOuts = 5, BID = 4))$/;"	l
bb_for_end	src/main/scala/generator/test08.scala	/^  val bb_for_end = Module(new BasicBlockNoMaskNode(NumInputs = 1, NumOuts = 3, BID = 4))$/;"	l
bb_for_end	src/main/scala/generator/test09.scala	/^  val bb_for_end = Module(new BasicBlockNoMaskNode(NumInputs = 1, NumOuts = 3, BID = 4))$/;"	l
bb_for_end	src/main/scala/generator/test10.scala	/^  val bb_for_end = Module(new BasicBlockNoMaskNode(NumInputs = 1, NumOuts = 4, BID = 4))$/;"	l
bb_for_end	src/main/scala/generator/test11.scala	/^  val bb_for_end = Module(new BasicBlockNoMaskNode(NumInputs = 1, NumOuts = 4, BID = 4))$/;"	l
bb_for_end	src/main/scala/generator/test12.scala	/^  val bb_for_end = Module(new BasicBlockNoMaskNode(NumInputs = 1, NumOuts = 3, BID = 4))$/;"	l
bb_for_end	src/main/scala/generator/test12_inner.scala	/^  val bb_for_end = Module(new BasicBlockNoMaskNode(NumInputs = 1, NumOuts = 3, BID = 4))$/;"	l
bb_for_end	src/main/scala/generator/test14.scala	/^  val bb_for_end = Module(new BasicBlockNoMaskNode(NumInputs = 1, NumOuts = 4, BID = 4))$/;"	l
bb_for_end	src/main/scala/generator/test14_inner.scala	/^  val bb_for_end = Module(new BasicBlockNoMaskNode(NumInputs = 1, NumOuts = 3, BID = 4))$/;"	l
bb_for_end	src/main/scala/generator/test15.scala	/^  val bb_for_end = Module(new BasicBlockNoMaskNode(NumInputs = 1, NumOuts = 6, BID = 8))$/;"	l
bb_for_end12	src/main/scala/generator/test15.scala	/^  val bb_for_end12 = Module(new BasicBlockNoMaskNode(NumInputs = 1, NumOuts = 7, BID = 10))$/;"	l
bb_for_end12_activate	src/main/scala/generator/test15.scala	/^  val bb_for_end12_activate = Map($/;"	l
bb_for_end12_pred	src/main/scala/generator/test15.scala	/^  val bb_for_end12_pred = Map($/;"	l
bb_for_end18	src/main/scala/generator/test15.scala	/^  val bb_for_end18 = Module(new BasicBlockNoMaskNode(NumInputs = 1, NumOuts = 2, BID = 12))$/;"	l
bb_for_end18_activate	src/main/scala/generator/test15.scala	/^  val bb_for_end18_activate = Map($/;"	l
bb_for_end18_pred	src/main/scala/generator/test15.scala	/^  val bb_for_end18_pred = Map($/;"	l
bb_for_end_activate	src/main/scala/generator/cilk/cilk_for_test09_inner.scala	/^  val bb_for_end_activate = Map($/;"	l
bb_for_end_activate	src/main/scala/generator/cilk/mergesort_merge.scala	/^  val bb_for_end_activate = Map($/;"	l
bb_for_end_activate	src/main/scala/generator/cilk/stencil_inner.scala	/^  val bb_for_end_activate = Map($/;"	l
bb_for_end_activate	src/main/scala/generator/test03.scala	/^  val bb_for_end_activate = Map($/;"	l
bb_for_end_activate	src/main/scala/generator/test05.scala	/^  val bb_for_end_activate = Map($/;"	l
bb_for_end_activate	src/main/scala/generator/test05b.scala	/^  val bb_for_end_activate = Map($/;"	l
bb_for_end_activate	src/main/scala/generator/test05c.scala	/^  val bb_for_end_activate = Map($/;"	l
bb_for_end_activate	src/main/scala/generator/test08.scala	/^  val bb_for_end_activate = Map($/;"	l
bb_for_end_activate	src/main/scala/generator/test09.scala	/^  val bb_for_end_activate = Map($/;"	l
bb_for_end_activate	src/main/scala/generator/test10.scala	/^  val bb_for_end_activate = Map($/;"	l
bb_for_end_activate	src/main/scala/generator/test11.scala	/^  val bb_for_end_activate = Map($/;"	l
bb_for_end_activate	src/main/scala/generator/test12.scala	/^  val bb_for_end_activate = Map($/;"	l
bb_for_end_activate	src/main/scala/generator/test12_inner.scala	/^  val bb_for_end_activate = Map($/;"	l
bb_for_end_activate	src/main/scala/generator/test14.scala	/^  val bb_for_end_activate = Map($/;"	l
bb_for_end_activate	src/main/scala/generator/test14_inner.scala	/^  val bb_for_end_activate = Map($/;"	l
bb_for_end_activate	src/main/scala/generator/test15.scala	/^  val bb_for_end_activate = Map($/;"	l
bb_for_end_pred	src/main/scala/generator/cilk/cilk_for_test09_inner.scala	/^  val bb_for_end_pred = Map($/;"	l
bb_for_end_pred	src/main/scala/generator/cilk/mergesort_merge.scala	/^  val bb_for_end_pred = Map($/;"	l
bb_for_end_pred	src/main/scala/generator/cilk/stencil_inner.scala	/^  val bb_for_end_pred = Map($/;"	l
bb_for_end_pred	src/main/scala/generator/test03.scala	/^  val bb_for_end_pred = Map($/;"	l
bb_for_end_pred	src/main/scala/generator/test05.scala	/^  val bb_for_end_pred = Map($/;"	l
bb_for_end_pred	src/main/scala/generator/test05b.scala	/^  val bb_for_end_pred = Map($/;"	l
bb_for_end_pred	src/main/scala/generator/test05c.scala	/^  val bb_for_end_pred = Map($/;"	l
bb_for_end_pred	src/main/scala/generator/test08.scala	/^  val bb_for_end_pred = Map($/;"	l
bb_for_end_pred	src/main/scala/generator/test09.scala	/^  val bb_for_end_pred = Map($/;"	l
bb_for_end_pred	src/main/scala/generator/test10.scala	/^  val bb_for_end_pred = Map($/;"	l
bb_for_end_pred	src/main/scala/generator/test11.scala	/^  val bb_for_end_pred = Map($/;"	l
bb_for_end_pred	src/main/scala/generator/test12.scala	/^  val bb_for_end_pred = Map($/;"	l
bb_for_end_pred	src/main/scala/generator/test12_inner.scala	/^  val bb_for_end_pred = Map($/;"	l
bb_for_end_pred	src/main/scala/generator/test14.scala	/^  val bb_for_end_pred = Map($/;"	l
bb_for_end_pred	src/main/scala/generator/test14_inner.scala	/^  val bb_for_end_pred = Map($/;"	l
bb_for_end_pred	src/main/scala/generator/test15.scala	/^  val bb_for_end_pred = Map($/;"	l
bb_for_inc	src/main/scala/generator/cilk/cilk_for_test09_inner.scala	/^  val bb_for_inc = Module(new BasicBlockNoMaskNode(NumInputs = 1, NumOuts = 2, BID = 3))$/;"	l
bb_for_inc	src/main/scala/generator/cilk/mergesort_merge.scala	/^  val bb_for_inc = Module(new BasicBlockNoMaskNode(NumInputs = 1, NumOuts = 2, BID = 8))$/;"	l
bb_for_inc	src/main/scala/generator/cilk/stencil_inner.scala	/^  val bb_for_inc = Module(new BasicBlockNoMaskNode(NumInputs = 1, NumOuts = 2, BID = 7))$/;"	l
bb_for_inc	src/main/scala/generator/test03.scala	/^  val bb_for_inc = Module(new BasicBlockNoMaskFastNode(NumInputs = 1, NumOuts = 2, BID = 3))$/;"	l
bb_for_inc	src/main/scala/generator/test05.scala	/^  val bb_for_inc = Module(new BasicBlockNoMaskNode(NumInputs = 1, NumOuts = 2, BID = 3))$/;"	l
bb_for_inc	src/main/scala/generator/test05b.scala	/^  val bb_for_inc = Module(new BasicBlockNoMaskNode(NumInputs = 1, NumOuts = 2, BID = 3))$/;"	l
bb_for_inc	src/main/scala/generator/test05c.scala	/^  val bb_for_inc = Module(new BasicBlockNoMaskNode(NumInputs = 1, NumOuts = 2, BID = 3))$/;"	l
bb_for_inc	src/main/scala/generator/test08.scala	/^  val bb_for_inc = Module(new BasicBlockNoMaskNode(NumInputs = 1, NumOuts = 2, BID = 3))$/;"	l
bb_for_inc	src/main/scala/generator/test09.scala	/^  val bb_for_inc = Module(new BasicBlockNoMaskNode(NumInputs = 1, NumOuts = 2, BID = 3))$/;"	l
bb_for_inc	src/main/scala/generator/test10.scala	/^  val bb_for_inc = Module(new BasicBlockNoMaskNode(NumInputs = 1, NumOuts = 2, BID = 3))$/;"	l
bb_for_inc	src/main/scala/generator/test11.scala	/^  val bb_for_inc = Module(new BasicBlockNoMaskNode(NumInputs = 1, NumOuts = 2, BID = 3))$/;"	l
bb_for_inc	src/main/scala/generator/test12.scala	/^  val bb_for_inc = Module(new BasicBlockNoMaskNode(NumInputs = 1, NumOuts = 2, BID = 3))$/;"	l
bb_for_inc	src/main/scala/generator/test12_inner.scala	/^  val bb_for_inc = Module(new BasicBlockNoMaskNode(NumInputs = 1, NumOuts = 2, BID = 3))$/;"	l
bb_for_inc	src/main/scala/generator/test14.scala	/^  val bb_for_inc = Module(new BasicBlockNoMaskNode(NumInputs = 1, NumOuts = 2, BID = 3))$/;"	l
bb_for_inc	src/main/scala/generator/test14_inner.scala	/^  val bb_for_inc = Module(new BasicBlockNoMaskNode(NumInputs = 1, NumOuts = 2, BID = 3))$/;"	l
bb_for_inc	src/main/scala/generator/test15.scala	/^  val bb_for_inc = Module(new BasicBlockNoMaskNode(NumInputs = 1, NumOuts = 2, BID = 7))$/;"	l
bb_for_inc10	src/main/scala/generator/test15.scala	/^  val bb_for_inc10 = Module(new BasicBlockNoMaskNode(NumInputs = 1, NumOuts = 2, BID = 9))$/;"	l
bb_for_inc10_activate	src/main/scala/generator/test15.scala	/^  val bb_for_inc10_activate = Map($/;"	l
bb_for_inc10_pred	src/main/scala/generator/test15.scala	/^  val bb_for_inc10_pred = Map($/;"	l
bb_for_inc16	src/main/scala/generator/test15.scala	/^  val bb_for_inc16 = Module(new BasicBlockNoMaskNode(NumInputs = 1, NumOuts = 2, BID = 11))$/;"	l
bb_for_inc16_activate	src/main/scala/generator/test15.scala	/^  val bb_for_inc16_activate = Map($/;"	l
bb_for_inc16_pred	src/main/scala/generator/test15.scala	/^  val bb_for_inc16_pred = Map($/;"	l
bb_for_inc_activate	src/main/scala/generator/cilk/cilk_for_test09_inner.scala	/^  val bb_for_inc_activate = Map($/;"	l
bb_for_inc_activate	src/main/scala/generator/cilk/mergesort_merge.scala	/^  val bb_for_inc_activate = Map($/;"	l
bb_for_inc_activate	src/main/scala/generator/cilk/stencil_inner.scala	/^  val bb_for_inc_activate = Map($/;"	l
bb_for_inc_activate	src/main/scala/generator/test03.scala	/^  val bb_for_inc_activate = Map($/;"	l
bb_for_inc_activate	src/main/scala/generator/test05.scala	/^  val bb_for_inc_activate = Map($/;"	l
bb_for_inc_activate	src/main/scala/generator/test05b.scala	/^  val bb_for_inc_activate = Map($/;"	l
bb_for_inc_activate	src/main/scala/generator/test05c.scala	/^  val bb_for_inc_activate = Map($/;"	l
bb_for_inc_activate	src/main/scala/generator/test08.scala	/^  val bb_for_inc_activate = Map($/;"	l
bb_for_inc_activate	src/main/scala/generator/test09.scala	/^  val bb_for_inc_activate = Map($/;"	l
bb_for_inc_activate	src/main/scala/generator/test10.scala	/^  val bb_for_inc_activate = Map($/;"	l
bb_for_inc_activate	src/main/scala/generator/test11.scala	/^  val bb_for_inc_activate = Map($/;"	l
bb_for_inc_activate	src/main/scala/generator/test12.scala	/^  val bb_for_inc_activate = Map($/;"	l
bb_for_inc_activate	src/main/scala/generator/test12_inner.scala	/^  val bb_for_inc_activate = Map($/;"	l
bb_for_inc_activate	src/main/scala/generator/test14.scala	/^  val bb_for_inc_activate = Map($/;"	l
bb_for_inc_activate	src/main/scala/generator/test14_inner.scala	/^  val bb_for_inc_activate = Map($/;"	l
bb_for_inc_activate	src/main/scala/generator/test15.scala	/^  val bb_for_inc_activate = Map($/;"	l
bb_for_inc_pred	src/main/scala/generator/cilk/cilk_for_test09_inner.scala	/^  val bb_for_inc_pred = Map($/;"	l
bb_for_inc_pred	src/main/scala/generator/cilk/mergesort_merge.scala	/^  val bb_for_inc_pred = Map($/;"	l
bb_for_inc_pred	src/main/scala/generator/cilk/stencil_inner.scala	/^  val bb_for_inc_pred = Map($/;"	l
bb_for_inc_pred	src/main/scala/generator/test03.scala	/^  val bb_for_inc_pred = Map($/;"	l
bb_for_inc_pred	src/main/scala/generator/test05.scala	/^  val bb_for_inc_pred = Map($/;"	l
bb_for_inc_pred	src/main/scala/generator/test05b.scala	/^  val bb_for_inc_pred = Map($/;"	l
bb_for_inc_pred	src/main/scala/generator/test05c.scala	/^  val bb_for_inc_pred = Map($/;"	l
bb_for_inc_pred	src/main/scala/generator/test08.scala	/^  val bb_for_inc_pred = Map($/;"	l
bb_for_inc_pred	src/main/scala/generator/test09.scala	/^  val bb_for_inc_pred = Map($/;"	l
bb_for_inc_pred	src/main/scala/generator/test10.scala	/^  val bb_for_inc_pred = Map($/;"	l
bb_for_inc_pred	src/main/scala/generator/test11.scala	/^  val bb_for_inc_pred = Map($/;"	l
bb_for_inc_pred	src/main/scala/generator/test12.scala	/^  val bb_for_inc_pred = Map($/;"	l
bb_for_inc_pred	src/main/scala/generator/test12_inner.scala	/^  val bb_for_inc_pred = Map($/;"	l
bb_for_inc_pred	src/main/scala/generator/test14.scala	/^  val bb_for_inc_pred = Map($/;"	l
bb_for_inc_pred	src/main/scala/generator/test14_inner.scala	/^  val bb_for_inc_pred = Map($/;"	l
bb_for_inc_pred	src/main/scala/generator/test15.scala	/^  val bb_for_inc_pred = Map($/;"	l
bb_if_else	src/main/scala/generator/cilk/mergesort_merge.scala	/^  val bb_if_else = Module(new BasicBlockNode(NumInputs = 2, NumOuts = 6, NumPhi = 0, BID = 6))$/;"	l
bb_if_else	src/main/scala/generator/test04.scala	/^  val bb_if_else = Module(new BasicBlockNoMaskNode(NumInputs = 1, NumOuts = 2, BID = 5))$/;"	l
bb_if_else_activate	src/main/scala/generator/cilk/mergesort_merge.scala	/^  val bb_if_else_activate = Map($/;"	l
bb_if_else_activate	src/main/scala/generator/test04.scala	/^  val bb_if_else_activate = Map($/;"	l
bb_if_else_pred	src/main/scala/generator/cilk/mergesort_merge.scala	/^  val bb_if_else_pred = Map($/;"	l
bb_if_else_pred	src/main/scala/generator/test04.scala	/^  val bb_if_else_pred = Map($/;"	l
bb_if_end	src/main/scala/generator/cilk/fib.scala	/^  val bb_if_end = Module(new BasicBlockNoMaskNode(NumInputs = 1, NumOuts = 2, BID = 2))$/;"	l
bb_if_end	src/main/scala/generator/cilk/mergesort.scala	/^  val bb_if_end = Module(new BasicBlockNoMaskNode(NumInputs = 1, NumOuts = 5, BID = 2))$/;"	l
bb_if_end	src/main/scala/generator/cilk/mergesort_merge.scala	/^  val bb_if_end = Module(new BasicBlockNode(NumInputs = 2, NumOuts = 3, NumPhi = 2, BID = 7))$/;"	l
bb_if_end	src/main/scala/generator/test02.scala	/^  val bb_if_end = Module(new BasicBlockNode(NumInputs = 2, NumOuts = 2, NumPhi = 1, BID = 2))$/;"	l
bb_if_end	src/main/scala/generator/test04.scala	/^  val bb_if_end = Module(new BasicBlockNode(NumInputs = 2, NumOuts = 3, NumPhi = 2, BID = 6))$/;"	l
bb_if_end11	src/main/scala/generator/cilk/stencil_inner.scala	/^  val bb_if_end11 = Module(new BasicBlockNode(NumInputs = 3, NumOuts = 1, NumPhi = 1, BID = 6))$/;"	l
bb_if_end11_activate	src/main/scala/generator/cilk/stencil_inner.scala	/^  val bb_if_end11_activate = Map($/;"	l
bb_if_end11_pred	src/main/scala/generator/cilk/stencil_inner.scala	/^  val bb_if_end11_pred = Map($/;"	l
bb_if_end_activate	src/main/scala/generator/cilk/fib.scala	/^  val bb_if_end_activate = Map($/;"	l
bb_if_end_activate	src/main/scala/generator/cilk/mergesort.scala	/^  val bb_if_end_activate = Map($/;"	l
bb_if_end_activate	src/main/scala/generator/cilk/mergesort_merge.scala	/^  val bb_if_end_activate = Map($/;"	l
bb_if_end_activate	src/main/scala/generator/cilk/stencil_inner.scala	/^  val bb_if_end_activate = Map($/;"	l
bb_if_end_activate	src/main/scala/generator/test02.scala	/^  val bb_if_end_activate = Map($/;"	l
bb_if_end_activate	src/main/scala/generator/test04.scala	/^  val bb_if_end_activate = Map($/;"	l
bb_if_end_pred	src/main/scala/generator/cilk/fib.scala	/^  val bb_if_end_pred = Map($/;"	l
bb_if_end_pred	src/main/scala/generator/cilk/mergesort.scala	/^  val bb_if_end_pred = Map($/;"	l
bb_if_end_pred	src/main/scala/generator/cilk/mergesort_merge.scala	/^  val bb_if_end_pred = Map($/;"	l
bb_if_end_pred	src/main/scala/generator/cilk/stencil_inner.scala	/^  val bb_if_end_pred = Map($/;"	l
bb_if_end_pred	src/main/scala/generator/test02.scala	/^  val bb_if_end_pred = Map($/;"	l
bb_if_end_pred	src/main/scala/generator/test04.scala	/^  val bb_if_end_pred = Map($/;"	l
bb_if_then	src/main/scala/generator/cilk/fib.scala	/^  val bb_if_then = Module(new BasicBlockNoMaskNode(NumInputs = 1, NumOuts = 2, BID = 1))$/;"	l
bb_if_then	src/main/scala/generator/cilk/mergesort.scala	/^  val bb_if_then = Module(new BasicBlockNoMaskNode(NumInputs = 1, NumOuts = 1, BID = 1))$/;"	l
bb_if_then	src/main/scala/generator/cilk/mergesort_merge.scala	/^  val bb_if_then = Module(new BasicBlockNode(NumInputs = 2, NumOuts = 6, NumPhi = 0, BID = 5))$/;"	l
bb_if_then	src/main/scala/generator/cilk/stencil_inner.scala	/^  val bb_if_then = Module(new BasicBlockNoMaskNode(NumInputs = 1, NumOuts = 2, BID = 3))$/;"	l
bb_if_then	src/main/scala/generator/test02.scala	/^  val bb_if_then = Module(new BasicBlockNoMaskNode(NumInputs = 1, NumOuts = 2, BID = 1))$/;"	l
bb_if_then	src/main/scala/generator/test04.scala	/^  val bb_if_then = Module(new BasicBlockNoMaskNode(NumInputs = 1, NumOuts = 2, BID = 4))$/;"	l
bb_if_then5	src/main/scala/generator/cilk/stencil_inner.scala	/^  val bb_if_then5 = Module(new BasicBlockNoMaskNode(NumInputs = 1, NumOuts = 11, BID = 4))$/;"	l
bb_if_then5_activate	src/main/scala/generator/cilk/stencil_inner.scala	/^  val bb_if_then5_activate = Map($/;"	l
bb_if_then5_pred	src/main/scala/generator/cilk/stencil_inner.scala	/^  val bb_if_then5_pred = Map($/;"	l
bb_if_then_activate	src/main/scala/generator/cilk/fib.scala	/^  val bb_if_then_activate = Map($/;"	l
bb_if_then_activate	src/main/scala/generator/cilk/mergesort.scala	/^  val bb_if_then_activate = Map($/;"	l
bb_if_then_activate	src/main/scala/generator/cilk/mergesort_merge.scala	/^  val bb_if_then_activate = Map($/;"	l
bb_if_then_activate	src/main/scala/generator/cilk/stencil_inner.scala	/^  val bb_if_then_activate = Map($/;"	l
bb_if_then_activate	src/main/scala/generator/test02.scala	/^  val bb_if_then_activate = Map($/;"	l
bb_if_then_activate	src/main/scala/generator/test04.scala	/^  val bb_if_then_activate = Map($/;"	l
bb_if_then_pred	src/main/scala/generator/cilk/fib.scala	/^  val bb_if_then_pred = Map($/;"	l
bb_if_then_pred	src/main/scala/generator/cilk/mergesort.scala	/^  val bb_if_then_pred = Map($/;"	l
bb_if_then_pred	src/main/scala/generator/cilk/mergesort_merge.scala	/^  val bb_if_then_pred = Map($/;"	l
bb_if_then_pred	src/main/scala/generator/cilk/stencil_inner.scala	/^  val bb_if_then_pred = Map($/;"	l
bb_if_then_pred	src/main/scala/generator/test02.scala	/^  val bb_if_then_pred = Map($/;"	l
bb_if_then_pred	src/main/scala/generator/test04.scala	/^  val bb_if_then_pred = Map($/;"	l
bb_land_lhs_true	src/main/scala/generator/cilk/mergesort_merge.scala	/^  val bb_land_lhs_true = Module(new BasicBlockNoMaskNode(NumInputs = 1, NumOuts = 2, BID = 3))$/;"	l
bb_land_lhs_true_activate	src/main/scala/generator/cilk/mergesort_merge.scala	/^  val bb_land_lhs_true_activate = Map($/;"	l
bb_land_lhs_true_pred	src/main/scala/generator/cilk/mergesort_merge.scala	/^  val bb_land_lhs_true_pred = Map($/;"	l
bb_loopjj	src/main/scala/generator/cilk/bgemm.scala	/^  val bb_loopjj = Module(new BasicBlockNoMaskNode(NumInputs = 1, NumOuts = 1, BID = 1))$/;"	l
bb_loopjj_activate	src/main/scala/generator/cilk/bgemm.scala	/^  val bb_loopjj_activate = Map($/;"	l
bb_loopjj_pred	src/main/scala/generator/cilk/bgemm.scala	/^  val bb_loopjj_pred = Map($/;"	l
bb_lor_lhs_false	src/main/scala/generator/cilk/mergesort_merge.scala	/^  val bb_lor_lhs_false = Module(new BasicBlockNoMaskNode(NumInputs = 1, NumOuts = 6, BID = 4))$/;"	l
bb_lor_lhs_false_activate	src/main/scala/generator/cilk/mergesort_merge.scala	/^  val bb_lor_lhs_false_activate = Map($/;"	l
bb_lor_lhs_false_pred	src/main/scala/generator/cilk/mergesort_merge.scala	/^  val bb_lor_lhs_false_pred = Map($/;"	l
bb_my_for_body	src/main/scala/generator/cilk/bgemm_detach3.scala	/^  val bb_my_for_body = Module(new BasicBlockNoMaskNode(NumInputs = 1, NumOuts = 8, BID = 3))$/;"	l
bb_my_for_body	src/main/scala/generator/cilk/stencil_detach1.scala	/^  val bb_my_for_body = Module(new BasicBlockNoMaskNode(NumInputs = 1, NumOuts = 9, BID = 2))$/;"	l
bb_my_for_body24	src/main/scala/generator/cilk/bgemm_detach3.scala	/^  val bb_my_for_body24 = Module(new BasicBlockNoMaskNode(NumInputs = 1, NumOuts = 12, BID = 6))$/;"	l
bb_my_for_body24_activate	src/main/scala/generator/cilk/bgemm_detach3.scala	/^  val bb_my_for_body24_activate = Map($/;"	l
bb_my_for_body24_pred	src/main/scala/generator/cilk/bgemm_detach3.scala	/^  val bb_my_for_body24_pred = Map($/;"	l
bb_my_for_body_activate	src/main/scala/generator/cilk/bgemm_detach3.scala	/^  val bb_my_for_body_activate = Map($/;"	l
bb_my_for_body_activate	src/main/scala/generator/cilk/stencil_detach1.scala	/^  val bb_my_for_body_activate = Map($/;"	l
bb_my_for_body_pred	src/main/scala/generator/cilk/bgemm_detach3.scala	/^  val bb_my_for_body_pred = Map($/;"	l
bb_my_for_body_pred	src/main/scala/generator/cilk/stencil_detach1.scala	/^  val bb_my_for_body_pred = Map($/;"	l
bb_my_for_cond	src/main/scala/generator/cilk/bgemm_detach3.scala	/^  val bb_my_for_cond = Module(new BasicBlockLoopHeadNode(NumInputs = 2, NumOuts = 3, NumPhi = 1, BID = 2))$/;"	l
bb_my_for_cond	src/main/scala/generator/cilk/stencil_detach1.scala	/^  val bb_my_for_cond = Module(new LoopHead(NumOuts = 3, NumPhi = 1, BID = 1))$/;"	l
bb_my_for_cond22	src/main/scala/generator/cilk/bgemm_detach3.scala	/^  val bb_my_for_cond22 = Module(new BasicBlockLoopHeadNode(NumInputs = 2, NumOuts = 3, NumPhi = 1, BID = 5))$/;"	l
bb_my_for_cond22_activate	src/main/scala/generator/cilk/bgemm_detach3.scala	/^  val bb_my_for_cond22_activate = Map($/;"	l
bb_my_for_cond22_pred	src/main/scala/generator/cilk/bgemm_detach3.scala	/^  val bb_my_for_cond22_pred = Map($/;"	l
bb_my_for_cond_activate	src/main/scala/generator/cilk/bgemm_detach3.scala	/^  val bb_my_for_cond_activate = Map($/;"	l
bb_my_for_cond_activate	src/main/scala/generator/cilk/stencil_detach1.scala	/^  val bb_my_for_cond_activate = Map($/;"	l
bb_my_for_cond_pred	src/main/scala/generator/cilk/bgemm_detach3.scala	/^  val bb_my_for_cond_pred = Map($/;"	l
bb_my_for_cond_pred	src/main/scala/generator/cilk/stencil_detach1.scala	/^  val bb_my_for_cond_pred = Map($/;"	l
bb_my_for_end	src/main/scala/generator/cilk/bgemm_detach3.scala	/^  val bb_my_for_end = Module(new BasicBlockNoMaskNode(NumInputs = 1, NumOuts = 7, BID = 8))$/;"	l
bb_my_for_end	src/main/scala/generator/cilk/stencil_detach1.scala	/^  val bb_my_for_end = Module(new BasicBlockNoMaskNode(NumInputs = 1, NumOuts = 11, BID = 4))$/;"	l
bb_my_for_end35	src/main/scala/generator/cilk/bgemm_detach3.scala	/^  val bb_my_for_end35 = Module(new BasicBlockNoMaskNode(NumInputs = 1, NumOuts = 4, BID = 10))$/;"	l
bb_my_for_end35_activate	src/main/scala/generator/cilk/bgemm_detach3.scala	/^  val bb_my_for_end35_activate = Map($/;"	l
bb_my_for_end35_pred	src/main/scala/generator/cilk/bgemm_detach3.scala	/^  val bb_my_for_end35_pred = Map($/;"	l
bb_my_for_end_activate	src/main/scala/generator/cilk/bgemm_detach3.scala	/^  val bb_my_for_end_activate = Map($/;"	l
bb_my_for_end_activate	src/main/scala/generator/cilk/stencil_detach1.scala	/^  val bb_my_for_end_activate = Map($/;"	l
bb_my_for_end_pred	src/main/scala/generator/cilk/bgemm_detach3.scala	/^  val bb_my_for_end_pred = Map($/;"	l
bb_my_for_end_pred	src/main/scala/generator/cilk/stencil_detach1.scala	/^  val bb_my_for_end_pred = Map($/;"	l
bb_my_for_inc	src/main/scala/generator/cilk/bgemm_detach3.scala	/^  val bb_my_for_inc = Module(new BasicBlockNoMaskNode(NumInputs = 1, NumOuts = 2, BID = 7))$/;"	l
bb_my_for_inc	src/main/scala/generator/cilk/stencil_detach1.scala	/^  val bb_my_for_inc = Module(new BasicBlockNoMaskNode(NumInputs = 1, NumOuts = 2, BID = 3))$/;"	l
bb_my_for_inc33	src/main/scala/generator/cilk/bgemm_detach3.scala	/^  val bb_my_for_inc33 = Module(new BasicBlockNoMaskNode(NumInputs = 1, NumOuts = 2, BID = 9))$/;"	l
bb_my_for_inc33_activate	src/main/scala/generator/cilk/bgemm_detach3.scala	/^  val bb_my_for_inc33_activate = Map($/;"	l
bb_my_for_inc33_pred	src/main/scala/generator/cilk/bgemm_detach3.scala	/^  val bb_my_for_inc33_pred = Map($/;"	l
bb_my_for_inc_activate	src/main/scala/generator/cilk/bgemm_detach3.scala	/^  val bb_my_for_inc_activate = Map($/;"	l
bb_my_for_inc_activate	src/main/scala/generator/cilk/stencil_detach1.scala	/^  val bb_my_for_inc_activate = Map($/;"	l
bb_my_for_inc_pred	src/main/scala/generator/cilk/bgemm_detach3.scala	/^  val bb_my_for_inc_pred = Map($/;"	l
bb_my_for_inc_pred	src/main/scala/generator/cilk/stencil_detach1.scala	/^  val bb_my_for_inc_pred = Map($/;"	l
bb_my_if_else	src/main/scala/generator/cilk/cilk_for_test05_detach.scala	/^  val bb_my_if_else = Module(new BasicBlockNoMaskNode(NumInputs = 1, NumOuts = 3, BID = 4))$/;"	l
bb_my_if_else_activate	src/main/scala/generator/cilk/cilk_for_test05_detach.scala	/^  val bb_my_if_else_activate = Map($/;"	l
bb_my_if_else_pred	src/main/scala/generator/cilk/cilk_for_test05_detach.scala	/^  val bb_my_if_else_pred = Map($/;"	l
bb_my_if_end	src/main/scala/generator/cilk/cilk_for_test05_detach.scala	/^  val bb_my_if_end = Module(new BasicBlockNoMaskNode(NumInputs = 2, NumOuts = 1, BID = 2))$/;"	l
bb_my_if_end_activate	src/main/scala/generator/cilk/cilk_for_test05_detach.scala	/^  val bb_my_if_end_activate = Map($/;"	l
bb_my_if_end_pred	src/main/scala/generator/cilk/cilk_for_test05_detach.scala	/^  val bb_my_if_end_pred = Map($/;"	l
bb_my_if_then	src/main/scala/generator/cilk/cilk_for_test05_detach.scala	/^  val bb_my_if_then = Module(new BasicBlockNoMaskNode(NumInputs = 1, NumOuts = 3, BID = 1))$/;"	l
bb_my_if_then_activate	src/main/scala/generator/cilk/cilk_for_test05_detach.scala	/^  val bb_my_if_then_activate = Map($/;"	l
bb_my_if_then_pred	src/main/scala/generator/cilk/cilk_for_test05_detach.scala	/^  val bb_my_if_then_pred = Map($/;"	l
bb_my_loopi	src/main/scala/generator/cilk/bgemm_detach2.scala	/^  val bb_my_loopi = Module(new BasicBlockNoMaskNode(NumInputs = 1, NumOuts = 1, BID = 1))$/;"	l
bb_my_loopi_activate	src/main/scala/generator/cilk/bgemm_detach2.scala	/^  val bb_my_loopi_activate = Map($/;"	l
bb_my_loopi_pred	src/main/scala/generator/cilk/bgemm_detach2.scala	/^  val bb_my_loopi_pred = Map($/;"	l
bb_my_loopj	src/main/scala/generator/cilk/bgemm_detach3.scala	/^  val bb_my_loopj = Module(new BasicBlockNoMaskNode(NumInputs = 1, NumOuts = 1, BID = 4))$/;"	l
bb_my_loopj_activate	src/main/scala/generator/cilk/bgemm_detach3.scala	/^  val bb_my_loopj_activate = Map($/;"	l
bb_my_loopj_pred	src/main/scala/generator/cilk/bgemm_detach3.scala	/^  val bb_my_loopj_pred = Map($/;"	l
bb_my_loopk	src/main/scala/generator/cilk/bgemm_detach3.scala	/^  val bb_my_loopk = Module(new BasicBlockNoMaskNode(NumInputs = 1, NumOuts = 1, BID = 1))$/;"	l
bb_my_loopk_activate	src/main/scala/generator/cilk/bgemm_detach3.scala	/^  val bb_my_loopk_activate = Map($/;"	l
bb_my_loopk_pred	src/main/scala/generator/cilk/bgemm_detach3.scala	/^  val bb_my_loopk_pred = Map($/;"	l
bb_my_loopkk	src/main/scala/generator/cilk/bgemm_detach1.scala	/^  val bb_my_loopkk = Module(new BasicBlockNoMaskNode(NumInputs = 1, NumOuts = 1, BID = 1))$/;"	l
bb_my_loopkk_activate	src/main/scala/generator/cilk/bgemm_detach1.scala	/^  val bb_my_loopkk_activate = Map($/;"	l
bb_my_loopkk_pred	src/main/scala/generator/cilk/bgemm_detach1.scala	/^  val bb_my_loopkk_pred = Map($/;"	l
bb_my_offload_pfor_body10	src/main/scala/generator/cilk/cilk_for_test12_detach2.scala	/^  val bb_my_offload_pfor_body10 = Module(new BasicBlockNoMaskFastNode(NumInputs = 1, NumOuts = 1, BID = 7))$/;"	l
bb_my_offload_pfor_body10_activate	src/main/scala/generator/cilk/cilk_for_test12_detach2.scala	/^  val bb_my_offload_pfor_body10_activate = Map($/;"	l
bb_my_offload_pfor_body10_pred	src/main/scala/generator/cilk/cilk_for_test12_detach2.scala	/^  val bb_my_offload_pfor_body10_pred = Map($/;"	l
bb_my_offload_pfor_body15	src/main/scala/generator/cilk/bgemm_detach2.scala	/^  val bb_my_offload_pfor_body15 = Module(new BasicBlockNoMaskNode(NumInputs = 1, NumOuts = 2, BID = 8))$/;"	l
bb_my_offload_pfor_body15_activate	src/main/scala/generator/cilk/bgemm_detach2.scala	/^  val bb_my_offload_pfor_body15_activate = Map($/;"	l
bb_my_offload_pfor_body15_pred	src/main/scala/generator/cilk/bgemm_detach2.scala	/^  val bb_my_offload_pfor_body15_pred = Map($/;"	l
bb_my_offload_pfor_body5	src/main/scala/generator/cilk/cilk_for_test06_detach.scala	/^  val bb_my_offload_pfor_body5 = Module(new BasicBlockNoMaskNode(NumInputs = 1, NumOuts = 1, BID = 7))$/;"	l
bb_my_offload_pfor_body5	src/main/scala/generator/cilk/cilk_for_test12_detach1.scala	/^  val bb_my_offload_pfor_body5 = Module(new BasicBlockNoMaskNode(NumInputs = 1, NumOuts = 1, BID = 7))$/;"	l
bb_my_offload_pfor_body5_activate	src/main/scala/generator/cilk/cilk_for_test06_detach.scala	/^  val bb_my_offload_pfor_body5_activate = Map($/;"	l
bb_my_offload_pfor_body5_activate	src/main/scala/generator/cilk/cilk_for_test12_detach1.scala	/^  val bb_my_offload_pfor_body5_activate = Map($/;"	l
bb_my_offload_pfor_body5_pred	src/main/scala/generator/cilk/cilk_for_test06_detach.scala	/^  val bb_my_offload_pfor_body5_pred = Map($/;"	l
bb_my_offload_pfor_body5_pred	src/main/scala/generator/cilk/cilk_for_test12_detach1.scala	/^  val bb_my_offload_pfor_body5_pred = Map($/;"	l
bb_my_offload_pfor_body8	src/main/scala/generator/cilk/bgemm_detach1.scala	/^  val bb_my_offload_pfor_body8 = Module(new BasicBlockNoMaskNode(NumInputs = 1, NumOuts = 2, BID = 8))$/;"	l
bb_my_offload_pfor_body8_activate	src/main/scala/generator/cilk/bgemm_detach1.scala	/^  val bb_my_offload_pfor_body8_activate = Map($/;"	l
bb_my_offload_pfor_body8_pred	src/main/scala/generator/cilk/bgemm_detach1.scala	/^  val bb_my_offload_pfor_body8_pred = Map($/;"	l
bb_my_pfor_body	src/main/scala/generator/cilk/bgemm_detach1.scala	/^  val bb_my_pfor_body = Module(new BasicBlockNoMaskNode(NumInputs = 1, NumOuts = 3, BID = 0))$/;"	l
bb_my_pfor_body	src/main/scala/generator/cilk/cilk_for_test04_detach.scala	/^  val bb_my_pfor_body = Module(new BasicBlockNoMaskNode(NumInputs = 1, NumOuts = 3, BID = 0))$/;"	l
bb_my_pfor_body	src/main/scala/generator/cilk/cilk_for_test05_detach.scala	/^  val bb_my_pfor_body = Module(new BasicBlockNoMaskNode(NumInputs = 1, NumOuts = 2, BID = 0))$/;"	l
bb_my_pfor_body	src/main/scala/generator/cilk/cilk_for_test06_detach.scala	/^  val bb_my_pfor_body = Module(new BasicBlockNoMaskNode(NumInputs = 1, NumOuts = 5, BID = 0))$/;"	l
bb_my_pfor_body	src/main/scala/generator/cilk/cilk_for_test07_detach.scala	/^  val bb_my_pfor_body = Module(new BasicBlockNoMaskNode(NumInputs = 1, NumOuts = 5, BID = 0))$/;"	l
bb_my_pfor_body	src/main/scala/generator/cilk/cilk_for_test08_detach.scala	/^  val bb_my_pfor_body = Module(new BasicBlockNoMaskNode(NumInputs = 1, NumOuts = 6, BID = 0))$/;"	l
bb_my_pfor_body	src/main/scala/generator/cilk/cilk_for_test12_detach1.scala	/^  val bb_my_pfor_body = Module(new BasicBlockNoMaskNode(NumInputs = 1, NumOuts = 1, BID = 0))$/;"	l
bb_my_pfor_body	src/main/scala/generator/cilk/stencil_detach1.scala	/^  val bb_my_pfor_body = Module(new BasicBlockNoMaskNode(NumInputs = 1, NumOuts = 7, BID = 0))$/;"	l
bb_my_pfor_body10	src/main/scala/generator/cilk/cilk_for_test12_detach3.scala	/^  val bb_my_pfor_body10 = Module(new BasicBlockNoMaskNode(NumInputs = 1, NumOuts = 6, BID = 0))$/;"	l
bb_my_pfor_body10_activate	src/main/scala/generator/cilk/cilk_for_test12_detach3.scala	/^  val bb_my_pfor_body10_activate = Map($/;"	l
bb_my_pfor_body10_pred	src/main/scala/generator/cilk/cilk_for_test12_detach3.scala	/^  val bb_my_pfor_body10_pred = Map($/;"	l
bb_my_pfor_body15	src/main/scala/generator/cilk/bgemm_detach3.scala	/^  val bb_my_pfor_body15 = Module(new BasicBlockNoMaskNode(NumInputs = 1, NumOuts = 1, BID = 0))$/;"	l
bb_my_pfor_body15_activate	src/main/scala/generator/cilk/bgemm_detach3.scala	/^  val bb_my_pfor_body15_activate = Map($/;"	l
bb_my_pfor_body15_pred	src/main/scala/generator/cilk/bgemm_detach3.scala	/^  val bb_my_pfor_body15_pred = Map($/;"	l
bb_my_pfor_body5	src/main/scala/generator/cilk/cilk_for_test06_detach_2.scala	/^  val bb_my_pfor_body5 = Module(new BasicBlockNoMaskNode(NumInputs = 1, NumOuts = 11, BID = 0))$/;"	l
bb_my_pfor_body5	src/main/scala/generator/cilk/cilk_for_test12_detach2.scala	/^  val bb_my_pfor_body5 = Module(new BasicBlockNoMaskFastNode(NumInputs = 1, NumOuts = 1, BID = 0))$/;"	l
bb_my_pfor_body5_activate	src/main/scala/generator/cilk/cilk_for_test06_detach_2.scala	/^  val bb_my_pfor_body5_activate = Map($/;"	l
bb_my_pfor_body5_activate	src/main/scala/generator/cilk/cilk_for_test12_detach2.scala	/^  val bb_my_pfor_body5_activate = Map($/;"	l
bb_my_pfor_body5_pred	src/main/scala/generator/cilk/cilk_for_test06_detach_2.scala	/^  val bb_my_pfor_body5_pred = Map($/;"	l
bb_my_pfor_body5_pred	src/main/scala/generator/cilk/cilk_for_test12_detach2.scala	/^  val bb_my_pfor_body5_pred = Map($/;"	l
bb_my_pfor_body8	src/main/scala/generator/cilk/bgemm_detach2.scala	/^  val bb_my_pfor_body8 = Module(new BasicBlockNoMaskNode(NumInputs = 1, NumOuts = 3, BID = 0))$/;"	l
bb_my_pfor_body8_activate	src/main/scala/generator/cilk/bgemm_detach2.scala	/^  val bb_my_pfor_body8_activate = Map($/;"	l
bb_my_pfor_body8_pred	src/main/scala/generator/cilk/bgemm_detach2.scala	/^  val bb_my_pfor_body8_pred = Map($/;"	l
bb_my_pfor_body_activate	src/main/scala/generator/cilk/bgemm_detach1.scala	/^  val bb_my_pfor_body_activate = Map($/;"	l
bb_my_pfor_body_activate	src/main/scala/generator/cilk/cilk_for_test04_detach.scala	/^  val bb_my_pfor_body_activate = Map($/;"	l
bb_my_pfor_body_activate	src/main/scala/generator/cilk/cilk_for_test05_detach.scala	/^  val bb_my_pfor_body_activate = Map($/;"	l
bb_my_pfor_body_activate	src/main/scala/generator/cilk/cilk_for_test06_detach.scala	/^  val bb_my_pfor_body_activate = Map($/;"	l
bb_my_pfor_body_activate	src/main/scala/generator/cilk/cilk_for_test07_detach.scala	/^  val bb_my_pfor_body_activate = Map($/;"	l
bb_my_pfor_body_activate	src/main/scala/generator/cilk/cilk_for_test08_detach.scala	/^  val bb_my_pfor_body_activate = Map($/;"	l
bb_my_pfor_body_activate	src/main/scala/generator/cilk/cilk_for_test12_detach1.scala	/^  val bb_my_pfor_body_activate = Map($/;"	l
bb_my_pfor_body_activate	src/main/scala/generator/cilk/stencil_detach1.scala	/^  val bb_my_pfor_body_activate = Map($/;"	l
bb_my_pfor_body_pred	src/main/scala/generator/cilk/bgemm_detach1.scala	/^  val bb_my_pfor_body_pred = Map($/;"	l
bb_my_pfor_body_pred	src/main/scala/generator/cilk/cilk_for_test04_detach.scala	/^  val bb_my_pfor_body_pred = Map($/;"	l
bb_my_pfor_body_pred	src/main/scala/generator/cilk/cilk_for_test05_detach.scala	/^  val bb_my_pfor_body_pred = Map($/;"	l
bb_my_pfor_body_pred	src/main/scala/generator/cilk/cilk_for_test06_detach.scala	/^  val bb_my_pfor_body_pred = Map($/;"	l
bb_my_pfor_body_pred	src/main/scala/generator/cilk/cilk_for_test07_detach.scala	/^  val bb_my_pfor_body_pred = Map($/;"	l
bb_my_pfor_body_pred	src/main/scala/generator/cilk/cilk_for_test08_detach.scala	/^  val bb_my_pfor_body_pred = Map($/;"	l
bb_my_pfor_body_pred	src/main/scala/generator/cilk/cilk_for_test12_detach1.scala	/^  val bb_my_pfor_body_pred = Map($/;"	l
bb_my_pfor_body_pred	src/main/scala/generator/cilk/stencil_detach1.scala	/^  val bb_my_pfor_body_pred = Map($/;"	l
bb_my_pfor_cond12	src/main/scala/generator/cilk/bgemm_detach2.scala	/^  val bb_my_pfor_cond12 = Module(new BasicBlockLoopHeadNode(NumInputs = 2, NumOuts = 3, NumPhi = 1, BID = 2))$/;"	l
bb_my_pfor_cond12_activate	src/main/scala/generator/cilk/bgemm_detach2.scala	/^  val bb_my_pfor_cond12_activate = Map($/;"	l
bb_my_pfor_cond12_pred	src/main/scala/generator/cilk/bgemm_detach2.scala	/^  val bb_my_pfor_cond12_pred = Map($/;"	l
bb_my_pfor_cond2	src/main/scala/generator/cilk/cilk_for_test06_detach.scala	/^  val bb_my_pfor_cond2 = Module(new LoopHead(NumOuts = 3, NumPhi = 1, BID = 1))$/;"	l
bb_my_pfor_cond2	src/main/scala/generator/cilk/cilk_for_test12_detach1.scala	/^  val bb_my_pfor_cond2 = Module(new LoopHead(NumOuts = 3, NumPhi = 1, BID = 1))$/;"	l
bb_my_pfor_cond2_activate	src/main/scala/generator/cilk/cilk_for_test06_detach.scala	/^  val bb_my_pfor_cond2_activate = Map($/;"	l
bb_my_pfor_cond2_activate	src/main/scala/generator/cilk/cilk_for_test12_detach1.scala	/^  val bb_my_pfor_cond2_activate = Map($/;"	l
bb_my_pfor_cond2_pred	src/main/scala/generator/cilk/cilk_for_test06_detach.scala	/^  val bb_my_pfor_cond2_pred = Map($/;"	l
bb_my_pfor_cond2_pred	src/main/scala/generator/cilk/cilk_for_test12_detach1.scala	/^  val bb_my_pfor_cond2_pred = Map($/;"	l
bb_my_pfor_cond5	src/main/scala/generator/cilk/bgemm_detach1.scala	/^  val bb_my_pfor_cond5 = Module(new BasicBlockLoopHeadNode(NumInputs = 2, NumOuts = 3, NumPhi = 1, BID = 2))$/;"	l
bb_my_pfor_cond5_activate	src/main/scala/generator/cilk/bgemm_detach1.scala	/^  val bb_my_pfor_cond5_activate = Map($/;"	l
bb_my_pfor_cond5_pred	src/main/scala/generator/cilk/bgemm_detach1.scala	/^  val bb_my_pfor_cond5_pred = Map($/;"	l
bb_my_pfor_cond7	src/main/scala/generator/cilk/cilk_for_test12_detach2.scala	/^  val bb_my_pfor_cond7 = Module(new LoopHead(NumOuts = 3, NumPhi = 1, BID = 1))$/;"	l
bb_my_pfor_cond7_activate	src/main/scala/generator/cilk/cilk_for_test12_detach2.scala	/^  val bb_my_pfor_cond7_activate = Map($/;"	l
bb_my_pfor_cond7_pred	src/main/scala/generator/cilk/cilk_for_test12_detach2.scala	/^  val bb_my_pfor_cond7_pred = Map($/;"	l
bb_my_pfor_detach14	src/main/scala/generator/cilk/bgemm_detach2.scala	/^  val bb_my_pfor_detach14 = Module(new BasicBlockNoMaskNode(NumInputs = 1, NumOuts = 1, BID = 3))$/;"	l
bb_my_pfor_detach14_activate	src/main/scala/generator/cilk/bgemm_detach2.scala	/^  val bb_my_pfor_detach14_activate = Map($/;"	l
bb_my_pfor_detach14_pred	src/main/scala/generator/cilk/bgemm_detach2.scala	/^  val bb_my_pfor_detach14_pred = Map($/;"	l
bb_my_pfor_detach4	src/main/scala/generator/cilk/cilk_for_test12_detach1.scala	/^  val bb_my_pfor_detach4 = Module(new BasicBlockNoMaskNode(NumInputs = 1, NumOuts = 1, BID = 2))$/;"	l
bb_my_pfor_detach4_activate	src/main/scala/generator/cilk/cilk_for_test06_detach.scala	/^  val bb_my_pfor_detach4_activate = Map($/;"	l
bb_my_pfor_detach4_activate	src/main/scala/generator/cilk/cilk_for_test12_detach1.scala	/^  val bb_my_pfor_detach4_activate = Map($/;"	l
bb_my_pfor_detach4_pred	src/main/scala/generator/cilk/cilk_for_test06_detach.scala	/^  val bb_my_pfor_detach4_pred = Map($/;"	l
bb_my_pfor_detach4_pred	src/main/scala/generator/cilk/cilk_for_test12_detach1.scala	/^  val bb_my_pfor_detach4_pred = Map($/;"	l
bb_my_pfor_detach7	src/main/scala/generator/cilk/bgemm_detach1.scala	/^  val bb_my_pfor_detach7 = Module(new BasicBlockNoMaskNode(NumInputs = 1, NumOuts = 1, BID = 3))$/;"	l
bb_my_pfor_detach7_activate	src/main/scala/generator/cilk/bgemm_detach1.scala	/^  val bb_my_pfor_detach7_activate = Map($/;"	l
bb_my_pfor_detach7_pred	src/main/scala/generator/cilk/bgemm_detach1.scala	/^  val bb_my_pfor_detach7_pred = Map($/;"	l
bb_my_pfor_detach9	src/main/scala/generator/cilk/cilk_for_test12_detach2.scala	/^  val bb_my_pfor_detach9 = Module(new BasicBlockNoMaskFastNode(NumInputs = 1, NumOuts = 1, BID = 2))$/;"	l
bb_my_pfor_detach9_activate	src/main/scala/generator/cilk/cilk_for_test12_detach2.scala	/^  val bb_my_pfor_detach9_activate = Map($/;"	l
bb_my_pfor_detach9_pred	src/main/scala/generator/cilk/cilk_for_test12_detach2.scala	/^  val bb_my_pfor_detach9_pred = Map($/;"	l
bb_my_pfor_end	src/main/scala/generator/cilk/bgemm_detach2.scala	/^  val bb_my_pfor_end = Module(new BasicBlockNoMaskNode(NumInputs = 1, NumOuts = 6, BID = 5))$/;"	l
bb_my_pfor_end	src/main/scala/generator/cilk/cilk_for_test12_detach2.scala	/^  val bb_my_pfor_end = Module(new BasicBlockNoMaskFastNode(NumInputs = 1, NumOuts = 1, BID = 4)) \/\/ Manual$/;"	l
bb_my_pfor_end17	src/main/scala/generator/cilk/cilk_for_test12_detach1.scala	/^  val bb_my_pfor_end17 = Module(new BasicBlockNoMaskNode(NumInputs = 1, NumOuts = 1, BID = 4)) \/\/ Manual$/;"	l
bb_my_pfor_end17_activate	src/main/scala/generator/cilk/cilk_for_test12_detach1.scala	/^  val bb_my_pfor_end17_activate = Map($/;"	l
bb_my_pfor_end17_pred	src/main/scala/generator/cilk/cilk_for_test12_detach1.scala	/^  val bb_my_pfor_end17_pred = Map($/;"	l
bb_my_pfor_end40	src/main/scala/generator/cilk/bgemm_detach1.scala	/^  val bb_my_pfor_end40 = Module(new BasicBlockNoMaskNode(NumInputs = 1, NumOuts = 5, BID = 5))$/;"	l
bb_my_pfor_end40_activate	src/main/scala/generator/cilk/bgemm_detach1.scala	/^  val bb_my_pfor_end40_activate = Map($/;"	l
bb_my_pfor_end40_pred	src/main/scala/generator/cilk/bgemm_detach1.scala	/^  val bb_my_pfor_end40_pred = Map($/;"	l
bb_my_pfor_end_activate	src/main/scala/generator/cilk/bgemm_detach2.scala	/^  val bb_my_pfor_end_activate = Map($/;"	l
bb_my_pfor_end_activate	src/main/scala/generator/cilk/cilk_for_test06_detach.scala	/^  val bb_my_pfor_end_activate = Map($/;"	l
bb_my_pfor_end_activate	src/main/scala/generator/cilk/cilk_for_test12_detach2.scala	/^  val bb_my_pfor_end_activate = Map($/;"	l
bb_my_pfor_end_continue	src/main/scala/generator/cilk/bgemm_detach2.scala	/^  val bb_my_pfor_end_continue = Module(new BasicBlockNoMaskNode(NumInputs = 1, NumOuts = 1, BID = 6))$/;"	l
bb_my_pfor_end_continue	src/main/scala/generator/cilk/cilk_for_test12_detach2.scala	/^  val bb_my_pfor_end_continue = Module(new BasicBlockNoMaskFastNode(NumInputs = 1, NumOuts = 6, BID = 5))$/;"	l
bb_my_pfor_end_continue18	src/main/scala/generator/cilk/cilk_for_test12_detach1.scala	/^  val bb_my_pfor_end_continue18 = Module(new BasicBlockNoMaskNode(NumInputs = 1, NumOuts = 9, BID = 5))$/;"	l
bb_my_pfor_end_continue18_activate	src/main/scala/generator/cilk/cilk_for_test12_detach1.scala	/^  val bb_my_pfor_end_continue18_activate = Map($/;"	l
bb_my_pfor_end_continue41	src/main/scala/generator/cilk/bgemm_detach1.scala	/^  val bb_my_pfor_end_continue41 = Module(new BasicBlockNoMaskNode(NumInputs = 1, NumOuts = 1, BID = 6))$/;"	l
bb_my_pfor_end_continue41_activate	src/main/scala/generator/cilk/bgemm_detach1.scala	/^  val bb_my_pfor_end_continue41_activate = Map($/;"	l
bb_my_pfor_end_continue_activate	src/main/scala/generator/cilk/bgemm_detach2.scala	/^  val bb_my_pfor_end_continue_activate = Map($/;"	l
bb_my_pfor_end_continue_activate	src/main/scala/generator/cilk/cilk_for_test06_detach.scala	/^  val bb_my_pfor_end_continue_activate = Map($/;"	l
bb_my_pfor_end_continue_activate	src/main/scala/generator/cilk/cilk_for_test12_detach2.scala	/^  val bb_my_pfor_end_continue_activate = Map($/;"	l
bb_my_pfor_end_pred	src/main/scala/generator/cilk/bgemm_detach2.scala	/^  val bb_my_pfor_end_pred = Map($/;"	l
bb_my_pfor_end_pred	src/main/scala/generator/cilk/cilk_for_test06_detach.scala	/^  val bb_my_pfor_end_pred = Map($/;"	l
bb_my_pfor_end_pred	src/main/scala/generator/cilk/cilk_for_test12_detach2.scala	/^  val bb_my_pfor_end_pred = Map($/;"	l
bb_my_pfor_inc	src/main/scala/generator/cilk/bgemm_detach2.scala	/^  val bb_my_pfor_inc = Module(new BasicBlockNoMaskNode(NumInputs = 2, NumOuts = 2, BID = 4))$/;"	l
bb_my_pfor_inc	src/main/scala/generator/cilk/cilk_for_test06_detach.scala	/^  val bb_my_pfor_inc = Module(new BasicBlockNoMaskNode(NumInputs = 2, NumOuts = 2, BID = 3))$/;"	l
bb_my_pfor_inc	src/main/scala/generator/cilk/cilk_for_test12_detach2.scala	/^  val bb_my_pfor_inc = Module(new BasicBlockNoMaskFastNode(NumInputs = 2, NumOuts = 2, BID = 3))$/;"	l
bb_my_pfor_inc15	src/main/scala/generator/cilk/cilk_for_test12_detach1.scala	/^  val bb_my_pfor_inc15 = Module(new BasicBlockNoMaskNode(NumInputs = 2, NumOuts = 2, BID = 3))$/;"	l
bb_my_pfor_inc15_activate	src/main/scala/generator/cilk/cilk_for_test12_detach1.scala	/^  val bb_my_pfor_inc15_activate = Map($/;"	l
bb_my_pfor_inc15_pred	src/main/scala/generator/cilk/cilk_for_test12_detach1.scala	/^  val bb_my_pfor_inc15_pred = Map($/;"	l
bb_my_pfor_inc38	src/main/scala/generator/cilk/bgemm_detach1.scala	/^  val bb_my_pfor_inc38 = Module(new BasicBlockNoMaskNode(NumInputs = 2, NumOuts = 2, BID = 4))$/;"	l
bb_my_pfor_inc38_activate	src/main/scala/generator/cilk/bgemm_detach1.scala	/^  val bb_my_pfor_inc38_activate = Map($/;"	l
bb_my_pfor_inc38_pred	src/main/scala/generator/cilk/bgemm_detach1.scala	/^  val bb_my_pfor_inc38_pred = Map($/;"	l
bb_my_pfor_inc_activate	src/main/scala/generator/cilk/bgemm_detach2.scala	/^  val bb_my_pfor_inc_activate = Map($/;"	l
bb_my_pfor_inc_activate	src/main/scala/generator/cilk/cilk_for_test06_detach.scala	/^  val bb_my_pfor_inc_activate = Map($/;"	l
bb_my_pfor_inc_activate	src/main/scala/generator/cilk/cilk_for_test12_detach2.scala	/^  val bb_my_pfor_inc_activate = Map($/;"	l
bb_my_pfor_inc_pred	src/main/scala/generator/cilk/bgemm_detach2.scala	/^  val bb_my_pfor_inc_pred = Map($/;"	l
bb_my_pfor_inc_pred	src/main/scala/generator/cilk/cilk_for_test06_detach.scala	/^  val bb_my_pfor_inc_pred = Map($/;"	l
bb_my_pfor_inc_pred	src/main/scala/generator/cilk/cilk_for_test12_detach2.scala	/^  val bb_my_pfor_inc_pred = Map($/;"	l
bb_my_pfor_preattach	src/main/scala/generator/cilk/bgemm_detach3.scala	/^  val bb_my_pfor_preattach = Module(new BasicBlockNoMaskNode(NumInputs = 1, NumOuts = 1, BID = 11))$/;"	l
bb_my_pfor_preattach	src/main/scala/generator/cilk/cilk_for_test04.scala	/^  val bb_my_pfor_preattach = Module(new BasicBlockNoMaskNode(NumInputs = 1, NumOuts = 1, BID = 7))$/;"	l
bb_my_pfor_preattach	src/main/scala/generator/cilk/cilk_for_test04_detach.scala	/^  val bb_my_pfor_preattach = Module(new BasicBlockNoMaskNode(NumInputs = 1, NumOuts = 1, BID = 1))$/;"	l
bb_my_pfor_preattach	src/main/scala/generator/cilk/cilk_for_test05_detach.scala	/^  val bb_my_pfor_preattach = Module(new BasicBlockNoMaskNode(NumInputs = 1, NumOuts = 1, BID = 3))$/;"	l
bb_my_pfor_preattach	src/main/scala/generator/cilk/cilk_for_test06_detach_2.scala	/^  val bb_my_pfor_preattach = Module(new BasicBlockNoMaskNode(NumInputs = 1, NumOuts = 1, BID = 1))$/;"	l
bb_my_pfor_preattach	src/main/scala/generator/cilk/cilk_for_test12_detach3.scala	/^  val bb_my_pfor_preattach = Module(new BasicBlockNoMaskNode(NumInputs = 1, NumOuts = 1, BID = 1))$/;"	l
bb_my_pfor_preattach	src/main/scala/generator/cilk/stencil_detach1.scala	/^  val bb_my_pfor_preattach = Module(new BasicBlockNoMaskNode(NumInputs = 1, NumOuts = 1, BID = 5))$/;"	l
bb_my_pfor_preattach11	src/main/scala/generator/cilk/cilk_for_test06_detach.scala	/^  val bb_my_pfor_preattach11 = Module(new BasicBlockNoMaskNode(NumInputs = 1, NumOuts = 1, BID = 6))$/;"	l
bb_my_pfor_preattach11_activate	src/main/scala/generator/cilk/cilk_for_test06_detach.scala	/^  val bb_my_pfor_preattach11_activate = Map($/;"	l
bb_my_pfor_preattach11_pred	src/main/scala/generator/cilk/cilk_for_test06_detach.scala	/^  val bb_my_pfor_preattach11_pred = Map($/;"	l
bb_my_pfor_preattach14	src/main/scala/generator/cilk/cilk_for_test12_detach2.scala	/^  val bb_my_pfor_preattach14 = Module(new BasicBlockNoMaskFastNode(NumInputs = 1, NumOuts = 1, BID = 6))$/;"	l
bb_my_pfor_preattach14_activate	src/main/scala/generator/cilk/cilk_for_test12_detach2.scala	/^  val bb_my_pfor_preattach14_activate = Map($/;"	l
bb_my_pfor_preattach14_pred	src/main/scala/generator/cilk/cilk_for_test12_detach2.scala	/^  val bb_my_pfor_preattach14_pred = Map($/;"	l
bb_my_pfor_preattach22	src/main/scala/generator/cilk/cilk_for_test12_detach1.scala	/^  val bb_my_pfor_preattach22 = Module(new BasicBlockNoMaskNode(NumInputs = 1, NumOuts = 1, BID = 6))$/;"	l
bb_my_pfor_preattach22_activate	src/main/scala/generator/cilk/cilk_for_test12_detach1.scala	/^  val bb_my_pfor_preattach22_activate = Map($/;"	l
bb_my_pfor_preattach22_pred	src/main/scala/generator/cilk/cilk_for_test12_detach1.scala	/^  val bb_my_pfor_preattach22_pred = Map($/;"	l
bb_my_pfor_preattach37	src/main/scala/generator/cilk/bgemm_detach2.scala	/^  val bb_my_pfor_preattach37 = Module(new BasicBlockNoMaskNode(NumInputs = 1, NumOuts = 1, BID = 7))$/;"	l
bb_my_pfor_preattach37_activate	src/main/scala/generator/cilk/bgemm_detach2.scala	/^  val bb_my_pfor_preattach37_activate = Map($/;"	l
bb_my_pfor_preattach37_pred	src/main/scala/generator/cilk/bgemm_detach2.scala	/^  val bb_my_pfor_preattach37_pred = Map($/;"	l
bb_my_pfor_preattach42	src/main/scala/generator/cilk/bgemm_detach1.scala	/^  val bb_my_pfor_preattach42 = Module(new BasicBlockNoMaskNode(NumInputs = 1, NumOuts = 1, BID = 7))$/;"	l
bb_my_pfor_preattach42_activate	src/main/scala/generator/cilk/bgemm_detach1.scala	/^  val bb_my_pfor_preattach42_activate = Map($/;"	l
bb_my_pfor_preattach42_pred	src/main/scala/generator/cilk/bgemm_detach1.scala	/^  val bb_my_pfor_preattach42_pred = Map($/;"	l
bb_my_pfor_preattach_activate	src/main/scala/generator/cilk/bgemm_detach3.scala	/^  val bb_my_pfor_preattach_activate = Map($/;"	l
bb_my_pfor_preattach_activate	src/main/scala/generator/cilk/cilk_for_test04.scala	/^  val bb_my_pfor_preattach_activate = Map($/;"	l
bb_my_pfor_preattach_activate	src/main/scala/generator/cilk/cilk_for_test04_detach.scala	/^  val bb_my_pfor_preattach_activate = Map($/;"	l
bb_my_pfor_preattach_activate	src/main/scala/generator/cilk/cilk_for_test05_detach.scala	/^  val bb_my_pfor_preattach_activate = Map($/;"	l
bb_my_pfor_preattach_activate	src/main/scala/generator/cilk/cilk_for_test06_detach_2.scala	/^  val bb_my_pfor_preattach_activate = Map($/;"	l
bb_my_pfor_preattach_activate	src/main/scala/generator/cilk/cilk_for_test12_detach3.scala	/^  val bb_my_pfor_preattach_activate = Map($/;"	l
bb_my_pfor_preattach_activate	src/main/scala/generator/cilk/stencil_detach1.scala	/^  val bb_my_pfor_preattach_activate = Map($/;"	l
bb_my_pfor_preattach_pred	src/main/scala/generator/cilk/bgemm_detach3.scala	/^  val bb_my_pfor_preattach_pred = Map($/;"	l
bb_my_pfor_preattach_pred	src/main/scala/generator/cilk/cilk_for_test04.scala	/^  val bb_my_pfor_preattach_pred = Map($/;"	l
bb_my_pfor_preattach_pred	src/main/scala/generator/cilk/cilk_for_test04_detach.scala	/^  val bb_my_pfor_preattach_pred = Map($/;"	l
bb_my_pfor_preattach_pred	src/main/scala/generator/cilk/cilk_for_test05_detach.scala	/^  val bb_my_pfor_preattach_pred = Map($/;"	l
bb_my_pfor_preattach_pred	src/main/scala/generator/cilk/cilk_for_test06_detach_2.scala	/^  val bb_my_pfor_preattach_pred = Map($/;"	l
bb_my_pfor_preattach_pred	src/main/scala/generator/cilk/cilk_for_test12_detach3.scala	/^  val bb_my_pfor_preattach_pred = Map($/;"	l
bb_my_pfor_preattach_pred	src/main/scala/generator/cilk/stencil_detach1.scala	/^  val bb_my_pfor_preattach_pred = Map($/;"	l
bb_offload_pfor_body	src/main/scala/generator/cilk/bgemm.scala	/^  val bb_offload_pfor_body = Module(new BasicBlockNoMaskNode(NumInputs = 1, NumOuts = 2, BID = 7))$/;"	l
bb_offload_pfor_body	src/main/scala/generator/cilk/cilk_for_test04.scala	/^  val bb_offload_pfor_body = Module(new BasicBlockNoMaskNode(NumInputs = 1, NumOuts = 2, BID = 6))$/;"	l
bb_offload_pfor_body	src/main/scala/generator/cilk/cilk_for_test05.scala	/^  val bb_offload_pfor_body = Module(new BasicBlockNoMaskNode(NumInputs = 1, NumOuts = 2, BID = 6))$/;"	l
bb_offload_pfor_body	src/main/scala/generator/cilk/cilk_for_test06.scala	/^  val bb_offload_pfor_body = Module(new BasicBlockNoMaskNode(NumInputs = 1, NumOuts = 1, BID = 6))$/;"	l
bb_offload_pfor_body	src/main/scala/generator/cilk/cilk_for_test07.scala	/^  val bb_offload_pfor_body = Module(new BasicBlockNoMaskNode(NumInputs = 1, NumOuts = 2, BID = 5))$/;"	l
bb_offload_pfor_body	src/main/scala/generator/cilk/cilk_for_test08.scala	/^  val bb_offload_pfor_body = Module(new BasicBlockNoMaskNode(NumInputs = 1, NumOuts = 2, BID = 5))$/;"	l
bb_offload_pfor_body	src/main/scala/generator/cilk/cilk_for_test12.scala	/^  val bb_offload_pfor_body = Module(new BasicBlockNoMaskNode(NumInputs = 1, NumOuts = 1, BID = 6))$/;"	l
bb_offload_pfor_body	src/main/scala/generator/cilk/stencil.scala	/^  val bb_offload_pfor_body = Module(new BasicBlockNoMaskNode(NumInputs = 1, NumOuts = 1, BID = 6))$/;"	l
bb_offload_pfor_body_activate	src/main/scala/generator/cilk/bgemm.scala	/^  val bb_offload_pfor_body_activate = Map($/;"	l
bb_offload_pfor_body_activate	src/main/scala/generator/cilk/cilk_for_test04.scala	/^  val bb_offload_pfor_body_activate = Map($/;"	l
bb_offload_pfor_body_activate	src/main/scala/generator/cilk/cilk_for_test05.scala	/^  val bb_offload_pfor_body_activate = Map($/;"	l
bb_offload_pfor_body_activate	src/main/scala/generator/cilk/cilk_for_test06.scala	/^  val bb_offload_pfor_body_activate = Map($/;"	l
bb_offload_pfor_body_activate	src/main/scala/generator/cilk/cilk_for_test07.scala	/^  val bb_offload_pfor_body_activate = Map($/;"	l
bb_offload_pfor_body_activate	src/main/scala/generator/cilk/cilk_for_test08.scala	/^  val bb_offload_pfor_body_activate = Map($/;"	l
bb_offload_pfor_body_activate	src/main/scala/generator/cilk/cilk_for_test12.scala	/^  val bb_offload_pfor_body_activate = Map($/;"	l
bb_offload_pfor_body_activate	src/main/scala/generator/cilk/stencil.scala	/^  val bb_offload_pfor_body_activate = Map($/;"	l
bb_offload_pfor_body_pred	src/main/scala/generator/cilk/bgemm.scala	/^  val bb_offload_pfor_body_pred = Map($/;"	l
bb_offload_pfor_body_pred	src/main/scala/generator/cilk/cilk_for_test04.scala	/^  val bb_offload_pfor_body_pred = Map($/;"	l
bb_offload_pfor_body_pred	src/main/scala/generator/cilk/cilk_for_test05.scala	/^  val bb_offload_pfor_body_pred = Map($/;"	l
bb_offload_pfor_body_pred	src/main/scala/generator/cilk/cilk_for_test06.scala	/^  val bb_offload_pfor_body_pred = Map($/;"	l
bb_offload_pfor_body_pred	src/main/scala/generator/cilk/cilk_for_test07.scala	/^  val bb_offload_pfor_body_pred = Map($/;"	l
bb_offload_pfor_body_pred	src/main/scala/generator/cilk/cilk_for_test08.scala	/^  val bb_offload_pfor_body_pred = Map($/;"	l
bb_offload_pfor_body_pred	src/main/scala/generator/cilk/cilk_for_test12.scala	/^  val bb_offload_pfor_body_pred = Map($/;"	l
bb_offload_pfor_body_pred	src/main/scala/generator/cilk/stencil.scala	/^  val bb_offload_pfor_body_pred = Map($/;"	l
bb_pfor_body	src/main/scala/generator/cilk/cilk_for_test01.scala	/^  val bb_pfor_body = Module(new BasicBlockNoMaskNode(NumInputs = 1, NumOuts = 6, BID = 3))$/;"	l
bb_pfor_body	src/main/scala/generator/cilk/cilk_for_test02.scala	/^  val bb_pfor_body = Module(new BasicBlockNoMaskNode(NumInputs = 1, NumOuts = 2, BID = 3))$/;"	l
bb_pfor_body	src/main/scala/generator/cilk/cilk_for_test09.scala	/^  val bb_pfor_body = Module(new BasicBlockNoMaskNode(NumInputs = 1, NumOuts = 5, BID = 3))$/;"	l
bb_pfor_body_activate	src/main/scala/generator/cilk/cilk_for_test01.scala	/^  val bb_pfor_body_activate = Map($/;"	l
bb_pfor_body_activate	src/main/scala/generator/cilk/cilk_for_test02.scala	/^  val bb_pfor_body_activate = Map($/;"	l
bb_pfor_body_activate	src/main/scala/generator/cilk/cilk_for_test09.scala	/^  val bb_pfor_body_activate = Map($/;"	l
bb_pfor_body_pred	src/main/scala/generator/cilk/cilk_for_test01.scala	/^  val bb_pfor_body_pred = Map($/;"	l
bb_pfor_body_pred	src/main/scala/generator/cilk/cilk_for_test02.scala	/^  val bb_pfor_body_pred = Map($/;"	l
bb_pfor_body_pred	src/main/scala/generator/cilk/cilk_for_test09.scala	/^  val bb_pfor_body_pred = Map($/;"	l
bb_pfor_cond	src/main/scala/generator/cilk/bgemm.scala	/^  val bb_pfor_cond = Module(new BasicBlockLoopHeadNode(NumInputs = 2, NumOuts = 3, NumPhi = 1, BID = 2))$/;"	l
bb_pfor_cond	src/main/scala/generator/cilk/cilk_for_test01.scala	/^  val bb_pfor_cond = Module(new BasicBlockLoopHeadNode(NumInputs = 2, NumOuts = 3, NumPhi = 1, BID = 1))$/;"	l
bb_pfor_cond	src/main/scala/generator/cilk/cilk_for_test02.scala	/^  val bb_pfor_cond = Module(new BasicBlockLoopHeadNode(NumInputs = 2, NumOuts = 3, NumPhi = 1, BID = 1))$/;"	l
bb_pfor_cond	src/main/scala/generator/cilk/cilk_for_test04.scala	/^  val bb_pfor_cond = Module(new BasicBlockLoopHeadNode(NumInputs = 2, NumOuts = 2, NumPhi = 1, BID = 1))$/;"	l
bb_pfor_cond	src/main/scala/generator/cilk/cilk_for_test05.scala	/^  val bb_pfor_cond = Module(new BasicBlockLoopHeadNode(NumInputs = 2, NumOuts = 3, NumPhi = 1, BID = 1))$/;"	l
bb_pfor_cond	src/main/scala/generator/cilk/cilk_for_test06.scala	/^  val bb_pfor_cond = Module(new LoopHead(NumOuts = 3, NumPhi = 1, BID = 1))$/;"	l
bb_pfor_cond	src/main/scala/generator/cilk/cilk_for_test09.scala	/^  val bb_pfor_cond = Module(new LoopHead(NumOuts = 3, NumPhi = 1, BID = 1))$/;"	l
bb_pfor_cond	src/main/scala/generator/cilk/cilk_for_test12.scala	/^  val bb_pfor_cond = Module(new LoopHead(NumOuts = 3, NumPhi = 1, BID = 1))$/;"	l
bb_pfor_cond	src/main/scala/generator/cilk/stencil.scala	/^  val bb_pfor_cond = Module(new LoopHead(NumOuts = 3, NumPhi = 1, BID = 1))$/;"	l
bb_pfor_cond_activate	src/main/scala/generator/cilk/bgemm.scala	/^  val bb_pfor_cond_activate = Map($/;"	l
bb_pfor_cond_activate	src/main/scala/generator/cilk/cilk_for_test01.scala	/^  val bb_pfor_cond_activate = Map($/;"	l
bb_pfor_cond_activate	src/main/scala/generator/cilk/cilk_for_test02.scala	/^  val bb_pfor_cond_activate = Map($/;"	l
bb_pfor_cond_activate	src/main/scala/generator/cilk/cilk_for_test04.scala	/^  val bb_pfor_cond_activate = Map($/;"	l
bb_pfor_cond_activate	src/main/scala/generator/cilk/cilk_for_test05.scala	/^  val bb_pfor_cond_activate = Map($/;"	l
bb_pfor_cond_activate	src/main/scala/generator/cilk/cilk_for_test06.scala	/^  val bb_pfor_cond_activate = Map($/;"	l
bb_pfor_cond_activate	src/main/scala/generator/cilk/cilk_for_test09.scala	/^  val bb_pfor_cond_activate = Map($/;"	l
bb_pfor_cond_activate	src/main/scala/generator/cilk/cilk_for_test12.scala	/^  val bb_pfor_cond_activate = Map($/;"	l
bb_pfor_cond_activate	src/main/scala/generator/cilk/stencil.scala	/^  val bb_pfor_cond_activate = Map($/;"	l
bb_pfor_cond_cleanup	src/main/scala/generator/cilk/cilk_for_test07.scala	/^  val bb_pfor_cond_cleanup = Module(new BasicBlockNoMaskNode(NumInputs = 1, NumOuts = 4, BID = 1))$/;"	l
bb_pfor_cond_cleanup	src/main/scala/generator/cilk/cilk_for_test08.scala	/^  val bb_pfor_cond_cleanup = Module(new BasicBlockNoMaskNode(NumInputs = 1, NumOuts = 3, BID = 1))$/;"	l
bb_pfor_cond_cleanup_activate	src/main/scala/generator/cilk/cilk_for_test07.scala	/^  val bb_pfor_cond_cleanup_activate = Map($/;"	l
bb_pfor_cond_cleanup_activate	src/main/scala/generator/cilk/cilk_for_test08.scala	/^  val bb_pfor_cond_cleanup_activate = Map($/;"	l
bb_pfor_cond_cleanup_pred	src/main/scala/generator/cilk/cilk_for_test07.scala	/^  val bb_pfor_cond_cleanup_pred = Map($/;"	l
bb_pfor_cond_cleanup_pred	src/main/scala/generator/cilk/cilk_for_test08.scala	/^  val bb_pfor_cond_cleanup_pred = Map($/;"	l
bb_pfor_cond_pred	src/main/scala/generator/cilk/bgemm.scala	/^  val bb_pfor_cond_pred = Map($/;"	l
bb_pfor_cond_pred	src/main/scala/generator/cilk/cilk_for_test01.scala	/^  val bb_pfor_cond_pred = Map($/;"	l
bb_pfor_cond_pred	src/main/scala/generator/cilk/cilk_for_test02.scala	/^  val bb_pfor_cond_pred = Map($/;"	l
bb_pfor_cond_pred	src/main/scala/generator/cilk/cilk_for_test04.scala	/^  val bb_pfor_cond_pred = Map($/;"	l
bb_pfor_cond_pred	src/main/scala/generator/cilk/cilk_for_test05.scala	/^  val bb_pfor_cond_pred = Map($/;"	l
bb_pfor_cond_pred	src/main/scala/generator/cilk/cilk_for_test06.scala	/^  val bb_pfor_cond_pred = Map($/;"	l
bb_pfor_cond_pred	src/main/scala/generator/cilk/cilk_for_test09.scala	/^  val bb_pfor_cond_pred = Map($/;"	l
bb_pfor_cond_pred	src/main/scala/generator/cilk/cilk_for_test12.scala	/^  val bb_pfor_cond_pred = Map($/;"	l
bb_pfor_cond_pred	src/main/scala/generator/cilk/stencil.scala	/^  val bb_pfor_cond_pred = Map($/;"	l
bb_pfor_detach	src/main/scala/generator/cilk/bgemm.scala	/^  val bb_pfor_detach = Module(new BasicBlockNoMaskNode(NumInputs = 1, NumOuts = 1, BID = 3))$/;"	l
bb_pfor_detach	src/main/scala/generator/cilk/cilk_for_test01.scala	/^  val bb_pfor_detach = Module(new BasicBlockNoMaskNode(NumInputs = 1, NumOuts = 1, BID = 2))$/;"	l
bb_pfor_detach	src/main/scala/generator/cilk/cilk_for_test02.scala	/^  val bb_pfor_detach = Module(new BasicBlockNoMaskNode(NumInputs = 1, NumOuts = 1, BID = 2))$/;"	l
bb_pfor_detach	src/main/scala/generator/cilk/cilk_for_test04.scala	/^  val bb_pfor_detach = Module(new BasicBlockNoMaskNode(NumInputs = 1, NumOuts = 1, BID = 2))$/;"	l
bb_pfor_detach	src/main/scala/generator/cilk/cilk_for_test05.scala	/^  val bb_pfor_detach = Module(new BasicBlockNoMaskNode(NumInputs = 1, NumOuts = 1, BID = 2))$/;"	l
bb_pfor_detach	src/main/scala/generator/cilk/cilk_for_test07.scala	/^  val bb_pfor_detach = Module(new BasicBlockLoopHeadNode(NumInputs = 2, NumOuts = 2, NumPhi = 1, BID = 3))$/;"	l
bb_pfor_detach	src/main/scala/generator/cilk/cilk_for_test08.scala	/^  val bb_pfor_detach = Module(new BasicBlockLoopHeadNode(NumInputs = 2, NumOuts = 2, NumPhi = 1, BID = 3))$/;"	l
bb_pfor_detach	src/main/scala/generator/cilk/cilk_for_test09.scala	/^  val bb_pfor_detach = Module(new BasicBlockNoMaskNode(NumInputs = 1, NumOuts = 1, BID = 2))$/;"	l
bb_pfor_detach	src/main/scala/generator/cilk/cilk_for_test12.scala	/^  val bb_pfor_detach = Module(new BasicBlockNoMaskNode(NumInputs = 1, NumOuts = 1, BID = 2))$/;"	l
bb_pfor_detach_activate	src/main/scala/generator/cilk/bgemm.scala	/^  val bb_pfor_detach_activate = Map($/;"	l
bb_pfor_detach_activate	src/main/scala/generator/cilk/cilk_for_test01.scala	/^  val bb_pfor_detach_activate = Map($/;"	l
bb_pfor_detach_activate	src/main/scala/generator/cilk/cilk_for_test02.scala	/^  val bb_pfor_detach_activate = Map($/;"	l
bb_pfor_detach_activate	src/main/scala/generator/cilk/cilk_for_test04.scala	/^  val bb_pfor_detach_activate = Map($/;"	l
bb_pfor_detach_activate	src/main/scala/generator/cilk/cilk_for_test05.scala	/^  val bb_pfor_detach_activate = Map($/;"	l
bb_pfor_detach_activate	src/main/scala/generator/cilk/cilk_for_test06.scala	/^  val bb_pfor_detach_activate = Map($/;"	l
bb_pfor_detach_activate	src/main/scala/generator/cilk/cilk_for_test07.scala	/^  val bb_pfor_detach_activate = Map($/;"	l
bb_pfor_detach_activate	src/main/scala/generator/cilk/cilk_for_test08.scala	/^  val bb_pfor_detach_activate = Map($/;"	l
bb_pfor_detach_activate	src/main/scala/generator/cilk/cilk_for_test09.scala	/^  val bb_pfor_detach_activate = Map($/;"	l
bb_pfor_detach_activate	src/main/scala/generator/cilk/cilk_for_test12.scala	/^  val bb_pfor_detach_activate = Map($/;"	l
bb_pfor_detach_activate	src/main/scala/generator/cilk/stencil.scala	/^  val bb_pfor_detach_activate = Map($/;"	l
bb_pfor_detach_pred	src/main/scala/generator/cilk/bgemm.scala	/^  val bb_pfor_detach_pred = Map($/;"	l
bb_pfor_detach_pred	src/main/scala/generator/cilk/cilk_for_test01.scala	/^  val bb_pfor_detach_pred = Map($/;"	l
bb_pfor_detach_pred	src/main/scala/generator/cilk/cilk_for_test02.scala	/^  val bb_pfor_detach_pred = Map($/;"	l
bb_pfor_detach_pred	src/main/scala/generator/cilk/cilk_for_test04.scala	/^  val bb_pfor_detach_pred = Map($/;"	l
bb_pfor_detach_pred	src/main/scala/generator/cilk/cilk_for_test05.scala	/^  val bb_pfor_detach_pred = Map($/;"	l
bb_pfor_detach_pred	src/main/scala/generator/cilk/cilk_for_test06.scala	/^  val bb_pfor_detach_pred = Map($/;"	l
bb_pfor_detach_pred	src/main/scala/generator/cilk/cilk_for_test07.scala	/^  val bb_pfor_detach_pred = Map($/;"	l
bb_pfor_detach_pred	src/main/scala/generator/cilk/cilk_for_test08.scala	/^  val bb_pfor_detach_pred = Map($/;"	l
bb_pfor_detach_pred	src/main/scala/generator/cilk/cilk_for_test09.scala	/^  val bb_pfor_detach_pred = Map($/;"	l
bb_pfor_detach_pred	src/main/scala/generator/cilk/cilk_for_test12.scala	/^  val bb_pfor_detach_pred = Map($/;"	l
bb_pfor_detach_pred	src/main/scala/generator/cilk/stencil.scala	/^  val bb_pfor_detach_pred = Map($/;"	l
bb_pfor_end	src/main/scala/generator/cilk/cilk_for_test01.scala	/^  val bb_pfor_end = Module(new BasicBlockNoMaskNode(NumInputs = 1, NumOuts = 3, BID = 6))$/;"	l
bb_pfor_end	src/main/scala/generator/cilk/cilk_for_test02.scala	/^  val bb_pfor_end = Module(new BasicBlockNoMaskNode(NumInputs = 1, NumOuts = 3, BID = 6))$/;"	l
bb_pfor_end	src/main/scala/generator/cilk/cilk_for_test04.scala	/^  val bb_pfor_end = Module(new BasicBlockNoMaskNode(NumInputs = 1, NumOuts = 4, BID = 4))$/;"	l
bb_pfor_end	src/main/scala/generator/cilk/cilk_for_test05.scala	/^  val bb_pfor_end = Module(new BasicBlockNoMaskNode(NumInputs = 1, NumOuts = 4, BID = 4))$/;"	l
bb_pfor_end	src/main/scala/generator/cilk/cilk_for_test09.scala	/^  val bb_pfor_end = Module(new BasicBlockNoMaskNode(NumInputs = 1, NumOuts = 4, BID = 6))$/;"	l
bb_pfor_end14_activate	src/main/scala/generator/cilk/cilk_for_test06.scala	/^  val bb_pfor_end14_activate = Map($/;"	l
bb_pfor_end14_pred	src/main/scala/generator/cilk/cilk_for_test06.scala	/^  val bb_pfor_end14_pred = Map($/;"	l
bb_pfor_end25	src/main/scala/generator/cilk/cilk_for_test12.scala	/^  val bb_pfor_end25 = Module(new BasicBlockNoMaskNode(NumInputs = 1, NumOuts = 4, BID = 4))$/;"	l
bb_pfor_end25_activate	src/main/scala/generator/cilk/cilk_for_test12.scala	/^  val bb_pfor_end25_activate = Map($/;"	l
bb_pfor_end25_pred	src/main/scala/generator/cilk/cilk_for_test12.scala	/^  val bb_pfor_end25_pred = Map($/;"	l
bb_pfor_end45	src/main/scala/generator/cilk/bgemm.scala	/^  val bb_pfor_end45 = Module(new BasicBlockNoMaskNode(NumInputs = 1, NumOuts = 4, BID = 5))$/;"	l
bb_pfor_end45_activate	src/main/scala/generator/cilk/bgemm.scala	/^  val bb_pfor_end45_activate = Map($/;"	l
bb_pfor_end45_pred	src/main/scala/generator/cilk/bgemm.scala	/^  val bb_pfor_end45_pred = Map($/;"	l
bb_pfor_end_activate	src/main/scala/generator/cilk/cilk_for_test01.scala	/^  val bb_pfor_end_activate = Map($/;"	l
bb_pfor_end_activate	src/main/scala/generator/cilk/cilk_for_test02.scala	/^  val bb_pfor_end_activate = Map($/;"	l
bb_pfor_end_activate	src/main/scala/generator/cilk/cilk_for_test04.scala	/^  val bb_pfor_end_activate = Map($/;"	l
bb_pfor_end_activate	src/main/scala/generator/cilk/cilk_for_test05.scala	/^  val bb_pfor_end_activate = Map($/;"	l
bb_pfor_end_activate	src/main/scala/generator/cilk/cilk_for_test09.scala	/^  val bb_pfor_end_activate = Map($/;"	l
bb_pfor_end_activate	src/main/scala/generator/cilk/stencil.scala	/^  val bb_pfor_end_activate = Map($/;"	l
bb_pfor_end_continue	src/main/scala/generator/cilk/cilk_for_test01.scala	/^  val bb_pfor_end_continue = Module(new BasicBlockNoMaskNode(NumInputs = 1, NumOuts = 1, BID = 7))$/;"	l
bb_pfor_end_continue	src/main/scala/generator/cilk/cilk_for_test02.scala	/^  val bb_pfor_end_continue = Module(new BasicBlockNoMaskNode(NumInputs = 1, NumOuts = 1, BID = 7))$/;"	l
bb_pfor_end_continue	src/main/scala/generator/cilk/cilk_for_test04.scala	/^  val bb_pfor_end_continue = Module(new BasicBlockNoMaskNode(NumInputs = 1, NumOuts = 1, BID = 5))$/;"	l
bb_pfor_end_continue	src/main/scala/generator/cilk/cilk_for_test05.scala	/^  val bb_pfor_end_continue = Module(new BasicBlockNoMaskNode(NumInputs = 1, NumOuts = 1, BID = 5))$/;"	l
bb_pfor_end_continue	src/main/scala/generator/cilk/cilk_for_test07.scala	/^  val bb_pfor_end_continue = Module(new BasicBlockNoMaskNode(NumInputs = 1, NumOuts = 1, BID = 2))$/;"	l
bb_pfor_end_continue	src/main/scala/generator/cilk/cilk_for_test08.scala	/^  val bb_pfor_end_continue = Module(new BasicBlockNoMaskNode(NumInputs = 1, NumOuts = 1, BID = 2))$/;"	l
bb_pfor_end_continue	src/main/scala/generator/cilk/cilk_for_test09.scala	/^  val bb_pfor_end_continue = Module(new BasicBlockNoMaskNode(NumInputs = 1, NumOuts = 2, BID = 7))$/;"	l
bb_pfor_end_continue	src/main/scala/generator/cilk/stencil.scala	/^  val bb_pfor_end_continue = Module(new BasicBlockNoMaskNode(NumInputs = 1, NumOuts = 1, BID = 5))$/;"	l
bb_pfor_end_continue15	src/main/scala/generator/cilk/cilk_for_test06.scala	/^  val bb_pfor_end_continue15 = Module(new BasicBlockNoMaskNode(NumInputs = 1, NumOuts = 1, BID = 5))$/;"	l
bb_pfor_end_continue15_activate	src/main/scala/generator/cilk/cilk_for_test06.scala	/^  val bb_pfor_end_continue15_activate = Map($/;"	l
bb_pfor_end_continue26	src/main/scala/generator/cilk/cilk_for_test12.scala	/^  val bb_pfor_end_continue26 = Module(new BasicBlockNoMaskNode(NumInputs = 1, NumOuts = 5, BID = 5))$/;"	l
bb_pfor_end_continue26_activate	src/main/scala/generator/cilk/cilk_for_test12.scala	/^  val bb_pfor_end_continue26_activate = Map($/;"	l
bb_pfor_end_continue46	src/main/scala/generator/cilk/bgemm.scala	/^  val bb_pfor_end_continue46 = Module(new BasicBlockNoMaskNode(NumInputs = 1, NumOuts = 1, BID = 6))$/;"	l
bb_pfor_end_continue46_activate	src/main/scala/generator/cilk/bgemm.scala	/^  val bb_pfor_end_continue46_activate = Map($/;"	l
bb_pfor_end_continue_activate	src/main/scala/generator/cilk/cilk_for_test01.scala	/^  val bb_pfor_end_continue_activate = Map($/;"	l
bb_pfor_end_continue_activate	src/main/scala/generator/cilk/cilk_for_test02.scala	/^  val bb_pfor_end_continue_activate = Map($/;"	l
bb_pfor_end_continue_activate	src/main/scala/generator/cilk/cilk_for_test04.scala	/^  val bb_pfor_end_continue_activate = Map($/;"	l
bb_pfor_end_continue_activate	src/main/scala/generator/cilk/cilk_for_test05.scala	/^  val bb_pfor_end_continue_activate = Map($/;"	l
bb_pfor_end_continue_activate	src/main/scala/generator/cilk/cilk_for_test07.scala	/^  val bb_pfor_end_continue_activate = Map($/;"	l
bb_pfor_end_continue_activate	src/main/scala/generator/cilk/cilk_for_test08.scala	/^  val bb_pfor_end_continue_activate = Map($/;"	l
bb_pfor_end_continue_activate	src/main/scala/generator/cilk/cilk_for_test09.scala	/^  val bb_pfor_end_continue_activate = Map($/;"	l
bb_pfor_end_continue_activate	src/main/scala/generator/cilk/stencil.scala	/^  val bb_pfor_end_continue_activate = Map($/;"	l
bb_pfor_end_pred	src/main/scala/generator/cilk/cilk_for_test01.scala	/^  val bb_pfor_end_pred = Map($/;"	l
bb_pfor_end_pred	src/main/scala/generator/cilk/cilk_for_test02.scala	/^  val bb_pfor_end_pred = Map($/;"	l
bb_pfor_end_pred	src/main/scala/generator/cilk/cilk_for_test04.scala	/^  val bb_pfor_end_pred = Map($/;"	l
bb_pfor_end_pred	src/main/scala/generator/cilk/cilk_for_test05.scala	/^  val bb_pfor_end_pred = Map($/;"	l
bb_pfor_end_pred	src/main/scala/generator/cilk/cilk_for_test09.scala	/^  val bb_pfor_end_pred = Map($/;"	l
bb_pfor_end_pred	src/main/scala/generator/cilk/stencil.scala	/^  val bb_pfor_end_pred = Map($/;"	l
bb_pfor_inc	src/main/scala/generator/cilk/cilk_for_test01.scala	/^  val bb_pfor_inc = Module(new BasicBlockNoMaskNode(NumInputs = 2, NumOuts = 2, BID = 5))$/;"	l
bb_pfor_inc	src/main/scala/generator/cilk/cilk_for_test02.scala	/^  val bb_pfor_inc = Module(new BasicBlockNoMaskNode(NumInputs = 2, NumOuts = 2, BID = 5))$/;"	l
bb_pfor_inc	src/main/scala/generator/cilk/cilk_for_test04.scala	/^  val bb_pfor_inc = Module(new BasicBlockNoMaskNode(NumInputs = 2, NumOuts = 2, BID = 3))$/;"	l
bb_pfor_inc	src/main/scala/generator/cilk/cilk_for_test05.scala	/^  val bb_pfor_inc = Module(new BasicBlockNoMaskNode(NumInputs = 2, NumOuts = 2, BID = 3))$/;"	l
bb_pfor_inc	src/main/scala/generator/cilk/cilk_for_test07.scala	/^  val bb_pfor_inc = Module(new BasicBlockNoMaskNode(NumInputs = 2, NumOuts = 3, BID = 4))$/;"	l
bb_pfor_inc	src/main/scala/generator/cilk/cilk_for_test08.scala	/^  val bb_pfor_inc = Module(new BasicBlockNoMaskNode(NumInputs = 2, NumOuts = 3, BID = 4))$/;"	l
bb_pfor_inc	src/main/scala/generator/cilk/cilk_for_test09.scala	/^  val bb_pfor_inc = Module(new BasicBlockNoMaskNode(NumInputs = 2, NumOuts = 2, BID = 5))$/;"	l
bb_pfor_inc	src/main/scala/generator/cilk/stencil.scala	/^  val bb_pfor_inc = Module(new BasicBlockNoMaskNode(NumInputs = 2, NumOuts = 2, BID = 3))$/;"	l
bb_pfor_inc12	src/main/scala/generator/cilk/cilk_for_test06.scala	/^  val bb_pfor_inc12 = Module(new BasicBlockNoMaskNode(NumInputs = 2, NumOuts = 2, BID = 3))$/;"	l
bb_pfor_inc12_activate	src/main/scala/generator/cilk/cilk_for_test06.scala	/^  val bb_pfor_inc12_activate = Map($/;"	l
bb_pfor_inc12_pred	src/main/scala/generator/cilk/cilk_for_test06.scala	/^  val bb_pfor_inc12_pred = Map($/;"	l
bb_pfor_inc23	src/main/scala/generator/cilk/cilk_for_test12.scala	/^  val bb_pfor_inc23 = Module(new BasicBlockNoMaskNode(NumInputs = 2, NumOuts = 2, BID = 3))$/;"	l
bb_pfor_inc23_activate	src/main/scala/generator/cilk/cilk_for_test12.scala	/^  val bb_pfor_inc23_activate = Map($/;"	l
bb_pfor_inc23_pred	src/main/scala/generator/cilk/cilk_for_test12.scala	/^  val bb_pfor_inc23_pred = Map($/;"	l
bb_pfor_inc43	src/main/scala/generator/cilk/bgemm.scala	/^  val bb_pfor_inc43 = Module(new BasicBlockNoMaskNode(NumInputs = 2, NumOuts = 2, BID = 4))$/;"	l
bb_pfor_inc43_activate	src/main/scala/generator/cilk/bgemm.scala	/^  val bb_pfor_inc43_activate = Map($/;"	l
bb_pfor_inc43_pred	src/main/scala/generator/cilk/bgemm.scala	/^  val bb_pfor_inc43_pred = Map($/;"	l
bb_pfor_inc_activate	src/main/scala/generator/cilk/cilk_for_test01.scala	/^  val bb_pfor_inc_activate = Map($/;"	l
bb_pfor_inc_activate	src/main/scala/generator/cilk/cilk_for_test02.scala	/^  val bb_pfor_inc_activate = Map($/;"	l
bb_pfor_inc_activate	src/main/scala/generator/cilk/cilk_for_test04.scala	/^  val bb_pfor_inc_activate = Map($/;"	l
bb_pfor_inc_activate	src/main/scala/generator/cilk/cilk_for_test05.scala	/^  val bb_pfor_inc_activate = Map($/;"	l
bb_pfor_inc_activate	src/main/scala/generator/cilk/cilk_for_test07.scala	/^  val bb_pfor_inc_activate = Map($/;"	l
bb_pfor_inc_activate	src/main/scala/generator/cilk/cilk_for_test08.scala	/^  val bb_pfor_inc_activate = Map($/;"	l
bb_pfor_inc_activate	src/main/scala/generator/cilk/cilk_for_test09.scala	/^  val bb_pfor_inc_activate = Map($/;"	l
bb_pfor_inc_activate	src/main/scala/generator/cilk/stencil.scala	/^  val bb_pfor_inc_activate = Map($/;"	l
bb_pfor_inc_pred	src/main/scala/generator/cilk/cilk_for_test01.scala	/^  val bb_pfor_inc_pred = Map($/;"	l
bb_pfor_inc_pred	src/main/scala/generator/cilk/cilk_for_test02.scala	/^  val bb_pfor_inc_pred = Map($/;"	l
bb_pfor_inc_pred	src/main/scala/generator/cilk/cilk_for_test04.scala	/^  val bb_pfor_inc_pred = Map($/;"	l
bb_pfor_inc_pred	src/main/scala/generator/cilk/cilk_for_test05.scala	/^  val bb_pfor_inc_pred = Map($/;"	l
bb_pfor_inc_pred	src/main/scala/generator/cilk/cilk_for_test07.scala	/^  val bb_pfor_inc_pred = Map($/;"	l
bb_pfor_inc_pred	src/main/scala/generator/cilk/cilk_for_test08.scala	/^  val bb_pfor_inc_pred = Map($/;"	l
bb_pfor_inc_pred	src/main/scala/generator/cilk/cilk_for_test09.scala	/^  val bb_pfor_inc_pred = Map($/;"	l
bb_pfor_inc_pred	src/main/scala/generator/cilk/stencil.scala	/^  val bb_pfor_inc_pred = Map($/;"	l
bb_pfor_preattach	src/main/scala/generator/cilk/cilk_for_test01.scala	/^  val bb_pfor_preattach = Module(new BasicBlockNoMaskNode(NumInputs = 1, NumOuts = 1, BID = 4))$/;"	l
bb_pfor_preattach	src/main/scala/generator/cilk/cilk_for_test02.scala	/^  val bb_pfor_preattach = Module(new BasicBlockNoMaskNode(NumInputs = 1, NumOuts = 1, BID = 4))$/;"	l
bb_pfor_preattach	src/main/scala/generator/cilk/cilk_for_test09.scala	/^  val bb_pfor_preattach = Module(new BasicBlockNoMaskNode(NumInputs = 1, NumOuts = 1, BID = 4))$/;"	l
bb_pfor_preattach_activate	src/main/scala/generator/cilk/cilk_for_test01.scala	/^  val bb_pfor_preattach_activate = Map($/;"	l
bb_pfor_preattach_activate	src/main/scala/generator/cilk/cilk_for_test02.scala	/^  val bb_pfor_preattach_activate = Map($/;"	l
bb_pfor_preattach_activate	src/main/scala/generator/cilk/cilk_for_test09.scala	/^  val bb_pfor_preattach_activate = Map($/;"	l
bb_pfor_preattach_pred	src/main/scala/generator/cilk/cilk_for_test01.scala	/^  val bb_pfor_preattach_pred = Map($/;"	l
bb_pfor_preattach_pred	src/main/scala/generator/cilk/cilk_for_test02.scala	/^  val bb_pfor_preattach_pred = Map($/;"	l
bb_pfor_preattach_pred	src/main/scala/generator/cilk/cilk_for_test09.scala	/^  val bb_pfor_preattach_pred = Map($/;"	l
bb_return	src/main/scala/generator/cilk/fib.scala	/^  val bb_return = Module(new BasicBlockNoMaskNode(NumInputs = 1, NumOuts = 1, BID = 8))$/;"	l
bb_return	src/main/scala/generator/cilk/mergesort.scala	/^  val bb_return = Module(new BasicBlockNoMaskNode(NumInputs = 1, NumOuts = 1, BID = 8))$/;"	l
bb_return_activate	src/main/scala/generator/cilk/fib.scala	/^  val bb_return_activate = Map($/;"	l
bb_return_activate	src/main/scala/generator/cilk/mergesort.scala	/^  val bb_return_activate = Map($/;"	l
bb_return_pred	src/main/scala/generator/cilk/fib.scala	/^  val bb_return_pred = Map($/;"	l
bb_return_pred	src/main/scala/generator/cilk/mergesort.scala	/^  val bb_return_pred = Map($/;"	l
bb_sync_continue	src/main/scala/generator/cilk/cilk_spawn_test01.scala	/^  val bb_sync_continue = Module(new BasicBlockNoMaskNode(NumInputs = 1, NumOuts = 3, BID = 3))$/;"	l
bb_sync_continue	src/main/scala/generator/cilk/cilk_spawn_test02.scala	/^  val bb_sync_continue = Module(new BasicBlockNoMaskNode(NumInputs = 1, NumOuts = 4, BID = 5))$/;"	l
bb_sync_continue	src/main/scala/generator/cilk/fib.scala	/^  val bb_sync_continue = Module(new BasicBlockNoMaskNode(NumInputs = 1, NumOuts = 4, BID = 7))$/;"	l
bb_sync_continue	src/main/scala/generator/cilk/mergesort.scala	/^  val bb_sync_continue = Module(new BasicBlockNoMaskNode(NumInputs = 1, NumOuts = 2, BID = 7))$/;"	l
bb_sync_continue_activate	src/main/scala/generator/cilk/cilk_spawn_test01.scala	/^  val bb_sync_continue_activate = Map($/;"	l
bb_sync_continue_activate	src/main/scala/generator/cilk/cilk_spawn_test02.scala	/^  val bb_sync_continue_activate = Map($/;"	l
bb_sync_continue_activate	src/main/scala/generator/cilk/fib.scala	/^  val bb_sync_continue_activate = Map($/;"	l
bb_sync_continue_activate	src/main/scala/generator/cilk/mergesort.scala	/^  val bb_sync_continue_activate = Map($/;"	l
bb_tmp_my_for_end	src/main/scala/generator/cilk/stencil_detach1.scala	/^  val bb_tmp_my_for_end = Module(new BasicBlockNoMaskNode(NumInputs = 1, NumOuts = 5, BID = 4))$/;"	l
bb_while_body	src/main/scala/generator/test04.scala	/^  val bb_while_body = Module(new BasicBlockNoMaskNode(NumInputs = 1, NumOuts = 2, BID = 3))$/;"	l
bb_while_body_activate	src/main/scala/generator/test04.scala	/^  val bb_while_body_activate = Map($/;"	l
bb_while_body_pred	src/main/scala/generator/test04.scala	/^  val bb_while_body_pred = Map($/;"	l
bb_while_cond	src/main/scala/generator/test04.scala	/^  val bb_while_cond = Module(new BasicBlockLoopHeadNode(NumInputs = 2, NumOuts = 4, NumPhi = 2, BID = 2))$/;"	l
bb_while_cond_activate	src/main/scala/generator/test04.scala	/^  val bb_while_cond_activate = Map($/;"	l
bb_while_cond_pred	src/main/scala/generator/test04.scala	/^  val bb_while_cond_pred = Map($/;"	l
bb_while_end	src/main/scala/generator/test04.scala	/^  val bb_while_end = Module(new BasicBlockNoMaskNode(NumInputs = 1, NumOuts = 3, BID = 7))$/;"	l
bb_while_end_activate	src/main/scala/generator/test04.scala	/^  val bb_while_end_activate = Map($/;"	l
bb_while_end_pred	src/main/scala/generator/test04.scala	/^  val bb_while_end_pred = Map($/;"	l
bgemm	src/test/scala/generator/cilk/bgemm_test.scala	/^  val bgemm = Module(new bgemmDF())$/;"	l
bgemmDF	src/main/scala/generator/cilk/bgemm.scala	/^class bgemmDF(implicit p: Parameters) extends bgemmDFIO()(p) {$/;"	c
bgemmDFIO	src/main/scala/generator/cilk/bgemm.scala	/^abstract class bgemmDFIO(implicit val p: Parameters) extends Module with CoreParams {$/;"	c
bgemmMain	src/main/scala/generator/cilk/bgemm.scala	/^object bgemmMain extends App {$/;"	c
bgemmMainDirect	src/test/scala/generator/cilk/bgemm_test.scala	/^class bgemmMainDirect(implicit p: Parameters) extends bgemmMainIO()(p) {$/;"	c
bgemmMainIO	src/test/scala/generator/cilk/bgemm_test.scala	/^class bgemmMainIO(implicit val p: Parameters)  extends Module with CoreParams with CacheParams {$/;"	c
bgemmMainTM	src/test/scala/generator/cilk/bgemm_test.scala	/^class bgemmMainTM(implicit p: Parameters) extends bgemmMainIO()(p) {$/;"	c
bgemmTest01	src/test/scala/generator/cilk/bgemm_test.scala	/^class bgemmTest01[T <: bgemmMainIO](c: T) extends PeekPokeTester(c) {$/;"	c
bgemmTester1	src/test/scala/generator/cilk/bgemm_test.scala	/^class bgemmTester1 extends FlatSpec with Matchers {$/;"	c
bgemmTester2	src/test/scala/generator/cilk/bgemm_test.scala	/^class bgemmTester2 extends FlatSpec with Matchers {$/;"	c
bgemm_detach1	src/test/scala/generator/cilk/bgemm_test.scala	/^  val bgemm_detach1 = Module(new bgemm_detach1DF())$/;"	l
bgemm_detach1	src/test/scala/generator/cilk/bgemm_test.scala	/^  val bgemm_detach1 = for (i <- 0 until children) yield {$/;"	l
bgemm_detach1DF	src/main/scala/generator/cilk/bgemm_detach1.scala	/^class bgemm_detach1DF(implicit p: Parameters) extends bgemm_detach1DFIO()(p) {$/;"	c
bgemm_detach1DFIO	src/main/scala/generator/cilk/bgemm_detach1.scala	/^abstract class bgemm_detach1DFIO(implicit val p: Parameters) extends Module with CoreParams {$/;"	c
bgemm_detach1Main	src/main/scala/generator/cilk/bgemm_detach1.scala	/^object bgemm_detach1Main extends App {$/;"	c
bgemm_detach2	src/test/scala/generator/cilk/bgemm_test.scala	/^  val bgemm_detach2 = Module(new bgemm_detach2DF())$/;"	l
bgemm_detach2	src/test/scala/generator/cilk/bgemm_test.scala	/^  val bgemm_detach2 = for (i <- 0 until children) yield {$/;"	l
bgemm_detach2DF	src/main/scala/generator/cilk/bgemm_detach2.scala	/^class bgemm_detach2DF(implicit p: Parameters) extends bgemm_detach2DFIO()(p) {$/;"	c
bgemm_detach2DFIO	src/main/scala/generator/cilk/bgemm_detach2.scala	/^abstract class bgemm_detach2DFIO(implicit val p: Parameters) extends Module with CoreParams {$/;"	c
bgemm_detach2Main	src/main/scala/generator/cilk/bgemm_detach2.scala	/^object bgemm_detach2Main extends App {$/;"	c
bgemm_detach3	src/test/scala/generator/cilk/bgemm_test.scala	/^  val bgemm_detach3 = Module(new bgemm_detach3DF())$/;"	l
bgemm_detach3	src/test/scala/generator/cilk/bgemm_test.scala	/^  val bgemm_detach3 = for (i <- 0 until children) yield {$/;"	l
bgemm_detach3DF	src/main/scala/generator/cilk/bgemm_detach3.scala	/^class bgemm_detach3DF(implicit p: Parameters) extends bgemm_detach3DFIO()(p) {$/;"	c
bgemm_detach3DFIO	src/main/scala/generator/cilk/bgemm_detach3.scala	/^abstract class bgemm_detach3DFIO(implicit val p: Parameters) extends Module with CoreParams {$/;"	c
bgemm_detach3Main	src/main/scala/generator/cilk/bgemm_detach3.scala	/^object bgemm_detach3Main extends App {$/;"	c
binascii	scripts/TypeStackFile.py	/^import binascii$/;"	i
bitmask	src/main/scala/memory/ReadMemoryController.scala	/^  val bitmask = RegInit(0.U(((2) * xlen).W))$/;"	l
bitmask	src/main/scala/memory/ReadTypMemoryController.scala	/^  val bitmask = RegInit(0.U(((Beats) * xlen).W))$/;"	l
bitmask	src/main/scala/memory/WriteMemoryController.scala	/^  val bitmask = RegInit(0.U(((2) * xlen).W))$/;"	l
bitmask	src/main/scala/memory/WriteTypMemoryController.scala	/^  val bitmask = RegInit(0.U(((Beats) * xlen).W))$/;"	l
bitmask	src/main/scala/node/LoadMaskNode.scala	/^  val bitmask  = RegInit(0.U((2*xlen).W))$/;"	l
bits	src/main/scala/loop/LoopHeader.scala	/^  val bits  = Output(gen.cloneType)$/;"	l
blen	src/main/scala/accel/Cache.scala	/^  val blen   = log2Ceil(bBytes)$/;"	l
br0	src/main/scala/generator/cilk/bgemm.scala	/^  val br0 = Module (new UBranchNode(ID = 0))$/;"	l
br0	src/main/scala/generator/cilk/bgemm_detach3.scala	/^  val br0 = Module (new UBranchNode(ID = 0))$/;"	l
br0	src/main/scala/generator/cilk/cilk_for_test01.scala	/^  val br0 = Module (new UBranchNode(ID = 0))$/;"	l
br0	src/main/scala/generator/cilk/cilk_for_test02.scala	/^  val br0 = Module (new UBranchNode(ID = 0))$/;"	l
br0	src/main/scala/generator/cilk/cilk_for_test04.scala	/^  val br0 = Module (new UBranchFastNode(ID = 0))$/;"	l
br0	src/main/scala/generator/cilk/cilk_for_test05.scala	/^  val br0 = Module (new UBranchFastNode(ID = 0))$/;"	l
br0	src/main/scala/generator/cilk/cilk_for_test06.scala	/^  val br0 = Module(new UBranchNode(ID = 0))$/;"	l
br0	src/main/scala/generator/cilk/cilk_for_test06_detach.scala	/^  val br0 = Module(new UBranchFastNode(ID = 0))$/;"	l
br0	src/main/scala/generator/cilk/cilk_for_test07.scala	/^  val br0 = Module (new UBranchFastNode(ID = 0))$/;"	l
br0	src/main/scala/generator/cilk/cilk_for_test08.scala	/^  val br0 = Module (new UBranchFastNode(ID = 0))$/;"	l
br0	src/main/scala/generator/cilk/cilk_for_test09_inner.scala	/^  val br0 = Module (new UBranchNode(ID = 0))$/;"	l
br0	src/main/scala/generator/cilk/cilk_for_test12_detach1.scala	/^  val br0 = Module (new UBranchFastNode(ID = 0))$/;"	l
br0	src/main/scala/generator/cilk/cilk_for_test12_detach2.scala	/^  val br0 = Module (new UBranchFastNode(ID = 0))$/;"	l
br0	src/main/scala/generator/cilk/stencil.scala	/^  val br0 = Module(new UBranchFastNode(ID = 0))$/;"	l
br0	src/main/scala/generator/cilk/stencil_inner.scala	/^  val br0 = Module(new UBranchNode(ID = 0))$/;"	l
br0	src/main/scala/generator/test03.scala	/^  val br0 = Module(new UBranchNode(ID = 0))$/;"	l
br0	src/main/scala/generator/test04.scala	/^  val br0 = Module (new UBranchNode(ID = 0))$/;"	l
br0	src/main/scala/generator/test05.scala	/^  val br0 = Module (new UBranchNode(ID = 0))$/;"	l
br0	src/main/scala/generator/test05b.scala	/^  val br0 = Module (new UBranchNode(ID = 0))$/;"	l
br0	src/main/scala/generator/test05c.scala	/^  val br0 = Module (new UBranchNode(ID = 0))$/;"	l
br0	src/main/scala/generator/test08.scala	/^  val br0 = Module (new UBranchNode(ID = 0))$/;"	l
br0	src/main/scala/generator/test09.scala	/^  val br0 = Module (new UBranchNode(ID = 0))$/;"	l
br0	src/main/scala/generator/test10.scala	/^  val br0 = Module (new UBranchNode(ID = 0))$/;"	l
br0	src/main/scala/generator/test11.scala	/^  val br0 = Module (new UBranchNode(ID = 0))$/;"	l
br0	src/main/scala/generator/test12.scala	/^  val br0 = Module (new UBranchNode(ID = 0))$/;"	l
br0	src/main/scala/generator/test12_inner.scala	/^  val br0 = Module (new UBranchNode(ID = 0))$/;"	l
br0	src/main/scala/generator/test14.scala	/^  val br0 = Module (new UBranchNode(ID = 0))$/;"	l
br0	src/main/scala/generator/test14_inner.scala	/^  val br0 = Module (new UBranchNode(ID = 0))$/;"	l
br0	src/main/scala/generator/test15.scala	/^  val br0 = Module (new UBranchFastNode(ID = 0))$/;"	l
br0_brn_bb	src/main/scala/generator/cilk/bgemm.scala	/^  val br0_brn_bb = Map($/;"	l
br0_brn_bb	src/main/scala/generator/cilk/bgemm_detach3.scala	/^  val br0_brn_bb = Map($/;"	l
br0_brn_bb	src/main/scala/generator/cilk/cilk_for_test01.scala	/^  val br0_brn_bb = Map($/;"	l
br0_brn_bb	src/main/scala/generator/cilk/cilk_for_test02.scala	/^  val br0_brn_bb = Map($/;"	l
br0_brn_bb	src/main/scala/generator/cilk/cilk_for_test04.scala	/^  val br0_brn_bb = Map($/;"	l
br0_brn_bb	src/main/scala/generator/cilk/cilk_for_test05.scala	/^  val br0_brn_bb = Map($/;"	l
br0_brn_bb	src/main/scala/generator/cilk/cilk_for_test06.scala	/^  val br0_brn_bb = Map($/;"	l
br0_brn_bb	src/main/scala/generator/cilk/cilk_for_test06_detach.scala	/^  val br0_brn_bb = Map($/;"	l
br0_brn_bb	src/main/scala/generator/cilk/cilk_for_test07.scala	/^  val br0_brn_bb = Map($/;"	l
br0_brn_bb	src/main/scala/generator/cilk/cilk_for_test08.scala	/^  val br0_brn_bb = Map($/;"	l
br0_brn_bb	src/main/scala/generator/cilk/cilk_for_test09_inner.scala	/^  val br0_brn_bb = Map($/;"	l
br0_brn_bb	src/main/scala/generator/cilk/cilk_for_test12_detach1.scala	/^  val br0_brn_bb = Map($/;"	l
br0_brn_bb	src/main/scala/generator/cilk/cilk_for_test12_detach2.scala	/^  val br0_brn_bb = Map($/;"	l
br0_brn_bb	src/main/scala/generator/cilk/stencil.scala	/^  val br0_brn_bb = Map($/;"	l
br0_brn_bb	src/main/scala/generator/cilk/stencil_inner.scala	/^  val br0_brn_bb = Map($/;"	l
br0_brn_bb	src/main/scala/generator/test03.scala	/^  val br0_brn_bb = Map($/;"	l
br0_brn_bb	src/main/scala/generator/test04.scala	/^  val br0_brn_bb = Map($/;"	l
br0_brn_bb	src/main/scala/generator/test05.scala	/^  val br0_brn_bb = Map($/;"	l
br0_brn_bb	src/main/scala/generator/test05b.scala	/^  val br0_brn_bb = Map($/;"	l
br0_brn_bb	src/main/scala/generator/test05c.scala	/^  val br0_brn_bb = Map($/;"	l
br0_brn_bb	src/main/scala/generator/test08.scala	/^  val br0_brn_bb = Map($/;"	l
br0_brn_bb	src/main/scala/generator/test09.scala	/^  val br0_brn_bb = Map($/;"	l
br0_brn_bb	src/main/scala/generator/test10.scala	/^  val br0_brn_bb = Map($/;"	l
br0_brn_bb	src/main/scala/generator/test11.scala	/^  val br0_brn_bb = Map($/;"	l
br0_brn_bb	src/main/scala/generator/test12.scala	/^  val br0_brn_bb = Map($/;"	l
br0_brn_bb	src/main/scala/generator/test12_inner.scala	/^  val br0_brn_bb = Map($/;"	l
br0_brn_bb	src/main/scala/generator/test14.scala	/^  val br0_brn_bb = Map($/;"	l
br0_brn_bb	src/main/scala/generator/test14_inner.scala	/^  val br0_brn_bb = Map($/;"	l
br0_brn_bb	src/main/scala/generator/test15.scala	/^  val br0_brn_bb = Map($/;"	l
br1	src/main/scala/generator/cilk/bgemm.scala	/^  val br1 = Module (new UBranchNode(ID = 1))$/;"	l
br1	src/main/scala/generator/cilk/bgemm_detach3.scala	/^  val br1 = Module (new UBranchNode(ID = 1))$/;"	l
br1	src/main/scala/generator/test04.scala	/^  val br1 = Module (new UBranchNode(ID = 1))$/;"	l
br10	src/main/scala/generator/cilk/cilk_for_test01.scala	/^  val br10 = Module (new UBranchNode(ID = 10))$/;"	l
br10	src/main/scala/generator/cilk/cilk_for_test04.scala	/^  val br10 = Module (new UBranchFastNode(ID = 10))$/;"	l
br10	src/main/scala/generator/cilk/cilk_for_test06_detach_2.scala	/^  val br10 = Module(new UBranchNode(ID = 10))$/;"	l
br10_brn_bb	src/main/scala/generator/cilk/cilk_for_test01.scala	/^  val br10_brn_bb = Map($/;"	l
br10_brn_bb	src/main/scala/generator/cilk/cilk_for_test04.scala	/^  val br10_brn_bb = Map($/;"	l
br10_brn_bb	src/main/scala/generator/cilk/cilk_for_test06_detach_2.scala	/^  val br10_brn_bb = Map($/;"	l
br11	src/main/scala/generator/cilk/bgemm_detach1.scala	/^  val br11 = Module (new UBranchNode(ID = 11))$/;"	l
br11	src/main/scala/generator/cilk/bgemm_detach2.scala	/^  val br11 = Module (new UBranchNode(ID = 11))$/;"	l
br11	src/main/scala/generator/cilk/cilk_for_test09.scala	/^  val br11 = Module(new UBranchNode(ID = 11))$/;"	l
br11	src/main/scala/generator/cilk/mergesort.scala	/^  val br11 = Module (new CBranchNode(ID = 11))$/;"	l
br11	src/main/scala/generator/cilk/stencil_inner.scala	/^  val br11 = Module(new CBranchNode(ID = 11))$/;"	l
br11	src/main/scala/generator/test04.scala	/^  val br11 = Module (new UBranchNode(ID = 11))$/;"	l
br11	src/main/scala/generator/test05.scala	/^  val br11 = Module (new UBranchNode(ID = 11,NumOuts=2)) \/\/ manually added NumOuts=2$/;"	l
br11	src/main/scala/generator/test10.scala	/^  val br11 = Module (new UBranchNode(ID = 11))$/;"	l
br11	src/main/scala/generator/test11.scala	/^  val br11 = Module (new UBranchNode(ID = 11))$/;"	l
br11_brn_bb	src/main/scala/generator/cilk/bgemm_detach1.scala	/^  val br11_brn_bb = Map($/;"	l
br11_brn_bb	src/main/scala/generator/cilk/bgemm_detach2.scala	/^  val br11_brn_bb = Map($/;"	l
br11_brn_bb	src/main/scala/generator/cilk/cilk_for_test09.scala	/^  val br11_brn_bb = Map($/;"	l
br11_brn_bb	src/main/scala/generator/cilk/mergesort.scala	/^  val br11_brn_bb = Map($/;"	l
br11_brn_bb	src/main/scala/generator/cilk/stencil_inner.scala	/^  val br11_brn_bb = Map($/;"	l
br11_brn_bb	src/main/scala/generator/test04.scala	/^  val br11_brn_bb = Map($/;"	l
br11_brn_bb	src/main/scala/generator/test05.scala	/^  val br11_brn_bb = Map($/;"	l
br11_brn_bb	src/main/scala/generator/test10.scala	/^  val br11_brn_bb = Map($/;"	l
br11_brn_bb	src/main/scala/generator/test11.scala	/^  val br11_brn_bb = Map($/;"	l
br11_in	src/main/scala/generator/cilk/mergesort.scala	/^  val br11_in = Map($/;"	l
br11_in	src/main/scala/generator/cilk/stencil_inner.scala	/^  val br11_in = Map($/;"	l
br12	src/main/scala/generator/cilk/bgemm_detach3.scala	/^  val br12 = Module (new UBranchNode(ID = 12))$/;"	l
br12	src/main/scala/generator/cilk/mergesort.scala	/^  val br12 = Module (new UBranchNode(ID = 12))$/;"	l
br12	src/main/scala/generator/test15.scala	/^  val br12 = Module (new CBranchFastNode(ID = 12))$/;"	l
br12_brn_bb	src/main/scala/generator/cilk/bgemm_detach3.scala	/^  val br12_brn_bb = Map($/;"	l
br12_brn_bb	src/main/scala/generator/cilk/mergesort.scala	/^  val br12_brn_bb = Map($/;"	l
br12_brn_bb	src/main/scala/generator/test15.scala	/^  val br12_brn_bb = Map($/;"	l
br12_in	src/main/scala/generator/test15.scala	/^  val br12_in = Map($/;"	l
br13	src/main/scala/generator/cilk/bgemm_detach3.scala	/^  val br13 = Module (new UBranchNode(ID = 13))$/;"	l
br13	src/main/scala/generator/cilk/cilk_for_test01.scala	/^  val br13 = Module (new UBranchNode(ID = 13))$/;"	l
br13	src/main/scala/generator/cilk/cilk_for_test05_detach.scala	/^  val br13 = Module (new UBranchFastNode(ID = 13))$/;"	l
br13	src/main/scala/generator/cilk/cilk_for_test12_detach2.scala	/^  val br13 = Module (new UBranchFastNode(ID = 13))$/;"	l
br13	src/main/scala/generator/test10.scala	/^  val br13 = Module (new UBranchNode(ID = 13))$/;"	l
br13	src/main/scala/generator/test11.scala	/^  val br13 = Module (new UBranchNode(ID = 13))$/;"	l
br13_brn_bb	src/main/scala/generator/cilk/bgemm_detach3.scala	/^  val br13_brn_bb = Map($/;"	l
br13_brn_bb	src/main/scala/generator/cilk/cilk_for_test01.scala	/^  val br13_brn_bb = Map($/;"	l
br13_brn_bb	src/main/scala/generator/cilk/cilk_for_test05_detach.scala	/^  val br13_brn_bb = Map($/;"	l
br13_brn_bb	src/main/scala/generator/cilk/cilk_for_test12_detach2.scala	/^  val br13_brn_bb = Map($/;"	l
br13_brn_bb	src/main/scala/generator/test10.scala	/^  val br13_brn_bb = Map($/;"	l
br13_brn_bb	src/main/scala/generator/test11.scala	/^  val br13_brn_bb = Map($/;"	l
br14	src/main/scala/generator/cilk/cilk_for_test05_detach.scala	/^  val br14 = Module (new UBranchFastNode(ID = 14))$/;"	l
br14	src/main/scala/generator/cilk/cilk_for_test09.scala	/^  val br14 = Module(new UBranchNode(ID = 14))$/;"	l
br14	src/main/scala/generator/cilk/mergesort_merge.scala	/^  val br14 = Module (new UBranchNode(ID = 14))$/;"	l
br14	src/main/scala/generator/test04.scala	/^  val br14 = Module (new UBranchNode(ID = 14))$/;"	l
br14_brn_bb	src/main/scala/generator/cilk/cilk_for_test05_detach.scala	/^  val br14_brn_bb = Map($/;"	l
br14_brn_bb	src/main/scala/generator/cilk/cilk_for_test09.scala	/^  val br14_brn_bb = Map($/;"	l
br14_brn_bb	src/main/scala/generator/cilk/mergesort_merge.scala	/^  val br14_brn_bb = Map($/;"	l
br14_brn_bb	src/main/scala/generator/test04.scala	/^  val br14_brn_bb = Map($/;"	l
br16	src/main/scala/generator/cilk/bgemm_detach3.scala	/^  val br16 = Module (new CBranchNode(ID = 16))$/;"	l
br16	src/main/scala/generator/cilk/cilk_for_test12_detach1.scala	/^  val br16 = Module (new UBranchFastNode(ID = 16))$/;"	l
br16_brn_bb	src/main/scala/generator/cilk/bgemm_detach3.scala	/^  val br16_brn_bb = Map($/;"	l
br16_brn_bb	src/main/scala/generator/cilk/cilk_for_test12_detach1.scala	/^  val br16_brn_bb = Map($/;"	l
br16_in	src/main/scala/generator/cilk/bgemm_detach3.scala	/^  val br16_in = Map($/;"	l
br18	src/main/scala/generator/test15.scala	/^  val br18 = Module (new UBranchFastNode(ID = 18))$/;"	l
br18_brn_bb	src/main/scala/generator/cilk/fib.scala	/^  val br18_brn_bb = Map($/;"	l
br18_brn_bb	src/main/scala/generator/test15.scala	/^  val br18_brn_bb = Map($/;"	l
br19	src/main/scala/generator/cilk/mergesort_merge.scala	/^  val br19 = Module (new CBranchNode(ID = 19))$/;"	l
br19_brn_bb	src/main/scala/generator/cilk/mergesort_merge.scala	/^  val br19_brn_bb = Map($/;"	l
br19_in	src/main/scala/generator/cilk/mergesort_merge.scala	/^  val br19_in = Map($/;"	l
br1_brn_bb	src/main/scala/generator/cilk/bgemm.scala	/^  val br1_brn_bb = Map($/;"	l
br1_brn_bb	src/main/scala/generator/cilk/bgemm_detach3.scala	/^  val br1_brn_bb = Map($/;"	l
br1_brn_bb	src/main/scala/generator/test04.scala	/^  val br1_brn_bb = Map($/;"	l
br2	src/main/scala/generator/cilk/bgemm_detach1.scala	/^  val br2 = Module (new UBranchNode(ID = 2))$/;"	l
br2	src/main/scala/generator/cilk/bgemm_detach2.scala	/^  val br2 = Module (new UBranchNode(ID = 2))$/;"	l
br2	src/main/scala/generator/cilk/cilk_for_test09.scala	/^  val br2 = Module(new UBranchNode(ID = 2))$/;"	l
br2	src/main/scala/generator/cilk/cilk_for_test12.scala	/^  val br2 = Module (new UBranchFastNode(ID = 2))$/;"	l
br2	src/main/scala/generator/cilk/stencil_detach1.scala	/^  val br2 = Module(new UBranchNode(ID = 2))$/;"	l
br2	src/main/scala/generator/test02.scala	/^  val br2 = Module (new CBranchNode(ID = 2))$/;"	l
br20	src/main/scala/generator/cilk/stencil_detach1.scala	/^  val br20 = Module(new UBranchNode(ID = 20))$/;"	l
br20	src/main/scala/generator/test15.scala	/^  val br20 = Module (new UBranchFastNode(ID = 20))$/;"	l
br20_brn_bb	src/main/scala/generator/cilk/stencil_detach1.scala	/^  val br20_brn_bb = Map($/;"	l
br20_brn_bb	src/main/scala/generator/test15.scala	/^  val br20_brn_bb = Map($/;"	l
br21	src/main/scala/generator/cilk/mergesort_merge.scala	/^  val br21 = Module (new CBranchNode(ID = 21))$/;"	l
br21_brn_bb	src/main/scala/generator/cilk/mergesort_merge.scala	/^  val br21_brn_bb = Map($/;"	l
br21_in	src/main/scala/generator/cilk/mergesort_merge.scala	/^  val br21_in = Map($/;"	l
br22	src/main/scala/generator/cilk/stencil_inner.scala	/^  val br22 = Module(new UBranchNode(ID = 22))$/;"	l
br22_brn_bb	src/main/scala/generator/cilk/stencil_inner.scala	/^  val br22_brn_bb = Map($/;"	l
br23	src/main/scala/generator/cilk/cilk_for_test05_detach.scala	/^  val br23 = Module (new UBranchFastNode(ID = 23))$/;"	l
br23	src/main/scala/generator/cilk/mergesort_merge.scala	/^  val br23 = Module (new CBranchNode(ID = 23))$/;"	l
br23_brn_bb	src/main/scala/generator/cilk/cilk_for_test05_detach.scala	/^  val br23_brn_bb = Map($/;"	l
br23_brn_bb	src/main/scala/generator/cilk/mergesort_merge.scala	/^  val br23_brn_bb = Map($/;"	l
br23_brn_bb	src/main/scala/generator/cilk/stencil_inner.scala	/^  val br23_brn_bb = Map($/;"	l
br23_in	src/main/scala/generator/cilk/mergesort_merge.scala	/^  val br23_in = Map($/;"	l
br24	src/main/scala/generator/cilk/stencil_inner.scala	/^  val br24 = Module(new UBranchNode(ID = 24))$/;"	l
br24_brn_bb	src/main/scala/generator/cilk/stencil_inner.scala	/^  val br24_brn_bb = Map($/;"	l
br25_brn_bb	src/main/scala/generator/cilk/mergesort.scala	/^  val br25_brn_bb = Map($/;"	l
br26	src/main/scala/generator/cilk/stencil_inner.scala	/^  val br26 = Module(new UBranchNode(ID = 26))$/;"	l
br26	src/main/scala/generator/test15.scala	/^  val br26 = Module (new UBranchFastNode(ID = 26))$/;"	l
br26_brn_bb	src/main/scala/generator/cilk/stencil_inner.scala	/^  val br26_brn_bb = Map($/;"	l
br26_brn_bb	src/main/scala/generator/test15.scala	/^  val br26_brn_bb = Map($/;"	l
br28	src/main/scala/generator/cilk/bgemm_detach3.scala	/^  val br28 = Module (new UBranchNode(ID = 28))$/;"	l
br28	src/main/scala/generator/test15.scala	/^  val br28 = Module (new UBranchFastNode(ID = 28))$/;"	l
br28_brn_bb	src/main/scala/generator/cilk/bgemm_detach3.scala	/^  val br28_brn_bb = Map($/;"	l
br28_brn_bb	src/main/scala/generator/test15.scala	/^  val br28_brn_bb = Map($/;"	l
br29	src/main/scala/generator/cilk/mergesort_merge.scala	/^  val br29 = Module (new CBranchNode(ID = 29))$/;"	l
br29_brn_bb	src/main/scala/generator/cilk/mergesort_merge.scala	/^  val br29_brn_bb = Map($/;"	l
br29_in	src/main/scala/generator/cilk/mergesort_merge.scala	/^  val br29_in = Map($/;"	l
br2_brn_bb	src/main/scala/generator/cilk/bgemm_detach1.scala	/^  val br2_brn_bb = Map($/;"	l
br2_brn_bb	src/main/scala/generator/cilk/bgemm_detach2.scala	/^  val br2_brn_bb = Map($/;"	l
br2_brn_bb	src/main/scala/generator/cilk/cilk_for_test09.scala	/^  val br2_brn_bb = Map($/;"	l
br2_brn_bb	src/main/scala/generator/cilk/cilk_for_test12.scala	/^  val br2_brn_bb = Map($/;"	l
br2_brn_bb	src/main/scala/generator/cilk/stencil_detach1.scala	/^  val br2_brn_bb = Map($/;"	l
br2_brn_bb	src/main/scala/generator/test02.scala	/^  val br2_brn_bb = Map($/;"	l
br2_in	src/main/scala/generator/test02.scala	/^  val br2_in = Map($/;"	l
br3	src/main/scala/generator/cilk/bgemm_detach1.scala	/^  val br3 = Module (new UBranchNode(ID = 3))$/;"	l
br3	src/main/scala/generator/cilk/bgemm_detach2.scala	/^  val br3 = Module (new UBranchNode(ID = 3))$/;"	l
br3	src/main/scala/generator/cilk/cilk_for_test01.scala	/^  val br3 = Module (new CBranchNode(ID = 3))$/;"	l
br3	src/main/scala/generator/cilk/cilk_for_test02.scala	/^  val br3 = Module (new CBranchNode(ID = 3))$/;"	l
br3	src/main/scala/generator/cilk/cilk_for_test05.scala	/^  val br3 = Module (new CBranchNode(ID = 3))$/;"	l
br3	src/main/scala/generator/cilk/cilk_for_test06.scala	/^  val br3 = Module(new CBranchNode(ID = 3))$/;"	l
br3	src/main/scala/generator/cilk/cilk_for_test06_detach.scala	/^  val br3 = Module(new CBranchFastNode(ID = 3))$/;"	l
br3	src/main/scala/generator/cilk/cilk_for_test12_detach1.scala	/^  val br3 = Module (new CBranchFastNode(ID = 3))$/;"	l
br3	src/main/scala/generator/cilk/cilk_for_test12_detach2.scala	/^  val br3 = Module (new CBranchFastNode(ID = 3))$/;"	l
br3	src/main/scala/generator/cilk/stencil.scala	/^  val br3 = Module(new CBranchNode(ID = 3))$/;"	l
br3	src/main/scala/generator/cilk/stencil_inner.scala	/^  val br3 = Module(new CBranchNode(ID = 3))$/;"	l
br3	src/main/scala/generator/test05.scala	/^  val br3 = Module (new CBranchNode(ID = 3))$/;"	l
br3	src/main/scala/generator/test05b.scala	/^  val br3 = Module (new CBranchNode(ID = 3))$/;"	l
br3	src/main/scala/generator/test10.scala	/^  val br3 = Module (new CBranchNode(ID = 3))$/;"	l
br3	src/main/scala/generator/test11.scala	/^  val br3 = Module (new CBranchNode(ID = 3))$/;"	l
br30	src/main/scala/generator/cilk/bgemm_detach3.scala	/^  val br30 = Module (new UBranchNode(ID = 30))$/;"	l
br30_brn_bb	src/main/scala/generator/cilk/bgemm_detach3.scala	/^  val br30_brn_bb = Map($/;"	l
br31	src/main/scala/generator/cilk/bgemm_detach3.scala	/^  val br31 = Module (new UBranchNode(ID = 31))$/;"	l
br31_brn_bb	src/main/scala/generator/cilk/bgemm_detach3.scala	/^  val br31_brn_bb = Map($/;"	l
br33	src/main/scala/generator/cilk/bgemm_detach3.scala	/^  val br33 = Module (new UBranchNode(ID = 33))$/;"	l
br33_brn_bb	src/main/scala/generator/cilk/bgemm_detach3.scala	/^  val br33_brn_bb = Map($/;"	l
br34	src/main/scala/generator/cilk/bgemm_detach3.scala	/^  val br34 = Module (new UBranchNode(ID = 34))$/;"	l
br34_brn_bb	src/main/scala/generator/cilk/bgemm_detach3.scala	/^  val br34_brn_bb = Map($/;"	l
br35	src/main/scala/generator/cilk/mergesort_merge.scala	/^  val br35 = Module (new UBranchNode(ID = 35, NumPredOps=1))$/;"	l
br35	src/main/scala/generator/test15.scala	/^  val br35 = Module (new UBranchFastNode(ID = 35))$/;"	l
br35_brn_bb	src/main/scala/generator/cilk/mergesort_merge.scala	/^  val br35_brn_bb = Map($/;"	l
br35_brn_bb	src/main/scala/generator/test15.scala	/^  val br35_brn_bb = Map($/;"	l
br37	src/main/scala/generator/test15.scala	/^  val br37 = Module (new UBranchFastNode(ID = 37))$/;"	l
br37_brn_bb	src/main/scala/generator/test15.scala	/^  val br37_brn_bb = Map($/;"	l
br3_brn_bb	src/main/scala/generator/cilk/bgemm_detach1.scala	/^  val br3_brn_bb = Map($/;"	l
br3_brn_bb	src/main/scala/generator/cilk/bgemm_detach2.scala	/^  val br3_brn_bb = Map($/;"	l
br3_brn_bb	src/main/scala/generator/cilk/cilk_for_test01.scala	/^  val br3_brn_bb = Map($/;"	l
br3_brn_bb	src/main/scala/generator/cilk/cilk_for_test02.scala	/^  val br3_brn_bb = Map($/;"	l
br3_brn_bb	src/main/scala/generator/cilk/cilk_for_test04.scala	/^  val br3_brn_bb = Map($/;"	l
br3_brn_bb	src/main/scala/generator/cilk/cilk_for_test05.scala	/^  val br3_brn_bb = Map($/;"	l
br3_brn_bb	src/main/scala/generator/cilk/cilk_for_test06.scala	/^  val br3_brn_bb = Map($/;"	l
br3_brn_bb	src/main/scala/generator/cilk/cilk_for_test06_detach.scala	/^  val br3_brn_bb = Map($/;"	l
br3_brn_bb	src/main/scala/generator/cilk/cilk_for_test12_detach1.scala	/^  val br3_brn_bb = Map($/;"	l
br3_brn_bb	src/main/scala/generator/cilk/cilk_for_test12_detach2.scala	/^  val br3_brn_bb = Map($/;"	l
br3_brn_bb	src/main/scala/generator/cilk/stencil.scala	/^  val br3_brn_bb = Map($/;"	l
br3_brn_bb	src/main/scala/generator/cilk/stencil_inner.scala	/^  val br3_brn_bb = Map($/;"	l
br3_brn_bb	src/main/scala/generator/test05.scala	/^  val br3_brn_bb = Map($/;"	l
br3_brn_bb	src/main/scala/generator/test05b.scala	/^  val br3_brn_bb = Map($/;"	l
br3_brn_bb	src/main/scala/generator/test10.scala	/^  val br3_brn_bb = Map($/;"	l
br3_brn_bb	src/main/scala/generator/test11.scala	/^  val br3_brn_bb = Map($/;"	l
br3_in	src/main/scala/generator/cilk/cilk_for_test01.scala	/^  val br3_in = Map($/;"	l
br3_in	src/main/scala/generator/cilk/cilk_for_test02.scala	/^  val br3_in = Map($/;"	l
br3_in	src/main/scala/generator/cilk/cilk_for_test04.scala	/^  val br3_in = Map($/;"	l
br3_in	src/main/scala/generator/cilk/cilk_for_test05.scala	/^  val br3_in = Map($/;"	l
br3_in	src/main/scala/generator/cilk/cilk_for_test06.scala	/^  val br3_in = Map($/;"	l
br3_in	src/main/scala/generator/cilk/cilk_for_test06_detach.scala	/^  val br3_in = Map($/;"	l
br3_in	src/main/scala/generator/cilk/cilk_for_test12_detach1.scala	/^  val br3_in = Map($/;"	l
br3_in	src/main/scala/generator/cilk/cilk_for_test12_detach2.scala	/^  val br3_in = Map($/;"	l
br3_in	src/main/scala/generator/cilk/stencil.scala	/^  val br3_in = Map($/;"	l
br3_in	src/main/scala/generator/cilk/stencil_inner.scala	/^  val br3_in = Map($/;"	l
br3_in	src/main/scala/generator/test05.scala	/^  val br3_in = Map($/;"	l
br3_in	src/main/scala/generator/test05b.scala	/^  val br3_in = Map($/;"	l
br3_in	src/main/scala/generator/test10.scala	/^  val br3_in = Map($/;"	l
br3_in	src/main/scala/generator/test11.scala	/^  val br3_in = Map($/;"	l
br4	src/main/scala/generator/cilk/bgemm.scala	/^  val br4 = Module (new CBranchNode(ID = 4))$/;"	l
br4	src/main/scala/generator/cilk/bgemm_detach3.scala	/^  val br4 = Module (new CBranchNode(ID = 4))$/;"	l
br4	src/main/scala/generator/cilk/cilk_for_test09_inner.scala	/^  val br4 = Module (new CBranchNode(ID = 4))$/;"	l
br4	src/main/scala/generator/test02.scala	/^  val br4 = Module (new UBranchNode(ID = 4))$/;"	l
br4	src/main/scala/generator/test03.scala	/^  val br4 = Module(new CBranchNode(ID = 4))$/;"	l
br4	src/main/scala/generator/test05c.scala	/^  val br4 = Module (new CBranchNode(ID = 4))$/;"	l
br4	src/main/scala/generator/test08.scala	/^  val br4 = Module (new CBranchNode(ID = 4))$/;"	l
br4	src/main/scala/generator/test09.scala	/^  val br4 = Module (new CBranchNode(ID = 4))$/;"	l
br4	src/main/scala/generator/test12.scala	/^  val br4 = Module (new CBranchNode(ID = 4))$/;"	l
br4	src/main/scala/generator/test12_inner.scala	/^  val br4 = Module (new CBranchNode(ID = 4))$/;"	l
br4	src/main/scala/generator/test14.scala	/^  val br4 = Module (new CBranchNode(ID = 4))$/;"	l
br4	src/main/scala/generator/test14_inner.scala	/^  val br4 = Module (new CBranchNode(ID = 4))$/;"	l
br4	src/main/scala/generator/test15.scala	/^  val br4 = Module (new CBranchFastNode(ID = 4))$/;"	l
br41	src/main/scala/generator/cilk/mergesort_merge.scala	/^  val br41 = Module (new UBranchNode(ID = 41,NumPredOps=1))$/;"	l
br41_brn_bb	src/main/scala/generator/cilk/mergesort_merge.scala	/^  val br41_brn_bb = Map($/;"	l
br44	src/main/scala/generator/cilk/mergesort_merge.scala	/^  val br44 = Module (new UBranchNode(ID = 44, NumPredOps = 2, NumOuts = 2))$/;"	l
br44_brn_bb	src/main/scala/generator/cilk/mergesort_merge.scala	/^  val br44_brn_bb = Map($/;"	l
br46	src/main/scala/generator/cilk/mergesort_merge.scala	/^  val br46 = Module (new UBranchNode(ID = 46))$/;"	l
br46_brn_bb	src/main/scala/generator/cilk/mergesort_merge.scala	/^  val br46_brn_bb = Map($/;"	l
br4_brn_bb	src/main/scala/generator/cilk/bgemm.scala	/^  val br4_brn_bb = Map($/;"	l
br4_brn_bb	src/main/scala/generator/cilk/bgemm_detach3.scala	/^  val br4_brn_bb = Map($/;"	l
br4_brn_bb	src/main/scala/generator/cilk/cilk_for_test09_inner.scala	/^  val br4_brn_bb = Map($/;"	l
br4_brn_bb	src/main/scala/generator/test02.scala	/^  val br4_brn_bb = Map($/;"	l
br4_brn_bb	src/main/scala/generator/test03.scala	/^  val br4_brn_bb = Map($/;"	l
br4_brn_bb	src/main/scala/generator/test05c.scala	/^  val br4_brn_bb = Map($/;"	l
br4_brn_bb	src/main/scala/generator/test08.scala	/^  val br4_brn_bb = Map($/;"	l
br4_brn_bb	src/main/scala/generator/test09.scala	/^  val br4_brn_bb = Map($/;"	l
br4_brn_bb	src/main/scala/generator/test12.scala	/^  val br4_brn_bb = Map($/;"	l
br4_brn_bb	src/main/scala/generator/test12_inner.scala	/^  val br4_brn_bb = Map($/;"	l
br4_brn_bb	src/main/scala/generator/test14.scala	/^  val br4_brn_bb = Map($/;"	l
br4_brn_bb	src/main/scala/generator/test14_inner.scala	/^  val br4_brn_bb = Map($/;"	l
br4_brn_bb	src/main/scala/generator/test15.scala	/^  val br4_brn_bb = Map($/;"	l
br4_in	src/main/scala/generator/cilk/bgemm.scala	/^  val br4_in = Map($/;"	l
br4_in	src/main/scala/generator/cilk/bgemm_detach3.scala	/^  val br4_in = Map($/;"	l
br4_in	src/main/scala/generator/cilk/cilk_for_test09_inner.scala	/^  val br4_in = Map($/;"	l
br4_in	src/main/scala/generator/test03.scala	/^  val br4_in = Map($/;"	l
br4_in	src/main/scala/generator/test05c.scala	/^  val br4_in = Map($/;"	l
br4_in	src/main/scala/generator/test08.scala	/^  val br4_in = Map($/;"	l
br4_in	src/main/scala/generator/test09.scala	/^  val br4_in = Map($/;"	l
br4_in	src/main/scala/generator/test12.scala	/^  val br4_in = Map($/;"	l
br4_in	src/main/scala/generator/test12_inner.scala	/^  val br4_in = Map($/;"	l
br4_in	src/main/scala/generator/test14.scala	/^  val br4_in = Map($/;"	l
br4_in	src/main/scala/generator/test14_inner.scala	/^  val br4_in = Map($/;"	l
br4_in	src/main/scala/generator/test15.scala	/^  val br4_in = Map($/;"	l
br5	src/main/scala/generator/cilk/cilk_for_test05_detach.scala	/^  val br5 = Module (new CBranchNode(ID = 5))$/;"	l
br5	src/main/scala/generator/cilk/cilk_for_test09.scala	/^  val br5 = Module(new CBranchNode(ID = 5))$/;"	l
br5	src/main/scala/generator/cilk/cilk_for_test12.scala	/^  val br5 = Module (new CBranchFastNode(ID = 5))$/;"	l
br5	src/main/scala/generator/cilk/cilk_for_test12_detach3.scala	/^  val br5 = Module (new UBranchNode(ID = 5))$/;"	l
br5	src/main/scala/generator/cilk/fib.scala	/^  val br5 = Module (new CBranchNode(ID = 5))$/;"	l
br5	src/main/scala/generator/cilk/stencil_detach1.scala	/^  val br5 = Module(new CBranchNode(ID = 5))$/;"	l
br5	src/main/scala/generator/test04.scala	/^  val br5 = Module (new CBranchNode(ID = 5))$/;"	l
br5	src/main/scala/generator/test05b.scala	/^  val br5 = Module (new UBranchNode(ID = 5, NumPredOps = 1))$/;"	l
br5	src/main/scala/generator/test15.scala	/^  val br5 = Module (new UBranchFastNode(ID = 5))$/;"	l
br5_brn_bb	src/main/scala/generator/cilk/cilk_for_test05_detach.scala	/^  val br5_brn_bb = Map($/;"	l
br5_brn_bb	src/main/scala/generator/cilk/cilk_for_test09.scala	/^  val br5_brn_bb = Map($/;"	l
br5_brn_bb	src/main/scala/generator/cilk/cilk_for_test12.scala	/^  val br5_brn_bb = Map($/;"	l
br5_brn_bb	src/main/scala/generator/cilk/cilk_for_test12_detach3.scala	/^  val br5_brn_bb = Map($/;"	l
br5_brn_bb	src/main/scala/generator/cilk/fib.scala	/^  val br5_brn_bb = Map($/;"	l
br5_brn_bb	src/main/scala/generator/cilk/stencil_detach1.scala	/^  val br5_brn_bb = Map($/;"	l
br5_brn_bb	src/main/scala/generator/test04.scala	/^  val br5_brn_bb = Map($/;"	l
br5_brn_bb	src/main/scala/generator/test05b.scala	/^  val br5_brn_bb = Map($/;"	l
br5_brn_bb	src/main/scala/generator/test15.scala	/^  val br5_brn_bb = Map($/;"	l
br5_in	src/main/scala/generator/cilk/cilk_for_test05_detach.scala	/^  val br5_in = Map($/;"	l
br5_in	src/main/scala/generator/cilk/cilk_for_test09.scala	/^  val br5_in = Map($/;"	l
br5_in	src/main/scala/generator/cilk/cilk_for_test12.scala	/^  val br5_in = Map($/;"	l
br5_in	src/main/scala/generator/cilk/fib.scala	/^  val br5_in = Map($/;"	l
br5_in	src/main/scala/generator/cilk/stencil_detach1.scala	/^  val br5_in = Map($/;"	l
br5_in	src/main/scala/generator/test04.scala	/^  val br5_in = Map($/;"	l
br6	src/main/scala/generator/cilk/bgemm_detach1.scala	/^  val br6 = Module (new CBranchNode(ID = 6))$/;"	l
br6	src/main/scala/generator/cilk/bgemm_detach2.scala	/^  val br6 = Module (new CBranchNode(ID = 6))$/;"	l
br6	src/main/scala/generator/cilk/cilk_for_test02.scala	/^  val br6 = Module (new UBranchNode(ID = 6))$/;"	l
br6	src/main/scala/generator/cilk/cilk_for_test04.scala	/^  val br6 = Module (new UBranchFastNode(ID = 6))$/;"	l
br6	src/main/scala/generator/cilk/cilk_for_test05.scala	/^  val br6 = Module (new UBranchFastNode(ID = 6))$/;"	l
br6	src/main/scala/generator/cilk/cilk_for_test06.scala	/^  val br6 = Module(new UBranchNode(ID = 6))$/;"	l
br6	src/main/scala/generator/cilk/cilk_for_test06_detach.scala	/^  val br6 = Module(new UBranchFastNode(ID = 6))$/;"	l
br6	src/main/scala/generator/cilk/cilk_for_test09_inner.scala	/^  val br6 = Module (new UBranchNode(ID = 6))$/;"	l
br6	src/main/scala/generator/cilk/cilk_for_test12_detach1.scala	/^  val br6 = Module (new UBranchFastNode(ID = 6))$/;"	l
br6	src/main/scala/generator/cilk/cilk_for_test12_detach2.scala	/^  val br6 = Module (new UBranchFastNode(ID = 6))$/;"	l
br6	src/main/scala/generator/cilk/stencil.scala	/^  val br6 = Module(new UBranchFastNode(ID = 6))$/;"	l
br6	src/main/scala/generator/test08.scala	/^  val br6 = Module (new UBranchNode(ID = 6))$/;"	l
br6	src/main/scala/generator/test09.scala	/^  val br6 = Module (new UBranchNode(ID = 6))$/;"	l
br6	src/main/scala/generator/test12_inner.scala	/^  val br6 = Module (new UBranchNode(ID = 6))$/;"	l
br6	src/main/scala/generator/test14_inner.scala	/^  val br6 = Module (new UBranchNode(ID = 6))$/;"	l
br6_brn_bb	src/main/scala/generator/cilk/bgemm_detach1.scala	/^  val br6_brn_bb = Map($/;"	l
br6_brn_bb	src/main/scala/generator/cilk/bgemm_detach2.scala	/^  val br6_brn_bb = Map($/;"	l
br6_brn_bb	src/main/scala/generator/cilk/cilk_for_test02.scala	/^  val br6_brn_bb = Map($/;"	l
br6_brn_bb	src/main/scala/generator/cilk/cilk_for_test04.scala	/^  val br6_brn_bb = Map($/;"	l
br6_brn_bb	src/main/scala/generator/cilk/cilk_for_test05.scala	/^  val br6_brn_bb = Map($/;"	l
br6_brn_bb	src/main/scala/generator/cilk/cilk_for_test06.scala	/^  val br6_brn_bb = Map($/;"	l
br6_brn_bb	src/main/scala/generator/cilk/cilk_for_test06_detach.scala	/^  val br6_brn_bb = Map($/;"	l
br6_brn_bb	src/main/scala/generator/cilk/cilk_for_test09_inner.scala	/^  val br6_brn_bb = Map($/;"	l
br6_brn_bb	src/main/scala/generator/cilk/cilk_for_test12_detach1.scala	/^  val br6_brn_bb = Map($/;"	l
br6_brn_bb	src/main/scala/generator/cilk/cilk_for_test12_detach2.scala	/^  val br6_brn_bb = Map($/;"	l
br6_brn_bb	src/main/scala/generator/cilk/stencil.scala	/^  val br6_brn_bb = Map($/;"	l
br6_brn_bb	src/main/scala/generator/test08.scala	/^  val br6_brn_bb = Map($/;"	l
br6_brn_bb	src/main/scala/generator/test09.scala	/^  val br6_brn_bb = Map($/;"	l
br6_brn_bb	src/main/scala/generator/test12_inner.scala	/^  val br6_brn_bb = Map($/;"	l
br6_brn_bb	src/main/scala/generator/test14_inner.scala	/^  val br6_brn_bb = Map($/;"	l
br6_in	src/main/scala/generator/cilk/bgemm_detach1.scala	/^  val br6_in = Map($/;"	l
br6_in	src/main/scala/generator/cilk/bgemm_detach2.scala	/^  val br6_in = Map($/;"	l
br7	src/main/scala/generator/cilk/bgemm.scala	/^  val br7 = Module (new UBranchNode(ID = 7))$/;"	l
br7	src/main/scala/generator/cilk/cilk_for_test04_detach.scala	/^  val br7 = Module (new UBranchFastNode(ID = 7))$/;"	l
br7	src/main/scala/generator/cilk/cilk_for_test07.scala	/^  val br7 = Module (new CBranchNode(ID = 7))$/;"	l
br7	src/main/scala/generator/cilk/cilk_for_test08.scala	/^  val br7 = Module (new CBranchNode(ID = 7))$/;"	l
br7	src/main/scala/generator/cilk/fib.scala	/^  val br7 = Module (new UBranchNode(ID = 7)) \/\/ manual$/;"	l
br7	src/main/scala/generator/cilk/stencil_detach1.scala	/^  val br7 = Module(new UBranchNode(ID = 7))$/;"	l
br7	src/main/scala/generator/test03.scala	/^  val br7 = Module(new UBranchNode(ID = 7))$/;"	l
br7	src/main/scala/generator/test04.scala	/^  val br7 = Module (new CBranchNode(ID = 7))$/;"	l
br7	src/main/scala/generator/test05b.scala	/^  val br7 = Module (new UBranchNode(ID = 7, NumOuts=2)) \/\/ Manually changed NumOuts=2$/;"	l
br7	src/main/scala/generator/test05c.scala	/^  val br7 = Module (new UBranchNode(ID = 7, NumPredOps=1))$/;"	l
br7	src/main/scala/generator/test12.scala	/^  val br7 = Module (new UBranchNode(ID = 7))$/;"	l
br7	src/main/scala/generator/test14.scala	/^  val br7 = Module (new UBranchNode(ID = 7))$/;"	l
br7_brn_bb	src/main/scala/generator/cilk/bgemm.scala	/^  val br7_brn_bb = Map($/;"	l
br7_brn_bb	src/main/scala/generator/cilk/cilk_for_test04_detach.scala	/^  val br7_brn_bb = Map($/;"	l
br7_brn_bb	src/main/scala/generator/cilk/cilk_for_test07.scala	/^  val br7_brn_bb = Map($/;"	l
br7_brn_bb	src/main/scala/generator/cilk/cilk_for_test08.scala	/^  val br7_brn_bb = Map($/;"	l
br7_brn_bb	src/main/scala/generator/cilk/fib.scala	/^  val br7_brn_bb = Map($/;"	l
br7_brn_bb	src/main/scala/generator/cilk/stencil_detach1.scala	/^  val br7_brn_bb = Map($/;"	l
br7_brn_bb	src/main/scala/generator/test03.scala	/^  val br7_brn_bb = Map($/;"	l
br7_brn_bb	src/main/scala/generator/test04.scala	/^  val br7_brn_bb = Map($/;"	l
br7_brn_bb	src/main/scala/generator/test05b.scala	/^  val br7_brn_bb = Map($/;"	l
br7_brn_bb	src/main/scala/generator/test05c.scala	/^  val br7_brn_bb = Map($/;"	l
br7_brn_bb	src/main/scala/generator/test12.scala	/^  val br7_brn_bb = Map($/;"	l
br7_brn_bb	src/main/scala/generator/test14.scala	/^  val br7_brn_bb = Map($/;"	l
br7_in	src/main/scala/generator/cilk/cilk_for_test07.scala	/^  val br7_in = Map($/;"	l
br7_in	src/main/scala/generator/cilk/cilk_for_test08.scala	/^  val br7_in = Map($/;"	l
br7_in	src/main/scala/generator/test04.scala	/^  val br7_in = Map($/;"	l
br8	src/main/scala/generator/cilk/cilk_for_test09_inner.scala	/^  val br8 = Module (new UBranchNode(ID = 8))$/;"	l
br8	src/main/scala/generator/cilk/cilk_for_test12.scala	/^  val br8 = Module (new UBranchFastNode(ID = 8))$/;"	l
br8	src/main/scala/generator/test08.scala	/^  val br8 = Module (new UBranchNode(ID = 8))$/;"	l
br8	src/main/scala/generator/test09.scala	/^  val br8 = Module (new UBranchNode(ID = 8))$/;"	l
br8	src/main/scala/generator/test12_inner.scala	/^  val br8 = Module (new UBranchNode(ID = 8))$/;"	l
br8	src/main/scala/generator/test14_inner.scala	/^  val br8 = Module (new UBranchNode(ID = 8))$/;"	l
br8	src/main/scala/generator/test15.scala	/^  val br8 = Module (new CBranchFastNode(ID = 8))$/;"	l
br8_brn_bb	src/main/scala/generator/cilk/cilk_for_test06_detach.scala	/^  val br8_brn_bb = Map($/;"	l
br8_brn_bb	src/main/scala/generator/cilk/cilk_for_test09_inner.scala	/^  val br8_brn_bb = Map($/;"	l
br8_brn_bb	src/main/scala/generator/cilk/cilk_for_test12.scala	/^  val br8_brn_bb = Map($/;"	l
br8_brn_bb	src/main/scala/generator/test08.scala	/^  val br8_brn_bb = Map($/;"	l
br8_brn_bb	src/main/scala/generator/test09.scala	/^  val br8_brn_bb = Map($/;"	l
br8_brn_bb	src/main/scala/generator/test12_inner.scala	/^  val br8_brn_bb = Map($/;"	l
br8_brn_bb	src/main/scala/generator/test14_inner.scala	/^  val br8_brn_bb = Map($/;"	l
br8_brn_bb	src/main/scala/generator/test15.scala	/^  val br8_brn_bb = Map($/;"	l
br8_in	src/main/scala/generator/test15.scala	/^  val br8_in = Map($/;"	l
br9	src/main/scala/generator/cilk/bgemm_detach1.scala	/^  val br9 = Module (new UBranchNode(ID = 9))$/;"	l
br9	src/main/scala/generator/cilk/bgemm_detach2.scala	/^  val br9 = Module (new UBranchNode(ID = 9))$/;"	l
br9	src/main/scala/generator/cilk/cilk_for_test02.scala	/^  val br9 = Module (new UBranchNode(ID = 9))$/;"	l
br9	src/main/scala/generator/cilk/stencil_detach1.scala	/^  val br9 = Module(new UBranchNode(ID = 9))$/;"	l
br9	src/main/scala/generator/cilk/stencil_inner.scala	/^  val br9 = Module(new CBranchNode(ID = 9))$/;"	l
br9	src/main/scala/generator/test03.scala	/^  val br9 = Module(new UBranchNode(ID = 9))$/;"	l
br9	src/main/scala/generator/test04.scala	/^  val br9 = Module (new UBranchNode(ID = 9))$/;"	l
br9	src/main/scala/generator/test05.scala	/^  val br9 = Module (new UBranchNode(NumPredOps=1, ID = 9))$/;"	l
br9	src/main/scala/generator/test05c.scala	/^  val br9 = Module (new UBranchNode(ID = 9, NumOuts=2)) \/\/ manually changed to 2 outs$/;"	l
br9	src/main/scala/generator/test12.scala	/^  val br9 = Module (new UBranchNode(ID = 9))$/;"	l
br9	src/main/scala/generator/test14.scala	/^  val br9 = Module (new UBranchNode(ID = 9))$/;"	l
br9	src/main/scala/generator/test15.scala	/^  val br9 = Module (new UBranchFastNode(ID = 9))$/;"	l
br9_brn_bb	src/main/scala/generator/cilk/bgemm_detach1.scala	/^  val br9_brn_bb = Map($/;"	l
br9_brn_bb	src/main/scala/generator/cilk/bgemm_detach2.scala	/^  val br9_brn_bb = Map($/;"	l
br9_brn_bb	src/main/scala/generator/cilk/cilk_for_test02.scala	/^  val br9_brn_bb = Map($/;"	l
br9_brn_bb	src/main/scala/generator/cilk/stencil_detach1.scala	/^  val br9_brn_bb = Map($/;"	l
br9_brn_bb	src/main/scala/generator/cilk/stencil_inner.scala	/^  val br9_brn_bb = Map($/;"	l
br9_brn_bb	src/main/scala/generator/test03.scala	/^  val br9_brn_bb = Map($/;"	l
br9_brn_bb	src/main/scala/generator/test04.scala	/^  val br9_brn_bb = Map($/;"	l
br9_brn_bb	src/main/scala/generator/test05.scala	/^  val br9_brn_bb = Map($/;"	l
br9_brn_bb	src/main/scala/generator/test05c.scala	/^  val br9_brn_bb = Map($/;"	l
br9_brn_bb	src/main/scala/generator/test12.scala	/^  val br9_brn_bb = Map($/;"	l
br9_brn_bb	src/main/scala/generator/test14.scala	/^  val br9_brn_bb = Map($/;"	l
br9_brn_bb	src/main/scala/generator/test15.scala	/^  val br9_brn_bb = Map($/;"	l
br9_in	src/main/scala/generator/cilk/stencil_inner.scala	/^  val br9_in = Map($/;"	l
buffer	src/main/scala/node/TypStore.scala	/^  val buffer = data_R.data.asTypeOf(Vec(Beats, UInt(xlen.W)))$/;"	l
burst	src/main/scala/junctions/nasti.scala	/^  val burst  = UInt(width = nastiXBurstBits)$/;"	l
byteIdx	src/main/scala/accel/CacheModel.scala	/^  val byteIdx  = req.addr(blen - 1, 0)            \/\/ byte index of block$/;"	l
byteOffsetBits	src/main/scala/accel/Cache.scala	/^  val byteOffsetBits = log2Ceil(wBytes)$/;"	l
bytesToXSize	src/main/scala/junctions/nasti.scala	/^  def bytesToXSize(bytes: UInt) = MuxLookup(bytes, UInt("b111"), Array($/;"	m
c	src/test/scala/accel/AccelTests.scala	/^    val c = Wire(new Command)$/;"	l
c	src/test/scala/accel/coredf/AccelTests01.scala	/^    val c = Wire(new Command)$/;"	l
c	src/test/scala/dataflow/UnTypMemDataflow.scala	/^  val c = Module(new UnTypMemDataFlow(ops)(p))$/;"	l
c1	src/main/scala/config/cde/Parameters.scala	/^            val c1 = ExEq[Any](e.asInstanceOf[Ex[Any]], e1.asInstanceOf[Ex[Any]])$/;"	l
cache	src/main/scala/accel/Accelerator.scala	/^  val cache = Module(new Cache)$/;"	l
cache	src/main/scala/accel/Core.scala	/^      val cache  = Flipped(new CacheIO)$/;"	l
cache	src/main/scala/accel/PerfectCacheModel.scala	/^  val cache = new CacheIO()$/;"	l
cache	src/main/scala/dataflow/filter/CacheLoader.scala	/^    val cache  = Flipped(new CacheIO)$/;"	l
cache	src/main/scala/dataflow/filter/CacheVecLoader.scala	/^    val cache  = Flipped(new CacheIO)$/;"	l
cache	src/main/scala/junctions/nasti.scala	/^  val cache  = UInt(width = nastiXCacheBits)$/;"	l
cache	src/main/scala/memory/MemArbiter.scala	/^    val cache = new Bundle {$/;"	l
cache	src/test/scala/dataflow/UnTypMemDataflow.scala	/^  val cache = Module(new Cache)$/;"	l
cache	src/test/scala/generator/cilk/bgemm_test.scala	/^  val cache = Module(new Cache)            \/\/ Simple Nasti Cache$/;"	l
cache	src/test/scala/generator/cilk/cilk_for_test01_test.scala	/^  val cache = Module(new Cache)$/;"	l
cache	src/test/scala/generator/cilk/cilk_for_test02_test.scala	/^  val cache = Module(new Cache)$/;"	l
cache	src/test/scala/generator/cilk/cilk_for_test04_test.scala	/^  val cache = Module(new Cache)            \/\/ Simple Nasti Cache$/;"	l
cache	src/test/scala/generator/cilk/cilk_for_test05_test.scala	/^  val cache = Module(new Cache)$/;"	l
cache	src/test/scala/generator/cilk/cilk_for_test06_test.scala	/^  val cache = Module(new Cache) \/\/ Simple Nasti Cache$/;"	l
cache	src/test/scala/generator/cilk/cilk_for_test07_test.scala	/^  val cache = Module(new Cache)            \/\/ Simple Nasti Cache$/;"	l
cache	src/test/scala/generator/cilk/cilk_for_test08_test.scala	/^  val cache = Module(new Cache)            \/\/ Simple Nasti Cache$/;"	l
cache	src/test/scala/generator/cilk/cilk_for_test09_test.scala	/^  val cache = Module(new Cache)            \/\/ Simple Nasti Cache$/;"	l
cache	src/test/scala/generator/cilk/cilk_for_test12_test.scala	/^  val cache = Module(new Cache)            \/\/ Simple Nasti Cache$/;"	l
cache	src/test/scala/generator/cilk/cilk_spawn_test01_test.scala	/^  val cache = Module(new Cache)$/;"	l
cache	src/test/scala/generator/cilk/cilk_spawn_test02_test.scala	/^  val cache = Module(new Cache)$/;"	l
cache	src/test/scala/generator/cilk/mergesort_test.scala	/^  val cache = Module(new Cache)            \/\/ Simple Nasti Cache$/;"	l
cache	src/test/scala/generator/cilk/stencil_test.scala	/^  val cache = Module(new Cache) \/\/ Simple Nasti Cache$/;"	l
cache	src/test/scala/generator/test01_test.scala	/^  val cache = Module(new Cache)$/;"	l
cache	src/test/scala/generator/test02_test.scala	/^  val cache = Module(new Cache)$/;"	l
cache	src/test/scala/generator/test03_test.scala	/^  val cache = Module(new Cache)$/;"	l
cache	src/test/scala/generator/test04_test.scala	/^  val cache = Module(new Cache)$/;"	l
cache	src/test/scala/generator/test05_test.scala	/^  val cache = Module(new Cache)            \/\/ Simple Nasti Cache$/;"	l
cache	src/test/scala/generator/test06_test.scala	/^  val cache = Module(new Cache)$/;"	l
cache	src/test/scala/generator/test08_test.scala	/^  val cache = Module(new Cache)$/;"	l
cache	src/test/scala/generator/test09_test.scala	/^  val cache = Module(new Cache)$/;"	l
cache	src/test/scala/generator/test10_test.scala	/^  val cache = Module(new Cache)$/;"	l
cache	src/test/scala/generator/test11_test.scala	/^  val cache = Module(new Cache)$/;"	l
cache	src/test/scala/generator/test12_test.scala	/^  val cache = Module(new Cache)$/;"	l
cache	src/test/scala/generator/test14_test.scala	/^  val cache = Module(new Cache)$/;"	l
cache	src/test/scala/generator/test15_test.scala	/^  val cache = Module(new Cache)            \/\/ Simple Nasti Cache$/;"	l
cacheReq_R	src/main/scala/memory/UnifiedTypController.scala	/^  val cacheReq_R = RegInit(MemReq.default)$/;"	l
cacheResp_R	src/main/scala/memory/UnifiedTypController.scala	/^  val cacheResp_R = RegInit(MemResp.default)$/;"	l
cachereq_arb	src/main/scala/memory/ReadMemoryController.scala	/^  val cachereq_arb = Module(new Arbiter(new MemReq, MLPSize))$/;"	l
cachereq_arb	src/main/scala/memory/ReadTypMemoryController.scala	/^  val cachereq_arb = Module(new LockingRRArbiter(new MemReq, MLPSize, count = Beats))$/;"	l
cachereq_arb	src/main/scala/memory/ReadWriteArbiter.scala	/^  val cachereq_arb = Module(new RRArbiter(new MemReq, MLPSize))$/;"	l
cachereq_arb	src/main/scala/memory/WriteMemoryController.scala	/^  val cachereq_arb = Module(new Arbiter(new MemReq, MLPSize))$/;"	l
cachereq_arb	src/main/scala/memory/WriteTypMemoryController.scala	/^  val cachereq_arb = Module(new RRArbiter(new MemReq, MLPSize))$/;"	l
cachereq_arb_clock	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire  cachereq_arb_clock;$/;"	n
cachereq_arb_io_chosen	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire  cachereq_arb_io_chosen;$/;"	n
cachereq_arb_io_in_0_bits_addr	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire [15:0] cachereq_arb_io_in_0_bits_addr;$/;"	n
cachereq_arb_io_in_0_bits_data	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire [15:0] cachereq_arb_io_in_0_bits_data;$/;"	n
cachereq_arb_io_in_0_bits_mask	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire [1:0] cachereq_arb_io_in_0_bits_mask;$/;"	n
cachereq_arb_io_in_0_bits_tag	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire [7:0] cachereq_arb_io_in_0_bits_tag;$/;"	n
cachereq_arb_io_in_0_ready	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire  cachereq_arb_io_in_0_ready;$/;"	n
cachereq_arb_io_in_0_valid	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire  cachereq_arb_io_in_0_valid;$/;"	n
cachereq_arb_io_in_1_bits_addr	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire [15:0] cachereq_arb_io_in_1_bits_addr;$/;"	n
cachereq_arb_io_in_1_bits_tag	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire [7:0] cachereq_arb_io_in_1_bits_tag;$/;"	n
cachereq_arb_io_in_1_ready	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire  cachereq_arb_io_in_1_ready;$/;"	n
cachereq_arb_io_in_1_valid	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire  cachereq_arb_io_in_1_valid;$/;"	n
cachereq_arb_io_out_bits_addr	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire [15:0] cachereq_arb_io_out_bits_addr;$/;"	n
cachereq_arb_io_out_bits_data	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire [15:0] cachereq_arb_io_out_bits_data;$/;"	n
cachereq_arb_io_out_bits_mask	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire [1:0] cachereq_arb_io_out_bits_mask;$/;"	n
cachereq_arb_io_out_bits_tag	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire [7:0] cachereq_arb_io_out_bits_tag;$/;"	n
cachereq_arb_io_out_ready	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire  cachereq_arb_io_out_ready;$/;"	n
cachereq_arb_io_out_valid	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire  cachereq_arb_io_out_valid;$/;"	n
cachereq_arb_reset	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire  cachereq_arb_reset;$/;"	n
cacheresp_demux	src/main/scala/memory/ReadMemoryController.scala	/^  val cacheresp_demux = Module(new Demux(new MemResp, MLPSize))$/;"	l
cacheresp_demux	src/main/scala/memory/ReadTypMemoryController.scala	/^  val cacheresp_demux = Module(new Demux(new MemResp, MLPSize))$/;"	l
cacheresp_demux	src/main/scala/memory/ReadWriteArbiter.scala	/^  val cacheresp_demux = Module(new Demux(new MemResp, MLPSize))$/;"	l
cacheresp_demux	src/main/scala/memory/WriteMemoryController.scala	/^  val cacheresp_demux = Module(new Demux(new MemResp, MLPSize))$/;"	l
cacheresp_demux	src/main/scala/memory/WriteTypMemoryController.scala	/^  val cacheresp_demux = Module(new Demux(new MemResp, MLPSize))$/;"	l
cacheresp_demux_io_en	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire  cacheresp_demux_io_en;$/;"	n
cacheresp_demux_io_input_data	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire [15:0] cacheresp_demux_io_input_data;$/;"	n
cacheresp_demux_io_input_valid	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire  cacheresp_demux_io_input_valid;$/;"	n
cacheresp_demux_io_outputs_0_data	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire [15:0] cacheresp_demux_io_outputs_0_data;$/;"	n
cacheresp_demux_io_outputs_0_valid	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire  cacheresp_demux_io_outputs_0_valid;$/;"	n
cacheresp_demux_io_outputs_1_data	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire [15:0] cacheresp_demux_io_outputs_1_data;$/;"	n
cacheresp_demux_io_outputs_1_valid	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire  cacheresp_demux_io_outputs_1_valid;$/;"	n
cacheresp_demux_io_sel	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire  cacheresp_demux_io_sel;$/;"	n
call10	src/main/scala/generator/cilk/bgemm.scala	/^  val call10 = Module(new CallNode(ID=10,argTypes=List(32,32,32,32),retTypes=List(32)))$/;"	l
call10	src/main/scala/generator/cilk/cilk_for_test06_detach.scala	/^  val call10 = Module(new CallNode(ID = 10, argTypes = List(32, 32, 32, 32, 32), retTypes = List(32)))$/;"	l
call10_in	src/main/scala/generator/cilk/bgemm.scala	/^    val call10_in = Flipped(Decoupled(new Call(List(32))))$/;"	l
call10_in	src/main/scala/generator/cilk/bgemm.scala	/^  val call10_in = Map($/;"	l
call10_in	src/main/scala/generator/cilk/cilk_for_test06_detach.scala	/^    val call10_in = Flipped(Decoupled(new Call(List(32))))$/;"	l
call10_in	src/main/scala/generator/cilk/cilk_for_test06_detach.scala	/^  val call10_in = Map($/;"	l
call10_in	src/main/scala/generator/cilk/fib.scala	/^    val call10_in = Flipped(Decoupled(new Call(List(32))))$/;"	l
call10_in	src/main/scala/generator/cilk/fib.scala	/^  val call10_in = Map($/;"	l
call10_in	src/main/scala/generator/cilk/fib.scala	/^  val call10_in = Module(new CallInNode(ID=499, argTypes=List(32)))$/;"	l
call10_out	src/main/scala/generator/cilk/bgemm.scala	/^    val call10_out = Decoupled(new Call(List(32,32,32,32)))$/;"	l
call10_out	src/main/scala/generator/cilk/cilk_for_test06_detach.scala	/^    val call10_out = Decoupled(new Call(List(32, 32, 32, 32, 32)))$/;"	l
call10_out	src/main/scala/generator/cilk/fib.scala	/^    val call10_out = Decoupled(new Call(List(32,32)))$/;"	l
call10_out	src/main/scala/generator/cilk/fib.scala	/^  val call10_out = Module(new CallOutNode(ID=10,NumSuccOps=0,argTypes=List(32,32)))$/;"	l
call13	src/main/scala/generator/cilk/bgemm_detach1.scala	/^  val call13 = Module(new CallNode(ID=13,argTypes=List(32,32,32,32,32),retTypes=List(32)))$/;"	l
call13	src/main/scala/generator/cilk/bgemm_detach2.scala	/^  val call13 = Module(new CallNode(ID=13,argTypes=List(32,32,32,32,32,32),retTypes=List(32)))$/;"	l
call13_in	src/main/scala/generator/cilk/bgemm_detach1.scala	/^    val call13_in = Flipped(Decoupled(new Call(List(32))))$/;"	l
call13_in	src/main/scala/generator/cilk/bgemm_detach1.scala	/^  val call13_in = Map($/;"	l
call13_in	src/main/scala/generator/cilk/bgemm_detach2.scala	/^    val call13_in = Flipped(Decoupled(new Call(List(32))))$/;"	l
call13_in	src/main/scala/generator/cilk/bgemm_detach2.scala	/^  val call13_in = Map($/;"	l
call13_out	src/main/scala/generator/cilk/bgemm_detach1.scala	/^    val call13_out = Decoupled(new Call(List(32,32,32,32,32)))$/;"	l
call13_out	src/main/scala/generator/cilk/bgemm_detach2.scala	/^    val call13_out = Decoupled(new Call(List(32,32,32,32,32,32)))$/;"	l
call14_in	src/main/scala/generator/cilk/fib.scala	/^    val call14_in = Flipped(Decoupled(new Call(List(32))))$/;"	l
call14_in	src/main/scala/generator/cilk/fib.scala	/^  val call14_in = Map($/;"	l
call14_in	src/main/scala/generator/cilk/fib.scala	/^  val call14_in = Module(new CallInNode(ID=499, argTypes=List(32)))$/;"	l
call14_out	src/main/scala/generator/cilk/fib.scala	/^    val call14_out = Decoupled(new Call(List(32,32)))$/;"	l
call14_out	src/main/scala/generator/cilk/fib.scala	/^  val call14_out = Module(new CallOutNode(ID=14,NumSuccOps=0,argTypes=List(32,32)))$/;"	l
call15_in	src/main/scala/generator/cilk/cilk_for_test12.scala	/^    val call15_in = Flipped(Decoupled(new Call(List(32))))$/;"	l
call15_in	src/main/scala/generator/cilk/cilk_for_test12.scala	/^  val call15_in = Map($/;"	l
call15_in	src/main/scala/generator/cilk/cilk_for_test12_detach2.scala	/^    val call15_in = Flipped(Decoupled(new Call(List(32))))$/;"	l
call15_in	src/main/scala/generator/cilk/cilk_for_test12_detach2.scala	/^  val call15_in = Map($/;"	l
call15_out	src/main/scala/generator/cilk/cilk_for_test12.scala	/^    val call15_out = Decoupled(new Call(List(32,32,32)))$/;"	l
call15_out	src/main/scala/generator/cilk/cilk_for_test12_detach2.scala	/^    val call15_out = Decoupled(new Call(List(32,32)))$/;"	l
call17_in	src/main/scala/generator/cilk/fib.scala	/^    val call17_in = Flipped(Decoupled(new Call(List(32))))$/;"	l
call17_in	src/main/scala/generator/cilk/fib.scala	/^  val call17_in = Map($/;"	l
call17_in	src/main/scala/generator/cilk/fib.scala	/^  val call17_in = Module(new CallInNode(ID=499, argTypes=List(32)))$/;"	l
call17_out	src/main/scala/generator/cilk/fib.scala	/^    val call17_out = Decoupled(new Call(List(32,32,32)))$/;"	l
call17_out	src/main/scala/generator/cilk/fib.scala	/^  val call17_out = Module(new CallOutNode(ID=17,NumSuccOps=0,argTypes=List(32,32,32)))$/;"	l
call18_in	src/main/scala/generator/cilk/cilk_for_test12_detach1.scala	/^    val call18_in = Flipped(Decoupled(new Call(List(32))))$/;"	l
call18_in	src/main/scala/generator/cilk/cilk_for_test12_detach1.scala	/^  val call18_in = Map($/;"	l
call18_in	src/main/scala/generator/cilk/mergesort.scala	/^    val call18_in = Flipped(Decoupled(new Call(List(32))))$/;"	l
call18_in	src/main/scala/generator/cilk/mergesort.scala	/^  val call18_in = Map($/;"	l
call18_in	src/main/scala/generator/cilk/mergesort.scala	/^  val call18_in = Module(new CallInNode(ID=499, argTypes=List(32)))$/;"	l
call18_out	src/main/scala/generator/cilk/cilk_for_test12_detach1.scala	/^    val call18_out = Decoupled(new Call(List(32,32)))$/;"	l
call18_out	src/main/scala/generator/cilk/mergesort.scala	/^    val call18_out = Decoupled(new Call(List(32,32,32,32)))$/;"	l
call18_out	src/main/scala/generator/cilk/mergesort.scala	/^  val call18_out = Module(new CallOutNode(ID=18,NumSuccOps=0,argTypes=List(32,32,32,32)))$/;"	l
call21_in	src/main/scala/generator/cilk/mergesort.scala	/^    val call21_in = Flipped(Decoupled(new Call(List(32))))$/;"	l
call21_in	src/main/scala/generator/cilk/mergesort.scala	/^  val call21_in = Map($/;"	l
call21_in	src/main/scala/generator/cilk/mergesort.scala	/^  val call21_in = Module(new CallInNode(ID=499, argTypes=List(32)))$/;"	l
call21_out	src/main/scala/generator/cilk/mergesort.scala	/^    val call21_out = Decoupled(new Call(List(32,32,32,32)))$/;"	l
call21_out	src/main/scala/generator/cilk/mergesort.scala	/^  val call21_out = Module(new CallOutNode(ID=21,NumSuccOps=0,argTypes=List(32,32,32,32)))$/;"	l
call24_in	src/main/scala/generator/cilk/mergesort.scala	/^    val call24_in = Flipped(Decoupled(new Call(List(32))))$/;"	l
call24_in	src/main/scala/generator/cilk/mergesort.scala	/^  val call24_in = Map($/;"	l
call24_in	src/main/scala/generator/cilk/mergesort.scala	/^  val call24_in = Module(new CallInNode(ID=499, argTypes=List(32)))$/;"	l
call24_out	src/main/scala/generator/cilk/mergesort.scala	/^    val call24_out = Decoupled(new Call(List(32)))$/;"	l
call24_out	src/main/scala/generator/cilk/mergesort.scala	/^  val call24_out = Module(new CallOutNode(ID=24,NumSuccOps=0,argTypes=List(32)))$/;"	l
call4_in	src/main/scala/generator/test05b.scala	/^    val call4_in = Flipped(Decoupled(new Call(List(32))))$/;"	l
call4_in	src/main/scala/generator/test05b.scala	/^  val call4_in = Map($/;"	l
call4_out	src/main/scala/generator/test05b.scala	/^    val call4_out = Decoupled(new Call(List(32,32)))$/;"	l
call5	src/main/scala/generator/cilk/cilk_for_test02.scala	/^  val call5 = Module(new CallNode(ID=5,argTypes=List(32,32,32),retTypes=List(32)))$/;"	l
call5	src/main/scala/generator/test12.scala	/^  val call5 = Module(new CallNode(ID=5,argTypes=List(32),retTypes=List(32)))$/;"	l
call5	src/main/scala/generator/test14.scala	/^  val call5 = Module(new CallNode(ID=5,argTypes=List(32),retTypes=List(32)))$/;"	l
call5_in	src/main/scala/generator/cilk/cilk_for_test02.scala	/^    val call5_in = Flipped(Decoupled(new Call(List(32))))$/;"	l
call5_in	src/main/scala/generator/cilk/cilk_for_test02.scala	/^  val call5_in = Map($/;"	l
call5_in	src/main/scala/generator/test05c.scala	/^    val call5_in = Flipped(Decoupled(new Call(List(32))))$/;"	l
call5_in	src/main/scala/generator/test05c.scala	/^  val call5_in = Map($/;"	l
call5_in	src/main/scala/generator/test12.scala	/^    val call5_in = Flipped(Decoupled(new Call(List(32))))$/;"	l
call5_in	src/main/scala/generator/test12.scala	/^  val call5_in = Map($/;"	l
call5_in	src/main/scala/generator/test14.scala	/^    val call5_in = Flipped(Decoupled(new Call(List(32))))$/;"	l
call5_in	src/main/scala/generator/test14.scala	/^  val call5_in = Map($/;"	l
call5_out	src/main/scala/generator/cilk/cilk_for_test02.scala	/^    val call5_out = Decoupled(new Call(List(32,32,32)))$/;"	l
call5_out	src/main/scala/generator/test05c.scala	/^    val call5_out = Decoupled(new Call(List(32,32)))$/;"	l
call5_out	src/main/scala/generator/test12.scala	/^    val call5_out = Decoupled(new Call(List(32)))$/;"	l
call5_out	src/main/scala/generator/test14.scala	/^    val call5_out = Decoupled(new Call(List(32)))$/;"	l
call6	src/main/scala/generator/cilk/stencil_detach1.scala	/^  val call6 = Module(new CallNode(ID = 6, argTypes = List(32, 32, 32, 32, 32), retTypes = List(32)))$/;"	l
call6_in	src/main/scala/generator/cilk/stencil_detach1.scala	/^    val call6_in = Flipped(Decoupled(new Call(List(32))))$/;"	l
call6_in	src/main/scala/generator/cilk/stencil_detach1.scala	/^  val call6_in = Map($/;"	l
call6_out	src/main/scala/generator/cilk/stencil_detach1.scala	/^    val call6_out = Decoupled(new Call(List(32, 32, 32, 32, 32)))$/;"	l
call7	src/main/scala/generator/cilk/cilk_for_test09.scala	/^  val call7 = Module(new CallNode(ID = 7, argTypes = List(32), retTypes = List(32)))$/;"	l
call7_in	src/main/scala/generator/cilk/cilk_for_test09.scala	/^    val call7_in = Flipped(Decoupled(new Call(List(32))))$/;"	l
call7_in	src/main/scala/generator/cilk/cilk_for_test09.scala	/^  val call7_in = Map($/;"	l
call7_out	src/main/scala/generator/cilk/cilk_for_test09.scala	/^    val call7_out = Decoupled(new Call(List(32)))$/;"	l
call8	src/main/scala/generator/cilk/cilk_for_test07.scala	/^  val call8 = Module(new CallNode(ID=8,argTypes=List(32,32,32,32),retTypes=List(32)))$/;"	l
call8	src/main/scala/generator/cilk/cilk_for_test08.scala	/^  val call8 = Module(new CallNode(ID=8,argTypes=List(32,32,32),retTypes=List(32)))$/;"	l
call8	src/main/scala/generator/test11.scala	/^  val call8 = Module(new CallNode(ID=8,argTypes=List(32,32),retTypes=List(32)))$/;"	l
call8_in	src/main/scala/generator/cilk/cilk_for_test07.scala	/^    val call8_in = Flipped(Decoupled(new Call(List(32))))$/;"	l
call8_in	src/main/scala/generator/cilk/cilk_for_test07.scala	/^  val call8_in = Map($/;"	l
call8_in	src/main/scala/generator/cilk/cilk_for_test08.scala	/^    val call8_in = Flipped(Decoupled(new Call(List(32))))$/;"	l
call8_in	src/main/scala/generator/cilk/cilk_for_test08.scala	/^  val call8_in = Map($/;"	l
call8_in	src/main/scala/generator/test11.scala	/^    val call8_in = Flipped(Decoupled(new Call(List(32))))$/;"	l
call8_in	src/main/scala/generator/test11.scala	/^  val call8_in = Map($/;"	l
call8_out	src/main/scala/generator/cilk/cilk_for_test07.scala	/^    val call8_out = Decoupled(new Call(List(32,32,32,32)))$/;"	l
call8_out	src/main/scala/generator/cilk/cilk_for_test08.scala	/^    val call8_out = Decoupled(new Call(List(32,32,32)))$/;"	l
call8_out	src/main/scala/generator/test11.scala	/^    val call8_out = Decoupled(new Call(List(32,32)))$/;"	l
call9	src/main/scala/generator/cilk/cilk_for_test04.scala	/^  val call9 = Module(new CallNode(ID=9,argTypes=List(32,32,32,32),retTypes=List(32)))$/;"	l
call9	src/main/scala/generator/cilk/cilk_for_test05.scala	/^  val call9 = Module(new CallNode(ID=9,argTypes=List(32,32,32,32),retTypes=List(32)))$/;"	l
call9	src/main/scala/generator/cilk/cilk_for_test06.scala	/^  val call9 = Module(new CallNode(ID = 9, argTypes = List(32, 32, 32, 32), retTypes = List(32)))$/;"	l
call9	src/main/scala/generator/cilk/stencil.scala	/^  val call9 = Module(new CallNode(ID = 9, argTypes = List(32, 32, 32), retTypes = List(32)))$/;"	l
call9_in	src/main/scala/generator/cilk/cilk_for_test04.scala	/^    val call9_in = Flipped(Decoupled(new Call(List(32))))$/;"	l
call9_in	src/main/scala/generator/cilk/cilk_for_test04.scala	/^  val call9_in = Map($/;"	l
call9_in	src/main/scala/generator/cilk/cilk_for_test05.scala	/^    val call9_in = Flipped(Decoupled(new Call(List(32))))$/;"	l
call9_in	src/main/scala/generator/cilk/cilk_for_test05.scala	/^  val call9_in = Map($/;"	l
call9_in	src/main/scala/generator/cilk/cilk_for_test06.scala	/^    val call9_in = Flipped(Decoupled(new Call(List(32))))$/;"	l
call9_in	src/main/scala/generator/cilk/cilk_for_test06.scala	/^  val call9_in = Map($/;"	l
call9_in	src/main/scala/generator/cilk/stencil.scala	/^    val call9_in = Flipped(Decoupled(new Call(List(32))))$/;"	l
call9_in	src/main/scala/generator/cilk/stencil.scala	/^  val call9_in = Map($/;"	l
call9_out	src/main/scala/generator/cilk/cilk_for_test04.scala	/^    val call9_out = Decoupled(new Call(List(32,32,32,32)))$/;"	l
call9_out	src/main/scala/generator/cilk/cilk_for_test05.scala	/^    val call9_out = Decoupled(new Call(List(32,32,32,32)))$/;"	l
call9_out	src/main/scala/generator/cilk/cilk_for_test06.scala	/^    val call9_out = Decoupled(new Call(List(32, 32, 32, 32)))$/;"	l
call9_out	src/main/scala/generator/cilk/stencil.scala	/^    val call9_out = Decoupled(new Call(List(32, 32, 32)))$/;"	l
callOut	src/main/scala/node/CallNode.scala	/^  val callOut = Decoupled(new Call(argTypes))          \/\/ To task$/;"	l
callin15	src/main/scala/generator/cilk/cilk_for_test12.scala	/^  val callin15 = Module(new CallInNode(ID=499,argTypes=List(32)))$/;"	l
callin15	src/main/scala/generator/cilk/cilk_for_test12_detach2.scala	/^  val callin15 = Module(new CallInNode(ID=499,argTypes=List(32)))$/;"	l
callin18	src/main/scala/generator/cilk/cilk_for_test12_detach1.scala	/^  val callin18 = Module(new CallInNode(ID=499,argTypes=List(32)))$/;"	l
callin4	src/main/scala/generator/test05b.scala	/^  val callin4 = Module(new CallInNode(ID=499,argTypes=List(32)))$/;"	l
callin5	src/main/scala/generator/test05c.scala	/^  val callin5 = Module(new CallInNode(ID=499,argTypes=List(32)))$/;"	l
callout15	src/main/scala/generator/cilk/cilk_for_test12.scala	/^  val callout15 = Module(new CallOutNode(ID=4,NumSuccOps=1,argTypes=List(32,32,32))) \/\/ Manually changed$/;"	l
callout15	src/main/scala/generator/cilk/cilk_for_test12_detach2.scala	/^  val callout15 = Module(new CallOutNode(ID=4,NumSuccOps=1,argTypes=List(32,32))) \/\/ Manually changed$/;"	l
callout18	src/main/scala/generator/cilk/cilk_for_test12_detach1.scala	/^  val callout18 = Module(new CallOutNode(ID=4,NumSuccOps=1,argTypes=List(32,32))) \/\/ Manually changed$/;"	l
callout4	src/main/scala/generator/test05b.scala	/^  val callout4 = Module(new CallOutNode(ID=4,argTypes=List(32,32))) \/\/ Manually changed$/;"	l
callout5	src/main/scala/generator/test05c.scala	/^  val callout5 = Module(new CallOutNode(ID=4,argTypes=List(32,32))) \/\/ Manually changed$/;"	l
canBound	src/main/scala/config/cde/Expression.scala	/^    val canBound = x.map(_.expr match {$/;"	l
canDoRead	src/main/scala/accel/DataBundleReg.scala	/^  val canDoRead = !readAddrReadyReg && io.nasti.ar.valid$/;"	l
canDoRead	src/main/scala/accel/SimpleReg.scala	/^  val canDoRead = !readAddrReadyReg && io.nasti.ar.valid$/;"	l
canDoWrite	src/main/scala/accel/DataBundleReg.scala	/^  val canDoWrite = io.nasti.aw.valid && io.nasti.w.valid && !writeAddrReadyReg$/;"	l
canDoWrite	src/main/scala/accel/SimpleReg.scala	/^  val canDoWrite = io.nasti.aw.valid && io.nasti.w.valid && !writeAddrReadyReg$/;"	l
chain	src/main/scala/config/configurations.scala	/^  def chain(site: View, tail: View, pname: Any) = tail.find(pname, site)$/;"	m
chain	src/main/scala/config/configurations.scala	/^  def chain(site: View, tail: View, pname: Any) = x.chain(site, new ChainView(y, tail), pname)$/;"	m
childIn	src/main/scala/concurrent/TaskController.scala	/^  val childIn   = Vec(numChild, Flipped(Decoupled(new Call(retTypes))))   \/\/ Returns from sub-block$/;"	l
childOut	src/main/scala/concurrent/TaskController.scala	/^  val childOut  = Vec(numChild, Decoupled(new Call(argTypes)))            \/\/ Requests to sub-block$/;"	l
children	src/main/scala/generator/cilk/cilk_for_test04.scala	/^    val children = 1$/;"	l
children	src/main/scala/generator/cilk/cilk_for_test04.scala	/^  val children = 4$/;"	l
children	src/main/scala/generator/cilk/cilk_for_test05.scala	/^  val children = 1$/;"	l
children	src/main/scala/generator/cilk/cilk_for_test05.scala	/^  val children = 3$/;"	l
children	src/main/scala/generator/cilk/cilk_for_test06.scala	/^  val children = 1$/;"	l
children	src/main/scala/generator/cilk/cilk_for_test06.scala	/^  val children = 3$/;"	l
children	src/main/scala/generator/cilk/cilk_for_test08.scala	/^  val children = 1$/;"	l
children	src/main/scala/generator/cilk/cilk_for_test08.scala	/^  val children = 3$/;"	l
children	src/test/scala/generator/cilk/bgemm_test.scala	/^  val children = 3$/;"	l
children	src/test/scala/generator/cilk/cilk_for_test04_test.scala	/^  val children = 2$/;"	l
children	src/test/scala/generator/cilk/cilk_for_test05_test.scala	/^  val children = 2$/;"	l
children	src/test/scala/generator/cilk/cilk_for_test06_test.scala	/^  val children = 1$/;"	l
children	src/test/scala/generator/cilk/cilk_for_test07_test.scala	/^  val children = 2$/;"	l
children	src/test/scala/generator/cilk/cilk_for_test08_test.scala	/^  val children = 3$/;"	l
children	src/test/scala/generator/cilk/cilk_for_test09_test.scala	/^  val children = 1$/;"	l
children	src/test/scala/generator/cilk/stencil_test.scala	/^  val children = 4$/;"	l
children1	src/test/scala/generator/cilk/cilk_for_test12_test.scala	/^  val children1 = 1$/;"	l
children2	src/test/scala/generator/cilk/cilk_for_test12_test.scala	/^  val children2 = 1$/;"	l
children3	src/test/scala/generator/cilk/cilk_for_test12_test.scala	/^  val children3 = 8$/;"	l
chirrtl	src/main/scala/accel/Main.scala	/^  val chirrtl = firrtl.Parser.parse(chisel3.Driver.emit(() => new Accelerator(12,4,new VecFilterNoKernDFCore(12,4))))$/;"	l
chirrtl	src/main/scala/accel/Main.scala	/^  val chirrtl = firrtl.Parser.parse(chisel3.Driver.emit(() => new Accelerator(18,3,new FilterDFCore(18,3))))$/;"	l
chirrtl	src/main/scala/accel/Main.scala	/^  val chirrtl = firrtl.Parser.parse(chisel3.Driver.emit(() => new Accelerator(3,3,new Core(3,3))))$/;"	l
chirrtl	src/main/scala/accel/Main.scala	/^  val chirrtl = firrtl.Parser.parse(chisel3.Driver.emit(() => new Accelerator(3,3,new TestCacheDF(3,3))))$/;"	l
chirrtl	src/main/scala/accel/Main.scala	/^  val chirrtl = firrtl.Parser.parse(chisel3.Driver.emit(() => new Accelerator(6,4,new VecFilterDFCore(6,4))))$/;"	l
chirrtl	src/main/scala/generator/cilk/bgemm.scala	/^  val chirrtl = firrtl.Parser.parse(chisel3.Driver.emit(() => new bgemmDF()))$/;"	l
chirrtl	src/main/scala/generator/cilk/bgemm_detach1.scala	/^  val chirrtl = firrtl.Parser.parse(chisel3.Driver.emit(() => new bgemm_detach1DF()))$/;"	l
chirrtl	src/main/scala/generator/cilk/bgemm_detach2.scala	/^  val chirrtl = firrtl.Parser.parse(chisel3.Driver.emit(() => new bgemm_detach2DF()))$/;"	l
chirrtl	src/main/scala/generator/cilk/bgemm_detach3.scala	/^  val chirrtl = firrtl.Parser.parse(chisel3.Driver.emit(() => new bgemm_detach3DF()))$/;"	l
chirrtl	src/main/scala/generator/cilk/cilk_for_test01.scala	/^  val chirrtl = firrtl.Parser.parse(chisel3.Driver.emit(() => new cilk_for_test01DF()))$/;"	l
chirrtl	src/main/scala/generator/cilk/cilk_for_test02.scala	/^  val chirrtl = firrtl.Parser.parse(chisel3.Driver.emit(() => new cilk_for_test02DF()))$/;"	l
chirrtl	src/main/scala/generator/cilk/cilk_for_test02_mul.scala	/^  val chirrtl = firrtl.Parser.parse(chisel3.Driver.emit(() => new cilk_for_test02_mulDF()))$/;"	l
chirrtl	src/main/scala/generator/cilk/cilk_for_test04_detach.scala	/^  val chirrtl = firrtl.Parser.parse(chisel3.Driver.emit(() => new cilk_for_test04_detachDF()))$/;"	l
chirrtl	src/main/scala/generator/cilk/cilk_for_test05_detach.scala	/^  val chirrtl = firrtl.Parser.parse(chisel3.Driver.emit(() => new cilk_for_test05_detachDF()))$/;"	l
chirrtl	src/main/scala/generator/cilk/cilk_for_test06_detach.scala	/^  val chirrtl = firrtl.Parser.parse(chisel3.Driver.emit(() => new cilk_for_test06_detachDF()))$/;"	l
chirrtl	src/main/scala/generator/cilk/cilk_for_test06_detach_2.scala	/^  val chirrtl = firrtl.Parser.parse(chisel3.Driver.emit(() => new cilk_for_test06_detach_2DF()))$/;"	l
chirrtl	src/main/scala/generator/cilk/cilk_for_test07.scala	/^  val chirrtl = firrtl.Parser.parse(chisel3.Driver.emit(() => new cilk_for_test07DF()))$/;"	l
chirrtl	src/main/scala/generator/cilk/cilk_for_test07_detach.scala	/^  val chirrtl = firrtl.Parser.parse(chisel3.Driver.emit(() => new cilk_for_test07_detachDF()))$/;"	l
chirrtl	src/main/scala/generator/cilk/cilk_for_test08_detach.scala	/^  val chirrtl = firrtl.Parser.parse(chisel3.Driver.emit(() => new cilk_for_test08_detachDF()))$/;"	l
chirrtl	src/main/scala/generator/cilk/cilk_for_test09.scala	/^  val chirrtl = firrtl.Parser.parse(chisel3.Driver.emit(() => new cilk_for_test09DF()))$/;"	l
chirrtl	src/main/scala/generator/cilk/cilk_for_test09_inner.scala	/^  val chirrtl = firrtl.Parser.parse(chisel3.Driver.emit(() => new cilk_for_test09_innerDF()))$/;"	l
chirrtl	src/main/scala/generator/cilk/cilk_for_test12.scala	/^  val chirrtl = firrtl.Parser.parse(chisel3.Driver.emit(() => new cilk_for_test12DF()))$/;"	l
chirrtl	src/main/scala/generator/cilk/cilk_for_test12_detach1.scala	/^  val chirrtl = firrtl.Parser.parse(chisel3.Driver.emit(() => new cilk_for_test12_detach1DF()))$/;"	l
chirrtl	src/main/scala/generator/cilk/cilk_for_test12_detach2.scala	/^  val chirrtl = firrtl.Parser.parse(chisel3.Driver.emit(() => new cilk_for_test12_detach2DF()))$/;"	l
chirrtl	src/main/scala/generator/cilk/cilk_for_test12_detach3.scala	/^  val chirrtl = firrtl.Parser.parse(chisel3.Driver.emit(() => new cilk_for_test12_detach3DF()))$/;"	l
chirrtl	src/main/scala/generator/cilk/cilk_spawn_test01.scala	/^  val chirrtl = firrtl.Parser.parse(chisel3.Driver.emit(() => new cilk_spawn_test01DF()))$/;"	l
chirrtl	src/main/scala/generator/cilk/cilk_spawn_test02.scala	/^  val chirrtl = firrtl.Parser.parse(chisel3.Driver.emit(() => new cilk_spawn_test02DF()))$/;"	l
chirrtl	src/main/scala/generator/cilk/fib.scala	/^  val chirrtl = firrtl.Parser.parse(chisel3.Driver.emit(() => new fibDF()))$/;"	l
chirrtl	src/main/scala/generator/cilk/fib_continue.scala	/^  val chirrtl = firrtl.Parser.parse(chisel3.Driver.emit(() => new fib_continueDF()))$/;"	l
chirrtl	src/main/scala/generator/cilk/mergesort.scala	/^  val chirrtl = firrtl.Parser.parse(chisel3.Driver.emit(() => new mergesortDF()))$/;"	l
chirrtl	src/main/scala/generator/cilk/mergesort_merge.scala	/^  val chirrtl = firrtl.Parser.parse(chisel3.Driver.emit(() => new mergesort_mergeDF()))$/;"	l
chirrtl	src/main/scala/generator/cilk/stencil.scala	/^  val chirrtl = firrtl.Parser.parse(chisel3.Driver.emit(() => new stencilDF()))$/;"	l
chirrtl	src/main/scala/generator/cilk/stencil_detach1.scala	/^  val chirrtl = firrtl.Parser.parse(chisel3.Driver.emit(() => new stencil_detach1DF()))$/;"	l
chirrtl	src/main/scala/generator/cilk/stencil_inner.scala	/^  val chirrtl = firrtl.Parser.parse(chisel3.Driver.emit(() => new stencil_innerDF()))$/;"	l
chirrtl	src/main/scala/generator/test01.scala	/^  val chirrtl = firrtl.Parser.parse(chisel3.Driver.emit(() => new test01DF()))$/;"	l
chirrtl	src/main/scala/generator/test02.scala	/^  val chirrtl = firrtl.Parser.parse(chisel3.Driver.emit(() => new test02DF()))$/;"	l
chirrtl	src/main/scala/generator/test03.scala	/^  val chirrtl = firrtl.Parser.parse(chisel3.Driver.emit(() => new test03DF()))$/;"	l
chirrtl	src/main/scala/generator/test04.scala	/^  val chirrtl = firrtl.Parser.parse(chisel3.Driver.emit(() => new test04DF()))$/;"	l
chirrtl	src/main/scala/generator/test05.scala	/^  val chirrtl = firrtl.Parser.parse(chisel3.Driver.emit(() => new test05DF()))$/;"	l
chirrtl	src/main/scala/generator/test05b.scala	/^  val chirrtl = firrtl.Parser.parse(chisel3.Driver.emit(() => new test05bDF()))$/;"	l
chirrtl	src/main/scala/generator/test05c.scala	/^  val chirrtl = firrtl.Parser.parse(chisel3.Driver.emit(() => new test05cDF()))$/;"	l
chirrtl	src/main/scala/generator/test06.scala	/^  val chirrtl = firrtl.Parser.parse(chisel3.Driver.emit(() => new test06DF()))$/;"	l
chirrtl	src/main/scala/generator/test08.scala	/^  val chirrtl = firrtl.Parser.parse(chisel3.Driver.emit(() => new test08DF()))$/;"	l
chirrtl	src/main/scala/generator/test09.scala	/^  val chirrtl = firrtl.Parser.parse(chisel3.Driver.emit(() => new test09DF()))$/;"	l
chirrtl	src/main/scala/generator/test10.scala	/^  val chirrtl = firrtl.Parser.parse(chisel3.Driver.emit(() => new test10DF()))$/;"	l
chirrtl	src/main/scala/generator/test11.scala	/^  val chirrtl = firrtl.Parser.parse(chisel3.Driver.emit(() => new test11DF()))$/;"	l
chirrtl	src/main/scala/generator/test11_add.scala	/^  val chirrtl = firrtl.Parser.parse(chisel3.Driver.emit(() => new test11_addDF()))$/;"	l
chirrtl	src/main/scala/generator/test12.scala	/^  val chirrtl = firrtl.Parser.parse(chisel3.Driver.emit(() => new test12DF()))$/;"	l
chirrtl	src/main/scala/generator/test12_inner.scala	/^  val chirrtl = firrtl.Parser.parse(chisel3.Driver.emit(() => new test12_innerDF()))$/;"	l
chirrtl	src/main/scala/generator/test14.scala	/^  val chirrtl = firrtl.Parser.parse(chisel3.Driver.emit(() => new test14DF()))$/;"	l
chirrtl	src/main/scala/generator/test14_inner.scala	/^  val chirrtl = firrtl.Parser.parse(chisel3.Driver.emit(() => new test14_innerDF()))$/;"	l
chirrtl	src/main/scala/generator/test15.scala	/^  val chirrtl = firrtl.Parser.parse(chisel3.Driver.emit(() => new test15DF()))$/;"	l
chirrtl	src/main/scala/verilogmain/TypeMemDataflow.scala	/^  val chirrtl = firrtl.Parser.parse(chisel3.Driver.emit(() => new TypeMemDataFlow()))$/;"	l
chirrtlA	src/main/scala/generator/cilk/cilk_for_test04.scala	/^  val chirrtlA = firrtl.Parser.parse(chisel3.Driver.emit(() => new cilk_for_test04TopA()))$/;"	l
chirrtlA	src/main/scala/generator/cilk/cilk_for_test05.scala	/^  val chirrtlA = firrtl.Parser.parse(chisel3.Driver.emit(() => new cilk_for_test05TopA()))$/;"	l
chirrtlA	src/main/scala/generator/cilk/cilk_for_test06.scala	/^  val chirrtlA = firrtl.Parser.parse(chisel3.Driver.emit(() => new cilk_for_test06TopA()))$/;"	l
chirrtlA	src/main/scala/generator/cilk/cilk_for_test08.scala	/^  val chirrtlA = firrtl.Parser.parse(chisel3.Driver.emit(() => new cilk_for_test08TopA()))$/;"	l
chirrtlB	src/main/scala/generator/cilk/cilk_for_test04.scala	/^  val chirrtlB = firrtl.Parser.parse(chisel3.Driver.emit(() => new cilk_for_test04TopB()))$/;"	l
chirrtlB	src/main/scala/generator/cilk/cilk_for_test05.scala	/^  val chirrtlB = firrtl.Parser.parse(chisel3.Driver.emit(() => new cilk_for_test05TopB()))$/;"	l
chirrtlB	src/main/scala/generator/cilk/cilk_for_test06.scala	/^  val chirrtlB = firrtl.Parser.parse(chisel3.Driver.emit(() => new cilk_for_test06TopB()))$/;"	l
chirrtlB	src/main/scala/generator/cilk/cilk_for_test08.scala	/^  val chirrtlB = firrtl.Parser.parse(chisel3.Driver.emit(() => new cilk_for_test08TopB()))$/;"	l
chirrtlC	src/main/scala/generator/cilk/cilk_for_test04.scala	/^  val chirrtlC = firrtl.Parser.parse(chisel3.Driver.emit(() => new cilk_for_test04TopC()))$/;"	l
chirrtlC	src/main/scala/generator/cilk/cilk_for_test05.scala	/^  val chirrtlC = firrtl.Parser.parse(chisel3.Driver.emit(() => new cilk_for_test05TopC()))$/;"	l
chirrtlC	src/main/scala/generator/cilk/cilk_for_test06.scala	/^  val chirrtlC = firrtl.Parser.parse(chisel3.Driver.emit(() => new cilk_for_test06TopC()))$/;"	l
chirrtlC	src/main/scala/generator/cilk/cilk_for_test08.scala	/^  val chirrtlC = firrtl.Parser.parse(chisel3.Driver.emit(() => new cilk_for_test08TopC()))$/;"	l
choice	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire  choice;$/;"	n
chosen	src/main/scala/memory/MemArbiter.scala	/^      val chosen   = Output(UInt(log2Ceil(NumPorts).W))$/;"	l
chosen_R	src/main/scala/control/BasicBlock.scala	/^  val chosen_R = RegInit(0.U.asTypeOf(predArb.io.chosen))$/;"	l
chosen_reg	src/main/scala/memory/MemArbiter.scala	/^  val chosen_reg = RegInit(0.U)$/;"	l
cilk_for_test01CacheWrapper	src/test/scala/generator/cilk/cilk_for_test01_test.scala	/^class cilk_for_test01CacheWrapper()(implicit p: Parameters) extends cilk_for_test01DF()(p)$/;"	c
cilk_for_test01DF	src/main/scala/generator/cilk/cilk_for_test01.scala	/^class cilk_for_test01DF(implicit p: Parameters) extends cilk_for_test01DFIO()(p) {$/;"	c
cilk_for_test01DFIO	src/main/scala/generator/cilk/cilk_for_test01.scala	/^abstract class cilk_for_test01DFIO(implicit val p: Parameters) extends Module with CoreParams {$/;"	c
cilk_for_test01Main	src/main/scala/generator/cilk/cilk_for_test01.scala	/^object cilk_for_test01Main extends App {$/;"	c
cilk_for_test01Test01	src/test/scala/generator/cilk/cilk_for_test01_test.scala	/^class cilk_for_test01Test01(c: cilk_for_test01CacheWrapper) extends PeekPokeTester(c) {$/;"	c
cilk_for_test01Tester	src/test/scala/generator/cilk/cilk_for_test01_test.scala	/^class cilk_for_test01Tester extends FlatSpec with Matchers {$/;"	c
cilk_for_test02	src/test/scala/generator/cilk/cilk_for_test02_test.scala	/^  val cilk_for_test02 = Module(new cilk_for_test02CacheWrapper())$/;"	l
cilk_for_test02CacheWrapper	src/test/scala/generator/cilk/cilk_for_test02_test.scala	/^class cilk_for_test02CacheWrapper()(implicit p: Parameters) extends cilk_for_test02DF()(p)$/;"	c
cilk_for_test02DF	src/main/scala/generator/cilk/cilk_for_test02.scala	/^class cilk_for_test02DF(implicit p: Parameters) extends cilk_for_test02DFIO()(p) {$/;"	c
cilk_for_test02DFIO	src/main/scala/generator/cilk/cilk_for_test02.scala	/^abstract class cilk_for_test02DFIO(implicit val p: Parameters) extends Module with CoreParams {$/;"	c
cilk_for_test02Main	src/main/scala/generator/cilk/cilk_for_test02.scala	/^object cilk_for_test02Main extends App {$/;"	c
cilk_for_test02MainDirect	src/test/scala/generator/cilk/cilk_for_test02_test.scala	/^class cilk_for_test02MainDirect(implicit p: Parameters) extends cilk_for_test02MainIO()(p) {$/;"	c
cilk_for_test02MainIO	src/test/scala/generator/cilk/cilk_for_test02_test.scala	/^abstract class cilk_for_test02MainIO(implicit val p: Parameters) extends Module with CoreParams {$/;"	c
cilk_for_test02MainTM	src/test/scala/generator/cilk/cilk_for_test02_test.scala	/^class cilk_for_test02MainTM(implicit p: Parameters) extends cilk_for_test02MainIO()(p) {$/;"	c
cilk_for_test02Test01	src/test/scala/generator/cilk/cilk_for_test02_test.scala	/^class cilk_for_test02Test01[T <: cilk_for_test02MainIO](c: T) extends PeekPokeTester(c) {$/;"	c
cilk_for_test02Tester1	src/test/scala/generator/cilk/cilk_for_test02_test.scala	/^class cilk_for_test02Tester1 extends FlatSpec with Matchers {$/;"	c
cilk_for_test02Tester2	src/test/scala/generator/cilk/cilk_for_test02_test.scala	/^class cilk_for_test02Tester2 extends FlatSpec with Matchers {$/;"	c
cilk_for_test02_mul	src/test/scala/generator/cilk/cilk_for_test02_test.scala	/^  val cilk_for_test02_mul = Module(new cilk_for_test02_mulDF())$/;"	l
cilk_for_test02_mulDF	src/main/scala/generator/cilk/cilk_for_test02_mul.scala	/^class cilk_for_test02_mulDF(implicit p: Parameters) extends cilk_for_test02_mulDFIO() {$/;"	c
cilk_for_test02_mulDFIO	src/main/scala/generator/cilk/cilk_for_test02_mul.scala	/^abstract class cilk_for_test02_mulDFIO(implicit val p: Parameters) extends Module with CoreParams {$/;"	c
cilk_for_test02_mulMain	src/main/scala/generator/cilk/cilk_for_test02_mul.scala	/^object cilk_for_test02_mulMain extends App {$/;"	c
cilk_for_test04	src/main/scala/generator/cilk/cilk_for_test04.scala	/^    val cilk_for_test04 = Module(new cilk_for_test04DF())$/;"	l
cilk_for_test04	src/main/scala/generator/cilk/cilk_for_test04.scala	/^  val cilk_for_test04 = Module(new cilk_for_test04DF())$/;"	l
cilk_for_test04	src/test/scala/generator/cilk/cilk_for_test04_test.scala	/^  val cilk_for_test04 = Module(new cilk_for_test04DF())$/;"	l
cilk_for_test04DF	src/main/scala/generator/cilk/cilk_for_test04.scala	/^class cilk_for_test04DF(implicit p: Parameters) extends cilk_for_test04DFIO()(p) {$/;"	c
cilk_for_test04DFIO	src/main/scala/generator/cilk/cilk_for_test04.scala	/^abstract class cilk_for_test04DFIO(implicit val p: Parameters) extends Module with CoreParams {$/;"	c
cilk_for_test04Main	src/main/scala/generator/cilk/cilk_for_test04.scala	/^object cilk_for_test04Main extends App {$/;"	c
cilk_for_test04MainDirect	src/test/scala/generator/cilk/cilk_for_test04_test.scala	/^class cilk_for_test04MainDirect(implicit p: Parameters) extends cilk_for_test04MainIO {$/;"	c
cilk_for_test04MainIO	src/test/scala/generator/cilk/cilk_for_test04_test.scala	/^class cilk_for_test04MainIO(implicit val p: Parameters)  extends Module with CoreParams with CacheParams {$/;"	c
cilk_for_test04MainTM	src/test/scala/generator/cilk/cilk_for_test04_test.scala	/^class cilk_for_test04MainTM(implicit p: Parameters) extends cilk_for_test04MainIO  {$/;"	c
cilk_for_test04Test01	src/test/scala/generator/cilk/cilk_for_test04_test.scala	/^class cilk_for_test04Test01[T <: cilk_for_test04MainIO](c: T) extends PeekPokeTester(c) {$/;"	c
cilk_for_test04Tester1	src/test/scala/generator/cilk/cilk_for_test04_test.scala	/^class cilk_for_test04Tester1 extends FlatSpec with Matchers {$/;"	c
cilk_for_test04Tester2	src/test/scala/generator/cilk/cilk_for_test04_test.scala	/^class cilk_for_test04Tester2 extends FlatSpec with Matchers {$/;"	c
cilk_for_test04TopA	src/main/scala/generator/cilk/cilk_for_test04.scala	/^class cilk_for_test04TopA(implicit p: Parameters) extends cilk_for_test04TopIO()(p) {$/;"	c
cilk_for_test04TopB	src/main/scala/generator/cilk/cilk_for_test04.scala	/^class cilk_for_test04TopB(implicit p: Parameters) extends cilk_for_test04TopIO()(p) {$/;"	c
cilk_for_test04TopC	src/main/scala/generator/cilk/cilk_for_test04.scala	/^class cilk_for_test04TopC(implicit p: Parameters) extends cilk_for_test04TopIO()(p) {$/;"	c
cilk_for_test04TopIO	src/main/scala/generator/cilk/cilk_for_test04.scala	/^abstract class cilk_for_test04TopIO(implicit val p: Parameters) extends Module with CoreParams {$/;"	c
cilk_for_test04_detach	src/main/scala/generator/cilk/cilk_for_test04.scala	/^    val cilk_for_test04_detach = for (i <- 0 until children) yield {$/;"	l
cilk_for_test04_detach	src/main/scala/generator/cilk/cilk_for_test04.scala	/^  val cilk_for_test04_detach = Module(new cilk_for_test04_detachDF())$/;"	l
cilk_for_test04_detach	src/main/scala/generator/cilk/cilk_for_test04.scala	/^  val cilk_for_test04_detach = for (i <- 0 until children) yield {$/;"	l
cilk_for_test04_detach	src/test/scala/generator/cilk/cilk_for_test04_test.scala	/^  val cilk_for_test04_detach = Module(new cilk_for_test04_detachDF())$/;"	l
cilk_for_test04_detach	src/test/scala/generator/cilk/cilk_for_test04_test.scala	/^  val cilk_for_test04_detach = for (i <- 0 until children) yield {$/;"	l
cilk_for_test04_detachDF	src/main/scala/generator/cilk/cilk_for_test04_detach.scala	/^class cilk_for_test04_detachDF(implicit p: Parameters) extends cilk_for_test04_detachDFIO()(p) {$/;"	c
cilk_for_test04_detachDFIO	src/main/scala/generator/cilk/cilk_for_test04_detach.scala	/^abstract class cilk_for_test04_detachDFIO(implicit val p: Parameters) extends Module with CoreParams {$/;"	c
cilk_for_test04_detachMain	src/main/scala/generator/cilk/cilk_for_test04_detach.scala	/^object cilk_for_test04_detachMain extends App {$/;"	c
cilk_for_test05	src/main/scala/generator/cilk/cilk_for_test05.scala	/^  val cilk_for_test05 = Module(new cilk_for_test05DF())$/;"	l
cilk_for_test05	src/test/scala/generator/cilk/cilk_for_test05_test.scala	/^  val cilk_for_test05 = Module(new cilk_for_test05CacheWrapper())$/;"	l
cilk_for_test05CacheWrapper	src/test/scala/generator/cilk/cilk_for_test05_test.scala	/^class cilk_for_test05CacheWrapper()(implicit p: Parameters) extends cilk_for_test05DF()(p)$/;"	c
cilk_for_test05DF	src/main/scala/generator/cilk/cilk_for_test05.scala	/^class cilk_for_test05DF(implicit p: Parameters) extends cilk_for_test05DFIO()(p) {$/;"	c
cilk_for_test05DFIO	src/main/scala/generator/cilk/cilk_for_test05.scala	/^abstract class cilk_for_test05DFIO(implicit val p: Parameters) extends Module with CoreParams {$/;"	c
cilk_for_test05Main	src/main/scala/generator/cilk/cilk_for_test05.scala	/^object cilk_for_test05Main extends App {$/;"	c
cilk_for_test05MainDirect	src/test/scala/generator/cilk/cilk_for_test05_test.scala	/^class cilk_for_test05MainDirect(implicit p: Parameters) extends cilk_for_test05MainIO()(p) {$/;"	c
cilk_for_test05MainIO	src/test/scala/generator/cilk/cilk_for_test05_test.scala	/^abstract class cilk_for_test05MainIO(implicit val p: Parameters) extends Module with CoreParams {$/;"	c
cilk_for_test05MainTM	src/test/scala/generator/cilk/cilk_for_test05_test.scala	/^class cilk_for_test05MainTM(implicit p: Parameters) extends cilk_for_test05MainIO()(p) {$/;"	c
cilk_for_test05Test01	src/test/scala/generator/cilk/cilk_for_test05_test.scala	/^class cilk_for_test05Test01[T <: cilk_for_test05MainIO](c: T) extends PeekPokeTester(c) {$/;"	c
cilk_for_test05Tester1	src/test/scala/generator/cilk/cilk_for_test05_test.scala	/^class cilk_for_test05Tester1 extends FlatSpec with Matchers {$/;"	c
cilk_for_test05Tester2	src/test/scala/generator/cilk/cilk_for_test05_test.scala	/^class cilk_for_test05Tester2 extends FlatSpec with Matchers {$/;"	c
cilk_for_test05TopA	src/main/scala/generator/cilk/cilk_for_test05.scala	/^class cilk_for_test05TopA(implicit p: Parameters) extends cilk_for_test05TopIO()(p) {$/;"	c
cilk_for_test05TopB	src/main/scala/generator/cilk/cilk_for_test05.scala	/^class cilk_for_test05TopB(implicit p: Parameters) extends cilk_for_test05TopIO()(p) {$/;"	c
cilk_for_test05TopC	src/main/scala/generator/cilk/cilk_for_test05.scala	/^class cilk_for_test05TopC(implicit p: Parameters) extends cilk_for_test05TopIO()(p) {$/;"	c
cilk_for_test05TopIO	src/main/scala/generator/cilk/cilk_for_test05.scala	/^abstract class cilk_for_test05TopIO(implicit val p: Parameters) extends Module with CoreParams {$/;"	c
cilk_for_test05_detach	src/main/scala/generator/cilk/cilk_for_test05.scala	/^  val cilk_for_test05_detach = Module(new cilk_for_test05_detachDF())$/;"	l
cilk_for_test05_detach	src/main/scala/generator/cilk/cilk_for_test05.scala	/^  val cilk_for_test05_detach = for (i <- 0 until children) yield {$/;"	l
cilk_for_test05_detach	src/test/scala/generator/cilk/cilk_for_test05_test.scala	/^  val cilk_for_test05_detach = Module(new cilk_for_test05_detachDF())$/;"	l
cilk_for_test05_detach	src/test/scala/generator/cilk/cilk_for_test05_test.scala	/^  val cilk_for_test05_detach = for (i <- 0 until children) yield {$/;"	l
cilk_for_test05_detachDF	src/main/scala/generator/cilk/cilk_for_test05_detach.scala	/^class cilk_for_test05_detachDF(implicit p: Parameters) extends cilk_for_test05_detachDFIO()(p) {$/;"	c
cilk_for_test05_detachDFIO	src/main/scala/generator/cilk/cilk_for_test05_detach.scala	/^abstract class cilk_for_test05_detachDFIO(implicit val p: Parameters) extends Module with CoreParams {$/;"	c
cilk_for_test05_detachMain	src/main/scala/generator/cilk/cilk_for_test05_detach.scala	/^object cilk_for_test05_detachMain extends App {$/;"	c
cilk_for_test06	src/main/scala/generator/cilk/cilk_for_test06.scala	/^  val cilk_for_test06 = Module(new cilk_for_test06DF())$/;"	l
cilk_for_test06	src/test/scala/generator/cilk/cilk_for_test06_test.scala	/^  val cilk_for_test06 = Module(new cilk_for_test06DF())$/;"	l
cilk_for_test06DF	src/main/scala/generator/cilk/cilk_for_test06.scala	/^class cilk_for_test06DF(implicit p: Parameters) extends cilk_for_test06DFIO()(p) {$/;"	c
cilk_for_test06DFIO	src/main/scala/generator/cilk/cilk_for_test06.scala	/^abstract class cilk_for_test06DFIO(implicit val p: Parameters) extends Module with CoreParams {$/;"	c
cilk_for_test06Main	src/main/scala/generator/cilk/cilk_for_test06.scala	/^object cilk_for_test06Main extends App {$/;"	c
cilk_for_test06MainDirect	src/test/scala/generator/cilk/cilk_for_test06_test.scala	/^class cilk_for_test06MainDirect(implicit p: Parameters) extends cilk_for_test06MainIO()(p) {$/;"	c
cilk_for_test06MainIO	src/test/scala/generator/cilk/cilk_for_test06_test.scala	/^class cilk_for_test06MainIO(implicit val p: Parameters) extends Module with CoreParams with CacheParams {$/;"	c
cilk_for_test06MainTM	src/test/scala/generator/cilk/cilk_for_test06_test.scala	/^class cilk_for_test06MainTM(implicit p: Parameters) extends cilk_for_test06MainIO()(p) {$/;"	c
cilk_for_test06Test01	src/test/scala/generator/cilk/cilk_for_test06_test.scala	/^class cilk_for_test06Test01[T <: cilk_for_test06MainIO](c: T) extends PeekPokeTester(c) {$/;"	c
cilk_for_test06Tester1	src/test/scala/generator/cilk/cilk_for_test06_test.scala	/^class cilk_for_test06Tester1 extends FlatSpec with Matchers {$/;"	c
cilk_for_test06Tester2	src/test/scala/generator/cilk/cilk_for_test06_test.scala	/^class cilk_for_test06Tester2 extends FlatSpec with Matchers {$/;"	c
cilk_for_test06TopA	src/main/scala/generator/cilk/cilk_for_test06.scala	/^class cilk_for_test06TopA(implicit p: Parameters) extends cilk_for_test06TopIO()(p) {$/;"	c
cilk_for_test06TopB	src/main/scala/generator/cilk/cilk_for_test06.scala	/^class cilk_for_test06TopB(implicit p: Parameters) extends cilk_for_test06TopIO()(p) {$/;"	c
cilk_for_test06TopC	src/main/scala/generator/cilk/cilk_for_test06.scala	/^class cilk_for_test06TopC(implicit p: Parameters) extends cilk_for_test06TopIO()(p) {$/;"	c
cilk_for_test06TopIO	src/main/scala/generator/cilk/cilk_for_test06.scala	/^abstract class cilk_for_test06TopIO(implicit val p: Parameters) extends Module with CoreParams {$/;"	c
cilk_for_test06_detach	src/main/scala/generator/cilk/cilk_for_test06.scala	/^  val cilk_for_test06_detach = Module(new cilk_for_test06_detachDF())$/;"	l
cilk_for_test06_detach	src/main/scala/generator/cilk/cilk_for_test06.scala	/^  val cilk_for_test06_detach = for (i <- 0 until children) yield {$/;"	l
cilk_for_test06_detach	src/test/scala/generator/cilk/cilk_for_test06_test.scala	/^  val cilk_for_test06_detach = Module(new cilk_for_test06_detachDF())$/;"	l
cilk_for_test06_detach	src/test/scala/generator/cilk/cilk_for_test06_test.scala	/^  val cilk_for_test06_detach = for (i <- 0 until children) yield {$/;"	l
cilk_for_test06_detach2	src/test/scala/generator/cilk/cilk_for_test06_test.scala	/^  val cilk_for_test06_detach2 = Module(new cilk_for_test06_detach_2DF())$/;"	l
cilk_for_test06_detach2	src/test/scala/generator/cilk/cilk_for_test06_test.scala	/^  val cilk_for_test06_detach2 = for (i <- 0 until children) yield {$/;"	l
cilk_for_test06_detachDF	src/main/scala/generator/cilk/cilk_for_test06_detach.scala	/^class cilk_for_test06_detachDF(implicit p: Parameters) extends cilk_for_test06_detachDFIO()(p) {$/;"	c
cilk_for_test06_detachDFIO	src/main/scala/generator/cilk/cilk_for_test06_detach.scala	/^abstract class cilk_for_test06_detachDFIO(implicit val p: Parameters) extends Module with CoreParams {$/;"	c
cilk_for_test06_detachMain	src/main/scala/generator/cilk/cilk_for_test06_detach.scala	/^object cilk_for_test06_detachMain extends App {$/;"	c
cilk_for_test06_detach_2DF	src/main/scala/generator/cilk/cilk_for_test06_detach_2.scala	/^class cilk_for_test06_detach_2DF(implicit p: Parameters) extends cilk_for_test06_detach_2DFIO()(p) {$/;"	c
cilk_for_test06_detach_2DFIO	src/main/scala/generator/cilk/cilk_for_test06_detach_2.scala	/^abstract class cilk_for_test06_detach_2DFIO(implicit val p: Parameters) extends Module with CoreParams {$/;"	c
cilk_for_test06_detach_2Main	src/main/scala/generator/cilk/cilk_for_test06_detach_2.scala	/^object cilk_for_test06_detach_2Main extends App {$/;"	c
cilk_for_test07	src/test/scala/generator/cilk/cilk_for_test07_test.scala	/^  val cilk_for_test07 = Module(new cilk_for_test07DF())$/;"	l
cilk_for_test07DF	src/main/scala/generator/cilk/cilk_for_test07.scala	/^class cilk_for_test07DF(implicit p: Parameters) extends cilk_for_test07DFIO()(p) {$/;"	c
cilk_for_test07DFIO	src/main/scala/generator/cilk/cilk_for_test07.scala	/^abstract class cilk_for_test07DFIO(implicit val p: Parameters) extends Module with CoreParams {$/;"	c
cilk_for_test07Main	src/main/scala/generator/cilk/cilk_for_test07.scala	/^object cilk_for_test07Main extends App {$/;"	c
cilk_for_test07MainDirect	src/test/scala/generator/cilk/cilk_for_test07_test.scala	/^class cilk_for_test07MainDirect(implicit p: Parameters) extends cilk_for_test07MainIO {$/;"	c
cilk_for_test07MainIO	src/test/scala/generator/cilk/cilk_for_test07_test.scala	/^class cilk_for_test07MainIO(implicit val p: Parameters)  extends Module with CoreParams with CacheParams {$/;"	c
cilk_for_test07MainTM	src/test/scala/generator/cilk/cilk_for_test07_test.scala	/^class cilk_for_test07MainTM(implicit p: Parameters) extends cilk_for_test07MainIO  {$/;"	c
cilk_for_test07Test01	src/test/scala/generator/cilk/cilk_for_test07_test.scala	/^class cilk_for_test07Test01[T <: cilk_for_test07MainIO](c: T) extends PeekPokeTester(c) {$/;"	c
cilk_for_test07Tester1	src/test/scala/generator/cilk/cilk_for_test07_test.scala	/^class cilk_for_test07Tester1 extends FlatSpec with Matchers {$/;"	c
cilk_for_test07Tester2	src/test/scala/generator/cilk/cilk_for_test07_test.scala	/^class cilk_for_test07Tester2 extends FlatSpec with Matchers {$/;"	c
cilk_for_test07_detach	src/test/scala/generator/cilk/cilk_for_test07_test.scala	/^  val cilk_for_test07_detach = Module(new cilk_for_test07_detachDF())$/;"	l
cilk_for_test07_detach	src/test/scala/generator/cilk/cilk_for_test07_test.scala	/^  val cilk_for_test07_detach = for (i <- 0 until children) yield {$/;"	l
cilk_for_test07_detachDF	src/main/scala/generator/cilk/cilk_for_test07_detach.scala	/^class cilk_for_test07_detachDF(implicit p: Parameters) extends cilk_for_test07_detachDFIO()(p) {$/;"	c
cilk_for_test07_detachDFIO	src/main/scala/generator/cilk/cilk_for_test07_detach.scala	/^abstract class cilk_for_test07_detachDFIO(implicit val p: Parameters) extends Module with CoreParams {$/;"	c
cilk_for_test07_detachMain	src/main/scala/generator/cilk/cilk_for_test07_detach.scala	/^object cilk_for_test07_detachMain extends App {$/;"	c
cilk_for_test08	src/main/scala/generator/cilk/cilk_for_test08.scala	/^  val cilk_for_test08 = Module(new cilk_for_test08DF())$/;"	l
cilk_for_test08	src/test/scala/generator/cilk/cilk_for_test08_test.scala	/^  val cilk_for_test08 = Module(new cilk_for_test08DF())$/;"	l
cilk_for_test08DF	src/main/scala/generator/cilk/cilk_for_test08.scala	/^class cilk_for_test08DF(implicit p: Parameters) extends cilk_for_test08DFIO()(p) {$/;"	c
cilk_for_test08DFIO	src/main/scala/generator/cilk/cilk_for_test08.scala	/^abstract class cilk_for_test08DFIO(implicit val p: Parameters) extends Module with CoreParams {$/;"	c
cilk_for_test08Main	src/main/scala/generator/cilk/cilk_for_test08.scala	/^object cilk_for_test08Main extends App {$/;"	c
cilk_for_test08MainDirect	src/test/scala/generator/cilk/cilk_for_test08_test.scala	/^class cilk_for_test08MainDirect(implicit p: Parameters) extends cilk_for_test08MainIO {$/;"	c
cilk_for_test08MainIO	src/test/scala/generator/cilk/cilk_for_test08_test.scala	/^class cilk_for_test08MainIO(implicit val p: Parameters)  extends Module with CoreParams with CacheParams {$/;"	c
cilk_for_test08MainTM	src/test/scala/generator/cilk/cilk_for_test08_test.scala	/^class cilk_for_test08MainTM(implicit p: Parameters) extends cilk_for_test08MainIO  {$/;"	c
cilk_for_test08Test01	src/test/scala/generator/cilk/cilk_for_test08_test.scala	/^class cilk_for_test08Test01[T <: cilk_for_test08MainIO](c: T) extends PeekPokeTester(c) {$/;"	c
cilk_for_test08Tester1	src/test/scala/generator/cilk/cilk_for_test08_test.scala	/^class cilk_for_test08Tester1 extends FlatSpec with Matchers {$/;"	c
cilk_for_test08Tester2	src/test/scala/generator/cilk/cilk_for_test08_test.scala	/^class cilk_for_test08Tester2 extends FlatSpec with Matchers {$/;"	c
cilk_for_test08TopA	src/main/scala/generator/cilk/cilk_for_test08.scala	/^class cilk_for_test08TopA(implicit p: Parameters) extends cilk_for_test08TopIO()(p) {$/;"	c
cilk_for_test08TopB	src/main/scala/generator/cilk/cilk_for_test08.scala	/^class cilk_for_test08TopB(implicit p: Parameters) extends cilk_for_test08TopIO()(p) {$/;"	c
cilk_for_test08TopC	src/main/scala/generator/cilk/cilk_for_test08.scala	/^class cilk_for_test08TopC(implicit p: Parameters) extends cilk_for_test08TopIO()(p) {$/;"	c
cilk_for_test08TopIO	src/main/scala/generator/cilk/cilk_for_test08.scala	/^abstract class cilk_for_test08TopIO(implicit val p: Parameters) extends Module with CoreParams {$/;"	c
cilk_for_test08_detach	src/main/scala/generator/cilk/cilk_for_test08.scala	/^  val cilk_for_test08_detach = Module(new cilk_for_test08_detachDF())$/;"	l
cilk_for_test08_detach	src/main/scala/generator/cilk/cilk_for_test08.scala	/^  val cilk_for_test08_detach = for (i <- 0 until children) yield {$/;"	l
cilk_for_test08_detach	src/test/scala/generator/cilk/cilk_for_test08_test.scala	/^  val cilk_for_test08_detach = Module(new cilk_for_test08_detachDF())$/;"	l
cilk_for_test08_detach	src/test/scala/generator/cilk/cilk_for_test08_test.scala	/^  val cilk_for_test08_detach = for (i <- 0 until children) yield {$/;"	l
cilk_for_test08_detachDF	src/main/scala/generator/cilk/cilk_for_test08_detach.scala	/^class cilk_for_test08_detachDF(implicit p: Parameters) extends cilk_for_test08_detachDFIO()(p) {$/;"	c
cilk_for_test08_detachDFIO	src/main/scala/generator/cilk/cilk_for_test08_detach.scala	/^abstract class cilk_for_test08_detachDFIO(implicit val p: Parameters) extends Module with CoreParams {$/;"	c
cilk_for_test08_detachMain	src/main/scala/generator/cilk/cilk_for_test08_detach.scala	/^object cilk_for_test08_detachMain extends App {$/;"	c
cilk_for_test09	src/test/scala/generator/cilk/cilk_for_test09_test.scala	/^  val cilk_for_test09 = Module(new cilk_for_test09DF())$/;"	l
cilk_for_test09DF	src/main/scala/generator/cilk/cilk_for_test09.scala	/^class cilk_for_test09DF(implicit p: Parameters) extends cilk_for_test09DFIO()(p) {$/;"	c
cilk_for_test09DFIO	src/main/scala/generator/cilk/cilk_for_test09.scala	/^abstract class cilk_for_test09DFIO(implicit val p: Parameters) extends Module with CoreParams {$/;"	c
cilk_for_test09Main	src/main/scala/generator/cilk/cilk_for_test09.scala	/^object cilk_for_test09Main extends App {$/;"	c
cilk_for_test09MainDirect	src/test/scala/generator/cilk/cilk_for_test09_test.scala	/^class cilk_for_test09MainDirect(implicit p: Parameters) extends cilk_for_test09MainIO {$/;"	c
cilk_for_test09MainIO	src/test/scala/generator/cilk/cilk_for_test09_test.scala	/^class cilk_for_test09MainIO(implicit val p: Parameters)  extends Module with CoreParams with CacheParams {$/;"	c
cilk_for_test09MainTM	src/test/scala/generator/cilk/cilk_for_test09_test.scala	/^class cilk_for_test09MainTM(implicit p: Parameters) extends cilk_for_test09MainIO  {$/;"	c
cilk_for_test09Test01	src/test/scala/generator/cilk/cilk_for_test09_test.scala	/^class cilk_for_test09Test01[T <: cilk_for_test09MainIO](c: T) extends PeekPokeTester(c) {$/;"	c
cilk_for_test09Tester1	src/test/scala/generator/cilk/cilk_for_test09_test.scala	/^class cilk_for_test09Tester1 extends FlatSpec with Matchers {$/;"	c
cilk_for_test09Tester2	src/test/scala/generator/cilk/cilk_for_test09_test.scala	/^class cilk_for_test09Tester2 extends FlatSpec with Matchers {$/;"	c
cilk_for_test09_inner	src/test/scala/generator/cilk/cilk_for_test09_test.scala	/^  val cilk_for_test09_inner = Module(new cilk_for_test09_innerDF())$/;"	l
cilk_for_test09_inner	src/test/scala/generator/cilk/cilk_for_test09_test.scala	/^  val cilk_for_test09_inner = for (i <- 0 until children) yield {$/;"	l
cilk_for_test09_innerDF	src/main/scala/generator/cilk/cilk_for_test09_inner.scala	/^class cilk_for_test09_innerDF(implicit p: Parameters) extends cilk_for_test09_innerDFIO()(p) {$/;"	c
cilk_for_test09_innerDFIO	src/main/scala/generator/cilk/cilk_for_test09_inner.scala	/^abstract class cilk_for_test09_innerDFIO(implicit val p: Parameters) extends Module with CoreParams {$/;"	c
cilk_for_test09_innerMain	src/main/scala/generator/cilk/cilk_for_test09_inner.scala	/^object cilk_for_test09_innerMain extends App {$/;"	c
cilk_for_test12	src/test/scala/generator/cilk/cilk_for_test12_test.scala	/^  val cilk_for_test12 = Module(new cilk_for_test12DF())$/;"	l
cilk_for_test12DF	src/main/scala/generator/cilk/cilk_for_test12.scala	/^class cilk_for_test12DF(implicit p: Parameters) extends cilk_for_test12DFIO()(p) {$/;"	c
cilk_for_test12DFIO	src/main/scala/generator/cilk/cilk_for_test12.scala	/^abstract class cilk_for_test12DFIO(implicit val p: Parameters) extends Module with CoreParams {$/;"	c
cilk_for_test12Main	src/main/scala/generator/cilk/cilk_for_test12.scala	/^object cilk_for_test12Main extends App {$/;"	c
cilk_for_test12Main	src/test/scala/generator/cilk/cilk_for_test12_test.scala	/^class cilk_for_test12Main(implicit p: Parameters) extends cilk_for_test12MainIO {$/;"	c
cilk_for_test12MainIO	src/test/scala/generator/cilk/cilk_for_test12_test.scala	/^class cilk_for_test12MainIO(implicit val p: Parameters)  extends Module with CoreParams with CacheParams {$/;"	c
cilk_for_test12Test01	src/test/scala/generator/cilk/cilk_for_test12_test.scala	/^class cilk_for_test12Test01[T <: cilk_for_test12MainIO](c: T) extends PeekPokeTester(c) {$/;"	c
cilk_for_test12Tester1	src/test/scala/generator/cilk/cilk_for_test12_test.scala	/^class cilk_for_test12Tester1 extends FlatSpec with Matchers {$/;"	c
cilk_for_test12_detach1	src/test/scala/generator/cilk/cilk_for_test12_test.scala	/^  val cilk_for_test12_detach1 = for (i <- 0 until children1) yield {$/;"	l
cilk_for_test12_detach1DF	src/main/scala/generator/cilk/cilk_for_test12_detach1.scala	/^class cilk_for_test12_detach1DF(implicit p: Parameters) extends cilk_for_test12_detach1DFIO()(p) {$/;"	c
cilk_for_test12_detach1DFIO	src/main/scala/generator/cilk/cilk_for_test12_detach1.scala	/^abstract class cilk_for_test12_detach1DFIO(implicit val p: Parameters) extends Module with CoreParams {$/;"	c
cilk_for_test12_detach1Main	src/main/scala/generator/cilk/cilk_for_test12_detach1.scala	/^object cilk_for_test12_detach1Main extends App {$/;"	c
cilk_for_test12_detach2	src/test/scala/generator/cilk/cilk_for_test12_test.scala	/^  val cilk_for_test12_detach2 = for (i <- 0 until children2) yield {$/;"	l
cilk_for_test12_detach2DF	src/main/scala/generator/cilk/cilk_for_test12_detach2.scala	/^class cilk_for_test12_detach2DF(implicit p: Parameters) extends cilk_for_test12_detach2DFIO()(p) {$/;"	c
cilk_for_test12_detach2DFIO	src/main/scala/generator/cilk/cilk_for_test12_detach2.scala	/^abstract class cilk_for_test12_detach2DFIO(implicit val p: Parameters) extends Module with CoreParams {$/;"	c
cilk_for_test12_detach2Main	src/main/scala/generator/cilk/cilk_for_test12_detach2.scala	/^object cilk_for_test12_detach2Main extends App {$/;"	c
cilk_for_test12_detach3	src/test/scala/generator/cilk/cilk_for_test12_test.scala	/^  val cilk_for_test12_detach3 = for (i <- 0 until children3) yield {$/;"	l
cilk_for_test12_detach3DF	src/main/scala/generator/cilk/cilk_for_test12_detach3.scala	/^class cilk_for_test12_detach3DF(implicit p: Parameters) extends cilk_for_test12_detach3DFIO()(p) {$/;"	c
cilk_for_test12_detach3DFIO	src/main/scala/generator/cilk/cilk_for_test12_detach3.scala	/^abstract class cilk_for_test12_detach3DFIO(implicit val p: Parameters) extends Module with CoreParams {$/;"	c
cilk_for_test12_detach3Main	src/main/scala/generator/cilk/cilk_for_test12_detach3.scala	/^object cilk_for_test12_detach3Main extends App {$/;"	c
cilk_spawn_test01CacheWrapper	src/test/scala/generator/cilk/cilk_spawn_test01_test.scala	/^class cilk_spawn_test01CacheWrapper()(implicit p: Parameters) extends cilk_spawn_test01DF()(p)$/;"	c
cilk_spawn_test01DF	src/main/scala/generator/cilk/cilk_spawn_test01.scala	/^class cilk_spawn_test01DF(implicit p: Parameters) extends cilk_spawn_test01DFIO()(p) {$/;"	c
cilk_spawn_test01DFIO	src/main/scala/generator/cilk/cilk_spawn_test01.scala	/^abstract class cilk_spawn_test01DFIO(implicit val p: Parameters) extends Module with CoreParams {$/;"	c
cilk_spawn_test01Main	src/main/scala/generator/cilk/cilk_spawn_test01.scala	/^object cilk_spawn_test01Main extends App {$/;"	c
cilk_spawn_test01Test01	src/test/scala/generator/cilk/cilk_spawn_test01_test.scala	/^class cilk_spawn_test01Test01(c: cilk_spawn_test01CacheWrapper) extends PeekPokeTester(c) {$/;"	c
cilk_spawn_test01Tester	src/test/scala/generator/cilk/cilk_spawn_test01_test.scala	/^class cilk_spawn_test01Tester extends FlatSpec with Matchers {$/;"	c
cilk_spawn_test02CacheWrapper	src/test/scala/generator/cilk/cilk_spawn_test02_test.scala	/^class cilk_spawn_test02CacheWrapper()(implicit p: Parameters) extends cilk_spawn_test02DF()(p)$/;"	c
cilk_spawn_test02DF	src/main/scala/generator/cilk/cilk_spawn_test02.scala	/^class cilk_spawn_test02DF(implicit p: Parameters) extends cilk_spawn_test02DFIO()(p) {$/;"	c
cilk_spawn_test02DFIO	src/main/scala/generator/cilk/cilk_spawn_test02.scala	/^abstract class cilk_spawn_test02DFIO(implicit val p: Parameters) extends Module with CoreParams {$/;"	c
cilk_spawn_test02Main	src/main/scala/generator/cilk/cilk_spawn_test02.scala	/^object cilk_spawn_test02Main extends App {$/;"	c
cilk_spawn_test02Test01	src/test/scala/generator/cilk/cilk_spawn_test02_test.scala	/^class cilk_spawn_test02Test01(c: cilk_spawn_test02CacheWrapper) extends PeekPokeTester(c) {$/;"	c
cilk_spawn_test02Tester	src/test/scala/generator/cilk/cilk_spawn_test02_test.scala	/^class cilk_spawn_test02Tester extends FlatSpec with Matchers {$/;"	c
classify	src/main/scala/FPU/FPALU.scala	/^  def classify(x: UInt) = {$/;"	m
classname	src/main/scala/node/TypCompute.scala	/^  var classname: String = (gen.getClass).toString$/;"	l
clock	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  input         clock,$/;"	p
cmapd	scripts/extract_activity.py	/^cmapd = matplotlib.colors.ListedColormap(sns.color_palette("Reds",64), "MyColors")$/;"	v
cmpBranch	src/main/scala/generator/cilk/cilk_for_test04.scala	/^  var cmpBranch = Module(new CompareBranchNode(ID = 44, opCode="ULT"))$/;"	l
cmpBranch	src/main/scala/generator/test03.scala	/^  val cmpBranch = Module(new CompareBranchNode(ID = 22, opCode = "ULT"))$/;"	l
cmpOp	src/main/scala/node/Comparision.scala	/^  val cmpOp = Array($/;"	l
cmpTester	src/test/scala/node/cmpNode.scala	/^class cmpTester(df: IcmpNode)$/;"	c
cmpTests	src/test/scala/node/cmpNode.scala	/^class cmpTests extends  FlatSpec with Matchers {$/;"	c
cmp_R	src/main/scala/node/BranchNode.scala	/^  val cmp_R = RegInit(DataBundle.default)$/;"	l
cmp_valid_R	src/main/scala/node/BranchNode.scala	/^  val cmp_valid_R = RegInit(false.B)$/;"	l
code	src/main/scala/FPU/FPALU.scala	/^    val code = x(exp + sig - 1, exp + sig - 3)$/;"	l
codeHi	src/main/scala/FPU/FPALU.scala	/^    val codeHi = code(2, 1)$/;"	l
codecs	scripts/TypeStackFile.py	/^import codecs$/;"	i
collections	scripts/TypeStackFile.py	/^import collections$/;"	i
collections	scripts/extract_activity.py	/^import collections$/;"	i
commonCase	src/main/scala/FPU/FPALU.scala	/^      val commonCase = (expIn + (1 << to.exp).U) - (1 << exp).U$/;"	l
comp	src/main/scala/config/config.scala	/^  val comp    = p(COMPONENTS)$/;"	l
comp1	src/main/scala/loop/Example1.scala	/^  val comp1 = Module(new ComputeNode(NumOuts = 1, ID = 1, opCode = "Add")(sign = false))$/;"	l
comp2	src/main/scala/loop/Example1.scala	/^  val comp2 = Module(new ComputeNode(NumOuts = 1, ID = 2, opCode = "Add")(sign = false))$/;"	l
comp3	src/main/scala/loop/Example1.scala	/^  val comp3 = Module(new ComputeNode(NumOuts = 1, ID = 3, opCode = "Add")(sign = false))$/;"	l
compileResult	src/main/scala/accel/Main.scala	/^  val compileResult = (new firrtl.VerilogCompiler).compileAndEmit(firrtl.CircuitState(chirrtl, firrtl.ChirrtlForm))$/;"	l
compileResult	src/main/scala/generator/cilk/bgemm.scala	/^  val compileResult = (new firrtl.VerilogCompiler).compileAndEmit(firrtl.CircuitState(chirrtl, firrtl.ChirrtlForm))$/;"	l
compileResult	src/main/scala/generator/cilk/bgemm_detach1.scala	/^  val compileResult = (new firrtl.VerilogCompiler).compileAndEmit(firrtl.CircuitState(chirrtl, firrtl.ChirrtlForm))$/;"	l
compileResult	src/main/scala/generator/cilk/bgemm_detach2.scala	/^  val compileResult = (new firrtl.VerilogCompiler).compileAndEmit(firrtl.CircuitState(chirrtl, firrtl.ChirrtlForm))$/;"	l
compileResult	src/main/scala/generator/cilk/bgemm_detach3.scala	/^  val compileResult = (new firrtl.VerilogCompiler).compileAndEmit(firrtl.CircuitState(chirrtl, firrtl.ChirrtlForm))$/;"	l
compileResult	src/main/scala/generator/cilk/cilk_for_test01.scala	/^  val compileResult = (new firrtl.VerilogCompiler).compileAndEmit(firrtl.CircuitState(chirrtl, firrtl.ChirrtlForm))$/;"	l
compileResult	src/main/scala/generator/cilk/cilk_for_test02.scala	/^  val compileResult = (new firrtl.VerilogCompiler).compileAndEmit(firrtl.CircuitState(chirrtl, firrtl.ChirrtlForm))$/;"	l
compileResult	src/main/scala/generator/cilk/cilk_for_test02_mul.scala	/^  val compileResult = (new firrtl.VerilogCompiler).compileAndEmit(firrtl.CircuitState(chirrtl, firrtl.ChirrtlForm))$/;"	l
compileResult	src/main/scala/generator/cilk/cilk_for_test04_detach.scala	/^  val compileResult = (new firrtl.VerilogCompiler).compileAndEmit(firrtl.CircuitState(chirrtl, firrtl.ChirrtlForm))$/;"	l
compileResult	src/main/scala/generator/cilk/cilk_for_test05_detach.scala	/^  val compileResult = (new firrtl.VerilogCompiler).compileAndEmit(firrtl.CircuitState(chirrtl, firrtl.ChirrtlForm))$/;"	l
compileResult	src/main/scala/generator/cilk/cilk_for_test06_detach.scala	/^  val compileResult = (new firrtl.VerilogCompiler).compileAndEmit(firrtl.CircuitState(chirrtl, firrtl.ChirrtlForm))$/;"	l
compileResult	src/main/scala/generator/cilk/cilk_for_test06_detach_2.scala	/^  val compileResult = (new firrtl.VerilogCompiler).compileAndEmit(firrtl.CircuitState(chirrtl, firrtl.ChirrtlForm))$/;"	l
compileResult	src/main/scala/generator/cilk/cilk_for_test07.scala	/^  val compileResult = (new firrtl.VerilogCompiler).compileAndEmit(firrtl.CircuitState(chirrtl, firrtl.ChirrtlForm))$/;"	l
compileResult	src/main/scala/generator/cilk/cilk_for_test07_detach.scala	/^  val compileResult = (new firrtl.VerilogCompiler).compileAndEmit(firrtl.CircuitState(chirrtl, firrtl.ChirrtlForm))$/;"	l
compileResult	src/main/scala/generator/cilk/cilk_for_test08_detach.scala	/^  val compileResult = (new firrtl.VerilogCompiler).compileAndEmit(firrtl.CircuitState(chirrtl, firrtl.ChirrtlForm))$/;"	l
compileResult	src/main/scala/generator/cilk/cilk_for_test09.scala	/^  val compileResult = (new firrtl.VerilogCompiler).compileAndEmit(firrtl.CircuitState(chirrtl, firrtl.ChirrtlForm))$/;"	l
compileResult	src/main/scala/generator/cilk/cilk_for_test09_inner.scala	/^  val compileResult = (new firrtl.VerilogCompiler).compileAndEmit(firrtl.CircuitState(chirrtl, firrtl.ChirrtlForm))$/;"	l
compileResult	src/main/scala/generator/cilk/cilk_for_test12.scala	/^  val compileResult = (new firrtl.VerilogCompiler).compileAndEmit(firrtl.CircuitState(chirrtl, firrtl.ChirrtlForm))$/;"	l
compileResult	src/main/scala/generator/cilk/cilk_for_test12_detach1.scala	/^  val compileResult = (new firrtl.VerilogCompiler).compileAndEmit(firrtl.CircuitState(chirrtl, firrtl.ChirrtlForm))$/;"	l
compileResult	src/main/scala/generator/cilk/cilk_for_test12_detach2.scala	/^  val compileResult = (new firrtl.VerilogCompiler).compileAndEmit(firrtl.CircuitState(chirrtl, firrtl.ChirrtlForm))$/;"	l
compileResult	src/main/scala/generator/cilk/cilk_for_test12_detach3.scala	/^  val compileResult = (new firrtl.VerilogCompiler).compileAndEmit(firrtl.CircuitState(chirrtl, firrtl.ChirrtlForm))$/;"	l
compileResult	src/main/scala/generator/cilk/cilk_spawn_test01.scala	/^  val compileResult = (new firrtl.VerilogCompiler).compileAndEmit(firrtl.CircuitState(chirrtl, firrtl.ChirrtlForm))$/;"	l
compileResult	src/main/scala/generator/cilk/cilk_spawn_test02.scala	/^  val compileResult = (new firrtl.VerilogCompiler).compileAndEmit(firrtl.CircuitState(chirrtl, firrtl.ChirrtlForm))$/;"	l
compileResult	src/main/scala/generator/cilk/fib.scala	/^  val compileResult = (new firrtl.VerilogCompiler).compileAndEmit(firrtl.CircuitState(chirrtl, firrtl.ChirrtlForm))$/;"	l
compileResult	src/main/scala/generator/cilk/fib_continue.scala	/^  val compileResult = (new firrtl.VerilogCompiler).compileAndEmit(firrtl.CircuitState(chirrtl, firrtl.ChirrtlForm))$/;"	l
compileResult	src/main/scala/generator/cilk/mergesort.scala	/^  val compileResult = (new firrtl.VerilogCompiler).compileAndEmit(firrtl.CircuitState(chirrtl, firrtl.ChirrtlForm))$/;"	l
compileResult	src/main/scala/generator/cilk/mergesort_merge.scala	/^  val compileResult = (new firrtl.VerilogCompiler).compileAndEmit(firrtl.CircuitState(chirrtl, firrtl.ChirrtlForm))$/;"	l
compileResult	src/main/scala/generator/cilk/stencil.scala	/^  val compileResult = (new firrtl.VerilogCompiler).compileAndEmit(firrtl.CircuitState(chirrtl, firrtl.ChirrtlForm))$/;"	l
compileResult	src/main/scala/generator/cilk/stencil_detach1.scala	/^  val compileResult = (new firrtl.VerilogCompiler).compileAndEmit(firrtl.CircuitState(chirrtl, firrtl.ChirrtlForm))$/;"	l
compileResult	src/main/scala/generator/cilk/stencil_inner.scala	/^  val compileResult = (new firrtl.VerilogCompiler).compileAndEmit(firrtl.CircuitState(chirrtl, firrtl.ChirrtlForm))$/;"	l
compileResult	src/main/scala/generator/test01.scala	/^  val compileResult = (new firrtl.VerilogCompiler).compileAndEmit(firrtl.CircuitState(chirrtl, firrtl.ChirrtlForm))$/;"	l
compileResult	src/main/scala/generator/test02.scala	/^  val compileResult = (new firrtl.VerilogCompiler).compileAndEmit(firrtl.CircuitState(chirrtl, firrtl.ChirrtlForm))$/;"	l
compileResult	src/main/scala/generator/test03.scala	/^  val compileResult = (new firrtl.VerilogCompiler).compileAndEmit(firrtl.CircuitState(chirrtl, firrtl.ChirrtlForm))$/;"	l
compileResult	src/main/scala/generator/test04.scala	/^  val compileResult = (new firrtl.VerilogCompiler).compileAndEmit(firrtl.CircuitState(chirrtl, firrtl.ChirrtlForm))$/;"	l
compileResult	src/main/scala/generator/test05.scala	/^  val compileResult = (new firrtl.VerilogCompiler).compileAndEmit(firrtl.CircuitState(chirrtl, firrtl.ChirrtlForm))$/;"	l
compileResult	src/main/scala/generator/test05b.scala	/^  val compileResult = (new firrtl.VerilogCompiler).compileAndEmit(firrtl.CircuitState(chirrtl, firrtl.ChirrtlForm))$/;"	l
compileResult	src/main/scala/generator/test05c.scala	/^  val compileResult = (new firrtl.VerilogCompiler).compileAndEmit(firrtl.CircuitState(chirrtl, firrtl.ChirrtlForm))$/;"	l
compileResult	src/main/scala/generator/test06.scala	/^  val compileResult = (new firrtl.VerilogCompiler).compileAndEmit(firrtl.CircuitState(chirrtl, firrtl.ChirrtlForm))$/;"	l
compileResult	src/main/scala/generator/test08.scala	/^  val compileResult = (new firrtl.VerilogCompiler).compileAndEmit(firrtl.CircuitState(chirrtl, firrtl.ChirrtlForm))$/;"	l
compileResult	src/main/scala/generator/test09.scala	/^  val compileResult = (new firrtl.VerilogCompiler).compileAndEmit(firrtl.CircuitState(chirrtl, firrtl.ChirrtlForm))$/;"	l
compileResult	src/main/scala/generator/test10.scala	/^  val compileResult = (new firrtl.VerilogCompiler).compileAndEmit(firrtl.CircuitState(chirrtl, firrtl.ChirrtlForm))$/;"	l
compileResult	src/main/scala/generator/test11.scala	/^  val compileResult = (new firrtl.VerilogCompiler).compileAndEmit(firrtl.CircuitState(chirrtl, firrtl.ChirrtlForm))$/;"	l
compileResult	src/main/scala/generator/test11_add.scala	/^  val compileResult = (new firrtl.VerilogCompiler).compileAndEmit(firrtl.CircuitState(chirrtl, firrtl.ChirrtlForm))$/;"	l
compileResult	src/main/scala/generator/test12.scala	/^  val compileResult = (new firrtl.VerilogCompiler).compileAndEmit(firrtl.CircuitState(chirrtl, firrtl.ChirrtlForm))$/;"	l
compileResult	src/main/scala/generator/test12_inner.scala	/^  val compileResult = (new firrtl.VerilogCompiler).compileAndEmit(firrtl.CircuitState(chirrtl, firrtl.ChirrtlForm))$/;"	l
compileResult	src/main/scala/generator/test14.scala	/^  val compileResult = (new firrtl.VerilogCompiler).compileAndEmit(firrtl.CircuitState(chirrtl, firrtl.ChirrtlForm))$/;"	l
compileResult	src/main/scala/generator/test14_inner.scala	/^  val compileResult = (new firrtl.VerilogCompiler).compileAndEmit(firrtl.CircuitState(chirrtl, firrtl.ChirrtlForm))$/;"	l
compileResult	src/main/scala/generator/test15.scala	/^  val compileResult = (new firrtl.VerilogCompiler).compileAndEmit(firrtl.CircuitState(chirrtl, firrtl.ChirrtlForm))$/;"	l
compileResultA	src/main/scala/generator/cilk/cilk_for_test04.scala	/^  val compileResultA = (new firrtl.VerilogCompiler).compileAndEmit(firrtl.CircuitState(chirrtlA, firrtl.ChirrtlForm))$/;"	l
compileResultA	src/main/scala/generator/cilk/cilk_for_test05.scala	/^  val compileResultA = (new firrtl.VerilogCompiler).compileAndEmit(firrtl.CircuitState(chirrtlA, firrtl.ChirrtlForm))$/;"	l
compileResultA	src/main/scala/generator/cilk/cilk_for_test06.scala	/^  val compileResultA = (new firrtl.VerilogCompiler).compileAndEmit(firrtl.CircuitState(chirrtlA, firrtl.ChirrtlForm))$/;"	l
compileResultA	src/main/scala/generator/cilk/cilk_for_test08.scala	/^  val compileResultA = (new firrtl.VerilogCompiler).compileAndEmit(firrtl.CircuitState(chirrtlA, firrtl.ChirrtlForm))$/;"	l
compileResultB	src/main/scala/generator/cilk/cilk_for_test04.scala	/^  val compileResultB = (new firrtl.VerilogCompiler).compileAndEmit(firrtl.CircuitState(chirrtlB, firrtl.ChirrtlForm))$/;"	l
compileResultB	src/main/scala/generator/cilk/cilk_for_test05.scala	/^  val compileResultB = (new firrtl.VerilogCompiler).compileAndEmit(firrtl.CircuitState(chirrtlB, firrtl.ChirrtlForm))$/;"	l
compileResultB	src/main/scala/generator/cilk/cilk_for_test06.scala	/^  val compileResultB = (new firrtl.VerilogCompiler).compileAndEmit(firrtl.CircuitState(chirrtlB, firrtl.ChirrtlForm))$/;"	l
compileResultB	src/main/scala/generator/cilk/cilk_for_test08.scala	/^  val compileResultB = (new firrtl.VerilogCompiler).compileAndEmit(firrtl.CircuitState(chirrtlB, firrtl.ChirrtlForm))$/;"	l
compileResultC	src/main/scala/generator/cilk/cilk_for_test04.scala	/^  val compileResultC = (new firrtl.VerilogCompiler).compileAndEmit(firrtl.CircuitState(chirrtlC, firrtl.ChirrtlForm))$/;"	l
compileResultC	src/main/scala/generator/cilk/cilk_for_test05.scala	/^  val compileResultC = (new firrtl.VerilogCompiler).compileAndEmit(firrtl.CircuitState(chirrtlC, firrtl.ChirrtlForm))$/;"	l
compileResultC	src/main/scala/generator/cilk/cilk_for_test06.scala	/^  val compileResultC = (new firrtl.VerilogCompiler).compileAndEmit(firrtl.CircuitState(chirrtlC, firrtl.ChirrtlForm))$/;"	l
compileResultC	src/main/scala/generator/cilk/cilk_for_test08.scala	/^  val compileResultC = (new firrtl.VerilogCompiler).compileAndEmit(firrtl.CircuitState(chirrtlC, firrtl.ChirrtlForm))$/;"	l
compiledStuff	src/main/scala/accel/Main.scala	/^  val compiledStuff = compileResult.getEmittedCircuit$/;"	l
compiledStuff	src/main/scala/generator/cilk/bgemm.scala	/^  val compiledStuff = compileResult.getEmittedCircuit$/;"	l
compiledStuff	src/main/scala/generator/cilk/bgemm_detach1.scala	/^  val compiledStuff = compileResult.getEmittedCircuit$/;"	l
compiledStuff	src/main/scala/generator/cilk/bgemm_detach2.scala	/^  val compiledStuff = compileResult.getEmittedCircuit$/;"	l
compiledStuff	src/main/scala/generator/cilk/bgemm_detach3.scala	/^  val compiledStuff = compileResult.getEmittedCircuit$/;"	l
compiledStuff	src/main/scala/generator/cilk/cilk_for_test01.scala	/^  val compiledStuff = compileResult.getEmittedCircuit$/;"	l
compiledStuff	src/main/scala/generator/cilk/cilk_for_test02.scala	/^  val compiledStuff = compileResult.getEmittedCircuit$/;"	l
compiledStuff	src/main/scala/generator/cilk/cilk_for_test02_mul.scala	/^  val compiledStuff = compileResult.getEmittedCircuit$/;"	l
compiledStuff	src/main/scala/generator/cilk/cilk_for_test04_detach.scala	/^  val compiledStuff = compileResult.getEmittedCircuit$/;"	l
compiledStuff	src/main/scala/generator/cilk/cilk_for_test05_detach.scala	/^  val compiledStuff = compileResult.getEmittedCircuit$/;"	l
compiledStuff	src/main/scala/generator/cilk/cilk_for_test06_detach.scala	/^  val compiledStuff = compileResult.getEmittedCircuit$/;"	l
compiledStuff	src/main/scala/generator/cilk/cilk_for_test06_detach_2.scala	/^  val compiledStuff = compileResult.getEmittedCircuit$/;"	l
compiledStuff	src/main/scala/generator/cilk/cilk_for_test07.scala	/^  val compiledStuff = compileResult.getEmittedCircuit$/;"	l
compiledStuff	src/main/scala/generator/cilk/cilk_for_test07_detach.scala	/^  val compiledStuff = compileResult.getEmittedCircuit$/;"	l
compiledStuff	src/main/scala/generator/cilk/cilk_for_test08_detach.scala	/^  val compiledStuff = compileResult.getEmittedCircuit$/;"	l
compiledStuff	src/main/scala/generator/cilk/cilk_for_test09.scala	/^  val compiledStuff = compileResult.getEmittedCircuit$/;"	l
compiledStuff	src/main/scala/generator/cilk/cilk_for_test09_inner.scala	/^  val compiledStuff = compileResult.getEmittedCircuit$/;"	l
compiledStuff	src/main/scala/generator/cilk/cilk_for_test12.scala	/^  val compiledStuff = compileResult.getEmittedCircuit$/;"	l
compiledStuff	src/main/scala/generator/cilk/cilk_for_test12_detach1.scala	/^  val compiledStuff = compileResult.getEmittedCircuit$/;"	l
compiledStuff	src/main/scala/generator/cilk/cilk_for_test12_detach2.scala	/^  val compiledStuff = compileResult.getEmittedCircuit$/;"	l
compiledStuff	src/main/scala/generator/cilk/cilk_for_test12_detach3.scala	/^  val compiledStuff = compileResult.getEmittedCircuit$/;"	l
compiledStuff	src/main/scala/generator/cilk/cilk_spawn_test01.scala	/^  val compiledStuff = compileResult.getEmittedCircuit$/;"	l
compiledStuff	src/main/scala/generator/cilk/cilk_spawn_test02.scala	/^  val compiledStuff = compileResult.getEmittedCircuit$/;"	l
compiledStuff	src/main/scala/generator/cilk/fib.scala	/^  val compiledStuff = compileResult.getEmittedCircuit$/;"	l
compiledStuff	src/main/scala/generator/cilk/fib_continue.scala	/^  val compiledStuff = compileResult.getEmittedCircuit$/;"	l
compiledStuff	src/main/scala/generator/cilk/mergesort.scala	/^  val compiledStuff = compileResult.getEmittedCircuit$/;"	l
compiledStuff	src/main/scala/generator/cilk/mergesort_merge.scala	/^  val compiledStuff = compileResult.getEmittedCircuit$/;"	l
compiledStuff	src/main/scala/generator/cilk/stencil.scala	/^  val compiledStuff = compileResult.getEmittedCircuit$/;"	l
compiledStuff	src/main/scala/generator/cilk/stencil_detach1.scala	/^  val compiledStuff = compileResult.getEmittedCircuit$/;"	l
compiledStuff	src/main/scala/generator/cilk/stencil_inner.scala	/^  val compiledStuff = compileResult.getEmittedCircuit$/;"	l
compiledStuff	src/main/scala/generator/test01.scala	/^  val compiledStuff = compileResult.getEmittedCircuit$/;"	l
compiledStuff	src/main/scala/generator/test02.scala	/^  val compiledStuff = compileResult.getEmittedCircuit$/;"	l
compiledStuff	src/main/scala/generator/test03.scala	/^  val compiledStuff = compileResult.getEmittedCircuit$/;"	l
compiledStuff	src/main/scala/generator/test04.scala	/^  val compiledStuff = compileResult.getEmittedCircuit$/;"	l
compiledStuff	src/main/scala/generator/test05.scala	/^  val compiledStuff = compileResult.getEmittedCircuit$/;"	l
compiledStuff	src/main/scala/generator/test05b.scala	/^  val compiledStuff = compileResult.getEmittedCircuit$/;"	l
compiledStuff	src/main/scala/generator/test05c.scala	/^  val compiledStuff = compileResult.getEmittedCircuit$/;"	l
compiledStuff	src/main/scala/generator/test06.scala	/^  val compiledStuff = compileResult.getEmittedCircuit$/;"	l
compiledStuff	src/main/scala/generator/test08.scala	/^  val compiledStuff = compileResult.getEmittedCircuit$/;"	l
compiledStuff	src/main/scala/generator/test09.scala	/^  val compiledStuff = compileResult.getEmittedCircuit$/;"	l
compiledStuff	src/main/scala/generator/test10.scala	/^  val compiledStuff = compileResult.getEmittedCircuit$/;"	l
compiledStuff	src/main/scala/generator/test11.scala	/^  val compiledStuff = compileResult.getEmittedCircuit$/;"	l
compiledStuff	src/main/scala/generator/test11_add.scala	/^  val compiledStuff = compileResult.getEmittedCircuit$/;"	l
compiledStuff	src/main/scala/generator/test12.scala	/^  val compiledStuff = compileResult.getEmittedCircuit$/;"	l
compiledStuff	src/main/scala/generator/test12_inner.scala	/^  val compiledStuff = compileResult.getEmittedCircuit$/;"	l
compiledStuff	src/main/scala/generator/test14.scala	/^  val compiledStuff = compileResult.getEmittedCircuit$/;"	l
compiledStuff	src/main/scala/generator/test14_inner.scala	/^  val compiledStuff = compileResult.getEmittedCircuit$/;"	l
compiledStuff	src/main/scala/generator/test15.scala	/^  val compiledStuff = compileResult.getEmittedCircuit$/;"	l
compiledStuffA	src/main/scala/generator/cilk/cilk_for_test04.scala	/^  val compiledStuffA = compileResultA.getEmittedCircuit$/;"	l
compiledStuffA	src/main/scala/generator/cilk/cilk_for_test05.scala	/^  val compiledStuffA = compileResultA.getEmittedCircuit$/;"	l
compiledStuffA	src/main/scala/generator/cilk/cilk_for_test06.scala	/^  val compiledStuffA = compileResultA.getEmittedCircuit$/;"	l
compiledStuffA	src/main/scala/generator/cilk/cilk_for_test08.scala	/^  val compiledStuffA = compileResultA.getEmittedCircuit$/;"	l
compiledStuffB	src/main/scala/generator/cilk/cilk_for_test04.scala	/^  val compiledStuffB = compileResultB.getEmittedCircuit$/;"	l
compiledStuffB	src/main/scala/generator/cilk/cilk_for_test05.scala	/^  val compiledStuffB = compileResultB.getEmittedCircuit$/;"	l
compiledStuffB	src/main/scala/generator/cilk/cilk_for_test06.scala	/^  val compiledStuffB = compileResultB.getEmittedCircuit$/;"	l
compiledStuffB	src/main/scala/generator/cilk/cilk_for_test08.scala	/^  val compiledStuffB = compileResultB.getEmittedCircuit$/;"	l
compiledStuffC	src/main/scala/generator/cilk/cilk_for_test04.scala	/^  val compiledStuffC = compileResultC.getEmittedCircuit$/;"	l
compiledStuffC	src/main/scala/generator/cilk/cilk_for_test05.scala	/^  val compiledStuffC = compileResultC.getEmittedCircuit$/;"	l
compiledStuffC	src/main/scala/generator/cilk/cilk_for_test06.scala	/^  val compiledStuffC = compileResultC.getEmittedCircuit$/;"	l
compiledStuffC	src/main/scala/generator/cilk/cilk_for_test08.scala	/^  val compiledStuffC = compileResultC.getEmittedCircuit$/;"	l
complete	src/main/scala/FPU/FPUDiv.scala	/^  val complete = IsOutReady()$/;"	l
complete	src/main/scala/node/LoadSimple.scala	/^  val complete = IsSuccReady() && IsOutReady()$/;"	l
complete	src/main/scala/node/StoreSimple.scala	/^  val complete = IsSuccReady() && IsOutReady()$/;"	l
complete	src/main/scala/node/TypLoad.scala	/^  val complete = IsSuccReady() && IsOutReady()$/;"	l
complete	src/main/scala/node/TypStore.scala	/^  val complete = IsSuccReady() && IsOutReady()$/;"	l
compute01Tester	src/test/scala/dataflow/graph/compute01Df.scala	/^class compute01Tester(df: Compute01DF)$/;"	c
compute02Tester	src/test/scala/dataflow/graph/compute02Df.scala	/^class compute02Tester(df: Compute02DF)$/;"	c
compute03Tester	src/test/scala/dataflow/graph/compute03DF.scala	/^class compute03Tester(df: Compute03DF)$/;"	c
compute04Tester	src/test/scala/dataflow/graph/compute04DF.scala	/^class compute04Tester(df: Compute04DF)$/;"	c
computeF02STester	src/test/scala/dataflow/fuse/computeFuse02.scala	/^class computeF02STester(df: ComputeFuse02SDF)$/;"	c
computeF03CTester	src/test/scala/dataflow/fuse/computeFuse03.scala	/^class computeF03CTester(df: ComputeFuse03CDF)$/;"	c
computeF04PTester	src/test/scala/dataflow/fuse/computeFuse04.scala	/^class computeF04PTester(df: ComputeFuse04PDF)$/;"	c
computeFuse01Tester	src/test/scala/dataflow/fuse/computeFuse01.scala	/^class computeFuse01Tester(df: ComputeFuse01DF)$/;"	c
computeTester	src/test/scala/node/computeNode.scala	/^class computeTester(df: ComputeNode)$/;"	c
config	src/main/scala/config/FPConfigs.scala	/^package config$/;"	p
config	src/main/scala/config/TestConfigs.scala	/^package config$/;"	p
config	src/main/scala/config/config.scala	/^package config$/;"	p
config	src/main/scala/config/configurations.scala	/^package config$/;"	p
config	src/main/scala/config/util.scala	/^package config$/;"	p
config.cde	src/main/scala/config/cde/Config.scala	/^package config.cde$/;"	p
config.cde	src/main/scala/config/cde/Dump.scala	/^package config.cde$/;"	p
config.cde	src/main/scala/config/cde/Expression.scala	/^package config.cde$/;"	p
config.cde	src/main/scala/config/cde/Parameters.scala	/^package config.cde$/;"	p
config_R	src/main/scala/switches/DyserSwitch.scala	/^  val config_R = RegInit(Sel.U(max(1, log2Ceil(NInputs)).W))$/;"	l
constrain	src/main/scala/config/cde/Parameters.scala	/^  def constrain(gen:ViewSym=>Ex[Boolean]) = {$/;"	m
constraints	src/main/scala/config/cde/Parameters.scala	/^  def constraints():List[Ex[Boolean]] = {$/;"	m
control	src/main/scala/control/BasicBlock.scala	/^package control$/;"	p
control	src/main/scala/interfaces/interfaces.scala	/^  val control = Bool()$/;"	l
controlTester	src/test/scala/node/controlNode.scala	/^class controlTester(df: BasicBlockNode)$/;"	c
copyfile	scripts/TypeStackFile.py	/^from shutil import copyfile$/;"	i
core	src/main/scala/accel/Accelerator.scala	/^  val core  = Module(coreDF)$/;"	l
count	src/test/scala/concurrent/DecoupledTaskTest.scala	/^  var count = 0$/;"	l
count	src/test/scala/verilogmain/TypStackSweeper.scala	/^  var count = 0$/;"	l
count	src/test/scala/verilogmain/TypeStackSweeper16b.scala	/^  var count = 0$/;"	l
countIn	src/test/scala/concurrent/DecoupledTaskTest.scala	/^  var countIn = 0$/;"	l
countOn	src/main/scala/accel/Cache.scala	/^  val countOn = true.B \/\/ increment counter every clock cycle$/;"	l
countOn	src/main/scala/accel/DataBundleReg.scala	/^  val countOn = true.B \/\/ increment counter every clock cycle$/;"	l
countOn	src/main/scala/dataflow/filter/BasicFilter.scala	/^  val countOn = true.B \/\/ increment counter every clock cycle$/;"	l
countOn	src/main/scala/dataflow/filter/VecFilter.scala	/^  val countOn = true.B \/\/ increment counter every clock cycle$/;"	l
countOut	src/test/scala/concurrent/DecoupledTaskTest.scala	/^  var countOut = 0$/;"	l
count_back	src/test/scala/concurrent/ReattachTest.scala	/^  var count_back = 0$/;"	l
count_back	src/test/scala/concurrent/TaskControllerTest.scala	/^  var count_back = 0$/;"	l
count_in	src/test/scala/concurrent/DetachTest.scala	/^  var count_in = 0$/;"	l
count_in	src/test/scala/concurrent/ReattachTest.scala	/^  var count_in = Array(0,0,0)$/;"	l
count_in	src/test/scala/concurrent/TaskControllerTest.scala	/^  var count_in = 0$/;"	l
count_out	src/test/scala/concurrent/DetachTest.scala	/^  var count_out = Array(0,0,0)$/;"	l
count_out	src/test/scala/concurrent/TaskControllerTest.scala	/^  var count_out = 0$/;"	l
counter	src/main/scala/node/LoadMaskNode.scala	/^  val counter = RegInit(1.U)$/;"	l
counter	src/main/scala/regfile/InputRegFile.scala	/^  val counter = Module(new IndexCounter())$/;"	l
cpu	src/main/scala/accel/Cache.scala	/^  val cpu   = new CacheIO$/;"	l
cpu	src/main/scala/memory/MemArbiter.scala	/^    val cpu = new Bundle {$/;"	l
cpu_data	src/main/scala/accel/Cache.scala	/^  val cpu_data = Reg(io.cpu.req.bits.data.cloneType)$/;"	l
cpu_iswrite	src/main/scala/accel/Cache.scala	/^  val cpu_iswrite  = Reg(io.cpu.req.bits.iswrite.cloneType)$/;"	l
cpu_mask	src/main/scala/accel/Cache.scala	/^  val cpu_mask = Reg(io.cpu.req.bits.mask.cloneType)$/;"	l
cpu_tag	src/main/scala/accel/Cache.scala	/^  val cpu_tag  = Reg(io.cpu.req.bits.tag.cloneType)$/;"	l
csv	scripts/TypeStackFile.py	/^import csv$/;"	i
ctrl	src/main/scala/accel/Core.scala	/^      val ctrl   = Vec(cNum,Flipped(Decoupled(new DataBundle())))$/;"	l
ctrl	src/main/scala/accel/DataBundleReg.scala	/^      val ctrl  = Vec(cNum,Decoupled(new DataBundle()))$/;"	l
ctrl	src/main/scala/accel/SimpleReg.scala	/^      val ctrl = Output(Vec(cNum,UInt(xlen.W)))$/;"	l
ctrl	src/main/scala/accel/coredf/VecFilterNoKernDFCore.scala	/^  val ctrl = Reg(Vec(FilterSize,Decoupled(new TypBundle())))$/;"	l
ctrlBank	src/main/scala/accel/DataBundleReg.scala	/^  val ctrlBank = RegInit(Vec(Seq.fill(cNum+numCfg)(Vec(Seq.fill(xlen\/8)(0.asUInt(8.W))))))$/;"	l
ctrlBank	src/main/scala/accel/SimpleReg.scala	/^  val ctrlBank = RegInit(Vec(Seq.fill(cNum+numCfg)(Vec(Seq.fill(xlen\/8)(0.asUInt(8.W))))))$/;"	l
ctrlPredicate_R	src/main/scala/concurrent/Reattach.scala	/^  val ctrlPredicate_R = RegInit(VecInit(Seq.fill(NumPredOps){DataBundle.default}))$/;"	l
ctrlReady_R	src/main/scala/concurrent/Reattach.scala	/^  val ctrlReady_R = RegInit(VecInit(Seq.fill(NumPredOps){false.B}))$/;"	l
d	src/test/scala/accel/CacheTests.scala	/^  val d    = Mem(nSets, Bool())$/;"	l
data	src/main/scala/accel/Cache.scala	/^      val data = Vec.tabulate(wBytes)(k => wdata(i*xlen+(k+1)*8-1, i*xlen+k*8))$/;"	l
data	src/main/scala/accel/Cache.scala	/^  val data    = UInt(xlen.W)$/;"	l
data	src/main/scala/accel/CacheModel.scala	/^  val data  = Mem(nSets, Vec(bBytes, UInt(8.W))) \/\/ nSets deep, block size wide$/;"	l
data	src/main/scala/accel/NastiMaster.scala	/^  val data = UInt(xlen.W)$/;"	l
data	src/main/scala/accel/NastiMemSlave.scala	/^  val data = UInt(nastiXDataBits.W)$/;"	l
data	src/main/scala/dataflow/filter/BasicFilter.scala	/^    val data   = Vec(FilterSize,Flipped(Decoupled(new DataBundle())))$/;"	l
data	src/main/scala/dataflow/filter/BasicLoader.scala	/^    val data   = Vec(FilterSize,Decoupled(new DataBundle()))$/;"	l
data	src/main/scala/dataflow/filter/CacheLoader.scala	/^    val data   = Vec(FilterSize,Decoupled(new DataBundle()))$/;"	l
data	src/main/scala/dataflow/filter/CacheVecLoader.scala	/^    val data   = Vec(FilterSize,Decoupled(new TypBundle()))$/;"	l
data	src/main/scala/dataflow/filter/VecFilter.scala	/^    val data   = Vec(FilterSize,Flipped(Decoupled(new TypBundle())))$/;"	l
data	src/main/scala/interfaces/interfaces.scala	/^  val data    = UInt(xlen.W)$/;"	l
data	src/main/scala/interfaces/interfaces.scala	/^  val data   = new VariableData(argTypes)$/;"	l
data	src/main/scala/interfaces/interfaces.scala	/^  val data   = new VariableDecoupledData(argTypes)$/;"	l
data	src/main/scala/interfaces/interfaces.scala	/^  val data   = new VariableDecoupledVec(argTypes)$/;"	l
data	src/main/scala/interfaces/interfaces.scala	/^  val data = UInt(Typ_SZ.W)$/;"	l
data	src/main/scala/interfaces/interfaces.scala	/^  val data = UInt(xlen.W)$/;"	l
data	src/main/scala/interfaces/interfaces.scala	/^  val data = gen.chiselCloneType$/;"	l
data	src/main/scala/junctions/nasti.scala	/^  val data = UInt(width = nastiXDataBits)$/;"	l
data	src/main/scala/loop/LoopElement.scala	/^    val data  = Output(CustomDataBundle()) \/\/ Defaults to UInt(32.W)$/;"	l
data	src/main/scala/node/TypCompute.scala	/^  val data = Vec(2, UInt(xlen.W))$/;"	l
data	src/main/scala/node/TypCompute.scala	/^  val data = Vec(2, Vec(2, UInt(xlen.W)))$/;"	l
data	src/main/scala/node/TypCompute.scala	/^  val data = Vec(3, UInt(xlen.W))$/;"	l
data	src/test/scala/accel/CacheTests.scala	/^  val data = (Vec(testVec)(testCnt) >> (blen + slen + tlen))(bBits-1, 0)$/;"	l
data	src/test/scala/accel/CacheTests.scala	/^  val data = Mem(nSets, UInt(bBits.W))$/;"	l
data	src/test/scala/dataflow/UnTypMemDataflow.scala	/^        var data = peek(df.io.Out(i).bits.data)$/;"	l
data	src/test/scala/generator/cilk/bgemm_test.scala	/^      val data = peek(c.io.out.bits.data("field0").data)$/;"	l
data	src/test/scala/generator/cilk/bgemm_test.scala	/^    val data = peek(c.io.dout)$/;"	l
data	src/test/scala/generator/cilk/cilk_for_test01_test.scala	/^      val data = peek(c.io.out.bits.data("field0").data)$/;"	l
data	src/test/scala/generator/cilk/cilk_for_test02_test.scala	/^      val data = peek(c.io.out.bits.data("field0").data)$/;"	l
data	src/test/scala/generator/cilk/cilk_for_test04_test.scala	/^      val data = peek(c.io.out.bits.data("field0").data)$/;"	l
data	src/test/scala/generator/cilk/cilk_for_test04_test.scala	/^    val data = peek(c.io.dout)$/;"	l
data	src/test/scala/generator/cilk/cilk_for_test05_test.scala	/^      val data = peek(c.io.out.bits.data("field0").data)$/;"	l
data	src/test/scala/generator/cilk/cilk_for_test06_test.scala	/^      val data = peek(c.io.out.bits.data("field0").data)$/;"	l
data	src/test/scala/generator/cilk/cilk_for_test06_test.scala	/^    val data = peek(c.io.dout)$/;"	l
data	src/test/scala/generator/cilk/cilk_for_test07_test.scala	/^      val data = peek(c.io.out.bits.data("field0").data)$/;"	l
data	src/test/scala/generator/cilk/cilk_for_test07_test.scala	/^    val data = peek(c.io.dout)$/;"	l
data	src/test/scala/generator/cilk/cilk_for_test08_test.scala	/^      val data = peek(c.io.out.bits.data("field0").data)$/;"	l
data	src/test/scala/generator/cilk/cilk_for_test08_test.scala	/^    val data = peek(c.io.dout)$/;"	l
data	src/test/scala/generator/cilk/cilk_for_test09_test.scala	/^      val data = peek(c.io.out.bits.data("field0").data)$/;"	l
data	src/test/scala/generator/cilk/cilk_for_test09_test.scala	/^    val data = peek(c.io.dout)$/;"	l
data	src/test/scala/generator/cilk/cilk_for_test12_test.scala	/^      val data = peek(c.io.out.bits.data("field0").data)$/;"	l
data	src/test/scala/generator/cilk/cilk_for_test12_test.scala	/^    val data = peek(c.io.dout)$/;"	l
data	src/test/scala/generator/cilk/cilk_spawn_test01_test.scala	/^      val data = peek(c.io.out.bits.data("field0").data)$/;"	l
data	src/test/scala/generator/cilk/cilk_spawn_test02_test.scala	/^      val data = peek(c.io.out.bits.data("field0").data)$/;"	l
data	src/test/scala/generator/cilk/fib_test.scala	/^      val data = peek(c.io.out.bits.data("field0").data)$/;"	l
data	src/test/scala/generator/cilk/mergesort_test.scala	/^      val data = peek(c.io.out.bits.data("field0").data)$/;"	l
data	src/test/scala/generator/cilk/mergesort_test.scala	/^    val data = peek(c.io.dout)$/;"	l
data	src/test/scala/generator/cilk/stencil_test.scala	/^      val data = peek(c.io.out.bits.data("field0").data)$/;"	l
data	src/test/scala/generator/cilk/stencil_test.scala	/^    val data = peek(c.io.dout)$/;"	l
data	src/test/scala/generator/test01_test.scala	/^      val data = peek(c.io.out.bits.data("field0").data)$/;"	l
data	src/test/scala/generator/test02_test.scala	/^      val data = peek(c.io.out.bits.data("field0").data)$/;"	l
data	src/test/scala/generator/test03_test.scala	/^      val data = peek(c.io.out.bits.data("field0").data)$/;"	l
data	src/test/scala/generator/test04_test.scala	/^      val data = peek(c.io.out.bits.data("field0").data)$/;"	l
data	src/test/scala/generator/test05_test.scala	/^      val data = peek(c.io.out.bits.data("field0").data)$/;"	l
data	src/test/scala/generator/test05_test.scala	/^    val data = peek(c.io.dout)$/;"	l
data	src/test/scala/generator/test06_test.scala	/^      val data = peek(c.io.out.bits.data("field0").data)$/;"	l
data	src/test/scala/generator/test08_test.scala	/^      val data = peek(c.io.out.bits.data("field0").data)$/;"	l
data	src/test/scala/generator/test09_test.scala	/^      val data = peek(c.io.out.bits.data("field0").data)$/;"	l
data	src/test/scala/generator/test10_test.scala	/^      val data = peek(c.io.out.bits.data("field0").data)$/;"	l
data	src/test/scala/generator/test11_test.scala	/^      val data = peek(c.io.out.bits.data("field0").data)$/;"	l
data	src/test/scala/generator/test12_test.scala	/^      val data = peek(c.io.out.bits.data("field0").data)$/;"	l
data	src/test/scala/generator/test14_test.scala	/^      val data = peek(c.io.out.bits.data("field0").data)$/;"	l
data	src/test/scala/generator/test15_test.scala	/^      val data = peek(c.io.out.bits.data("field0").data)$/;"	l
data	src/test/scala/generator/test15_test.scala	/^    val data = peek(c.io.dout)$/;"	l
data0	src/main/scala/dataflow/fuse/computeFuse01.scala	/^    val data0 = Flipped(Decoupled(new DataBundle()))$/;"	l
data0	src/main/scala/dataflow/fuse/computeFuse02.scala	/^    val data0 = Flipped(Decoupled(new DataBundle()))$/;"	l
data0	src/main/scala/dataflow/fuse/computeFuse03.scala	/^    val data0 = Flipped(Decoupled(new DataBundle()))$/;"	l
data0	src/main/scala/dataflow/fuse/computeFuse04.scala	/^    val data0 = Flipped(Decoupled(new DataBundle()))$/;"	l
data0	src/main/scala/dataflow/graph/compute01DF.scala	/^    val data0 = Flipped(Decoupled(new DataBundle()))$/;"	l
data0	src/main/scala/dataflow/graph/compute02DF.scala	/^    val data0 = Flipped(Decoupled(new DataBundle()))$/;"	l
data0	src/main/scala/dataflow/graph/compute03DF.scala	/^    val data0 = Flipped(Decoupled(new DataBundle()))$/;"	l
data0	src/main/scala/dataflow/graph/compute04DF.scala	/^    val data0 = Flipped(Decoupled(new DataBundle()))$/;"	l
data1	src/main/scala/dataflow/fuse/computeFuse01.scala	/^    val data1 = Flipped(Decoupled(new DataBundle()))$/;"	l
data1	src/main/scala/dataflow/fuse/computeFuse02.scala	/^    val data1 = Flipped(Decoupled(new DataBundle()))$/;"	l
data1	src/main/scala/dataflow/fuse/computeFuse03.scala	/^    val data1 = Flipped(Decoupled(new DataBundle()))$/;"	l
data1	src/main/scala/dataflow/fuse/computeFuse04.scala	/^    val data1 = Flipped(Decoupled(new DataBundle()))$/;"	l
data1	src/main/scala/dataflow/graph/compute01DF.scala	/^    val data1 = Flipped(Decoupled(new DataBundle()))$/;"	l
data1	src/main/scala/dataflow/graph/compute02DF.scala	/^    val data1 = Flipped(Decoupled(new DataBundle()))$/;"	l
data1	src/main/scala/dataflow/graph/compute03DF.scala	/^    val data1 = Flipped(Decoupled(new DataBundle()))$/;"	l
data1	src/main/scala/dataflow/graph/compute04DF.scala	/^    val data1 = Flipped(Decoupled(new DataBundle()))$/;"	l
data10	src/main/scala/dataflow/fuse/computeFuse03.scala	/^    val data10 = Flipped(Decoupled(new DataBundle()))$/;"	l
data10	src/main/scala/dataflow/graph/compute03DF.scala	/^    val data10 = Flipped(Decoupled(new DataBundle()))$/;"	l
data11	src/main/scala/dataflow/fuse/computeFuse03.scala	/^    val data11 = Flipped(Decoupled(new DataBundle()))$/;"	l
data11	src/main/scala/dataflow/graph/compute03DF.scala	/^    val data11 = Flipped(Decoupled(new DataBundle()))$/;"	l
data2	src/main/scala/dataflow/fuse/computeFuse01.scala	/^    val data2 = Flipped(Decoupled(new DataBundle()))$/;"	l
data2	src/main/scala/dataflow/fuse/computeFuse02.scala	/^    val data2 = Flipped(Decoupled(new DataBundle()))$/;"	l
data2	src/main/scala/dataflow/fuse/computeFuse03.scala	/^    val data2 = Flipped(Decoupled(new DataBundle()))$/;"	l
data2	src/main/scala/dataflow/fuse/computeFuse04.scala	/^    val data2 = Flipped(Decoupled(new DataBundle()))$/;"	l
data2	src/main/scala/dataflow/graph/compute01DF.scala	/^    val data2 = Flipped(Decoupled(new DataBundle()))$/;"	l
data2	src/main/scala/dataflow/graph/compute02DF.scala	/^    val data2 = Flipped(Decoupled(new DataBundle()))$/;"	l
data2	src/main/scala/dataflow/graph/compute03DF.scala	/^    val data2 = Flipped(Decoupled(new DataBundle()))$/;"	l
data2	src/main/scala/dataflow/graph/compute04DF.scala	/^    val data2 = Flipped(Decoupled(new DataBundle()))$/;"	l
data3	src/main/scala/dataflow/fuse/computeFuse01.scala	/^    val data3 = Flipped(Decoupled(new DataBundle()))$/;"	l
data3	src/main/scala/dataflow/fuse/computeFuse02.scala	/^    val data3 = Flipped(Decoupled(new DataBundle()))$/;"	l
data3	src/main/scala/dataflow/fuse/computeFuse03.scala	/^    val data3 = Flipped(Decoupled(new DataBundle()))$/;"	l
data3	src/main/scala/dataflow/fuse/computeFuse04.scala	/^    val data3 = Flipped(Decoupled(new DataBundle()))$/;"	l
data3	src/main/scala/dataflow/graph/compute01DF.scala	/^    val data3 = Flipped(Decoupled(new DataBundle()))$/;"	l
data3	src/main/scala/dataflow/graph/compute02DF.scala	/^    val data3 = Flipped(Decoupled(new DataBundle()))$/;"	l
data3	src/main/scala/dataflow/graph/compute03DF.scala	/^    val data3 = Flipped(Decoupled(new DataBundle()))$/;"	l
data3	src/main/scala/dataflow/graph/compute04DF.scala	/^    val data3 = Flipped(Decoupled(new DataBundle()))$/;"	l
data4	src/main/scala/dataflow/fuse/computeFuse02.scala	/^    val data4 = Flipped(Decoupled(new DataBundle()))$/;"	l
data4	src/main/scala/dataflow/fuse/computeFuse03.scala	/^    val data4 = Flipped(Decoupled(new DataBundle()))$/;"	l
data4	src/main/scala/dataflow/fuse/computeFuse04.scala	/^    val data4 = Flipped(Decoupled(new DataBundle()))$/;"	l
data4	src/main/scala/dataflow/graph/compute02DF.scala	/^    val data4 = Flipped(Decoupled(new DataBundle()))$/;"	l
data4	src/main/scala/dataflow/graph/compute03DF.scala	/^    val data4 = Flipped(Decoupled(new DataBundle()))$/;"	l
data4	src/main/scala/dataflow/graph/compute04DF.scala	/^    val data4 = Flipped(Decoupled(new DataBundle()))$/;"	l
data5	src/main/scala/dataflow/fuse/computeFuse02.scala	/^    val data5 = Flipped(Decoupled(new DataBundle()))$/;"	l
data5	src/main/scala/dataflow/fuse/computeFuse03.scala	/^    val data5 = Flipped(Decoupled(new DataBundle()))$/;"	l
data5	src/main/scala/dataflow/fuse/computeFuse04.scala	/^    val data5 = Flipped(Decoupled(new DataBundle()))$/;"	l
data5	src/main/scala/dataflow/graph/compute02DF.scala	/^    val data5 = Flipped(Decoupled(new DataBundle()))$/;"	l
data5	src/main/scala/dataflow/graph/compute03DF.scala	/^    val data5 = Flipped(Decoupled(new DataBundle()))$/;"	l
data5	src/main/scala/dataflow/graph/compute04DF.scala	/^    val data5 = Flipped(Decoupled(new DataBundle()))$/;"	l
data6	src/main/scala/dataflow/fuse/computeFuse02.scala	/^    val data6 = Flipped(Decoupled(new DataBundle()))$/;"	l
data6	src/main/scala/dataflow/fuse/computeFuse03.scala	/^    val data6 = Flipped(Decoupled(new DataBundle()))$/;"	l
data6	src/main/scala/dataflow/graph/compute02DF.scala	/^    val data6 = Flipped(Decoupled(new DataBundle()))$/;"	l
data6	src/main/scala/dataflow/graph/compute03DF.scala	/^    val data6 = Flipped(Decoupled(new DataBundle()))$/;"	l
data7	src/main/scala/dataflow/fuse/computeFuse03.scala	/^    val data7 = Flipped(Decoupled(new DataBundle()))$/;"	l
data7	src/main/scala/dataflow/graph/compute03DF.scala	/^    val data7 = Flipped(Decoupled(new DataBundle()))$/;"	l
data8	src/main/scala/dataflow/fuse/computeFuse03.scala	/^    val data8 = Flipped(Decoupled(new DataBundle()))$/;"	l
data8	src/main/scala/dataflow/graph/compute03DF.scala	/^    val data8 = Flipped(Decoupled(new DataBundle()))$/;"	l
data9	src/main/scala/dataflow/fuse/computeFuse03.scala	/^    val data9 = Flipped(Decoupled(new DataBundle()))$/;"	l
data9	src/main/scala/dataflow/graph/compute03DF.scala	/^    val data9 = Flipped(Decoupled(new DataBundle()))$/;"	l
dataBeats	src/main/scala/accel/Cache.scala	/^  val dataBeats = bBits \/ nastiXDataBits$/;"	l
dataBytes	src/main/scala/accel/Core.scala	/^  val dataBytes = xlen \/ 8$/;"	l
dataIn	src/main/scala/concurrent/Reattach.scala	/^  val dataIn = Flipped(Decoupled(new DataBundle()))$/;"	l
dataIn_reg	src/main/scala/node/Relay.scala	/^  val dataIn_reg  = RegInit(0.U(tlen.W))$/;"	l
dataMem	src/main/scala/accel/Cache.scala	/^  val dataMem  = Seq.fill(nWords)(Mem(nSets, Vec(wBytes, UInt(8.W))))$/;"	l
dataOut	src/main/scala/dataflow/fuse/computeFuse01.scala	/^    val dataOut = Decoupled(new DataBundle())$/;"	l
dataOut	src/main/scala/dataflow/fuse/computeFuse04.scala	/^    val dataOut = Decoupled(new DataBundle())$/;"	l
dataOut	src/main/scala/dataflow/graph/compute01DF.scala	/^    val dataOut = Decoupled(new DataBundle())$/;"	l
dataOut	src/main/scala/dataflow/graph/compute04DF.scala	/^    val dataOut = Decoupled(new DataBundle())$/;"	l
dataOut0	src/main/scala/dataflow/fuse/computeFuse02.scala	/^    val dataOut0 = Decoupled(new DataBundle())$/;"	l
dataOut0	src/main/scala/dataflow/fuse/computeFuse03.scala	/^    val dataOut0 = Decoupled(new DataBundle())$/;"	l
dataOut0	src/main/scala/dataflow/graph/compute02DF.scala	/^    val dataOut0 = Decoupled(new DataBundle())$/;"	l
dataOut0	src/main/scala/dataflow/graph/compute03DF.scala	/^    val dataOut0 = Decoupled(new DataBundle())$/;"	l
dataOut1	src/main/scala/dataflow/fuse/computeFuse02.scala	/^    val dataOut1 = Decoupled(new DataBundle())$/;"	l
dataOut1	src/main/scala/dataflow/fuse/computeFuse03.scala	/^    val dataOut1 = Decoupled(new DataBundle())$/;"	l
dataOut1	src/main/scala/dataflow/graph/compute02DF.scala	/^    val dataOut1 = Decoupled(new DataBundle())$/;"	l
dataOut1	src/main/scala/dataflow/graph/compute03DF.scala	/^    val dataOut1 = Decoupled(new DataBundle())$/;"	l
dataV_reg	src/main/scala/node/Relay.scala	/^  val dataV_reg   = RegInit(false.B)$/;"	l
dataVec	src/test/scala/generator/cilk/cilk_for_test05_test.scala	/^  val dataVec = VecInit( 0.U, 1.U, 2.U, 3.U, 4.U, 5.U, 6.U, 7.U, 8.U, 9.U,$/;"	l
dataVec	src/test/scala/generator/test10_test.scala	/^  val dataVec = VecInit(1.U,2.U,3.U,4.U)$/;"	l
dataVec	src/test/scala/generator/test11_test.scala	/^  val dataVec = VecInit(1.U,2.U,3.U,4.U)$/;"	l
dataVec	src/test/scala/generator/test12_test.scala	/^  val dataVec = VecInit(1.U, 2.U, 3.U, 4.U)$/;"	l
data_R	src/main/scala/FPU/FPUDiv.scala	/^  val data_R = RegInit(DataBundle.default)$/;"	l
data_R	src/main/scala/concurrent/Detach.scala	/^  val data_R = RegInit(0.U(xlen.W))$/;"	l
data_R	src/main/scala/concurrent/Reattach.scala	/^  val data_R = RegInit(DataBundle.default)$/;"	l
data_R	src/main/scala/loop/LoopElement.scala	/^  val data_R = RegNext(io.inData.bits)$/;"	l
data_R	src/main/scala/node/Alloca.scala	/^  val data_R = RegInit(0.U(xlen.W))$/;"	l
data_R	src/main/scala/node/BranchNode.scala	/^  val data_R = RegInit(0.U(xlen.W))$/;"	l
data_R	src/main/scala/node/CallOutNode.scala	/^  val data_R = Reg(new VariableData(argTypes))$/;"	l
data_R	src/main/scala/node/JumpNode.scala	/^  val data_R = RegInit(0.U(xlen.W))$/;"	l
data_R	src/main/scala/node/LoadSimple.scala	/^  val data_R = RegInit(DataBundle.default)$/;"	l
data_R	src/main/scala/node/StoreNode.scala	/^  val data_R = RegInit(DataBundle.default)$/;"	l
data_R	src/main/scala/node/StoreSimple.scala	/^  val data_R = RegInit(DataBundle.default)$/;"	l
data_R	src/main/scala/node/TypCompute.scala	/^  val data_R = RegInit(TypBundle.default)$/;"	l
data_R	src/main/scala/node/TypLoad.scala	/^  val data_R = RegInit(TypBundle.default)$/;"	l
data_R	src/main/scala/node/TypStore.scala	/^  val data_R = RegInit(TypBundle.default)$/;"	l
data_W	src/main/scala/node/GepNode.scala	/^  val data_W = base_addr_R.data +$/;"	l
data_out_R	src/main/scala/node/BranchNode.scala	/^  val data_out_R = RegInit(VecInit(Seq.fill(2)(false.B)))$/;"	l
data_valid_R	src/main/scala/FPU/FPUDiv.scala	/^  val data_valid_R = RegInit(false.B)$/;"	l
data_valid_R	src/main/scala/concurrent/Reattach.scala	/^  val data_valid_R = RegInit(false.B)$/;"	l
data_valid_R	src/main/scala/node/CallOutNode.scala	/^  val data_valid_R = RegInit(VecInit(Seq.fill(argTypes.length) {$/;"	l
data_valid_R	src/main/scala/node/LoadSimple.scala	/^  val data_valid_R = RegInit(false.B)$/;"	l
data_valid_R	src/main/scala/node/StoreNode.scala	/^  val data_valid_R = RegInit(false.B)$/;"	l
data_valid_R	src/main/scala/node/StoreSimple.scala	/^  val data_valid_R = RegInit(false.B)$/;"	l
data_valid_R	src/main/scala/node/TypLoad.scala	/^  val data_valid_R = RegInit(false.B)$/;"	l
data_valid_R	src/main/scala/node/TypStore.scala	/^  val data_valid_R = RegInit(false.B)$/;"	l
dataflow	src/main/scala/concurrent/Detach.scala	/^package dataflow$/;"	p
dataflow	src/main/scala/concurrent/Reattach.scala	/^package dataflow$/;"	p
dataflow	src/main/scala/concurrent/Sync.scala	/^package dataflow$/;"	p
dataflow	src/main/scala/concurrent/TaskController.scala	/^package dataflow$/;"	p
dataflow	src/main/scala/dataflow/AdditionDF.scala	/^package dataflow$/;"	p
dataflow	src/main/scala/dataflow/AllocaDF.scala	/^package dataflow$/;"	p
dataflow	src/main/scala/dataflow/DataFlow.scala	/^package dataflow$/;"	p
dataflow	src/main/scala/dataflow/MemDataFlow.scala	/^package dataflow$/;"	p
dataflow	src/main/scala/dataflow/SharedFPDiv.scala	/^package dataflow$/;"	p
dataflow	src/main/scala/dataflow/TestCacheDataFlow.scala	/^package dataflow$/;"	p
dataflow	src/main/scala/dataflow/TypeMemDataFlow.scala	/^package dataflow$/;"	p
dataflow	src/main/scala/generator/cilk/bgemm.scala	/^package dataflow$/;"	p
dataflow	src/main/scala/generator/cilk/bgemm_detach1.scala	/^package dataflow$/;"	p
dataflow	src/main/scala/generator/cilk/bgemm_detach2.scala	/^package dataflow$/;"	p
dataflow	src/main/scala/generator/cilk/bgemm_detach3.scala	/^package dataflow$/;"	p
dataflow	src/main/scala/generator/cilk/cilk_for_test01.scala	/^package dataflow$/;"	p
dataflow	src/main/scala/generator/cilk/cilk_for_test02.scala	/^package dataflow$/;"	p
dataflow	src/main/scala/generator/cilk/cilk_for_test02_mul.scala	/^package dataflow$/;"	p
dataflow	src/main/scala/generator/cilk/cilk_for_test04.scala	/^package dataflow$/;"	p
dataflow	src/main/scala/generator/cilk/cilk_for_test04_detach.scala	/^package dataflow$/;"	p
dataflow	src/main/scala/generator/cilk/cilk_for_test05.scala	/^package dataflow$/;"	p
dataflow	src/main/scala/generator/cilk/cilk_for_test05_detach.scala	/^package dataflow$/;"	p
dataflow	src/main/scala/generator/cilk/cilk_for_test06.scala	/^package dataflow$/;"	p
dataflow	src/main/scala/generator/cilk/cilk_for_test06_detach.scala	/^package dataflow$/;"	p
dataflow	src/main/scala/generator/cilk/cilk_for_test06_detach_2.scala	/^package dataflow$/;"	p
dataflow	src/main/scala/generator/cilk/cilk_for_test07.scala	/^package dataflow$/;"	p
dataflow	src/main/scala/generator/cilk/cilk_for_test07_detach.scala	/^package dataflow$/;"	p
dataflow	src/main/scala/generator/cilk/cilk_for_test08.scala	/^package dataflow$/;"	p
dataflow	src/main/scala/generator/cilk/cilk_for_test08_detach.scala	/^package dataflow$/;"	p
dataflow	src/main/scala/generator/cilk/cilk_for_test09.scala	/^package dataflow$/;"	p
dataflow	src/main/scala/generator/cilk/cilk_for_test09_inner.scala	/^package dataflow$/;"	p
dataflow	src/main/scala/generator/cilk/cilk_for_test12.scala	/^package dataflow$/;"	p
dataflow	src/main/scala/generator/cilk/cilk_for_test12_detach1.scala	/^package dataflow$/;"	p
dataflow	src/main/scala/generator/cilk/cilk_for_test12_detach2.scala	/^package dataflow$/;"	p
dataflow	src/main/scala/generator/cilk/cilk_for_test12_detach3.scala	/^package dataflow$/;"	p
dataflow	src/main/scala/generator/cilk/cilk_spawn_test01.scala	/^package dataflow$/;"	p
dataflow	src/main/scala/generator/cilk/cilk_spawn_test02.scala	/^package dataflow$/;"	p
dataflow	src/main/scala/generator/cilk/fib.scala	/^package dataflow$/;"	p
dataflow	src/main/scala/generator/cilk/fib_continue.scala	/^package dataflow$/;"	p
dataflow	src/main/scala/generator/cilk/mergesort.scala	/^package dataflow$/;"	p
dataflow	src/main/scala/generator/cilk/mergesort_merge.scala	/^package dataflow$/;"	p
dataflow	src/main/scala/generator/cilk/stencil.scala	/^package dataflow$/;"	p
dataflow	src/main/scala/generator/cilk/stencil_detach1.scala	/^package dataflow$/;"	p
dataflow	src/main/scala/generator/cilk/stencil_inner.scala	/^package dataflow$/;"	p
dataflow	src/main/scala/generator/test01.scala	/^package dataflow$/;"	p
dataflow	src/main/scala/generator/test02.scala	/^package dataflow$/;"	p
dataflow	src/main/scala/generator/test03.scala	/^package dataflow$/;"	p
dataflow	src/main/scala/generator/test04.scala	/^package dataflow$/;"	p
dataflow	src/main/scala/generator/test05.scala	/^package dataflow$/;"	p
dataflow	src/main/scala/generator/test05b.scala	/^package dataflow$/;"	p
dataflow	src/main/scala/generator/test05c.scala	/^package dataflow$/;"	p
dataflow	src/main/scala/generator/test06.scala	/^package dataflow$/;"	p
dataflow	src/main/scala/generator/test08.scala	/^package dataflow$/;"	p
dataflow	src/main/scala/generator/test09.scala	/^package dataflow$/;"	p
dataflow	src/main/scala/generator/test10.scala	/^package dataflow$/;"	p
dataflow	src/main/scala/generator/test11.scala	/^package dataflow$/;"	p
dataflow	src/main/scala/generator/test11_add.scala	/^package dataflow$/;"	p
dataflow	src/main/scala/generator/test12.scala	/^package dataflow$/;"	p
dataflow	src/main/scala/generator/test12_inner.scala	/^package dataflow$/;"	p
dataflow	src/main/scala/generator/test14.scala	/^package dataflow$/;"	p
dataflow	src/main/scala/generator/test14_inner.scala	/^package dataflow$/;"	p
dataflow	src/main/scala/generator/test15.scala	/^package dataflow$/;"	p
dataflow	src/test/scala/concurrent/DecoupledTaskTest.scala	/^package dataflow$/;"	p
dataflow	src/test/scala/concurrent/DetachTest.scala	/^package dataflow$/;"	p
dataflow	src/test/scala/concurrent/ReattachTest.scala	/^package dataflow$/;"	p
dataflow	src/test/scala/concurrent/TaskControllerTest.scala	/^package dataflow$/;"	p
dataflow	src/test/scala/dataflow/01-sample.scala	/^package dataflow$/;"	p
dataflow	src/test/scala/dataflow/02-alloca.scala	/^package dataflow$/;"	p
dataflow	src/test/scala/dataflow/FPDivDataFlow.scala	/^package dataflow$/;"	p
dataflow	src/test/scala/dataflow/LoadMaskTest.scala	/^package dataflow$/;"	p
dataflow	src/test/scala/dataflow/TypeLoadDataflow.scala	/^package dataflow$/;"	p
dataflow	src/test/scala/dataflow/TypeMemDataFlow.scala	/^package dataflow$/;"	p
dataflow	src/test/scala/dataflow/UnTypMemDataflow.scala	/^package dataflow$/;"	p
dataflow	src/test/scala/generator/cilk/bgemm_test.scala	/^package dataflow$/;"	p
dataflow	src/test/scala/generator/cilk/cilk_for_test01_test.scala	/^package dataflow$/;"	p
dataflow	src/test/scala/generator/cilk/cilk_for_test02_test.scala	/^package dataflow$/;"	p
dataflow	src/test/scala/generator/cilk/cilk_for_test04_test.scala	/^package dataflow$/;"	p
dataflow	src/test/scala/generator/cilk/cilk_for_test05_test.scala	/^package dataflow$/;"	p
dataflow	src/test/scala/generator/cilk/cilk_for_test06_test.scala	/^package dataflow$/;"	p
dataflow	src/test/scala/generator/cilk/cilk_for_test07_test.scala	/^package dataflow$/;"	p
dataflow	src/test/scala/generator/cilk/cilk_for_test08_test.scala	/^package dataflow$/;"	p
dataflow	src/test/scala/generator/cilk/cilk_for_test09_test.scala	/^package dataflow$/;"	p
dataflow	src/test/scala/generator/cilk/cilk_for_test12_test.scala	/^package dataflow$/;"	p
dataflow	src/test/scala/generator/cilk/cilk_spawn_test01_test.scala	/^package dataflow$/;"	p
dataflow	src/test/scala/generator/cilk/cilk_spawn_test02_test.scala	/^package dataflow$/;"	p
dataflow	src/test/scala/generator/cilk/fib_test.scala	/^package dataflow$/;"	p
dataflow	src/test/scala/generator/cilk/mergesort_test.scala	/^package dataflow$/;"	p
dataflow	src/test/scala/generator/cilk/stencil_test.scala	/^package dataflow$/;"	p
dataflow	src/test/scala/generator/test01_test.scala	/^package dataflow$/;"	p
dataflow	src/test/scala/generator/test02_test.scala	/^package dataflow$/;"	p
dataflow	src/test/scala/generator/test03_test.scala	/^package dataflow$/;"	p
dataflow	src/test/scala/generator/test04_test.scala	/^package dataflow$/;"	p
dataflow	src/test/scala/generator/test05_test.scala	/^package dataflow$/;"	p
dataflow	src/test/scala/generator/test06_test.scala	/^package dataflow$/;"	p
dataflow	src/test/scala/generator/test08_test.scala	/^package dataflow$/;"	p
dataflow	src/test/scala/generator/test09_test.scala	/^package dataflow$/;"	p
dataflow	src/test/scala/generator/test10_test.scala	/^package dataflow$/;"	p
dataflow	src/test/scala/generator/test11_test.scala	/^package dataflow$/;"	p
dataflow	src/test/scala/generator/test12_test.scala	/^package dataflow$/;"	p
dataflow	src/test/scala/generator/test14_test.scala	/^package dataflow$/;"	p
dataflow	src/test/scala/generator/test15_test.scala	/^package dataflow$/;"	p
dataflow.filter	src/main/scala/dataflow/filter/BasicFilter.scala	/^package dataflow.filter$/;"	p
dataflow.filter	src/main/scala/dataflow/filter/BasicLoader.scala	/^package dataflow.filter$/;"	p
dataflow.filter	src/main/scala/dataflow/filter/CacheLoader.scala	/^package dataflow.filter$/;"	p
dataflow.filter	src/main/scala/dataflow/filter/CacheVecLoader.scala	/^package dataflow.filter$/;"	p
dataflow.filter	src/main/scala/dataflow/filter/VecFilter.scala	/^package dataflow.filter$/;"	p
dataflow.fuse	src/main/scala/dataflow/fuse/computeFuse01.scala	/^package dataflow.fuse$/;"	p
dataflow.fuse	src/main/scala/dataflow/fuse/computeFuse02.scala	/^package dataflow.fuse$/;"	p
dataflow.fuse	src/main/scala/dataflow/fuse/computeFuse03.scala	/^package dataflow.fuse$/;"	p
dataflow.fuse	src/main/scala/dataflow/fuse/computeFuse04.scala	/^package dataflow.fuse$/;"	p
dataflow.fuse	src/test/scala/dataflow/fuse/computeFuse01.scala	/^package dataflow.fuse$/;"	p
dataflow.fuse	src/test/scala/dataflow/fuse/computeFuse02.scala	/^package dataflow.fuse$/;"	p
dataflow.fuse	src/test/scala/dataflow/fuse/computeFuse03.scala	/^package dataflow.fuse$/;"	p
dataflow.fuse	src/test/scala/dataflow/fuse/computeFuse04.scala	/^package dataflow.fuse$/;"	p
dataflow.graph	src/main/scala/dataflow/graph/compute01DF.scala	/^package dataflow.graph$/;"	p
dataflow.graph	src/main/scala/dataflow/graph/compute02DF.scala	/^package dataflow.graph$/;"	p
dataflow.graph	src/main/scala/dataflow/graph/compute03DF.scala	/^package dataflow.graph$/;"	p
dataflow.graph	src/main/scala/dataflow/graph/compute04DF.scala	/^package dataflow.graph$/;"	p
dataflow.graph	src/test/scala/dataflow/graph/compute01Df.scala	/^package dataflow.graph$/;"	p
dataflow.graph	src/test/scala/dataflow/graph/compute02Df.scala	/^package dataflow.graph$/;"	p
dataflow.graph	src/test/scala/dataflow/graph/compute03DF.scala	/^package dataflow.graph$/;"	p
dataflow.graph	src/test/scala/dataflow/graph/compute04DF.scala	/^package dataflow.graph$/;"	p
dataflow.tests	src/main/scala/dataflow/tests/Add01.scala	/^package dataflow.tests$/;"	p
dataflow.tests	src/test/scala/dataflow/tests/Add01.scala	/^package dataflow.tests$/;"	p
datetime	scripts/TypeStackFile.py	/^import datetime$/;"	i
dec	src/main/scala/concurrent/Sync.scala	/^  val dec      = RegInit(0.U)$/;"	l
dec	src/main/scala/concurrent/Sync.scala	/^  val dec      = RegNext(init = 0.U, next = updateArb.io.chosen)$/;"	l
dec	src/main/scala/concurrent/Sync.scala	/^  val dec = decArb.io.out.fire() && decArb.io.out.bits.control$/;"	l
decArb	src/main/scala/concurrent/Sync.scala	/^  val decArb = Module(new Arbiter(new ControlBundle, NumDec))$/;"	l
decIn	src/main/scala/concurrent/Sync.scala	/^  val decIn = Flipped(Decoupled(new ControlBundle()))$/;"	l
decIn	src/main/scala/concurrent/Sync.scala	/^  val decIn = Flipped(Vec(NumDec, Decoupled(new ControlBundle())))$/;"	l
dec_R	src/main/scala/concurrent/Sync.scala	/^  val dec_R = RegInit(ControlBundle.default)$/;"	l
dec_valid_R	src/main/scala/concurrent/Sync.scala	/^  val dec_valid_R = RegInit(false.B)$/;"	l
default	src/main/scala/accel/Cache.scala	/^  def default(implicit p: Parameters): MemReq = {$/;"	m
default	src/main/scala/accel/Cache.scala	/^  def default(implicit p: Parameters): MemResp = {$/;"	m
default	src/main/scala/interfaces/interfaces.scala	/^  def default(implicit p: Parameters): AllocaIO = {$/;"	m
default	src/main/scala/interfaces/interfaces.scala	/^  def default(implicit p: Parameters): AllocaReq = {$/;"	m
default	src/main/scala/interfaces/interfaces.scala	/^  def default(implicit p: Parameters): AllocaResp = {$/;"	m
default	src/main/scala/interfaces/interfaces.scala	/^  def default(implicit p: Parameters): ControlBundle = {$/;"	m
default	src/main/scala/interfaces/interfaces.scala	/^  def default(implicit p: Parameters): DataBundle = {$/;"	m
default	src/main/scala/interfaces/interfaces.scala	/^  def default(implicit p: Parameters): FUResp = {$/;"	m
default	src/main/scala/interfaces/interfaces.scala	/^  def default(implicit p: Parameters): MemReq = {$/;"	m
default	src/main/scala/interfaces/interfaces.scala	/^  def default(implicit p: Parameters): MemResp = {$/;"	m
default	src/main/scala/interfaces/interfaces.scala	/^  def default(implicit p: Parameters): ReadReq = {$/;"	m
default	src/main/scala/interfaces/interfaces.scala	/^  def default(implicit p: Parameters): ReadResp = {$/;"	m
default	src/main/scala/interfaces/interfaces.scala	/^  def default(implicit p: Parameters): TypBundle = {$/;"	m
default	src/main/scala/interfaces/interfaces.scala	/^  def default(implicit p: Parameters): WriteReq = {$/;"	m
default	src/main/scala/interfaces/interfaces.scala	/^  def default[T <: Data](gen: T)(implicit p: Parameters): CustomDataBundle[T] = {$/;"	m
deftSite	src/main/scala/config/cde/Parameters.scala	/^      val deftSite = _deft$/;"	l
deftSite	src/main/scala/config/cde/Parameters.scala	/^      val deftSite = this$/;"	l
deftSite	src/main/scala/config/cde/Parameters.scala	/^  protected val deftSite: View \/\/ when views are queried without a specifying a site this is the default$/;"	l
demuxInputReg	src/main/scala/muxes/Muxes.scala	/^        val demuxInputReg = RegNext(Demuxes(i \/ BaseSize).outputs(indexcalc(i, BaseSize)))$/;"	l
demuxvalidreg	src/main/scala/muxes/Muxes.scala	/^        val demuxvalidreg = RegNext(init = false.B, next = Demuxes(i \/ BaseSize).outputs(indexcalc(i, BaseSize)).valid)$/;"	l
detach	src/test/scala/generator/cilk/bgemm_test.scala	/^    val detach = Module(new bgemm_detach1DF())$/;"	l
detach	src/test/scala/generator/cilk/cilk_for_test06_test.scala	/^    val detach = Module(new cilk_for_test06_detachDF())$/;"	l
detach	src/test/scala/generator/cilk/cilk_for_test12_test.scala	/^    val detach = Module(new cilk_for_test12_detach1DF())$/;"	l
detach1	src/main/scala/generator/cilk/cilk_spawn_test01.scala	/^  val detach1 = Module(new Detach(ID = 1))$/;"	l
detach1	src/test/scala/generator/cilk/stencil_test.scala	/^    val detach1 = Module(new stencil_detach1DF())$/;"	l
detach13	src/main/scala/generator/cilk/fib.scala	/^  val detach13 = Module(new Detach(ID = 13))$/;"	l
detach13_brn_bb	src/main/scala/generator/cilk/fib.scala	/^  val detach13_brn_bb = Map($/;"	l
detach13_in	src/main/scala/generator/cilk/fib.scala	/^  val detach13_in = Map($/;"	l
detach17	src/main/scala/generator/cilk/mergesort.scala	/^  val detach17 = Module(new Detach(ID = 17))$/;"	l
detach17_brn_bb	src/main/scala/generator/cilk/mergesort.scala	/^  val detach17_brn_bb = Map($/;"	l
detach17_in	src/main/scala/generator/cilk/mergesort.scala	/^  val detach17_in = Map($/;"	l
detach1_brn_bb	src/main/scala/generator/cilk/cilk_spawn_test01.scala	/^  val detach1_brn_bb = Map($/;"	l
detach1_in	src/main/scala/generator/cilk/cilk_spawn_test01.scala	/^  val detach1_in = Map($/;"	l
detach2	src/main/scala/generator/cilk/cilk_spawn_test02.scala	/^  val detach2 = Module(new Detach(ID = 2))$/;"	l
detach2	src/test/scala/generator/cilk/bgemm_test.scala	/^    val detach2 = Module(new bgemm_detach2DF)$/;"	l
detach2	src/test/scala/generator/cilk/cilk_for_test06_test.scala	/^    val detach2 = Module(new cilk_for_test06_detach_2DF)$/;"	l
detach2	src/test/scala/generator/cilk/cilk_for_test12_test.scala	/^    val detach2 = Module(new cilk_for_test12_detach2DF)$/;"	l
detach20	src/main/scala/generator/cilk/mergesort.scala	/^  val detach20 = Module(new Detach(ID = 20))$/;"	l
detach20_brn_bb	src/main/scala/generator/cilk/mergesort.scala	/^  val detach20_brn_bb = Map($/;"	l
detach20_in	src/main/scala/generator/cilk/mergesort.scala	/^  val detach20_in = Map($/;"	l
detach2_brn_bb	src/main/scala/generator/cilk/cilk_spawn_test02.scala	/^  val detach2_brn_bb = Map($/;"	l
detach2_in	src/main/scala/generator/cilk/cilk_spawn_test02.scala	/^  val detach2_in = Map($/;"	l
detach3	src/test/scala/generator/cilk/bgemm_test.scala	/^    val detach3 = Module(new bgemm_detach3DF)$/;"	l
detach3	src/test/scala/generator/cilk/cilk_for_test12_test.scala	/^    val detach3 = Module(new cilk_for_test12_detach3DF)$/;"	l
detach4	src/main/scala/generator/cilk/cilk_for_test01.scala	/^  val detach4 = Module(new Detach(ID = 4))$/;"	l
detach4	src/main/scala/generator/cilk/cilk_for_test02.scala	/^  val detach4 = Module(new Detach(ID = 4))$/;"	l
detach4	src/main/scala/generator/cilk/cilk_for_test04.scala	/^  val detach4 = Module(new DetachFast(ID = 4))$/;"	l
detach4	src/main/scala/generator/cilk/cilk_for_test05.scala	/^  val detach4 = Module(new DetachFast(ID = 4))$/;"	l
detach4	src/main/scala/generator/cilk/cilk_for_test06.scala	/^  val detach4 = Module(new DetachNode(NumOuts = 9, ID = 4))$/;"	l
detach4	src/main/scala/generator/cilk/cilk_for_test06_detach.scala	/^  val detach4 = Module(new DetachNode(NumOuts = 10, ID = 4))$/;"	l
detach4	src/main/scala/generator/cilk/cilk_for_test07.scala	/^  val detach4 = Module(new DetachFast(ID = 4))$/;"	l
detach4	src/main/scala/generator/cilk/cilk_for_test08.scala	/^  val detach4 = Module(new Detach(ID = 4))$/;"	l
detach4	src/main/scala/generator/cilk/cilk_for_test12_detach1.scala	/^  val detach4 = Module(new DetachFast(ID = 4))$/;"	l
detach4	src/main/scala/generator/cilk/cilk_for_test12_detach2.scala	/^  val detach4 = Module(new DetachFast(ID = 4))$/;"	l
detach4	src/main/scala/generator/cilk/stencil.scala	/^  val detach4 = Module(new DetachNode(NumOuts = 7, ID = 4))$/;"	l
detach4_brn_bb	src/main/scala/generator/cilk/cilk_for_test01.scala	/^  val detach4_brn_bb = Map($/;"	l
detach4_brn_bb	src/main/scala/generator/cilk/cilk_for_test02.scala	/^  val detach4_brn_bb = Map($/;"	l
detach4_brn_bb	src/main/scala/generator/cilk/cilk_for_test04.scala	/^  val detach4_brn_bb = Map($/;"	l
detach4_brn_bb	src/main/scala/generator/cilk/cilk_for_test05.scala	/^  val detach4_brn_bb = Map($/;"	l
detach4_brn_bb	src/main/scala/generator/cilk/cilk_for_test06.scala	/^  val detach4_brn_bb = Map($/;"	l
detach4_brn_bb	src/main/scala/generator/cilk/cilk_for_test06_detach.scala	/^  val detach4_brn_bb = Map($/;"	l
detach4_brn_bb	src/main/scala/generator/cilk/cilk_for_test07.scala	/^  val detach4_brn_bb = Map($/;"	l
detach4_brn_bb	src/main/scala/generator/cilk/cilk_for_test08.scala	/^  val detach4_brn_bb = Map($/;"	l
detach4_brn_bb	src/main/scala/generator/cilk/cilk_for_test12_detach1.scala	/^  val detach4_brn_bb = Map($/;"	l
detach4_brn_bb	src/main/scala/generator/cilk/cilk_for_test12_detach2.scala	/^  val detach4_brn_bb = Map($/;"	l
detach4_brn_bb	src/main/scala/generator/cilk/stencil.scala	/^  val detach4_brn_bb = Map($/;"	l
detach4_in	src/main/scala/generator/cilk/cilk_for_test01.scala	/^  val detach4_in = Map($/;"	l
detach4_in	src/main/scala/generator/cilk/cilk_for_test02.scala	/^  val detach4_in = Map($/;"	l
detach4_in	src/main/scala/generator/cilk/cilk_for_test04.scala	/^  val detach4_in = Map($/;"	l
detach4_in	src/main/scala/generator/cilk/cilk_for_test05.scala	/^  val detach4_in = Map($/;"	l
detach4_in	src/main/scala/generator/cilk/cilk_for_test06.scala	/^  val detach4_in = Map($/;"	l
detach4_in	src/main/scala/generator/cilk/cilk_for_test06_detach.scala	/^  val detach4_in = Map($/;"	l
detach4_in	src/main/scala/generator/cilk/cilk_for_test07.scala	/^  val detach4_in = Map($/;"	l
detach4_in	src/main/scala/generator/cilk/cilk_for_test08.scala	/^  val detach4_in = Map($/;"	l
detach4_in	src/main/scala/generator/cilk/cilk_for_test12_detach1.scala	/^  val detach4_in = Map($/;"	l
detach4_in	src/main/scala/generator/cilk/cilk_for_test12_detach2.scala	/^  val detach4_in = Map($/;"	l
detach4_in	src/main/scala/generator/cilk/stencil.scala	/^  val detach4_in = Map($/;"	l
detach5	src/main/scala/generator/cilk/bgemm.scala	/^  val detach5 = Module(new Detach(ID = 5))$/;"	l
detach5_brn_bb	src/main/scala/generator/cilk/bgemm.scala	/^  val detach5_brn_bb = Map($/;"	l
detach5_in	src/main/scala/generator/cilk/bgemm.scala	/^  val detach5_in = Map($/;"	l
detach6	src/main/scala/generator/cilk/cilk_for_test09.scala	/^  val detach6 = Module(new Detach(ID = 6))$/;"	l
detach6	src/main/scala/generator/cilk/cilk_for_test12.scala	/^  val detach6 = Module(new DetachFast(ID = 6))$/;"	l
detach6	src/main/scala/generator/cilk/cilk_spawn_test02.scala	/^  val detach6 = Module(new Detach(ID = 6))$/;"	l
detach6_brn_bb	src/main/scala/generator/cilk/cilk_for_test09.scala	/^  val detach6_brn_bb = Map($/;"	l
detach6_brn_bb	src/main/scala/generator/cilk/cilk_for_test12.scala	/^  val detach6_brn_bb = Map($/;"	l
detach6_brn_bb	src/main/scala/generator/cilk/cilk_spawn_test02.scala	/^  val detach6_brn_bb = Map($/;"	l
detach6_in	src/main/scala/generator/cilk/cilk_for_test09.scala	/^  val detach6_in = Map($/;"	l
detach6_in	src/main/scala/generator/cilk/cilk_for_test12.scala	/^  val detach6_in = Map($/;"	l
detach6_in	src/main/scala/generator/cilk/cilk_spawn_test02.scala	/^  val detach6_in = Map($/;"	l
detach7	src/main/scala/generator/cilk/bgemm_detach1.scala	/^  val detach7 = Module(new Detach(ID = 7))$/;"	l
detach7	src/main/scala/generator/cilk/bgemm_detach2.scala	/^  val detach7 = Module(new Detach(ID = 7))$/;"	l
detach7_brn_bb	src/main/scala/generator/cilk/bgemm_detach1.scala	/^  val detach7_brn_bb = Map($/;"	l
detach7_brn_bb	src/main/scala/generator/cilk/bgemm_detach2.scala	/^  val detach7_brn_bb = Map($/;"	l
detach7_in	src/main/scala/generator/cilk/bgemm_detach1.scala	/^  val detach7_in = Map($/;"	l
detach7_in	src/main/scala/generator/cilk/bgemm_detach2.scala	/^  val detach7_in = Map($/;"	l
detach9	src/main/scala/generator/cilk/fib.scala	/^  val detach9 = Module(new Detach(ID = 9))$/;"	l
detach9_brn_bb	src/main/scala/generator/cilk/fib.scala	/^  val detach9_brn_bb = Map($/;"	l
detach9_in	src/main/scala/generator/cilk/fib.scala	/^  val detach9_in = Map($/;"	l
did	src/main/scala/concurrent/TaskController.scala	/^  val did = UInt(tlen.W)  \/\/ Dynamic ID (e.g. parent's task #)$/;"	l
din	src/test/scala/generator/cilk/bgemm_test.scala	/^    val din  = Input(UInt(nastiXDataBits.W))  \/\/ Initialization data$/;"	l
din	src/test/scala/generator/cilk/cilk_for_test04_test.scala	/^    val din  = Input(UInt(nastiXDataBits.W))$/;"	l
din	src/test/scala/generator/cilk/cilk_for_test06_test.scala	/^    val din = Input(UInt(nastiXDataBits.W)) \/\/ Initialization data$/;"	l
din	src/test/scala/generator/cilk/cilk_for_test07_test.scala	/^    val din  = Input(UInt(nastiXDataBits.W))  \/\/ Initialization data$/;"	l
din	src/test/scala/generator/cilk/cilk_for_test08_test.scala	/^    val din  = Input(UInt(nastiXDataBits.W))  \/\/ Initialization data$/;"	l
din	src/test/scala/generator/cilk/cilk_for_test09_test.scala	/^    val din  = Input(UInt(nastiXDataBits.W))  \/\/ Initialization data$/;"	l
din	src/test/scala/generator/cilk/cilk_for_test12_test.scala	/^    val din  = Input(UInt(nastiXDataBits.W))$/;"	l
din	src/test/scala/generator/cilk/fib_test.scala	/^    val din  = Input(UInt(nastiXDataBits.W))$/;"	l
din	src/test/scala/generator/cilk/mergesort_test.scala	/^    val din  = Input(UInt(nastiXDataBits.W))$/;"	l
din	src/test/scala/generator/cilk/stencil_test.scala	/^    val din = Input(UInt(nastiXDataBits.W))$/;"	l
din	src/test/scala/generator/test05_test.scala	/^    val din  = Input(UInt(nastiXDataBits.W))$/;"	l
din	src/test/scala/generator/test15_test.scala	/^    val din  = Input(UInt(nastiXDataBits.W))$/;"	l
dir	src/main/scala/accel/Main.scala	/^  val dir = new File("RTL\/FilterDF") ; dir.mkdirs$/;"	l
dir	src/main/scala/accel/Main.scala	/^  val dir = new File("RTL\/TestCacheDF") ; dir.mkdirs$/;"	l
dir	src/main/scala/accel/Main.scala	/^  val dir = new File("RTL\/VecFilterDF") ; dir.mkdirs$/;"	l
dir	src/main/scala/accel/Main.scala	/^  val dir = new File("RTL\/VecFilterNoKernDF") ; dir.mkdirs$/;"	l
dir	src/main/scala/accel/Main.scala	/^  val dir = new File("RTL\/accel_rtl") ; dir.mkdirs$/;"	l
dir	src/main/scala/generator/cilk/bgemm.scala	/^  val dir = new File("RTL\/bgemm") ; dir.mkdirs$/;"	l
dir	src/main/scala/generator/cilk/bgemm_detach1.scala	/^  val dir = new File("RTL\/bgemm_detach1") ; dir.mkdirs$/;"	l
dir	src/main/scala/generator/cilk/bgemm_detach2.scala	/^  val dir = new File("RTL\/bgemm_detach2") ; dir.mkdirs$/;"	l
dir	src/main/scala/generator/cilk/bgemm_detach3.scala	/^  val dir = new File("RTL\/bgemm_detach3") ; dir.mkdirs$/;"	l
dir	src/main/scala/generator/cilk/cilk_for_test01.scala	/^  val dir = new File("RTL\/cilk_for_test01") ; dir.mkdirs$/;"	l
dir	src/main/scala/generator/cilk/cilk_for_test02.scala	/^  val dir = new File("RTL\/cilk_for_test02") ; dir.mkdirs$/;"	l
dir	src/main/scala/generator/cilk/cilk_for_test02_mul.scala	/^  val dir = new File("RTL\/cilk_for_test02_mul") ; dir.mkdirs$/;"	l
dir	src/main/scala/generator/cilk/cilk_for_test04_detach.scala	/^  val dir = new File("RTL\/cilk_for_test04_detach") ; dir.mkdirs$/;"	l
dir	src/main/scala/generator/cilk/cilk_for_test05_detach.scala	/^  val dir = new File("RTL\/cilk_for_test05_detach") ; dir.mkdirs$/;"	l
dir	src/main/scala/generator/cilk/cilk_for_test06_detach.scala	/^  val dir = new File("RTL\/cilk_for_test06_detach");$/;"	l
dir	src/main/scala/generator/cilk/cilk_for_test06_detach_2.scala	/^  val dir = new File("RTL\/cilk_for_test06_detach_2");$/;"	l
dir	src/main/scala/generator/cilk/cilk_for_test07.scala	/^  val dir = new File("RTL\/cilk_for_test07") ; dir.mkdirs$/;"	l
dir	src/main/scala/generator/cilk/cilk_for_test07_detach.scala	/^  val dir = new File("RTL\/cilk_for_test07_detach") ; dir.mkdirs$/;"	l
dir	src/main/scala/generator/cilk/cilk_for_test08_detach.scala	/^  val dir = new File("RTL\/cilk_for_test08_detach") ; dir.mkdirs$/;"	l
dir	src/main/scala/generator/cilk/cilk_for_test09.scala	/^  val dir = new File("RTL\/cilk_for_test09");$/;"	l
dir	src/main/scala/generator/cilk/cilk_for_test09_inner.scala	/^  val dir = new File("RTL\/cilk_for_test09_inner") ; dir.mkdirs$/;"	l
dir	src/main/scala/generator/cilk/cilk_for_test12.scala	/^  val dir = new File("RTL\/cilk_for_test12") ; dir.mkdirs$/;"	l
dir	src/main/scala/generator/cilk/cilk_for_test12_detach1.scala	/^  val dir = new File("RTL\/cilk_for_test12_detach1") ; dir.mkdirs$/;"	l
dir	src/main/scala/generator/cilk/cilk_for_test12_detach2.scala	/^  val dir = new File("RTL\/cilk_for_test12_detach2") ; dir.mkdirs$/;"	l
dir	src/main/scala/generator/cilk/cilk_for_test12_detach3.scala	/^  val dir = new File("RTL\/cilk_for_test12_detach3") ; dir.mkdirs$/;"	l
dir	src/main/scala/generator/cilk/cilk_spawn_test01.scala	/^  val dir = new File("RTL\/cilk_spawn_test01") ; dir.mkdirs$/;"	l
dir	src/main/scala/generator/cilk/cilk_spawn_test02.scala	/^  val dir = new File("RTL\/cilk_spawn_test02") ; dir.mkdirs$/;"	l
dir	src/main/scala/generator/cilk/fib.scala	/^  val dir = new File("RTL\/fib") ; dir.mkdirs$/;"	l
dir	src/main/scala/generator/cilk/fib_continue.scala	/^  val dir = new File("RTL\/fib_continue") ; dir.mkdirs$/;"	l
dir	src/main/scala/generator/cilk/mergesort.scala	/^  val dir = new File("RTL\/mergesort") ; dir.mkdirs$/;"	l
dir	src/main/scala/generator/cilk/mergesort_merge.scala	/^  val dir = new File("RTL\/mergesort_merge") ; dir.mkdirs$/;"	l
dir	src/main/scala/generator/cilk/stencil.scala	/^  val dir = new File("RTL\/stencil");$/;"	l
dir	src/main/scala/generator/cilk/stencil_detach1.scala	/^  val dir = new File("RTL\/stencil_detach1");$/;"	l
dir	src/main/scala/generator/cilk/stencil_inner.scala	/^  val dir = new File("RTL\/stencil_inner");$/;"	l
dir	src/main/scala/generator/test01.scala	/^  val dir = new File("RTL\/test01");$/;"	l
dir	src/main/scala/generator/test02.scala	/^  val dir = new File("RTL\/test02") ; dir.mkdirs$/;"	l
dir	src/main/scala/generator/test03.scala	/^  val dir = new File("RTL\/test03");$/;"	l
dir	src/main/scala/generator/test04.scala	/^  val dir = new File("RTL\/test04") ; dir.mkdirs$/;"	l
dir	src/main/scala/generator/test05.scala	/^  val dir = new File("RTL\/test05") ; dir.mkdirs$/;"	l
dir	src/main/scala/generator/test05b.scala	/^  val dir = new File("RTL\/test05b") ; dir.mkdirs$/;"	l
dir	src/main/scala/generator/test05c.scala	/^  val dir = new File("RTL\/test05c") ; dir.mkdirs$/;"	l
dir	src/main/scala/generator/test06.scala	/^  val dir = new File("RTL\/test06") ; dir.mkdirs$/;"	l
dir	src/main/scala/generator/test08.scala	/^  val dir = new File("RTL\/test08") ; dir.mkdirs$/;"	l
dir	src/main/scala/generator/test09.scala	/^  val dir = new File("RTL\/test09") ; dir.mkdirs$/;"	l
dir	src/main/scala/generator/test10.scala	/^  val dir = new File("RTL\/test10") ; dir.mkdirs$/;"	l
dir	src/main/scala/generator/test11.scala	/^  val dir = new File("RTL\/test11") ; dir.mkdirs$/;"	l
dir	src/main/scala/generator/test11_add.scala	/^  val dir = new File("RTL\/test11_add") ; dir.mkdirs$/;"	l
dir	src/main/scala/generator/test12.scala	/^  val dir = new File("RTL\/test12") ; dir.mkdirs$/;"	l
dir	src/main/scala/generator/test12_inner.scala	/^  val dir = new File("RTL\/test12_inner") ; dir.mkdirs$/;"	l
dir	src/main/scala/generator/test14.scala	/^  val dir = new File("RTL\/test14") ; dir.mkdirs$/;"	l
dir	src/main/scala/generator/test14_inner.scala	/^  val dir = new File("RTL\/test14_inner") ; dir.mkdirs$/;"	l
dir	src/main/scala/generator/test15.scala	/^  val dir = new File("RTL\/test15") ; dir.mkdirs$/;"	l
dir	src/main/scala/verilogmain/TypeMemDataflow.scala	/^  val dir = new File(args(0)) ; dir.mkdirs$/;"	l
dirA	src/main/scala/generator/cilk/cilk_for_test04.scala	/^  val dirA = new File("RTL\/cilk_for_test04TopA") ; dirA.mkdirs$/;"	l
dirA	src/main/scala/generator/cilk/cilk_for_test05.scala	/^  val dirA = new File("RTL\/cilk_for_test05TopA") ; dirA.mkdirs$/;"	l
dirA	src/main/scala/generator/cilk/cilk_for_test06.scala	/^  val dirA = new File("RTL\/cilk_for_test06TopA");$/;"	l
dirA	src/main/scala/generator/cilk/cilk_for_test08.scala	/^  val dirA = new File("RTL\/cilk_for_test08TopA") ; dirA.mkdirs$/;"	l
dirB	src/main/scala/generator/cilk/cilk_for_test04.scala	/^  val dirB = new File("RTL\/cilk_for_test04TopB") ; dirB.mkdirs$/;"	l
dirB	src/main/scala/generator/cilk/cilk_for_test05.scala	/^  val dirB = new File("RTL\/cilk_for_test05TopB") ; dirB.mkdirs$/;"	l
dirB	src/main/scala/generator/cilk/cilk_for_test06.scala	/^  val dirB = new File("RTL\/cilk_for_test06TopB");$/;"	l
dirB	src/main/scala/generator/cilk/cilk_for_test08.scala	/^  val dirB = new File("RTL\/cilk_for_test08TopB") ; dirB.mkdirs$/;"	l
dirC	src/main/scala/generator/cilk/cilk_for_test04.scala	/^  val dirC = new File("RTL\/cilk_for_test04TopC") ; dirC.mkdirs$/;"	l
dirC	src/main/scala/generator/cilk/cilk_for_test05.scala	/^  val dirC = new File("RTL\/cilk_for_test05TopC") ; dirC.mkdirs$/;"	l
dirC	src/main/scala/generator/cilk/cilk_for_test06.scala	/^  val dirC = new File("RTL\/cilk_for_test06TopC");$/;"	l
dirC	src/main/scala/generator/cilk/cilk_for_test08.scala	/^  val dirC = new File("RTL\/cilk_for_test08TopC") ; dirC.mkdirs$/;"	l
dirty	src/main/scala/accel/Cache.scala	/^  val dirty    = RegInit(0.U(nSets.W))$/;"	l
dirty	src/main/scala/accel/CacheModel.scala	/^  val dirty = Mem(nSets, Bool())$/;"	l
doRead	src/main/scala/accel/DataBundleReg.scala	/^  val doRead = readAddrReadyReg && io.nasti.ar.valid && !readValidReg$/;"	l
doRead	src/main/scala/accel/SimpleReg.scala	/^  val doRead = readAddrReadyReg && io.nasti.ar.valid && !readValidReg$/;"	l
doWrite	src/main/scala/accel/DataBundleReg.scala	/^  val doWrite = writeReadyReg && io.nasti.w.valid && writeAddrReadyReg && io.nasti.aw.valid$/;"	l
doWrite	src/main/scala/accel/SimpleReg.scala	/^  val doWrite = writeReadyReg && io.nasti.w.valid && writeAddrReadyReg && io.nasti.aw.valid$/;"	l
done	src/main/scala/accel/Core.scala	/^      val done   = Output(Bool())$/;"	l
done	src/main/scala/accel/DataBundleReg.scala	/^      val done = Input(Bool())$/;"	l
done	src/main/scala/accel/SimpleReg.scala	/^      val done = Input(Bool())$/;"	l
done	src/main/scala/accel/coredf/FilterDFCore.scala	/^  val done = RegInit(init=false.B)$/;"	l
done	src/main/scala/accel/coredf/VecFilterDFCore.scala	/^  val done = RegInit(init=false.B)$/;"	l
done	src/main/scala/accel/coredf/VecFilterNoKernDFCore.scala	/^  val done = RegInit(init=false.B)$/;"	l
done	src/main/scala/interfaces/interfaces.scala	/^  val done = Bool()$/;"	l
done	src/main/scala/memory/ReadMemoryController.scala	/^    val done = Output(Bool())$/;"	l
done	src/main/scala/memory/WriteMemoryController.scala	/^    val done = Output(Bool())$/;"	l
doneQueue	src/main/scala/concurrent/Sync.scala	/^  val doneQueue = Module(new Queue(new ControlBundle(), 32))$/;"	l
doubling_range	scripts/TypeStackFile.py	/^def doubling_range(start, stop):$/;"	f
dout	src/test/scala/generator/cilk/bgemm_test.scala	/^    val dout = Output(UInt(nastiXDataBits.W))$/;"	l
dout	src/test/scala/generator/cilk/cilk_for_test04_test.scala	/^    val dout = Output(UInt(nastiXDataBits.W))$/;"	l
dout	src/test/scala/generator/cilk/cilk_for_test06_test.scala	/^    val dout = Output(UInt(nastiXDataBits.W))$/;"	l
dout	src/test/scala/generator/cilk/cilk_for_test07_test.scala	/^    val dout = Output(UInt(nastiXDataBits.W))$/;"	l
dout	src/test/scala/generator/cilk/cilk_for_test08_test.scala	/^    val dout = Output(UInt(nastiXDataBits.W))$/;"	l
dout	src/test/scala/generator/cilk/cilk_for_test09_test.scala	/^    val dout = Output(UInt(nastiXDataBits.W))$/;"	l
dout	src/test/scala/generator/cilk/cilk_for_test12_test.scala	/^    val dout = Output(UInt(nastiXDataBits.W))$/;"	l
dout	src/test/scala/generator/cilk/fib_test.scala	/^    val dout = Output(UInt(nastiXDataBits.W))$/;"	l
dout	src/test/scala/generator/cilk/mergesort_test.scala	/^    val dout = Output(UInt(nastiXDataBits.W))$/;"	l
dout	src/test/scala/generator/cilk/stencil_test.scala	/^    val dout = Output(UInt(nastiXDataBits.W))$/;"	l
dout	src/test/scala/generator/test05_test.scala	/^    val dout = Output(UInt(nastiXDataBits.W))$/;"	l
dout	src/test/scala/generator/test15_test.scala	/^    val dout = Output(UInt(nastiXDataBits.W))$/;"	l
ds	src/main/scala/FPU/SharedDiv.scala	/^  val ds = Module(new DivSqrtRecFN_small(t.expWidth, t.sigWidth, 0))$/;"	l
dummy0	src/main/scala/FPU/FPALU.scala	/^  val dummy0 = Module(new INToRecFN(t.ieeeWidth, t.expWidth, t.sigWidth))$/;"	l
dummy1	src/main/scala/FPU/FPALU.scala	/^  val dummy1 = Module(new INToRecFN(t.ieeeWidth, t.expWidth, t.sigWidth))$/;"	l
dump	src/main/scala/config/cde/Dump.scala	/^  val dump = mutable.Set[Tuple2[Any,Any]]()$/;"	l
dut	src/test/scala/accel/AccelTests.scala	/^  val dut = Module(accel)$/;"	l
dut	src/test/scala/accel/CacheTests.scala	/^  val dut = Module(cache)$/;"	l
dut	src/test/scala/accel/coredf/AccelTests01.scala	/^  val dut = Module(accel)$/;"	l
dut	src/test/scala/accel/coredf/FilterDFTests.scala	/^  val dut = Module(accel)$/;"	l
dut	src/test/scala/accel/coredf/VecFilterNoKernDFTests.scala	/^  val dut = Module(accel)$/;"	l
dut	src/test/scala/memory/deprecated/ReadWriteArbiter.scala	/^  val dut = Module(c)$/;"	l
dutMem	src/main/scala/accel/NastiMemSlave.scala	/^  val dutMem = Wire(new NastiIO)$/;"	l
dutMem	src/test/scala/accel/AccelTests.scala	/^  val dutMem = Module(new NastiMemSlave) \/\/Wire(new NastiIO)$/;"	l
dutMem	src/test/scala/accel/coredf/AccelTests01.scala	/^  val dutMem = Wire(new NastiIO)$/;"	l
dutMem	src/test/scala/accel/coredf/FilterDFTests.scala	/^  val dutMem = Wire(new NastiIO)$/;"	l
dutMem	src/test/scala/accel/coredf/VecFilterNoKernDFTests.scala	/^  val dutMem = Wire(new NastiIO)$/;"	l
dut_mem	src/test/scala/accel/CacheTests.scala	/^  val dut_mem = Wire(new NastiIO)$/;"	l
e	src/main/scala/config/cde/Parameters.scala	/^        val e = _knobValue(v.kname)$/;"	l
e	src/main/scala/config/cde/Parameters.scala	/^      val e = q.head  \/\/ pop an expression$/;"	l
e	src/test/scala/dataflow/UnTypMemDataflow.scala	/^        var e = 4*(i+1)-1$/;"	l
elts	src/main/scala/interfaces/interfaces.scala	/^  var elts = Seq.tabulate(argTypes.length) {$/;"	l
empty	src/main/scala/config/cde/Parameters.scala	/^  def empty = Parameters.root(new Collector((a,b,c) => {throw new ParameterUndefinedException(a); a},(a:Any) => {throw new KnobUndefinedException(a); a}))$/;"	m
empty	src/main/scala/config/configurations.scala	/^  def empty: Parameters = new EmptyParameters$/;"	m
en	src/main/scala/muxes/Muxes.scala	/^    val en = Input(Bool())$/;"	l
enable	src/main/scala/concurrent/Detach.scala	/^  val enable = Flipped(Decoupled(new ControlBundle))$/;"	l
enable	src/main/scala/dataflow/filter/BasicFilter.scala	/^    val enable = Flipped(Decoupled(new ControlBundle()))$/;"	l
enable	src/main/scala/dataflow/filter/BasicLoader.scala	/^    val enable = Flipped(Decoupled(Bool()))$/;"	l
enable	src/main/scala/dataflow/filter/CacheLoader.scala	/^    val enable = Flipped(Decoupled(new ControlBundle()))$/;"	l
enable	src/main/scala/dataflow/filter/CacheVecLoader.scala	/^    val enable = Flipped(Decoupled(new ControlBundle()))$/;"	l
enable	src/main/scala/dataflow/filter/VecFilter.scala	/^    val enable = Flipped(Decoupled(new ControlBundle()))$/;"	l
enable	src/main/scala/dataflow/fuse/computeFuse01.scala	/^    val enable = Flipped(Decoupled(new ControlBundle))$/;"	l
enable	src/main/scala/dataflow/fuse/computeFuse02.scala	/^    val enable = Flipped(Decoupled(Bool()))$/;"	l
enable	src/main/scala/dataflow/fuse/computeFuse02.scala	/^    val enable = Flipped(Decoupled(new ControlBundle))$/;"	l
enable	src/main/scala/dataflow/fuse/computeFuse03.scala	/^    val enable = Flipped(Decoupled(new ControlBundle))$/;"	l
enable	src/main/scala/dataflow/fuse/computeFuse04.scala	/^    val enable = Flipped(Decoupled(Bool()))$/;"	l
enable	src/main/scala/dataflow/fuse/computeFuse04.scala	/^    val enable = Flipped(Decoupled(new ControlBundle))$/;"	l
enable	src/main/scala/dataflow/graph/compute01DF.scala	/^    val enable = Flipped(Decoupled(new ControlBundle))$/;"	l
enable	src/main/scala/dataflow/graph/compute02DF.scala	/^    val enable = Flipped(Decoupled(new ControlBundle))$/;"	l
enable	src/main/scala/dataflow/graph/compute03DF.scala	/^    val enable = Flipped(Decoupled(new ControlBundle))$/;"	l
enable	src/main/scala/dataflow/graph/compute04DF.scala	/^    val enable = Flipped(Decoupled(new ControlBundle))$/;"	l
enable	src/main/scala/interfaces/interfaces.scala	/^  val enable = Decoupled(new ControlBundle)$/;"	l
enable	src/main/scala/interfaces/interfaces.scala	/^  val enable = new ControlBundle$/;"	l
enable	src/main/scala/muxes/Muxes.scala	/^    val enable = Input(Bool())$/;"	l
enable	src/main/scala/node/BitCastNode.scala	/^    val enable = Flipped(Decoupled(Bool()))$/;"	l
enable	src/main/scala/node/BranchNode.scala	/^  val enable = Flipped(Decoupled(new ControlBundle))$/;"	l
enable	src/main/scala/node/CallInNode.scala	/^  val enable = Flipped(Decoupled(new ControlBundle))$/;"	l
enable	src/main/scala/node/HandShaking.scala	/^  val enable = Flipped(Decoupled(new ControlBundle))$/;"	l
enable	src/main/scala/node/RetNode.scala	/^  val enable = Flipped(Decoupled(new ControlBundle()))$/;"	l
enable	src/main/scala/node/SelectNode.scala	/^    val enable = Flipped(Decoupled(Bool()))$/;"	l
enable	src/main/scala/node/SextNode.scala	/^    val enable = Flipped(Decoupled(Bool()))$/;"	l
enable	src/main/scala/node/StoreNode.scala	/^  val enable = Flipped(Decoupled(new ControlBundle()))$/;"	l
enable	src/main/scala/node/ZextNode.scala	/^    val enable = Flipped(Decoupled(Bool()))$/;"	l
enableFire_R	src/main/scala/node/CallInNode.scala	/^  val enableFire_R = RegInit(false.B)$/;"	l
enableID	src/main/scala/concurrent/Sync.scala	/^  val enableID = RegInit(0.U(1 << tlen))$/;"	l
enableSignal	src/main/scala/loop/LoopEnd.scala	/^  val enableSignal = Vec(NumInputs, Flipped(Decoupled(new ControlBundle)))$/;"	l
enableSignal	src/main/scala/loop/LoopStart.scala	/^  val enableSignal = Vec(NumInputs, Flipped(Decoupled(new ControlBundle)))$/;"	l
enableValidReg	src/main/scala/junctions/SplitDecoupled.scala	/^  val enableValidReg = RegInit(false.B)$/;"	l
enable_R	src/main/scala/node/BranchNode.scala	/^  val enable_R = RegInit(ControlBundle.default)$/;"	l
enable_R	src/main/scala/node/CallInNode.scala	/^  val enable_R = RegInit(ControlBundle.default)$/;"	l
enable_R	src/main/scala/node/HandShaking.scala	/^  val enable_R = RegInit(ControlBundle.default)$/;"	l
enable_R	src/main/scala/node/StoreNode.scala	/^  val enable_R = RegInit(ControlBundle.default)$/;"	l
enable_valid_R	src/main/scala/node/BranchNode.scala	/^  val enable_valid_R = RegInit(false.B)$/;"	l
enable_valid_R	src/main/scala/node/HandShaking.scala	/^  val enable_valid_R = RegInit(false.B)$/;"	l
enable_valid_R	src/main/scala/node/RetNode.scala	/^  val enable_valid_R = RegInit(false.B)$/;"	l
enable_valid_R	src/main/scala/node/StoreNode.scala	/^  val enable_valid_R = RegInit(false.B)$/;"	l
endEnable	src/main/scala/loop/LoopBlock.scala	/^  val endEnable   = Decoupled(new ControlBundle())$/;"	l
endEnableFire_R	src/main/scala/loop/LoopBlock.scala	/^  val endEnableFire_R = RegNext(init=false.B,next=io.endEnable.fire())$/;"	l
endEnable_R	src/main/scala/loop/LoopBlock.scala	/^  val endEnable_R = RegInit(0.U.asTypeOf(io.endEnable))$/;"	l
end_loop_R	src/main/scala/control/BasicBlock.scala	/^  val end_loop_R = RegInit(ControlBundle.default)$/;"	l
end_loop_valid_R	src/main/scala/control/BasicBlock.scala	/^  val end_loop_valid_R = RegInit(false.B)$/;"	l
entrysize	src/test/scala/verilogmain/TypStackSweeper.scala	/^  val entrysize = optionkv('EntrySize).asInstanceOf[Int]$/;"	l
entrysize	src/test/scala/verilogmain/TypeStackSweeper16b.scala	/^  val entrysize = optionkv('EntrySize).asInstanceOf[Int]$/;"	l
errno	scripts/TypeStackFile.py	/^import os, errno$/;"	i
error	src/main/scala/node/CallOutNode.scala	/^  val error = WireInit(false.B)$/;"	l
errorLatch	src/main/scala/accel/Core.scala	/^  val errorLatch = Reg(Bool())$/;"	l
error_flag	src/main/scala/concurrent/TaskController.scala	/^  val error_flag = RegInit(false.B)$/;"	l
eval	src/main/scala/config/cde/Expression.scala	/^  def eval[T](e:Ex[T], ctx:Any=>Any):T = e match {$/;"	m
eventList	scripts/extract_activity.py	/^eventList = []$/;"	v
ex1Tester	src/test/scala/switches/example/ex1.scala	/^class ex1Tester extends  FlatSpec with Matchers {$/;"	c
ex1Tests	src/test/scala/switches/example/ex1.scala	/^class ex1Tests(c: Dyser1X1)$/;"	c
exeList	src/main/scala/concurrent/TaskController.scala	/^  val exeList = Module(new Queue(new Call(argTypes), 1 << tlen))$/;"	l
exitFire_R	src/main/scala/loop/LoopBlock.scala	/^  val exitFire_R = RegInit(VecInit(Seq.fill(NumExits)(false.B)))$/;"	l
exit_R	src/main/scala/loop/LoopBlock.scala	/^  val exit_R = RegInit(VecInit(Seq.fill(NumExits)(false.B)))$/;"	l
expCode	src/main/scala/FPU/FPALU.scala	/^      val expCode = expIn(exp, exp - 2)$/;"	l
expIn	src/main/scala/FPU/FPALU.scala	/^    val expIn = x(sig + exp - 1, sig - 1)$/;"	l
expOut	src/main/scala/FPU/FPALU.scala	/^    val expOut = {$/;"	l
expWidth	src/main/scala/FPU/FPALU.scala	/^  def expWidth  = exp$/;"	m
expected	src/test/scala/accel/AccelTests.scala	/^        val expected = Vec(testVec)(testCnt).op1$/;"	l
expected	src/test/scala/accel/coredf/AccelTests01.scala	/^        val expected = Vec(testVec)(testCnt).op1$/;"	l
expected	src/test/scala/accel/coredf/FilterDFTests.scala	/^        val expected = Vec(testVec)(testCnt).op1$/;"	l
expected	src/test/scala/accel/coredf/VecFilterNoKernDFTests.scala	/^        val expected = Vec(testVec)(testCnt).op1$/;"	l
expected	src/test/scala/concurrent/DecoupledTaskTest.scala	/^        val expected = out2(i)(taskID.intValue())$/;"	l
expected	src/test/scala/generator/cilk/cilk_spawn_test01_test.scala	/^      val expected = 23$/;"	l
expected	src/test/scala/generator/cilk/cilk_spawn_test02_test.scala	/^      val expected = 23$/;"	l
expected	src/test/scala/generator/cilk/fib_test.scala	/^      val expected = fib(n)$/;"	l
expected	src/test/scala/generator/cilk/mergesort_test.scala	/^      val expected = 1$/;"	l
expected	src/test/scala/generator/test04_test.scala	/^      val expected = 1$/;"	l
expected	src/test/scala/generator/test06_test.scala	/^      val expected = 8$/;"	l
expectedData	src/main/scala/accel/Core.scala	/^  val expectedData = wordCount$/;"	l
extractUInt	src/main/scala/accel/CacheModel.scala	/^  def extractUInt(src : Vec[UInt], len: Int, offset : UInt) : UInt = {$/;"	m
f	scripts/extract_activity.py	/^        f = open(args.input,'r')$/;"	v
f	scripts/extract_activity.py	/^    f = sys.stdin$/;"	v
f2h	src/main/scala/accel/Accelerator.scala	/^      val f2h  = new NastiIO$/;"	l
fib	src/test/scala/generator/cilk/fib_test.scala	/^  def fib( n : Int) : Int = n match {$/;"	m
fib	src/test/scala/generator/cilk/fib_test.scala	/^  val fib = for (i <- 0 until NumFibs) yield {$/;"	l
fibDF	src/main/scala/generator/cilk/fib.scala	/^class fibDF(implicit p: Parameters) extends fibDFIO()(p) {$/;"	c
fibDFIO	src/main/scala/generator/cilk/fib.scala	/^abstract class fibDFIO(implicit val p: Parameters) extends Module with CoreParams {$/;"	c
fibMain	src/main/scala/generator/cilk/fib.scala	/^object fibMain extends App {$/;"	c
fibMain	src/test/scala/generator/cilk/fib_test.scala	/^class fibMain(tiles : Int)(implicit p: Parameters) extends fibMainIO {$/;"	c
fibMain2	src/test/scala/generator/cilk/fib_test.scala	/^class fibMain2(tiles : Int)(implicit p: Parameters) extends fibMainIO {$/;"	c
fibMainIO	src/test/scala/generator/cilk/fib_test.scala	/^class fibMainIO(implicit val p: Parameters)  extends Module with CoreParams with CacheParams {$/;"	c
fibTest01	src/test/scala/generator/cilk/fib_test.scala	/^class fibTest01[T <: fibMainIO](c : T, n : Int, tiles: Int) extends PeekPokeTester(c) {$/;"	c
fibTester1	src/test/scala/generator/cilk/fib_test.scala	/^class fibTester1 extends FlatSpec with Matchers {$/;"	c
fibTester2	src/test/scala/generator/cilk/fib_test.scala	/^class fibTester2 extends FlatSpec with Matchers {$/;"	c
fibTesterParams	src/test/scala/generator/cilk/fib_test.scala	/^object fibTesterParams {$/;"	c
fib_continue	src/test/scala/generator/cilk/fib_test.scala	/^  val fib_continue = for (i <- 0 until NumFibs) yield {$/;"	l
fib_continueDF	src/main/scala/generator/cilk/fib_continue.scala	/^class fib_continueDF(implicit p: Parameters) extends fib_continueDFIO()(p) {$/;"	c
fib_continueDFIO	src/main/scala/generator/cilk/fib_continue.scala	/^abstract class fib_continueDFIO(implicit val p: Parameters) extends Module with CoreParams {$/;"	c
fib_continueMain	src/main/scala/generator/cilk/fib_continue.scala	/^object fib_continueMain extends App {$/;"	c
fibby	src/test/scala/generator/cilk/fib_test.scala	/^    val fibby = Module(new fibDF())$/;"	l
fibby_continue	src/test/scala/generator/cilk/fib_test.scala	/^    val fibby_continue = Module(new fib_continueDF())$/;"	l
field	src/test/scala/concurrent/DecoupledTaskTest.scala	/^        val field = peek(c.io.Out.bits.data(s"field$i").data)$/;"	l
field0	src/test/scala/concurrent/TaskControllerTest.scala	/^        val field0 = peek(c.io.parentOut(d).bits.data("field0").data)$/;"	l
field0	src/test/scala/concurrent/TaskControllerTest.scala	/^      val field0 = peek(c.io.childOut(0).bits.data("field0").data)$/;"	l
field0_expand	src/main/scala/generator/cilk/cilk_for_test05_detach.scala	/^  val field0_expand = Module(new ExpandNode(NumOuts=3,ID=100)(new DataBundle))$/;"	l
field0_expand	src/main/scala/generator/cilk/cilk_for_test07_detach.scala	/^  val field0_expand = Module(new ExpandNode(NumOuts=2,ID=101)(new DataBundle))$/;"	l
field0_expand	src/main/scala/generator/cilk/cilk_for_test08_detach.scala	/^  val field0_expand = Module(new ExpandNode(NumOuts=3,ID=101)(new DataBundle))$/;"	l
field0_expand	src/main/scala/generator/cilk/stencil_detach1.scala	/^  val field0_expand = Module(new ExpandNode(NumOuts = 2, ID = 100)(new DataBundle))$/;"	l
field1	src/test/scala/concurrent/TaskControllerTest.scala	/^      val field1 = peek(c.io.childOut(0).bits.data("field1").data)$/;"	l
field1_expand	src/main/scala/generator/cilk/cilk_for_test04_detach.scala	/^  val field1_expand = Module(new ExpandNode(NumOuts=3,ID=101)(new DataBundle))$/;"	l
field1_expand	src/main/scala/generator/cilk/cilk_for_test05_detach.scala	/^  val field1_expand = Module(new ExpandNode(NumOuts=8,ID=101)(new DataBundle))$/;"	l
field1_expand	src/main/scala/generator/cilk/cilk_for_test06_detach_2.scala	/^  val field1_expand = Module(new ExpandNode(NumOuts = 3, ID = 100)(new DataBundle))$/;"	l
field1_expand	src/main/scala/generator/cilk/cilk_for_test07_detach.scala	/^  val field1_expand = Module(new ExpandNode(NumOuts=5,ID=102)(new DataBundle))$/;"	l
field1_expand	src/main/scala/generator/cilk/cilk_for_test08_detach.scala	/^  val field1_expand = Module(new ExpandNode(NumOuts=6,ID=102)(new DataBundle))$/;"	l
field2_expand	src/main/scala/generator/cilk/cilk_for_test02_mul.scala	/^  val field2_expand = Module(new ExpandNode(NumOuts=2, ID=99)(new DataBundle)) \/\/ Manual$/;"	l
field2_expand	src/main/scala/generator/cilk/cilk_for_test06_detach_2.scala	/^  val field2_expand = Module(new ExpandNode(NumOuts = 3, ID = 101)(new DataBundle))$/;"	l
field2_expand	src/main/scala/generator/cilk/cilk_for_test07_detach.scala	/^  val field2_expand = Module(new ExpandNode(NumOuts=2,ID=103)(new DataBundle))$/;"	l
field2_expand	src/main/scala/generator/cilk/cilk_for_test08_detach.scala	/^  val field2_expand = Module(new ExpandNode(NumOuts=3,ID=103)(new DataBundle))$/;"	l
field2_expand	src/main/scala/generator/cilk/stencil_detach1.scala	/^  val field2_expand = Module(new ExpandNode(NumOuts = 3, ID = 101)(new DataBundle))$/;"	l
fields	scripts/extract_activity.py	/^    fields = re.search('\\[(.*)\\]\\s*(.*'+args.filt+'.*):.+@([^\\,]+)', event)    # all events$/;"	v
file	src/test/scala/generator/cilk/cilk_for_test06_test.scala	/^  val file = "test.txt"$/;"	l
find	src/main/scala/config/configurations.scala	/^  def find(pname: Any, site: View) = head.chain(site, tail, pname)$/;"	m
find	src/main/scala/config/configurations.scala	/^  def find(pname: Any, site: View): Any =$/;"	m
finish_R	src/main/scala/loop/LiveOutNode.scala	/^  val finish_R = RegInit(ControlBundle.default)$/;"	l
finish_valid_R	src/main/scala/loop/LiveOutNode.scala	/^  val finish_valid_R = RegInit(false.B)$/;"	l
fireEnables	src/main/scala/dataflow/MemDataFlow.scala	/^	val fireEnables = RegNext(init=false.B, next=init)$/;"	l
fireLoadsStores	src/main/scala/dataflow/MemDataFlow.scala	/^  val fireLoadsStores = RegNext(init=false.B, next=fireEnables)$/;"	l
fire_W	src/main/scala/control/BasicBlock.scala	/^  val fire_W = WireInit(false.B)$/;"	l
foo	src/main/scala/generator/cilk/cilk_for_test04.scala	/^      val foo = Module(new cilk_for_test04_detachDF())$/;"	l
foo	src/main/scala/generator/cilk/cilk_for_test04.scala	/^    val foo = Module(new cilk_for_test04_detachDF())$/;"	l
foo	src/main/scala/generator/cilk/cilk_for_test05.scala	/^    val foo = Module(new cilk_for_test05_detachDF())$/;"	l
foo	src/main/scala/generator/cilk/cilk_for_test06.scala	/^    val foo = Module(new cilk_for_test06_detachDF())$/;"	l
foo	src/main/scala/generator/cilk/cilk_for_test08.scala	/^    val foo = Module(new cilk_for_test08_detachDF())$/;"	l
foo	src/test/scala/accel/CacheTests.scala	/^  val foo = Decoupled(gold.io.cpu.resp)$/;"	l
foo	src/test/scala/generator/cilk/cilk_for_test04_test.scala	/^    val foo = Module(new cilk_for_test04_detachDF())$/;"	l
foo	src/test/scala/generator/cilk/cilk_for_test05_test.scala	/^    val foo = Module(new cilk_for_test05_detachDF())$/;"	l
foo	src/test/scala/generator/cilk/cilk_for_test07_test.scala	/^    val foo = Module(new cilk_for_test07_detachDF())$/;"	l
foo	src/test/scala/generator/cilk/cilk_for_test08_test.scala	/^    val foo = Module(new cilk_for_test08_detachDF())$/;"	l
foo	src/test/scala/generator/cilk/cilk_for_test09_test.scala	/^    val foo = Module(new cilk_for_test09_innerDF())$/;"	l
foo	test/c/01-sample.c	/^int foo(int a){$/;"	f
foo	test/c/02-alloca.cpp	/^int foo(){$/;"	f
found	scripts/extract_activity.py	/^        found = ''  # apply your error handling$/;"	v
found	scripts/extract_activity.py	/^        found = re.search('\\[LOG\\](.+)', text)$/;"	v
fractIn	src/main/scala/FPU/FPALU.scala	/^    val fractIn = x(sig - 2, 0)$/;"	l
fractOut	src/main/scala/FPU/FPALU.scala	/^    val fractOut = fractIn << to.sig >> sig$/;"	l
frameindex	src/main/scala/arbiters/TypeStackFile.scala	/^  val frameindex = tlen$/;"	l
free	src/main/scala/memory/ReadMemoryController.scala	/^    val free = Output(Bool())$/;"	l
free	src/main/scala/memory/WriteMemoryController.scala	/^    val free = Output(Bool())$/;"	l
freeList	src/main/scala/concurrent/TaskController.scala	/^  val freeList = Module(new Queue(UInt(tlen.W), 1 << tlen))$/;"	l
functionParam	src/main/scala/dataflow/AdditionDF.scala	/^object functionParam{$/;"	c
g	src/main/scala/config/cde/Parameters.scala	/^    val g = gen(new ViewSym(_site()))$/;"	l
g	src/main/scala/config/configurations.scala	/^    val g = f(site, this, tail)$/;"	l
gate	src/test/scala/concurrent/DecoupledTaskTest.scala	/^    val gate = true \/\/Random.nextBoolean$/;"	l
gep10	src/main/scala/generator/cilk/fib.scala	/^  val gep10 = Module (new GepNodeStack(NumOuts = 1, ID = 10)(numByte1 = stackSize))$/;"	l
gep14	src/main/scala/generator/cilk/fib.scala	/^  val gep14 = Module (new GepNodeStack(NumOuts = 1, ID = 14)(numByte1 = stackSize))$/;"	l
gep17a	src/main/scala/generator/cilk/fib.scala	/^  val gep17a = Module (new GepNodeStack(NumOuts = 1, ID = 17)(numByte1 = stackSize))$/;"	l
gep17b	src/main/scala/generator/cilk/fib.scala	/^  val gep17b = Module (new GepNodeStack(NumOuts = 1, ID = 17)(numByte1 = stackSize))$/;"	l
gep17c	src/main/scala/generator/cilk/fib.scala	/^  val gep17c = Module (new GepNodeStack(NumOuts = 1, ID = 17)(numByte1 = stackSize))$/;"	l
gep24	src/main/scala/generator/cilk/mergesort.scala	/^  val gep24   = Module (new GepNodeStack(NumOuts = 1, ID = 3)(numByte1 = 20))$/;"	l
gep3	src/main/scala/generator/cilk/fib.scala	/^  val gep3   = Module (new GepNodeStack(NumOuts = 1, ID = 3)(numByte1 = stackSize))$/;"	l
getConstraints	src/main/scala/config/cde/Parameters.scala	/^  def getConstraints:String = ""$/;"	m
getConstraints	src/main/scala/config/cde/Parameters.scala	/^  def getConstraints:String = _world.getConstraints$/;"	m
getDump	src/main/scala/config/cde/Dump.scala	/^  def getDump:String = if (!dump.isEmpty) dump.map(_.toString).reduce(_+"\\n"+_) + "\\n" else ""$/;"	m
getKnobs	src/main/scala/config/cde/Parameters.scala	/^  def getKnobs:String = ""$/;"	m
getKnobs	src/main/scala/config/cde/Parameters.scala	/^  def getKnobs:String = _world.getKnobs$/;"	m
getelementptr0	src/main/scala/generator/cilk/cilk_for_test02_mul.scala	/^  val getelementptr0 = Module (new GepOneNode(NumOuts = 1, ID = 0)(numByte1 = 1))$/;"	l
getelementptr0	src/main/scala/generator/cilk/cilk_for_test04_detach.scala	/^  val getelementptr0 = Module (new GepOneNode(NumOuts = 1, ID = 0)(numByte1 = 4))  \/\/ manually corrected numByte1$/;"	l
getelementptr0	src/main/scala/generator/cilk/cilk_for_test05_detach.scala	/^  val getelementptr0 = Module (new GepOneNode(NumOuts = 1, ID = 0)(numByte1 = 1))$/;"	l
getelementptr0	src/main/scala/generator/cilk/cilk_for_test06_detach_2.scala	/^  val getelementptr0 = Module(new GepOneNode(NumOuts = 1, ID = 0)(numByte1 = 20))$/;"	l
getelementptr0	src/main/scala/generator/cilk/cilk_for_test07_detach.scala	/^  val getelementptr0 = Module (new GepTwoNode(NumOuts = 1, ID = 0)(numByte1 = 8, numByte2 = 4)) \/\/ Manual fix$/;"	l
getelementptr0	src/main/scala/generator/cilk/cilk_for_test08_detach.scala	/^  val getelementptr0 = Module (new GepTwoNode(NumOuts = 1, ID = 0)(numByte1 = 12, numByte2 = 4)) \/\/ Manual fix$/;"	l
getelementptr0	src/main/scala/generator/cilk/cilk_for_test12_detach3.scala	/^  val getelementptr0 = Module (new GepOneNode(NumOuts = 1, ID = 0)(numByte1 = 4))$/;"	l
getelementptr0	src/main/scala/generator/cilk/mergesort_merge.scala	/^  val getelementptr0 = Module (new GepTwoNode(NumOuts = 1, ID = 0)(numByte1 = 20, numByte2 = 4))$/;"	l
getelementptr0_in	src/main/scala/generator/cilk/cilk_for_test02_mul.scala	/^  val getelementptr0_in = Map($/;"	l
getelementptr0_in	src/main/scala/generator/cilk/cilk_for_test04_detach.scala	/^  val getelementptr0_in = Map($/;"	l
getelementptr0_in	src/main/scala/generator/cilk/cilk_for_test05_detach.scala	/^  val getelementptr0_in = Map($/;"	l
getelementptr0_in	src/main/scala/generator/cilk/cilk_for_test06_detach_2.scala	/^  val getelementptr0_in = Map($/;"	l
getelementptr0_in	src/main/scala/generator/cilk/cilk_for_test07_detach.scala	/^  val getelementptr0_in = Map($/;"	l
getelementptr0_in	src/main/scala/generator/cilk/cilk_for_test08_detach.scala	/^  val getelementptr0_in = Map($/;"	l
getelementptr0_in	src/main/scala/generator/cilk/cilk_for_test12_detach3.scala	/^  val getelementptr0_in = Map($/;"	l
getelementptr0_in	src/main/scala/generator/cilk/mergesort_merge.scala	/^  val getelementptr0_in = Map($/;"	l
getelementptr1	src/main/scala/generator/cilk/cilk_for_test06_detach_2.scala	/^  val getelementptr1 = Module(new GepTwoNode(NumOuts = 1, ID = 1)(numByte1 = 0, numByte2 = 4))$/;"	l
getelementptr1	src/main/scala/generator/cilk/mergesort.scala	/^  val getelementptr1 = Module (new GepNodeStack(NumOuts = 1, ID = 1)(numByte1 = 20))$/;"	l
getelementptr10	src/main/scala/generator/cilk/bgemm_detach3.scala	/^  val getelementptr10 = Module (new GepOneNode(NumOuts = 1, ID = 10)(numByte1 = 1))$/;"	l
getelementptr10	src/main/scala/generator/cilk/mergesort_merge.scala	/^  val getelementptr10 = Module (new GepTwoNode(NumOuts = 1, ID = 10)(numByte1 = 20, numByte2 = 4))$/;"	l
getelementptr10_in	src/main/scala/generator/cilk/bgemm_detach3.scala	/^  val getelementptr10_in = Map($/;"	l
getelementptr10_in	src/main/scala/generator/cilk/mergesort_merge.scala	/^  val getelementptr10_in = Map($/;"	l
getelementptr11	src/main/scala/generator/cilk/cilk_for_test05_detach.scala	/^  val getelementptr11 = Module (new GepOneNode(NumOuts = 1, ID = 11)(numByte1 = 1))$/;"	l
getelementptr11	src/main/scala/generator/test06.scala	/^  val getelementptr11 = Module (new GepTwoNode(NumOuts = 1, ID = 11)(numByte1 = 4, numByte2 = 0))$/;"	l
getelementptr11_in	src/main/scala/generator/cilk/cilk_for_test05_detach.scala	/^  val getelementptr11_in = Map($/;"	l
getelementptr11_in	src/main/scala/generator/test06.scala	/^  val getelementptr11_in = Map($/;"	l
getelementptr12	src/main/scala/generator/cilk/cilk_for_test08_detach.scala	/^  val getelementptr12 = Module (new GepTwoNode(NumOuts = 1, ID = 12)(numByte1 = 12, numByte2 = 4))$/;"	l
getelementptr12	src/main/scala/generator/cilk/mergesort_merge.scala	/^  val getelementptr12 = Module (new GepTwoNode(NumOuts = 1, ID = 12)(numByte1 = 20, numByte2 = 4))$/;"	l
getelementptr12	src/main/scala/generator/cilk/stencil_detach1.scala	/^  val getelementptr12 = Module(new GepOneNode(NumOuts = 1, ID = 12)(numByte1 = 4))$/;"	l
getelementptr12_in	src/main/scala/generator/cilk/cilk_for_test08_detach.scala	/^  val getelementptr12_in = Map($/;"	l
getelementptr12_in	src/main/scala/generator/cilk/mergesort_merge.scala	/^  val getelementptr12_in = Map($/;"	l
getelementptr12_in	src/main/scala/generator/cilk/stencil_detach1.scala	/^  val getelementptr12_in = Map($/;"	l
getelementptr13	src/main/scala/generator/cilk/cilk_for_test07_detach.scala	/^  val getelementptr13 = Module (new GepOneNode(NumOuts = 1, ID = 13)(numByte1 = 4)) \/\/ Manual fix$/;"	l
getelementptr13	src/main/scala/generator/test05.scala	/^  val getelementptr13 = Module (new GepOneNode(NumOuts = 2, ID = 13)(numByte1 = 4))$/;"	l
getelementptr13	src/main/scala/generator/test06.scala	/^  val getelementptr13 = Module (new GepTwoNode(NumOuts = 1, ID = 13)(numByte1 = 4, numByte2 = 0))$/;"	l
getelementptr13	src/main/scala/generator/test15.scala	/^  val getelementptr13 = Module (new GepOneNode(NumOuts = 1, ID = 13)(numByte1 = 4))$/;"	l
getelementptr13_in	src/main/scala/generator/cilk/cilk_for_test07_detach.scala	/^  val getelementptr13_in = Map($/;"	l
getelementptr13_in	src/main/scala/generator/test05.scala	/^  val getelementptr13_in = Map($/;"	l
getelementptr13_in	src/main/scala/generator/test06.scala	/^  val getelementptr13_in = Map($/;"	l
getelementptr13_in	src/main/scala/generator/test15.scala	/^  val getelementptr13_in = Map($/;"	l
getelementptr14	src/main/scala/generator/cilk/stencil_inner.scala	/^  val getelementptr14 = Module(new GepOneNode(NumOuts = 1, ID = 14)(numByte1 = 4))$/;"	l
getelementptr14	src/main/scala/generator/test05b.scala	/^  val getelementptr14 = Module (new GepOneNode(NumOuts = 1, ID = 14)(numByte1 = 4))$/;"	l
getelementptr14_in	src/main/scala/generator/cilk/stencil_inner.scala	/^  val getelementptr14_in = Map($/;"	l
getelementptr14_in	src/main/scala/generator/test05b.scala	/^  val getelementptr14_in = Map($/;"	l
getelementptr15	src/main/scala/generator/cilk/mergesort.scala	/^  val getelementptr15 = Module (new GepNodeStack(NumOuts = 1, ID = 15)(numByte1 = 20))$/;"	l
getelementptr15_in	src/main/scala/generator/cilk/mergesort.scala	/^  val getelementptr15_in = Map($/;"	l
getelementptr16	src/main/scala/generator/cilk/cilk_for_test05_detach.scala	/^  val getelementptr16 = Module (new GepOneNode(NumOuts = 1, ID = 16)(numByte1 = 1))$/;"	l
getelementptr16	src/main/scala/generator/test15.scala	/^  val getelementptr16 = Module (new GepOneNode(NumOuts = 1, ID = 16)(numByte1 = 4))$/;"	l
getelementptr16_in	src/main/scala/generator/cilk/cilk_for_test05_detach.scala	/^  val getelementptr16_in = Map($/;"	l
getelementptr16_in	src/main/scala/generator/test15.scala	/^  val getelementptr16_in = Map($/;"	l
getelementptr18	src/main/scala/generator/cilk/cilk_for_test05_detach.scala	/^  val getelementptr18 = Module (new GepOneNode(NumOuts = 1, ID = 18)(numByte1 = 1))$/;"	l
getelementptr18	src/main/scala/generator/cilk/stencil_detach1.scala	/^  val getelementptr18 = Module(new GepOneNode(NumOuts = 1, ID = 18)(numByte1 = 4))$/;"	l
getelementptr18	src/main/scala/generator/cilk/stencil_inner.scala	/^  val getelementptr18 = Module(new GepOneNode(NumOuts = 2, ID = 18)(numByte1 = 4))$/;"	l
getelementptr18	src/main/scala/generator/test05.scala	/^  val getelementptr18 = Module (new GepOneNode(NumOuts = 1, ID = 18)(numByte1 = 4))$/;"	l
getelementptr18_in	src/main/scala/generator/cilk/cilk_for_test05_detach.scala	/^  val getelementptr18_in = Map($/;"	l
getelementptr18_in	src/main/scala/generator/cilk/stencil_detach1.scala	/^  val getelementptr18_in = Map($/;"	l
getelementptr18_in	src/main/scala/generator/cilk/stencil_inner.scala	/^  val getelementptr18_in = Map($/;"	l
getelementptr18_in	src/main/scala/generator/test05.scala	/^  val getelementptr18_in = Map($/;"	l
getelementptr19	src/main/scala/generator/cilk/bgemm_detach3.scala	/^  val getelementptr19 = Module (new GepOneNode(NumOuts = 1, ID = 19)(numByte1 = 1))$/;"	l
getelementptr19_in	src/main/scala/generator/cilk/bgemm_detach3.scala	/^  val getelementptr19_in = Map($/;"	l
getelementptr1_in	src/main/scala/generator/cilk/cilk_for_test06_detach_2.scala	/^  val getelementptr1_in = Map($/;"	l
getelementptr1_in	src/main/scala/generator/cilk/mergesort.scala	/^  val getelementptr1_in = Map($/;"	l
getelementptr2	src/main/scala/generator/cilk/cilk_for_test04_detach.scala	/^  val getelementptr2 = Module (new GepOneNode(NumOuts = 1, ID = 2)(numByte1 = 4))  \/\/ manually corrected numByte1$/;"	l
getelementptr2	src/main/scala/generator/cilk/cilk_for_test05_detach.scala	/^  val getelementptr2 = Module (new GepOneNode(NumOuts = 1, ID = 2)(numByte1 = 1))$/;"	l
getelementptr2	src/main/scala/generator/cilk/cilk_for_test07_detach.scala	/^  val getelementptr2 = Module (new GepTwoNode(NumOuts = 1, ID = 2)(numByte1 = 8, numByte2 = 4)) \/\/ Manual fix$/;"	l
getelementptr2	src/main/scala/generator/cilk/cilk_for_test08_detach.scala	/^  val getelementptr2 = Module (new GepTwoNode(NumOuts = 1, ID = 2)(numByte1 = 12, numByte2 = 4))$/;"	l
getelementptr2	src/main/scala/generator/cilk/mergesort_merge.scala	/^  val getelementptr2 = Module (new GepTwoNode(NumOuts = 1, ID = 2)(numByte1 = 20, numByte2 = 4))$/;"	l
getelementptr2	src/main/scala/generator/test06.scala	/^  val getelementptr2 = Module (new GepTwoNode(NumOuts = 1, ID = 2)(numByte1 = 8, numByte2 = 0))$/;"	l
getelementptr20	src/main/scala/generator/cilk/cilk_for_test08_detach.scala	/^  val getelementptr20 = Module (new GepTwoNode(NumOuts = 1, ID = 20)(numByte1 = 12, numByte2 = 4))$/;"	l
getelementptr20_in	src/main/scala/generator/cilk/cilk_for_test08_detach.scala	/^  val getelementptr20_in = Map($/;"	l
getelementptr21	src/main/scala/generator/cilk/cilk_for_test05_detach.scala	/^  val getelementptr21 = Module (new GepOneNode(NumOuts = 1, ID = 21)(numByte1 = 1))$/;"	l
getelementptr21_in	src/main/scala/generator/cilk/cilk_for_test05_detach.scala	/^  val getelementptr21_in = Map($/;"	l
getelementptr22	src/main/scala/generator/test15.scala	/^  val getelementptr22 = Module (new GepOneNode(NumOuts = 2, ID = 22)(numByte1 = 4))$/;"	l
getelementptr22_in	src/main/scala/generator/test15.scala	/^  val getelementptr22_in = Map($/;"	l
getelementptr24	src/main/scala/generator/cilk/bgemm_detach3.scala	/^  val getelementptr24 = Module (new GepOneNode(NumOuts = 2, ID = 24)(numByte1 = 1))$/;"	l
getelementptr24	src/main/scala/generator/cilk/mergesort_merge.scala	/^  val getelementptr24 = Module (new GepOneNode(NumOuts = 1, ID = 24)(numByte1 = 4))$/;"	l
getelementptr24_in	src/main/scala/generator/cilk/bgemm_detach3.scala	/^  val getelementptr24_in = Map($/;"	l
getelementptr24_in	src/main/scala/generator/cilk/mergesort_merge.scala	/^  val getelementptr24_in = Map($/;"	l
getelementptr26	src/main/scala/generator/cilk/mergesort_merge.scala	/^  val getelementptr26 = Module (new GepOneNode(NumOuts = 1, ID = 26)(numByte1 = 4))$/;"	l
getelementptr26_in	src/main/scala/generator/cilk/mergesort_merge.scala	/^  val getelementptr26_in = Map($/;"	l
getelementptr28	src/main/scala/generator/cilk/cilk_for_test08_detach.scala	/^  val getelementptr28 = Module (new GepTwoNode(NumOuts = 1, ID = 28)(numByte1 = 12, numByte2 = 4))$/;"	l
getelementptr28_in	src/main/scala/generator/cilk/cilk_for_test08_detach.scala	/^  val getelementptr28_in = Map($/;"	l
getelementptr2_in	src/main/scala/generator/cilk/cilk_for_test04_detach.scala	/^  val getelementptr2_in = Map($/;"	l
getelementptr2_in	src/main/scala/generator/cilk/cilk_for_test05_detach.scala	/^  val getelementptr2_in = Map($/;"	l
getelementptr2_in	src/main/scala/generator/cilk/cilk_for_test07_detach.scala	/^  val getelementptr2_in = Map($/;"	l
getelementptr2_in	src/main/scala/generator/cilk/cilk_for_test08_detach.scala	/^  val getelementptr2_in = Map($/;"	l
getelementptr2_in	src/main/scala/generator/cilk/mergesort_merge.scala	/^  val getelementptr2_in = Map($/;"	l
getelementptr2_in	src/main/scala/generator/test06.scala	/^  val getelementptr2_in = Map($/;"	l
getelementptr3	src/main/scala/generator/cilk/cilk_for_test02_mul.scala	/^  val getelementptr3 = Module (new GepOneNode(NumOuts = 1, ID = 3)(numByte1 = 1))$/;"	l
getelementptr3	src/main/scala/generator/cilk/cilk_for_test06_detach_2.scala	/^  val getelementptr3 = Module(new GepOneNode(NumOuts = 1, ID = 3)(numByte1 = 20))$/;"	l
getelementptr3	src/main/scala/generator/cilk/cilk_for_test12_detach3.scala	/^  val getelementptr3 = Module (new GepOneNode(NumOuts = 1, ID = 3)(numByte1 = 4))$/;"	l
getelementptr3	src/main/scala/generator/cilk/mergesort.scala	/^  val getelementptr3 = Module (new GepNodeStack(NumOuts = 1, ID = 3)(numByte1 = 20))$/;"	l
getelementptr30	src/main/scala/generator/cilk/mergesort_merge.scala	/^  val getelementptr30 = Module (new GepOneNode(NumOuts = 1, ID = 30)(numByte1 = 4))$/;"	l
getelementptr30	src/main/scala/generator/test15.scala	/^  val getelementptr30 = Module (new GepOneNode(NumOuts = 2, ID = 30)(numByte1 = 4))$/;"	l
getelementptr30_in	src/main/scala/generator/cilk/mergesort_merge.scala	/^  val getelementptr30_in = Map($/;"	l
getelementptr30_in	src/main/scala/generator/test15.scala	/^  val getelementptr30_in = Map($/;"	l
getelementptr32	src/main/scala/generator/cilk/mergesort_merge.scala	/^  val getelementptr32 = Module (new GepOneNode(NumOuts = 1, ID = 32)(numByte1 = 4))$/;"	l
getelementptr32_in	src/main/scala/generator/cilk/mergesort_merge.scala	/^  val getelementptr32_in = Map($/;"	l
getelementptr36	src/main/scala/generator/cilk/mergesort_merge.scala	/^  val getelementptr36 = Module (new GepOneNode(NumOuts = 1, ID = 36)(numByte1 = 4))$/;"	l
getelementptr36_in	src/main/scala/generator/cilk/mergesort_merge.scala	/^  val getelementptr36_in = Map($/;"	l
getelementptr38	src/main/scala/generator/cilk/mergesort_merge.scala	/^  val getelementptr38 = Module (new GepOneNode(NumOuts = 1, ID = 38)(numByte1 = 4))$/;"	l
getelementptr38_in	src/main/scala/generator/cilk/mergesort_merge.scala	/^  val getelementptr38_in = Map($/;"	l
getelementptr3_in	src/main/scala/generator/cilk/cilk_for_test02_mul.scala	/^  val getelementptr3_in = Map($/;"	l
getelementptr3_in	src/main/scala/generator/cilk/cilk_for_test06_detach_2.scala	/^  val getelementptr3_in = Map($/;"	l
getelementptr3_in	src/main/scala/generator/cilk/cilk_for_test12_detach3.scala	/^  val getelementptr3_in = Map($/;"	l
getelementptr3_in	src/main/scala/generator/cilk/mergesort.scala	/^  val getelementptr3_in = Map($/;"	l
getelementptr4	src/main/scala/generator/cilk/cilk_for_test06_detach_2.scala	/^  val getelementptr4 = Module(new GepTwoNode(NumOuts = 1, ID = 4)(numByte1 = 0, numByte2 = 4))$/;"	l
getelementptr4	src/main/scala/generator/cilk/cilk_for_test07_detach.scala	/^  val getelementptr4 = Module (new GepTwoNode(NumOuts = 1, ID = 4)(numByte1 = 8, numByte2 = 4)) \/\/ Manual fix$/;"	l
getelementptr4	src/main/scala/generator/cilk/cilk_for_test08_detach.scala	/^  val getelementptr4 = Module (new GepTwoNode(NumOuts = 1, ID = 4)(numByte1 = 12, numByte2 = 4))$/;"	l
getelementptr4	src/main/scala/generator/cilk/mergesort_merge.scala	/^  val getelementptr4 = Module (new GepTwoNode(NumOuts = 1, ID = 4)(numByte1 = 20, numByte2 = 4))$/;"	l
getelementptr4	src/main/scala/generator/test05.scala	/^  val getelementptr4 = Module (new GepOneNode(NumOuts = 1, ID = 4)(numByte1 = 4))$/;"	l
getelementptr4	src/main/scala/generator/test06.scala	/^  val getelementptr4 = Module (new GepTwoNode(NumOuts = 1, ID = 4)(numByte1 = 8, numByte2 = 4))$/;"	l
getelementptr4	src/main/scala/generator/test10.scala	/^  val getelementptr4 = Module (new GepOneNode(NumOuts = 1, ID = 4)(numByte1 = 1))$/;"	l
getelementptr4	src/main/scala/generator/test11.scala	/^  val getelementptr4 = Module (new GepOneNode(NumOuts = 1, ID = 4)(numByte1 = 1))$/;"	l
getelementptr4_in	src/main/scala/generator/cilk/cilk_for_test06_detach_2.scala	/^  val getelementptr4_in = Map($/;"	l
getelementptr4_in	src/main/scala/generator/cilk/cilk_for_test07_detach.scala	/^  val getelementptr4_in = Map($/;"	l
getelementptr4_in	src/main/scala/generator/cilk/cilk_for_test08_detach.scala	/^  val getelementptr4_in = Map($/;"	l
getelementptr4_in	src/main/scala/generator/cilk/mergesort_merge.scala	/^  val getelementptr4_in = Map($/;"	l
getelementptr4_in	src/main/scala/generator/test05.scala	/^  val getelementptr4_in = Map($/;"	l
getelementptr4_in	src/main/scala/generator/test06.scala	/^  val getelementptr4_in = Map($/;"	l
getelementptr4_in	src/main/scala/generator/test10.scala	/^  val getelementptr4_in = Map($/;"	l
getelementptr4_in	src/main/scala/generator/test11.scala	/^  val getelementptr4_in = Map($/;"	l
getelementptr5	src/main/scala/generator/cilk/cilk_for_test01.scala	/^  val getelementptr5 = Module (new GepOneNode(NumOuts = 1, ID = 5)(numByte1 = 1))$/;"	l
getelementptr5	src/main/scala/generator/cilk/cilk_for_test04_detach.scala	/^  val getelementptr5 = Module (new GepOneNode(NumOuts = 1, ID = 5)(numByte1 = 4))  \/\/ manually corrected numByte1$/;"	l
getelementptr5	src/main/scala/generator/cilk/mergesort.scala	/^  val getelementptr5 = Module (new GepNodeStack(NumOuts = 1, ID = 5)(numByte1 = 20))$/;"	l
getelementptr5_in	src/main/scala/generator/cilk/cilk_for_test01.scala	/^  val getelementptr5_in = Map($/;"	l
getelementptr5_in	src/main/scala/generator/cilk/cilk_for_test04_detach.scala	/^  val getelementptr5_in = Map($/;"	l
getelementptr5_in	src/main/scala/generator/cilk/mergesort.scala	/^  val getelementptr5_in = Map($/;"	l
getelementptr6	src/main/scala/generator/cilk/cilk_for_test05_detach.scala	/^  val getelementptr6 = Module (new GepOneNode(NumOuts = 1, ID = 6)(numByte1 = 1))$/;"	l
getelementptr6	src/main/scala/generator/cilk/cilk_for_test07_detach.scala	/^  val getelementptr6 = Module (new GepTwoNode(NumOuts = 1, ID = 6)(numByte1 = 8, numByte2 = 4)) \/\/ Manual fix$/;"	l
getelementptr6	src/main/scala/generator/cilk/mergesort_merge.scala	/^  val getelementptr6 = Module (new GepTwoNode(NumOuts = 1, ID = 6)(numByte1 = 20, numByte2 = 4))$/;"	l
getelementptr6	src/main/scala/generator/test06.scala	/^  val getelementptr6 = Module (new GepTwoNode(NumOuts = 1, ID = 6)(numByte1 = 8, numByte2 = 0))$/;"	l
getelementptr6	src/main/scala/generator/test10.scala	/^  val getelementptr6 = Module (new GepOneNode(NumOuts = 1, ID = 6)(numByte1 = 1))$/;"	l
getelementptr6	src/main/scala/generator/test11.scala	/^  val getelementptr6 = Module (new GepOneNode(NumOuts = 1, ID = 6)(numByte1 = 1))$/;"	l
getelementptr6_in	src/main/scala/generator/cilk/cilk_for_test05_detach.scala	/^  val getelementptr6_in = Map($/;"	l
getelementptr6_in	src/main/scala/generator/cilk/cilk_for_test07_detach.scala	/^  val getelementptr6_in = Map($/;"	l
getelementptr6_in	src/main/scala/generator/cilk/mergesort_merge.scala	/^  val getelementptr6_in = Map($/;"	l
getelementptr6_in	src/main/scala/generator/test06.scala	/^  val getelementptr6_in = Map($/;"	l
getelementptr6_in	src/main/scala/generator/test10.scala	/^  val getelementptr6_in = Map($/;"	l
getelementptr6_in	src/main/scala/generator/test11.scala	/^  val getelementptr6_in = Map($/;"	l
getelementptr7	src/main/scala/generator/cilk/cilk_for_test06_detach_2.scala	/^  val getelementptr7 = Module(new GepOneNode(NumOuts = 1, ID = 7)(numByte1 = 20))$/;"	l
getelementptr7	src/main/scala/generator/cilk/mergesort.scala	/^  val getelementptr7 = Module (new GepNodeStack(NumOuts = 1, ID = 7)(numByte1 = 20))$/;"	l
getelementptr7	src/main/scala/generator/test05.scala	/^  val getelementptr7 = Module (new GepOneNode(NumOuts = 1, ID = 7)(numByte1 = 4))$/;"	l
getelementptr7_in	src/main/scala/generator/cilk/cilk_for_test06_detach_2.scala	/^  val getelementptr7_in = Map($/;"	l
getelementptr7_in	src/main/scala/generator/cilk/mergesort.scala	/^  val getelementptr7_in = Map($/;"	l
getelementptr7_in	src/main/scala/generator/test05.scala	/^  val getelementptr7_in = Map($/;"	l
getelementptr8	src/main/scala/generator/cilk/cilk_for_test01.scala	/^  val getelementptr8 = Module (new GepOneNode(NumOuts = 1, ID = 8)(numByte1 = 1))$/;"	l
getelementptr8	src/main/scala/generator/cilk/cilk_for_test05_detach.scala	/^  val getelementptr8 = Module (new GepOneNode(NumOuts = 1, ID = 8)(numByte1 = 1))$/;"	l
getelementptr8	src/main/scala/generator/cilk/cilk_for_test06_detach_2.scala	/^  val getelementptr8 = Module(new GepTwoNode(NumOuts = 1, ID = 8)(numByte1 = 0, numByte2 = 4))$/;"	l
getelementptr8	src/main/scala/generator/cilk/mergesort_merge.scala	/^  val getelementptr8 = Module (new GepTwoNode(NumOuts = 1, ID = 8)(numByte1 = 20, numByte2 = 4))$/;"	l
getelementptr8	src/main/scala/generator/test06.scala	/^  val getelementptr8 = Module (new GepTwoNode(NumOuts = 1, ID = 8)(numByte1 = 8, numByte2 = 4))$/;"	l
getelementptr8_in	src/main/scala/generator/cilk/cilk_for_test01.scala	/^  val getelementptr8_in = Map($/;"	l
getelementptr8_in	src/main/scala/generator/cilk/cilk_for_test05_detach.scala	/^  val getelementptr8_in = Map($/;"	l
getelementptr8_in	src/main/scala/generator/cilk/cilk_for_test06_detach_2.scala	/^  val getelementptr8_in = Map($/;"	l
getelementptr8_in	src/main/scala/generator/cilk/mergesort_merge.scala	/^  val getelementptr8_in = Map($/;"	l
getelementptr8_in	src/main/scala/generator/test06.scala	/^  val getelementptr8_in = Map($/;"	l
getelementptr9	src/main/scala/generator/cilk/cilk_for_test12_detach1.scala	/^  val getelementptr9 = Module (new GepOneNode(NumOuts = 2, ID = 9)(numByte1 = 4))$/;"	l
getelementptr9	src/main/scala/generator/cilk/cilk_for_test12_detach2.scala	/^  val getelementptr9 = Module (new GepOneNode(NumOuts = 2, ID = 9)(numByte1 = 4))$/;"	l
getelementptr9	src/main/scala/generator/test05b.scala	/^  val getelementptr9 = Module (new GepOneNode(NumOuts = 2, ID = 9)(numByte1 = 4))$/;"	l
getelementptr9	src/main/scala/generator/test10.scala	/^  val getelementptr9 = Module (new GepOneNode(NumOuts = 1, ID = 9)(numByte1 = 1))$/;"	l
getelementptr9	src/main/scala/generator/test11.scala	/^  val getelementptr9 = Module (new GepOneNode(NumOuts = 1, ID = 9)(numByte1 = 1))$/;"	l
getelementptr9_in	src/main/scala/generator/cilk/cilk_for_test12_detach1.scala	/^  val getelementptr9_in = Map($/;"	l
getelementptr9_in	src/main/scala/generator/cilk/cilk_for_test12_detach2.scala	/^  val getelementptr9_in = Map($/;"	l
getelementptr9_in	src/main/scala/generator/test05b.scala	/^  val getelementptr9_in = Map($/;"	l
getelementptr9_in	src/main/scala/generator/test10.scala	/^  val getelementptr9_in = Map($/;"	l
getelementptr9_in	src/main/scala/generator/test11.scala	/^  val getelementptr9_in = Map($/;"	l
getpass	scripts/TypeStackFile.py	/^from getpass import getpass$/;"	i
glen	src/main/scala/config/config.scala	/^  val glen    = p(GLEN)$/;"	l
glob	scripts/TypeStackFile.py	/^from glob import glob$/;"	i
gold	src/test/scala/accel/CacheTests.scala	/^  val gold = Module(new CacheModel)$/;"	l
gold_mem	src/test/scala/accel/CacheTests.scala	/^  val gold_mem = Wire(new NastiIO)$/;"	l
gold_req	src/test/scala/accel/CacheTests.scala	/^  val gold_req = Wire(Flipped(Decoupled(new MemReq)))$/;"	l
gold_resp	src/test/scala/accel/CacheTests.scala	/^  val gold_resp = Wire(Decoupled(new MemResp))$/;"	l
goto_chisel_temp	goto_chisel.sh	/^function goto_chisel_temp {$/;"	f
gp	src/main/scala/dataflow/filter/BasicLoader.scala	/^    val gp = Module (new GepOneNode(NumOuts = 1, ID = i)(numByte1 = 0)(p))$/;"	l
grantMask_1	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire  grantMask_1;$/;"	n
h2f	src/main/scala/accel/Accelerator.scala	/^      val h2f  = Flipped(new NastiIO)$/;"	l
head	src/main/scala/loop/Example1.scala	/^  val head = Module(new LoopHeader(NumInputs = NumInputs, NumOuts = 4, ID = 0))$/;"	l
here	src/main/scala/config/cde/Parameters.scala	/^        val here = _otherView(this, site)$/;"	l
here	src/main/scala/config/cde/Parameters.scala	/^        val here = _world._otherView(this, site)$/;"	l
hit	src/main/scala/accel/Cache.scala	/^  val hit = Wire(Bool())$/;"	l
hps	src/test/scala/accel/AccelTests.scala	/^  val hps = Module(new NastiMaster)$/;"	l
hps	src/test/scala/accel/coredf/AccelTests01.scala	/^  val hps = Module(new NastiMaster)$/;"	l
hps	src/test/scala/accel/coredf/FilterDFTests.scala	/^  val hps = Module(new NastiMaster)$/;"	l
hps	src/test/scala/accel/coredf/VecFilterNoKernDFTests.scala	/^  val hps = Module(new NastiMaster)$/;"	l
i	scripts/extract_activity.py	/^i = 10$/;"	v
i	src/test/scala/generator/cilk/bgemm_test.scala	/^  var i = 0$/;"	l
i	src/test/scala/generator/cilk/cilk_for_test04_test.scala	/^  var i = 0$/;"	l
i	src/test/scala/generator/cilk/cilk_for_test06_test.scala	/^  var i = 0$/;"	l
i	src/test/scala/generator/cilk/cilk_for_test07_test.scala	/^  var i = 0$/;"	l
i	src/test/scala/generator/cilk/cilk_for_test08_test.scala	/^  var i = 0$/;"	l
i	src/test/scala/generator/cilk/cilk_for_test09_test.scala	/^  var i = 0$/;"	l
i	src/test/scala/generator/cilk/cilk_for_test12_test.scala	/^  var i = 0$/;"	l
i	src/test/scala/generator/cilk/stencil_test.scala	/^  var i = 0$/;"	l
i	src/test/scala/generator/test05_test.scala	/^  var i = 0$/;"	l
i	src/test/scala/generator/test15_test.scala	/^  var i = 0$/;"	l
icmp1	src/main/scala/generator/test02.scala	/^  val icmp1 = Module (new IcmpNode(NumOuts = 1, ID = 1, opCode = "EQ")(sign=false))$/;"	l
icmp10	src/main/scala/generator/cilk/mergesort.scala	/^  val icmp10 = Module (new IcmpNode(NumOuts = 1, ID = 10, opCode = "ULT")(sign=false))$/;"	l
icmp10	src/main/scala/generator/cilk/stencil_inner.scala	/^  val icmp10 = Module(new IcmpNode(NumOuts = 1, ID = 10, opCode = "ULT")(sign = false))$/;"	l
icmp10_in	src/main/scala/generator/cilk/mergesort.scala	/^  val icmp10_in = Map($/;"	l
icmp10_in	src/main/scala/generator/cilk/stencil_inner.scala	/^  val icmp10_in = Map($/;"	l
icmp11	src/main/scala/generator/test15.scala	/^  val icmp11 = Module (new IcmpNode(NumOuts = 1, ID = 11, opCode = "ULT")(sign=false))$/;"	l
icmp11_in	src/main/scala/generator/test15.scala	/^  val icmp11_in = Map($/;"	l
icmp15	src/main/scala/generator/cilk/bgemm_detach3.scala	/^  val icmp15 = Module (new IcmpNode(NumOuts = 1, ID = 15, opCode = "ULT")(sign=false))$/;"	l
icmp15_in	src/main/scala/generator/cilk/bgemm_detach3.scala	/^  val icmp15_in = Map($/;"	l
icmp18	src/main/scala/generator/cilk/mergesort_merge.scala	/^  val icmp18 = Module (new IcmpNode(NumOuts = 1, ID = 18, opCode = "ULT")(sign=false))$/;"	l
icmp18_in	src/main/scala/generator/cilk/mergesort_merge.scala	/^  val icmp18_in = Map($/;"	l
icmp1_in	src/main/scala/generator/test02.scala	/^  val icmp1_in = Map($/;"	l
icmp2	src/main/scala/generator/cilk/cilk_for_test01.scala	/^  val icmp2 = Module (new IcmpNode(NumOuts = 1, ID = 2, opCode = "ULT")(sign=false))$/;"	l
icmp2	src/main/scala/generator/cilk/cilk_for_test02.scala	/^  val icmp2 = Module (new IcmpNode(NumOuts = 1, ID = 2, opCode = "ULT")(sign=false))$/;"	l
icmp2	src/main/scala/generator/cilk/cilk_for_test05.scala	/^  val icmp2 = Module (new IcmpNode(NumOuts = 1, ID = 2, opCode = "ULT")(sign=false))$/;"	l
icmp2	src/main/scala/generator/cilk/cilk_for_test06.scala	/^  val icmp2 = Module(new IcmpNode(NumOuts = 1, ID = 2, opCode = "ULT")(sign = false))$/;"	l
icmp2	src/main/scala/generator/cilk/cilk_for_test06_detach.scala	/^  val icmp2 = Module(new IcmpNode(NumOuts = 1, ID = 2, opCode = "ULT")(sign = false))$/;"	l
icmp2	src/main/scala/generator/cilk/cilk_for_test12_detach1.scala	/^  val icmp2 = Module (new IcmpNode(NumOuts = 1, ID = 2, opCode = "ULT")(sign=false))$/;"	l
icmp2	src/main/scala/generator/cilk/cilk_for_test12_detach2.scala	/^  val icmp2 = Module (new IcmpNode(NumOuts = 1, ID = 2, opCode = "ULT")(sign=false))$/;"	l
icmp2	src/main/scala/generator/cilk/stencil.scala	/^  val icmp2 = Module(new IcmpNode(NumOuts = 1, ID = 2, opCode = "ULT")(sign = false))$/;"	l
icmp2	src/main/scala/generator/cilk/stencil_inner.scala	/^  val icmp2 = Module(new IcmpNode(NumOuts = 1, ID = 2, opCode = "ULE")(sign = false))$/;"	l
icmp2	src/main/scala/generator/test05.scala	/^  val icmp2 = Module (new IcmpNode(NumOuts = 1, ID = 2, opCode = "ULT")(sign=false))$/;"	l
icmp2	src/main/scala/generator/test05b.scala	/^  val icmp2 = Module (new IcmpNode(NumOuts = 1, ID = 2, opCode = "ULT")(sign=false))$/;"	l
icmp2	src/main/scala/generator/test10.scala	/^  val icmp2 = Module (new IcmpNode(NumOuts = 1, ID = 2, opCode = "ULT")(sign=false))$/;"	l
icmp2	src/main/scala/generator/test11.scala	/^  val icmp2 = Module (new IcmpNode(NumOuts = 1, ID = 2, opCode = "ULT")(sign=false))$/;"	l
icmp20	src/main/scala/generator/cilk/mergesort_merge.scala	/^  val icmp20 = Module (new IcmpNode(NumOuts = 1, ID = 20, opCode = "ULT")(sign=false))$/;"	l
icmp20_in	src/main/scala/generator/cilk/mergesort_merge.scala	/^  val icmp20_in = Map($/;"	l
icmp22	src/main/scala/generator/cilk/mergesort_merge.scala	/^  val icmp22 = Module (new IcmpNode(NumOuts = 1, ID = 22, opCode = "UGE")(sign=false))$/;"	l
icmp22_in	src/main/scala/generator/cilk/mergesort_merge.scala	/^  val icmp22_in = Map($/;"	l
icmp28	src/main/scala/generator/cilk/mergesort_merge.scala	/^  val icmp28 = Module (new IcmpNode(NumOuts = 1, ID = 28, opCode = "ULE")(sign=false))$/;"	l
icmp28_in	src/main/scala/generator/cilk/mergesort_merge.scala	/^  val icmp28_in = Map($/;"	l
icmp2_in	src/main/scala/generator/cilk/cilk_for_test01.scala	/^  val icmp2_in = Map($/;"	l
icmp2_in	src/main/scala/generator/cilk/cilk_for_test02.scala	/^  val icmp2_in = Map($/;"	l
icmp2_in	src/main/scala/generator/cilk/cilk_for_test04.scala	/^  val icmp2_in = Map($/;"	l
icmp2_in	src/main/scala/generator/cilk/cilk_for_test05.scala	/^  val icmp2_in = Map($/;"	l
icmp2_in	src/main/scala/generator/cilk/cilk_for_test06.scala	/^  val icmp2_in = Map($/;"	l
icmp2_in	src/main/scala/generator/cilk/cilk_for_test06_detach.scala	/^  val icmp2_in = Map($/;"	l
icmp2_in	src/main/scala/generator/cilk/cilk_for_test12_detach1.scala	/^  val icmp2_in = Map($/;"	l
icmp2_in	src/main/scala/generator/cilk/cilk_for_test12_detach2.scala	/^  val icmp2_in = Map($/;"	l
icmp2_in	src/main/scala/generator/cilk/stencil.scala	/^  val icmp2_in = Map($/;"	l
icmp2_in	src/main/scala/generator/cilk/stencil_inner.scala	/^  val icmp2_in = Map($/;"	l
icmp2_in	src/main/scala/generator/test05.scala	/^  val icmp2_in = Map($/;"	l
icmp2_in	src/main/scala/generator/test05b.scala	/^  val icmp2_in = Map($/;"	l
icmp2_in	src/main/scala/generator/test10.scala	/^  val icmp2_in = Map($/;"	l
icmp2_in	src/main/scala/generator/test11.scala	/^  val icmp2_in = Map($/;"	l
icmp3	src/main/scala/generator/cilk/bgemm.scala	/^  val icmp3 = Module (new IcmpNode(NumOuts = 1, ID = 3, opCode = "ULT")(sign=false))$/;"	l
icmp3	src/main/scala/generator/cilk/bgemm_detach3.scala	/^  val icmp3 = Module (new IcmpNode(NumOuts = 1, ID = 3, opCode = "ULT")(sign=false))$/;"	l
icmp3	src/main/scala/generator/cilk/cilk_for_test09_inner.scala	/^  val icmp3 = Module (new IcmpNode(NumOuts = 1, ID = 3, opCode = "ULT")(sign=false))$/;"	l
icmp3	src/main/scala/generator/test05c.scala	/^  val icmp3 = Module (new IcmpNode(NumOuts = 1, ID = 3, opCode = "ULT")(sign=false))$/;"	l
icmp3	src/main/scala/generator/test08.scala	/^  val icmp3 = Module (new IcmpNode(NumOuts = 1, ID = 3, opCode = "ULT")(sign=false))$/;"	l
icmp3	src/main/scala/generator/test09.scala	/^  val icmp3 = Module (new IcmpNode(NumOuts = 1, ID = 3, opCode = "ULT")(sign=false))$/;"	l
icmp3	src/main/scala/generator/test12.scala	/^  val icmp3 = Module (new IcmpNode(NumOuts = 1, ID = 3, opCode = "ULT")(sign=false))$/;"	l
icmp3	src/main/scala/generator/test12_inner.scala	/^  val icmp3 = Module (new IcmpNode(NumOuts = 1, ID = 3, opCode = "ULT")(sign=false))$/;"	l
icmp3	src/main/scala/generator/test14.scala	/^  val icmp3 = Module (new IcmpNode(NumOuts = 1, ID = 3, opCode = "ULT")(sign=false))$/;"	l
icmp3	src/main/scala/generator/test14_inner.scala	/^  val icmp3 = Module (new IcmpNode(NumOuts = 1, ID = 3, opCode = "ULT")(sign=false))$/;"	l
icmp3	src/main/scala/generator/test15.scala	/^  val icmp3 = Module (new IcmpNode(NumOuts = 1, ID = 3, opCode = "ULT")(sign=false))$/;"	l
icmp3_in	src/main/scala/generator/cilk/bgemm.scala	/^  val icmp3_in = Map($/;"	l
icmp3_in	src/main/scala/generator/cilk/bgemm_detach3.scala	/^  val icmp3_in = Map($/;"	l
icmp3_in	src/main/scala/generator/cilk/cilk_for_test09_inner.scala	/^  val icmp3_in = Map($/;"	l
icmp3_in	src/main/scala/generator/test03.scala	/^  val icmp3_in = Map($/;"	l
icmp3_in	src/main/scala/generator/test05c.scala	/^  val icmp3_in = Map($/;"	l
icmp3_in	src/main/scala/generator/test08.scala	/^  val icmp3_in = Map($/;"	l
icmp3_in	src/main/scala/generator/test09.scala	/^  val icmp3_in = Map($/;"	l
icmp3_in	src/main/scala/generator/test12.scala	/^  val icmp3_in = Map($/;"	l
icmp3_in	src/main/scala/generator/test12_inner.scala	/^  val icmp3_in = Map($/;"	l
icmp3_in	src/main/scala/generator/test14.scala	/^  val icmp3_in = Map($/;"	l
icmp3_in	src/main/scala/generator/test14_inner.scala	/^  val icmp3_in = Map($/;"	l
icmp3_in	src/main/scala/generator/test15.scala	/^  val icmp3_in = Map($/;"	l
icmp4	src/main/scala/generator/cilk/cilk_for_test05_detach.scala	/^  val icmp4 = Module (new IcmpNode(NumOuts = 1, ID = 4, opCode = "UGT")(sign=false))$/;"	l
icmp4	src/main/scala/generator/cilk/cilk_for_test09.scala	/^  val icmp4 = Module(new IcmpNode(NumOuts = 1, ID = 4, opCode = "ULT")(sign = false))$/;"	l
icmp4	src/main/scala/generator/cilk/cilk_for_test12.scala	/^  val icmp4 = Module (new IcmpNode(NumOuts = 1, ID = 4, opCode = "ULT")(sign=false))$/;"	l
icmp4	src/main/scala/generator/cilk/fib.scala	/^  val icmp4 = Module (new IcmpNode(NumOuts = 1, ID = 4, opCode = "ULT")(sign=false))$/;"	l
icmp4	src/main/scala/generator/cilk/stencil_detach1.scala	/^  val icmp4 = Module(new IcmpNode(NumOuts = 1, ID = 4, opCode = "ULE")(sign = false))$/;"	l
icmp4	src/main/scala/generator/test04.scala	/^  val icmp4 = Module (new IcmpNode(NumOuts = 1, ID = 4, opCode = "NE")(sign=false))$/;"	l
icmp4_in	src/main/scala/generator/cilk/cilk_for_test05_detach.scala	/^  val icmp4_in = Map($/;"	l
icmp4_in	src/main/scala/generator/cilk/cilk_for_test09.scala	/^  val icmp4_in = Map($/;"	l
icmp4_in	src/main/scala/generator/cilk/cilk_for_test12.scala	/^  val icmp4_in = Map($/;"	l
icmp4_in	src/main/scala/generator/cilk/fib.scala	/^  val icmp4_in = Map($/;"	l
icmp4_in	src/main/scala/generator/cilk/stencil_detach1.scala	/^  val icmp4_in = Map($/;"	l
icmp4_in	src/main/scala/generator/test04.scala	/^  val icmp4_in = Map($/;"	l
icmp5	src/main/scala/generator/cilk/bgemm_detach1.scala	/^  val icmp5 = Module (new IcmpNode(NumOuts = 1, ID = 5, opCode = "ULT")(sign=false))$/;"	l
icmp5	src/main/scala/generator/cilk/bgemm_detach2.scala	/^  val icmp5 = Module (new IcmpNode(NumOuts = 1, ID = 5, opCode = "ULT")(sign=false))$/;"	l
icmp5_in	src/main/scala/generator/cilk/bgemm_detach1.scala	/^  val icmp5_in = Map($/;"	l
icmp5_in	src/main/scala/generator/cilk/bgemm_detach2.scala	/^  val icmp5_in = Map($/;"	l
icmp6	src/main/scala/generator/cilk/cilk_for_test07.scala	/^  val icmp6 = Module (new IcmpNode(NumOuts = 1, ID = 6, opCode = "EQ")(sign=false))$/;"	l
icmp6	src/main/scala/generator/cilk/cilk_for_test08.scala	/^  val icmp6 = Module (new IcmpNode(NumOuts = 1, ID = 6, opCode = "EQ")(sign=false))$/;"	l
icmp6	src/main/scala/generator/test04.scala	/^  val icmp6 = Module (new IcmpNode(NumOuts = 1, ID = 6, opCode = "UGT")(sign=false))$/;"	l
icmp6_in	src/main/scala/generator/cilk/cilk_for_test07.scala	/^  val icmp6_in = Map($/;"	l
icmp6_in	src/main/scala/generator/cilk/cilk_for_test08.scala	/^  val icmp6_in = Map($/;"	l
icmp6_in	src/main/scala/generator/test04.scala	/^  val icmp6_in = Map($/;"	l
icmp7	src/main/scala/generator/test15.scala	/^  val icmp7 = Module (new IcmpNode(NumOuts = 1, ID = 7, opCode = "ULT")(sign=false))$/;"	l
icmp7_in	src/main/scala/generator/test15.scala	/^  val icmp7_in = Map($/;"	l
icmp8	src/main/scala/generator/cilk/stencil_inner.scala	/^  val icmp8 = Module(new IcmpNode(NumOuts = 1, ID = 8, opCode = "ULT")(sign = false))$/;"	l
icmp8_in	src/main/scala/generator/cilk/stencil_inner.scala	/^  val icmp8_in = Map($/;"	l
id	src/main/scala/junctions/nasti.scala	/^  val id   = UInt(width = nastiRIdBits)$/;"	l
id	src/main/scala/junctions/nasti.scala	/^  val id   = UInt(width = nastiWIdBits)$/;"	l
idx	src/main/scala/accel/Cache.scala	/^  val idx      = addr(slen+blen-1, blen)$/;"	l
idx	src/test/scala/accel/CacheTests.scala	/^  val idx   = req.addr(blen + slen - 1, blen)$/;"	l
idx	src/test/scala/accel/CacheTests.scala	/^  val idx  = (Vec(testVec)(testCnt) >> blen.U)(slen - 1, 0)$/;"	l
idx	src/test/scala/concurrent/DetachTest.scala	/^  var idx = 0$/;"	l
idx	src/test/scala/concurrent/ReattachTest.scala	/^  var idx = 0$/;"	l
idx	src/test/scala/concurrent/TaskControllerTest.scala	/^  var idx = 0$/;"	l
idx1	src/main/scala/node/GepNode.scala	/^  val idx1 = Flipped(Decoupled(new DataBundle()))$/;"	l
idx1_R	src/main/scala/node/GepNode.scala	/^  val idx1_R = RegInit(DataBundle.default)$/;"	l
idx1_valid_R	src/main/scala/node/GepNode.scala	/^  val idx1_valid_R = RegInit(false.B)$/;"	l
idx2	src/main/scala/node/GepNode.scala	/^  val idx2 = Flipped(Decoupled(new DataBundle()))$/;"	l
idx2_R	src/main/scala/node/GepNode.scala	/^  val idx2_R = RegInit(DataBundle.default)$/;"	l
idx2_valid_R	src/main/scala/node/GepNode.scala	/^  val idx2_valid_R = RegInit(false.B)$/;"	l
idx_reg	src/main/scala/accel/Cache.scala	/^  val idx_reg  = addr_reg(slen+blen-1, blen)$/;"	l
idxs	src/test/scala/accel/CacheTests.scala	/^  val idxs = Vector.fill(2)(rand_idx)$/;"	l
ieee	src/main/scala/FPU/FPALU.scala	/^  def ieee(x: UInt) = hardfloat.fNFromRecFN(exp, sig, x)$/;"	m
ieeeWidth	src/main/scala/FPU/FPALU.scala	/^  def ieeeWidth = exp + sig$/;"	m
in	src/main/scala/arbiters/ArbiterTree.scala	/^    val in = Vec(Nops, Flipped(Decoupled(gen)))$/;"	l
in	src/main/scala/config/cde/Expression.scala	/^  def in  (x:List[IntEx]):Ex[Boolean] = {$/;"	m
in	src/main/scala/config/cde/Expression.scala	/^  def in  (x:Range):Ex[Boolean] = ExAnd(ExGte(expr,ExLit[Int](x.min)),ExLte(expr,ExLit[Int](x.max)))$/;"	m
in	src/main/scala/generator/cilk/bgemm.scala	/^    val in = Flipped(Decoupled(new Call(List(32,32,32))))$/;"	l
in	src/main/scala/generator/cilk/bgemm_detach1.scala	/^    val in = Flipped(Decoupled(new Call(List(32,32,32,32))))$/;"	l
in	src/main/scala/generator/cilk/bgemm_detach2.scala	/^    val in = Flipped(Decoupled(new Call(List(32,32,32,32,32))))$/;"	l
in	src/main/scala/generator/cilk/bgemm_detach3.scala	/^    val in = Flipped(Decoupled(new Call(List(32,32,32,32,32,32))))$/;"	l
in	src/main/scala/generator/cilk/cilk_for_test01.scala	/^    val in = Flipped(Decoupled(new Call(List(32,32))))$/;"	l
in	src/main/scala/generator/cilk/cilk_for_test02.scala	/^    val in = Flipped(Decoupled(new Call(List(32,32))))$/;"	l
in	src/main/scala/generator/cilk/cilk_for_test02_mul.scala	/^    val in = Flipped(Decoupled(new Call(List(32,32,32))))$/;"	l
in	src/main/scala/generator/cilk/cilk_for_test04.scala	/^    val in = Flipped(Decoupled(new Call(List(32,32,32))))$/;"	l
in	src/main/scala/generator/cilk/cilk_for_test04_detach.scala	/^    val in = Flipped(Decoupled(new Call(List(32,32,32,32))))$/;"	l
in	src/main/scala/generator/cilk/cilk_for_test05.scala	/^    val in = Flipped(Decoupled(new Call(List(32,32,32))))$/;"	l
in	src/main/scala/generator/cilk/cilk_for_test05_detach.scala	/^    val in = Flipped(Decoupled(new Call(List(32,32,32,32))))$/;"	l
in	src/main/scala/generator/cilk/cilk_for_test06.scala	/^    val in = Flipped(Decoupled(new Call(List(32, 32, 32))))$/;"	l
in	src/main/scala/generator/cilk/cilk_for_test06_detach.scala	/^    val in = Flipped(Decoupled(new Call(List(32, 32, 32, 32))))$/;"	l
in	src/main/scala/generator/cilk/cilk_for_test06_detach_2.scala	/^    val in = Flipped(Decoupled(new Call(List(32, 32, 32, 32, 32))))$/;"	l
in	src/main/scala/generator/cilk/cilk_for_test07.scala	/^    val in = Flipped(Decoupled(new Call(List(32,32,32))))$/;"	l
in	src/main/scala/generator/cilk/cilk_for_test07_detach.scala	/^    val in = Flipped(Decoupled(new Call(List(32,32,32,32))))$/;"	l
in	src/main/scala/generator/cilk/cilk_for_test08.scala	/^    val in = Flipped(Decoupled(new Call(List(32,32))))$/;"	l
in	src/main/scala/generator/cilk/cilk_for_test08_detach.scala	/^    val in = Flipped(Decoupled(new Call(List(32,32,32))))$/;"	l
in	src/main/scala/generator/cilk/cilk_for_test09.scala	/^    val in = Flipped(Decoupled(new Call(List(32, 32))))$/;"	l
in	src/main/scala/generator/cilk/cilk_for_test09_inner.scala	/^    val in = Flipped(Decoupled(new Call(List(32))))$/;"	l
in	src/main/scala/generator/cilk/cilk_for_test12.scala	/^    val in = Flipped(Decoupled(new Call(List(32,32))))$/;"	l
in	src/main/scala/generator/cilk/cilk_for_test12_detach1.scala	/^    val in = Flipped(Decoupled(new Call(List(32,32,32))))$/;"	l
in	src/main/scala/generator/cilk/cilk_for_test12_detach2.scala	/^    val in = Flipped(Decoupled(new Call(List(32,32))))$/;"	l
in	src/main/scala/generator/cilk/cilk_for_test12_detach3.scala	/^    val in = Flipped(Decoupled(new Call(List(32,32))))$/;"	l
in	src/main/scala/generator/cilk/cilk_spawn_test01.scala	/^    val in = Flipped(Decoupled(new Call(List(32,32))))$/;"	l
in	src/main/scala/generator/cilk/cilk_spawn_test02.scala	/^    val in = Flipped(Decoupled(new Call(List(32,32))))$/;"	l
in	src/main/scala/generator/cilk/fib.scala	/^    val in = Flipped(Decoupled(new Call(List(32,32))))$/;"	l
in	src/main/scala/generator/cilk/fib_continue.scala	/^    val in = Flipped(Decoupled(new Call(List(32,32,32))))$/;"	l
in	src/main/scala/generator/cilk/mergesort.scala	/^    val in = Flipped(Decoupled(new Call(List(32,32,32,32))))$/;"	l
in	src/main/scala/generator/cilk/mergesort_merge.scala	/^    val in = Flipped(Decoupled(new Call(List(32))))$/;"	l
in	src/main/scala/generator/cilk/stencil.scala	/^    val in = Flipped(Decoupled(new Call(List(32, 32))))$/;"	l
in	src/main/scala/generator/cilk/stencil_detach1.scala	/^    val in = Flipped(Decoupled(new Call(List(32, 32, 32))))$/;"	l
in	src/main/scala/generator/cilk/stencil_inner.scala	/^    val in = Flipped(Decoupled(new Call(List(32, 32, 32, 32, 32))))$/;"	l
in	src/main/scala/generator/test01.scala	/^    val in = Flipped(Decoupled(new Call(List(32, 32))))$/;"	l
in	src/main/scala/generator/test02.scala	/^    val in = Flipped(Decoupled(new Call(List(32,32))))$/;"	l
in	src/main/scala/generator/test03.scala	/^    val in = Flipped(Decoupled(new Call(List(32, 32, 32))))$/;"	l
in	src/main/scala/generator/test04.scala	/^    val in = Flipped(Decoupled(new Call(List(32,32))))$/;"	l
in	src/main/scala/generator/test05.scala	/^    val in = Flipped(Decoupled(new Call(List(32,32))))$/;"	l
in	src/main/scala/generator/test05b.scala	/^    val in = Flipped(Decoupled(new Call(List(32,32))))$/;"	l
in	src/main/scala/generator/test05c.scala	/^    val in = Flipped(Decoupled(new Call(List(32,32))))$/;"	l
in	src/main/scala/generator/test06.scala	/^    val in = Flipped(Decoupled(new Call(List(32,32))))$/;"	l
in	src/main/scala/generator/test08.scala	/^    val in = Flipped(Decoupled(new Call(List(32))))$/;"	l
in	src/main/scala/generator/test09.scala	/^    val in = Flipped(Decoupled(new Call(List(32))))$/;"	l
in	src/main/scala/generator/test10.scala	/^    val in = Flipped(Decoupled(new Call(List(32,32,32))))$/;"	l
in	src/main/scala/generator/test11.scala	/^    val in = Flipped(Decoupled(new Call(List(32,32,32))))$/;"	l
in	src/main/scala/generator/test11_add.scala	/^    val in = Flipped(Decoupled(new Call(List(32,32))))$/;"	l
in	src/main/scala/generator/test12.scala	/^    val in = Flipped(Decoupled(new Call(List(32))))$/;"	l
in	src/main/scala/generator/test12_inner.scala	/^    val in = Flipped(Decoupled(new Call(List(32))))$/;"	l
in	src/main/scala/generator/test14.scala	/^    val in = Flipped(Decoupled(new Call(List(32,32))))$/;"	l
in	src/main/scala/generator/test14_inner.scala	/^    val in = Flipped(Decoupled(new Call(List(32))))$/;"	l
in	src/main/scala/generator/test15.scala	/^    val in = Flipped(Decoupled(new Call(List(32,32))))$/;"	l
in	src/main/scala/switches/DyserSwitch.scala	/^    val in = Flipped(Decoupled(new DataBundle()))$/;"	l
in	src/main/scala/switches/DyserSwitch.scala	/^    val in = Vec(NInputs, Flipped(Decoupled(new DataBundle())))$/;"	l
in	src/test/scala/concurrent/DecoupledTaskTest.scala	/^  val in = Array.fill(4,testVals)(Random.nextInt(1000))$/;"	l
in	src/test/scala/generator/cilk/bgemm_test.scala	/^    val in = Flipped(Decoupled(new Call(List(32,32,32))))$/;"	l
in	src/test/scala/generator/cilk/cilk_for_test02_test.scala	/^    val in = Flipped(Decoupled(new Call(List(32,32))))$/;"	l
in	src/test/scala/generator/cilk/cilk_for_test04_test.scala	/^    val in = Flipped(Decoupled(new Call(List(32,32,32))))$/;"	l
in	src/test/scala/generator/cilk/cilk_for_test05_test.scala	/^    val in = Flipped(Decoupled(new Call(List(32,32,32))))$/;"	l
in	src/test/scala/generator/cilk/cilk_for_test06_test.scala	/^    val in = Flipped(Decoupled(new Call(List(32, 32, 32))))$/;"	l
in	src/test/scala/generator/cilk/cilk_for_test07_test.scala	/^    val in = Flipped(Decoupled(new Call(List(32,32,32))))$/;"	l
in	src/test/scala/generator/cilk/cilk_for_test08_test.scala	/^    val in = Flipped(Decoupled(new Call(List(32,32))))$/;"	l
in	src/test/scala/generator/cilk/cilk_for_test09_test.scala	/^    val in = Flipped(Decoupled(new Call(List(32,32))))$/;"	l
in	src/test/scala/generator/cilk/cilk_for_test12_test.scala	/^    val in = Flipped(Decoupled(new Call(List(32,32,32))))$/;"	l
in	src/test/scala/generator/cilk/fib_test.scala	/^    val in = Flipped(Decoupled(new Call(List(32,32))))$/;"	l
in	src/test/scala/generator/cilk/mergesort_test.scala	/^    val in = Flipped(Decoupled(new Call(List(32,32,32,32))))$/;"	l
in	src/test/scala/generator/cilk/stencil_test.scala	/^    val in = Flipped(Decoupled(new Call(List(32, 32))))$/;"	l
in	src/test/scala/generator/test05_test.scala	/^    val in = Flipped(Decoupled(new Call(List(32,32,32))))$/;"	l
in	src/test/scala/generator/test11_test.scala	/^    val in = Flipped(Decoupled(new Call(List(32,32,32))))$/;"	l
in	src/test/scala/generator/test15_test.scala	/^    val in = Flipped(Decoupled(new Call(List(32,32,32))))$/;"	l
in1	src/main/scala/FPU/FPALU.scala	/^    val in1 = Input(UInt(xlen.W))$/;"	l
in1	src/main/scala/node/Alu.scala	/^    val in1 = Input(SInt(xlen.W))$/;"	l
in1	src/main/scala/node/Alu.scala	/^    val in1 = Input(UInt(xlen.W))$/;"	l
in1	src/main/scala/node/Comparision.scala	/^    val in1 = Input(SInt(xlen.W))$/;"	l
in1	src/main/scala/node/Comparision.scala	/^    val in1 = Input(UInt(xlen.W))$/;"	l
in1RecFN	src/main/scala/FPU/FPALU.scala	/^  val in1RecFN = t.recode(io.in1)$/;"	l
in2	src/main/scala/FPU/FPALU.scala	/^    val in2 = Input(UInt(xlen.W))$/;"	l
in2	src/main/scala/node/Alu.scala	/^    val in2 = Input(SInt(xlen.W))$/;"	l
in2	src/main/scala/node/Alu.scala	/^    val in2 = Input(UInt(xlen.W))$/;"	l
in2	src/main/scala/node/Comparision.scala	/^    val in2 = Input(SInt(xlen.W))$/;"	l
in2	src/main/scala/node/Comparision.scala	/^    val in2 = Input(UInt(xlen.W))$/;"	l
in2RecFN	src/main/scala/FPU/FPALU.scala	/^  val in2RecFN = t.recode(io.in2)$/;"	l
inA	src/test/scala/generator/cilk/bgemm_test.scala	/^  val inA = List.range(0, 16)  \/\/ 4x4 array of uint32$/;"	l
inA	src/test/scala/generator/cilk/cilk_for_test06_test.scala	/^  val inA = List.range(0, 25) \/\/ 5x5 array of uint32$/;"	l
inAddrVec	src/test/scala/generator/cilk/bgemm_test.scala	/^  val inAddrVec = List.range(0, 200, 4)  \/\/ byte addresses$/;"	l
inAddrVec	src/test/scala/generator/cilk/cilk_for_test04_test.scala	/^  val inAddrVec = List("h0".U,"h4".U,"h8".U,"hC".U,"h10".U,$/;"	l
inAddrVec	src/test/scala/generator/cilk/cilk_for_test06_test.scala	/^  val inAddrVec = List.range(0, 200, 4) \/\/ byte addresses$/;"	l
inAddrVec	src/test/scala/generator/cilk/cilk_for_test07_test.scala	/^  val inAddrVec = List.range(0, 144, 4)$/;"	l
inAddrVec	src/test/scala/generator/cilk/cilk_for_test08_test.scala	/^  val inAddrVec = List.range(0, pixels*3*4, 4)$/;"	l
inAddrVec	src/test/scala/generator/cilk/cilk_for_test09_test.scala	/^  val inAddrVec = List.range(0, pixels*3*4, 4)$/;"	l
inAddrVec	src/test/scala/generator/cilk/cilk_for_test12_test.scala	/^  val inAddrVec = List.range(64, 64+4*8, 4)$/;"	l
inAddrVec	src/test/scala/generator/cilk/mergesort_test.scala	/^  val inAddrVec = List.range(0, 4*inDataVec.length, 4)$/;"	l
inAddrVec	src/test/scala/generator/cilk/stencil_test.scala	/^  val inAddrVec = List.range(0, 4 * inDataVec.length, 4)$/;"	l
inAddrVec	src/test/scala/generator/test05_test.scala	/^  val inAddrVec = List.range(0, 4*10, 4)$/;"	l
inAddrVec	src/test/scala/generator/test05_test.scala	/^  val inAddrVec = List.range(0, 4*8, 4)$/;"	l
inAddrVec	src/test/scala/generator/test15_test.scala	/^  val inAddrVec = List.range(0, 4*8, 4)$/;"	l
inB	src/test/scala/generator/cilk/bgemm_test.scala	/^  val inB = List.range(0, 16)  \/\/ 4x4 array of uint32$/;"	l
inB	src/test/scala/generator/cilk/cilk_for_test06_test.scala	/^  val inB = List.range(0, 25) \/\/ 5x5 array of uint32$/;"	l
inData	src/main/scala/loop/LoopElement.scala	/^  val inData = Flipped(Decoupled(CustomDataBundle(UInt(16.W))))$/;"	l
inData	src/main/scala/node/StoreNode.scala	/^  val inData = Flipped(Decoupled(new DataBundle))$/;"	l
inData	src/main/scala/node/StoreSimple.scala	/^  val inData = Flipped(Decoupled(new DataBundle))$/;"	l
inData	src/main/scala/node/TypStore.scala	/^  val inData = Flipped(Decoupled(new TypBundle))$/;"	l
inDataVec	src/test/scala/generator/cilk/bgemm_test.scala	/^  val inDataVec = inA++inB$/;"	l
inDataVec	src/test/scala/generator/cilk/cilk_for_test04_test.scala	/^  val inDataVec = List(1.U,2.U,3.U,4.U,5.U,$/;"	l
inDataVec	src/test/scala/generator/cilk/cilk_for_test06_test.scala	/^  val inDataVec = inA ++ inB$/;"	l
inDataVec	src/test/scala/generator/cilk/cilk_for_test07_test.scala	/^  val inDataVec = List(0,0, 0,1, 0,2, 1,0, 1,1 ,1,2, 2,0,  2,1 ,2,2,$/;"	l
inDataVec	src/test/scala/generator/cilk/cilk_for_test08_test.scala	/^  val inDataVec = List(1,1,1, 0,10,3, 0,2,5,$/;"	l
inDataVec	src/test/scala/generator/cilk/cilk_for_test09_test.scala	/^  val inDataVec = List(1,1,1, 0,10,3, 0,2,5,$/;"	l
inDataVec	src/test/scala/generator/cilk/cilk_for_test12_test.scala	/^  val inDataVec = List(0,1,2,3,4,5,6,7)$/;"	l
inDataVec	src/test/scala/generator/cilk/mergesort_test.scala	/^  val inDataVec = List.fill(len)(scala.util.Random.nextInt(256))$/;"	l
inDataVec	src/test/scala/generator/cilk/stencil_test.scala	/^  val inDataVec = List($/;"	l
inDataVec	src/test/scala/generator/test05_test.scala	/^  val inDataVec = List(0,1,2,3,4,5,6,7)$/;"	l
inDataVec	src/test/scala/generator/test05_test.scala	/^  val inDataVec = List(0,1,2,3,4,5,6,7,8,9)$/;"	l
inDataVec	src/test/scala/generator/test15_test.scala	/^  val inDataVec = List(0,1,2,3,4,5,6,7)$/;"	l
inE	src/main/scala/switches/Dyser.scala	/^    val inE = Flipped(Decoupled(new DataBundle))$/;"	l
inFire_R	src/main/scala/node/CallInNode.scala	/^  val inFire_R = RegInit(false.B)$/;"	l
inN	src/main/scala/switches/Dyser.scala	/^    val inN = Flipped(Decoupled(new DataBundle))$/;"	l
inNE	src/main/scala/switches/Dyser.scala	/^    val inNE = Flipped(Decoupled(new DataBundle))$/;"	l
inS	src/main/scala/switches/Dyser.scala	/^    val inS = Flipped(Decoupled(new DataBundle))$/;"	l
inW	src/main/scala/switches/Dyser.scala	/^    val inW = Flipped(Decoupled(new DataBundle))$/;"	l
in_arb	src/main/scala/memory/ReadMemoryController.scala	/^  val in_arb = Module(new ArbiterTree(BaseSize = BaseSize, NumOps = NumOps, new ReadReq(), Locks = 1))$/;"	l
in_arb	src/main/scala/memory/ReadTypMemoryController.scala	/^  val in_arb = Module(new ArbiterTree(BaseSize = BaseSize, NumOps = NumOps, new ReadReq(), Locks = 1))$/;"	l
in_arb	src/main/scala/memory/WriteMemoryController.scala	/^  val in_arb = Module(new ArbiterTree(BaseSize = BaseSize, NumOps = NumOps, new WriteReq(), Locks = 1))$/;"	l
in_arb	src/main/scala/memory/WriteTypMemoryController.scala	/^  val in_arb = Module(new ArbiterTree(BaseSize = BaseSize, NumOps = NumOps, new WriteReq(), Locks = Beats))$/;"	l
in_arb_clock	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire  in_arb_clock;$/;"	n
in_arb_io_in_0_bits_RouteID	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire [15:0] in_arb_io_in_0_bits_RouteID;$/;"	n
in_arb_io_in_0_bits_address	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire [15:0] in_arb_io_in_0_bits_address;$/;"	n
in_arb_io_in_0_bits_address	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire [5:0] in_arb_io_in_0_bits_address;$/;"	n
in_arb_io_in_0_bits_data	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire [15:0] in_arb_io_in_0_bits_data;$/;"	n
in_arb_io_in_0_bits_mask	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire [1:0] in_arb_io_in_0_bits_mask;$/;"	n
in_arb_io_in_0_ready	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire  in_arb_io_in_0_ready;$/;"	n
in_arb_io_in_0_valid	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire  in_arb_io_in_0_valid;$/;"	n
in_arb_io_in_1_bits_RouteID	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire [15:0] in_arb_io_in_1_bits_RouteID;$/;"	n
in_arb_io_in_1_bits_address	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire [15:0] in_arb_io_in_1_bits_address;$/;"	n
in_arb_io_in_1_ready	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire  in_arb_io_in_1_ready;$/;"	n
in_arb_io_in_1_valid	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire  in_arb_io_in_1_valid;$/;"	n
in_arb_io_out_bits_RouteID	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire [15:0] in_arb_io_out_bits_RouteID;$/;"	n
in_arb_io_out_bits_address	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire [15:0] in_arb_io_out_bits_address;$/;"	n
in_arb_io_out_bits_address	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire [5:0] in_arb_io_out_bits_address;$/;"	n
in_arb_io_out_bits_data	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire [15:0] in_arb_io_out_bits_data;$/;"	n
in_arb_io_out_bits_mask	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire [1:0] in_arb_io_out_bits_mask;$/;"	n
in_arb_io_out_ready	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire  in_arb_io_out_ready;$/;"	n
in_arb_io_out_valid	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire  in_arb_io_out_valid;$/;"	n
in_arb_reset	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire  in_arb_reset;$/;"	n
in_arbiter	src/main/scala/FPU/SharedDiv.scala	/^  val in_arbiter = Module(new ArbiterTree(BaseSize = 2, NumOps = NumOps, new FUReq(argTypes), Locks = 1))$/;"	l
in_arbiter	src/main/scala/stack/StackAlloca.scala	/^  val in_arbiter = Module(new Arbiter(new AllocaReq, NumOps))$/;"	l
in_data_R	src/main/scala/node/PhiNode.scala	/^  val in_data_R = RegInit(VecInit(Seq.fill(NumInputs)(DataBundle.default)))$/;"	l
in_data_valid_R	src/main/scala/node/PhiNode.scala	/^  val in_data_valid_R = RegInit(VecInit(Seq.fill(NumInputs)(false.B)))$/;"	l
in_data_valid_R	src/main/scala/node/RetNode.scala	/^  val in_data_valid_R = RegInit(VecInit(Seq.fill(retTypes.length)(false.B)))$/;"	l
in_data_valid_R	src/main/scala/node/RetNode.scala	/^  val in_data_valid_R = Seq.fill(retTypes.length)(RegInit(false.B))$/;"	l
in_predicate_W	src/main/scala/node/HandShaking.scala	/^  val in_predicate_W = WireInit(VecInit(Seq.fill(NumIns) {$/;"	l
in_reg	src/main/scala/regfile/InputRegFile.scala	/^    val in_reg = RegInit(0.U(10.W))$/;"	l
in_valid_R	src/main/scala/node/HandShaking.scala	/^  val in_valid_R = RegInit(VecInit(Seq.fill(NumIns) {$/;"	l
inc	src/main/scala/concurrent/Sync.scala	/^  val inc = incArb.io.out.fire() && incArb.io.out.bits.control$/;"	l
inc	src/main/scala/regfile/InputRegFile.scala	/^    val inc   = Input(Bool())$/;"	l
incArb	src/main/scala/concurrent/Sync.scala	/^  val incArb = Module(new Arbiter(new ControlBundle, NumInc))$/;"	l
incIn	src/main/scala/concurrent/Sync.scala	/^  val incIn = Flipped(Decoupled(new ControlBundle()))$/;"	l
incIn	src/main/scala/concurrent/Sync.scala	/^  val incIn = Flipped(Vec(NumInc, Decoupled(new ControlBundle())))$/;"	l
inc_R	src/main/scala/concurrent/Sync.scala	/^  val inc_R = RegInit(ControlBundle.default)$/;"	l
inc_valid_R	src/main/scala/concurrent/Sync.scala	/^  val inc_valid_R = RegInit(false.B)$/;"	l
indata_R	src/main/scala/loop/LiveInNode.scala	/^  val indata_R = RegInit(DataBundle.default)$/;"	l
indata_R	src/main/scala/loop/LiveOutNode.scala	/^  val indata_R = RegInit(ControlBundle.default)$/;"	l
indata_R	src/main/scala/loop/LiveOutNode.scala	/^  val indata_R = RegInit(DataBundle.default)$/;"	l
indata_R	src/main/scala/node/Expand.scala	/^  val indata_R = RegInit(0.U.asTypeOf(gen))$/;"	l
indata_valid_R	src/main/scala/loop/LiveInNode.scala	/^  val indata_valid_R = RegInit(false.B)$/;"	l
indata_valid_R	src/main/scala/loop/LiveOutNode.scala	/^  val indata_valid_R = RegInit(false.B)$/;"	l
indata_valid_R	src/main/scala/node/Expand.scala	/^  val indata_valid_R = RegInit(false.B)$/;"	l
indexcalc	src/main/scala/arbiters/ArbiterTree.scala	/^  object indexcalc {$/;"	c
indexcalc	src/main/scala/muxes/Muxes.scala	/^  object indexcalc {$/;"	c
indx	src/main/scala/regfile/InputRegFile.scala	/^    val indx  = Output(UInt(xlen.W))$/;"	l
init	src/main/scala/accel/Core.scala	/^      val init   = Input(Bool())$/;"	l
init	src/main/scala/accel/DataBundleReg.scala	/^      val init = Output(Bool())$/;"	l
init	src/main/scala/accel/NastiMemSlave.scala	/^  val init  = Flipped(Valid(new InitParams()(p)))$/;"	l
init	src/main/scala/accel/PerfectCacheModel.scala	/^  val init  = Flipped(Valid(new InitParams()(p)))$/;"	l
init	src/main/scala/accel/SimpleReg.scala	/^      val init = Output(Bool())$/;"	l
init	src/main/scala/dataflow/MemDataFlow.scala	/^  val init = RegNext(init=true.B, next=false.B)$/;"	l
init	src/test/scala/generator/cilk/cilk_for_test05_test.scala	/^    val init  = Flipped(Valid(new InitParams()(p)))$/;"	l
init	src/test/scala/generator/test10_test.scala	/^    val init  = Flipped(Valid(new InitParams()(p)))$/;"	l
init	src/test/scala/generator/test11_test.scala	/^      val init  = Flipped(Valid(new InitParams()(p)))$/;"	l
init	src/test/scala/generator/test12_test.scala	/^      val init  = Flipped(Valid(new InitParams()(p)))$/;"	l
initAddr	src/test/scala/accel/CacheTests.scala	/^  val initAddr = for {$/;"	l
initCounters	src/main/scala/concurrent/Sync.scala	/^  val initCounters = RegInit(true.B)$/;"	l
initData	src/test/scala/accel/CacheTests.scala	/^  val initData = Seq.fill(initAddr.size)(rand_data)$/;"	l
initList	src/test/scala/generator/test10_test.scala	/^  val initList = List((0,1), (1,2), (2,3), (3,4))$/;"	l
initList	src/test/scala/generator/test12_test.scala	/^    val initList = List((0,1), (1,2), (2,3), (3,4))$/;"	l
initQueue	src/main/scala/concurrent/TaskController.scala	/^  val initQueue = RegInit(true.B)$/;"	l
initvar	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  integer initvar;$/;"	r
inner	src/test/scala/generator/cilk/stencil_test.scala	/^    val inner = Module(new stencil_innerDF())$/;"	l
inptr	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  reg [20:0] inptr;$/;"	r
inptr	src/main/scala/memory/WriteTypMemoryController.scala	/^  val inptr          = RegInit(0.U((log2Ceil(Beats)+20).W))$/;"	l
input	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  input         io_CacheReq_ready,$/;"	p
input	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  input         io_CacheResp_bits_valid,$/;"	p
input	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  input         io_MemResp_valid,$/;"	p
input	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  input         io_NodeReq_valid,$/;"	p
input	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  input         io_ReadIn_0_valid,$/;"	p
input	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  input         io_ReadIn_1_valid,$/;"	p
input	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  input         io_WriteIn_0_valid,$/;"	p
input	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  input         io_enable$/;"	p
input	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  input         io_in_0_valid,$/;"	p
input	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  input         io_in_1_bits_valid,$/;"	p
input	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  input         io_in_1_valid,$/;"	p
input	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  input         io_input_done,$/;"	p
input	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  input         io_input_valid,$/;"	p
input	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  input         io_out_ready,$/;"	p
input	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  input         io_sel,$/;"	p
input	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  input         reset,$/;"	p
input	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  input   io_in_0_valid,$/;"	p
input	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  input   io_in_1_valid,$/;"	p
input	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  input  [15:0] io_MemResp_data,$/;"	p
input	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  input  [15:0] io_NodeReq_bits_address,$/;"	p
input	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  input  [15:0] io_ReadIn_0_bits_RouteID,$/;"	p
input	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  input  [15:0] io_ReadIn_0_bits_address,$/;"	p
input	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  input  [15:0] io_ReadIn_0_bits_node,$/;"	p
input	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  input  [15:0] io_ReadIn_1_bits_RouteID,$/;"	p
input	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  input  [15:0] io_ReadIn_1_bits_address,$/;"	p
input	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  input  [15:0] io_ReadIn_1_bits_node,$/;"	p
input	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  input  [15:0] io_in_0_bits_RouteID,$/;"	p
input	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  input  [15:0] io_in_0_bits_data,$/;"	p
input	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  input  [15:0] io_in_1_bits_RouteID,$/;"	p
input	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  input  [15:0] io_in_1_bits_data,$/;"	p
input	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  input  [15:0] io_input_RouteID,$/;"	p
input	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  input  [15:0] io_input_data,$/;"	p
input	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  input  [1:0]  io_NodeReq_bits_mask,$/;"	p
input	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  input  [1:0]  io_WriteIn_0_bits_mask,$/;"	p
input	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  input  [1:0]  io_in_0_bits_mask,$/;"	p
input	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  input  [1:0]  io_raddr1,$/;"	p
input	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  input  [1:0]  io_raddr2,$/;"	p
input	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  input  [1:0]  io_waddr,$/;"	p
input	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  input  [1:0]  io_wmask$/;"	p
input	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  input  [5:0]  io_NodeReq_bits_address,$/;"	p
input	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  input  [5:0]  io_WriteIn_0_bits_address,$/;"	p
input	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  input  [5:0]  io_in_0_bits_address,$/;"	p
input	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  input  [7:0]  io_CacheResp_bits_tag$/;"	p
input	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  input  [7:0]  io_WriteIn_0_bits_Typ,$/;"	p
input	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  input  [7:0]  io_in_0_bits_tag,$/;"	p
input	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  input  [7:0]  io_in_1_bits_tag,$/;"	p
input	src/main/scala/muxes/Muxes.scala	/^    val input = Input(gen)$/;"	l
inputArg	src/main/scala/loop/LoopEnd.scala	/^  val inputArg  = Vec(NumInputs, Flipped(Decoupled(new DataBundle())))$/;"	l
inputArg	src/main/scala/loop/LoopHeader.scala	/^  val inputArg  = Vec(NumInputs, Flipped(Decoupled(gen)))$/;"	l
inputArg	src/main/scala/loop/LoopStart.scala	/^  val inputArg  = Vec(NumInputs, Flipped(Decoupled(new DataBundle())))$/;"	l
inputReady	src/main/scala/junctions/CombineDecoupled.scala	/^  val inputReady = RegInit(VecInit(Seq.fill(argTypes.length){true.B}))$/;"	l
inputReady	src/main/scala/junctions/CombineDecoupled.scala	/^  val inputReady = RegInit(VecInit(Seq.fill(argTypes.length+1){true.B}))$/;"	l
inputReady	src/main/scala/loop/LoopBlock.scala	/^  val inputReady = RegInit(VecInit(Seq.fill(NumIns.length)(true.B)))$/;"	l
inputReady	src/main/scala/node/RetNode.scala	/^  val inputReady = Seq.fill(retTypes.length + NumPredOps + 1)(RegInit(false.B))$/;"	l
inputReadyReg	src/main/scala/junctions/SplitDecoupled.scala	/^  val inputReadyReg = RegInit(false.B)$/;"	l
inputReadyReg	src/main/scala/node/CallInNode.scala	/^  val inputReadyReg = RegInit(false.B)$/;"	l
inputReg	src/main/scala/junctions/SplitDecoupled.scala	/^  val inputReg  = RegInit(0.U.asTypeOf(io.In.bits))$/;"	l
inputReg	src/main/scala/node/CallInNode.scala	/^  val inputReg  = RegInit(0.U.asTypeOf(io.In.bits))$/;"	l
inputValid	src/main/scala/node/LoadMaskNode.scala	/^  val inputValid   = GepValid & predValidInt.andR$/;"	l
input_R	src/main/scala/node/JumpNode.scala	/^  val input_R = RegInit(DataBundle.default)$/;"	l
input_valid_R	src/main/scala/node/JumpNode.scala	/^  val input_valid_R = RegInit(false.B)$/;"	l
inputs	src/main/scala/muxes/Muxes.scala	/^    val inputs = Input(Vec(Nops, gen))$/;"	l
insertBytes	src/main/scala/accel/CacheModel.scala	/^  def insertBytes(src : UInt, dst : Vec[UInt], len: Int, offset : UInt) : Vec[UInt] = {$/;"	m
interfaces	src/main/scala/interfaces/interfaces.scala	/^package interfaces$/;"	p
invalid_R	src/main/scala/loop/LiveInNode.scala	/^  val invalid_R = RegInit(ControlBundle.default)$/;"	l
invalid_valid_R	src/main/scala/loop/LiveInNode.scala	/^  val invalid_valid_R = RegInit(false.B)$/;"	l
io	src/main/scala/FPU/FPALU.scala	/^  val io = IO(new Bundle {$/;"	l
io	src/main/scala/accel/Accelerator.scala	/^  val io = IO($/;"	l
io	src/main/scala/accel/Cache.scala	/^  val io = IO(new CacheModuleIO)$/;"	l
io	src/main/scala/accel/CacheModel.scala	/^  val io = IO(new CacheModuleIO)$/;"	l
io	src/main/scala/accel/Core.scala	/^  val io = IO($/;"	l
io	src/main/scala/accel/DataBundleReg.scala	/^  val io = IO($/;"	l
io	src/main/scala/accel/NastiMaster.scala	/^  val io = IO($/;"	l
io	src/main/scala/accel/NastiMemSlave.scala	/^  val io = IO(new NastiMemSlaveIO()(p))$/;"	l
io	src/main/scala/accel/PerfectCacheModel.scala	/^  val io = IO(new PerfectCacheIO)$/;"	l
io	src/main/scala/accel/SimpleReg.scala	/^  val io = IO($/;"	l
io	src/main/scala/arbiters/ArbiterTree.scala	/^  val io = IO(new Bundle {$/;"	l
io	src/main/scala/arbiters/ReadArbiter.scala	/^  val io = IO(new Bundle {$/;"	l
io	src/main/scala/arbiters/TypeStackFile.scala	/^  val io = IO(new Bundle {$/;"	l
io	src/main/scala/concurrent/Detach.scala	/^  val io = IO(new DetachFastIO()(p))$/;"	l
io	src/main/scala/concurrent/TaskController.scala	/^  val io = IO(new TaskControllerIO(argTypes, retTypes, numParent, numChild))$/;"	l
io	src/main/scala/control/BasicBlock.scala	/^  val io = IO(new BasicBlockNoMaskFastIO(NumOuts)(p))$/;"	l
io	src/main/scala/control/BasicBlock.scala	/^  val io = IO(new LoopHeadNodeIO(NumOuts, NumPhi))$/;"	l
io	src/main/scala/dataflow/AdditionDF.scala	/^  val io = IO(new Bundle {$/;"	l
io	src/main/scala/dataflow/AllocaDF.scala	/^  val io = IO(new Bundle {$/;"	l
io	src/main/scala/dataflow/DataFlow.scala	/^	val io = IO(new Bundle{val dummy = Input(UInt{32.W})})$/;"	l
io	src/main/scala/dataflow/MemDataFlow.scala	/^	val io = IO(new Bundle{$/;"	l
io	src/main/scala/dataflow/SharedFPDiv.scala	/^	val io = IO(new Bundle{val dummy = Input(UInt{32.W})})$/;"	l
io	src/main/scala/dataflow/TestCacheDataFlow.scala	/^	val io = IO($/;"	l
io	src/main/scala/dataflow/TypeMemDataFlow.scala	/^	val io = IO(new Bundle{val dummy = Input(UInt{32.W})})$/;"	l
io	src/main/scala/dataflow/filter/BasicFilter.scala	/^  val io = IO(new Bundle {$/;"	l
io	src/main/scala/dataflow/filter/BasicLoader.scala	/^  val io = IO(new Bundle {$/;"	l
io	src/main/scala/dataflow/filter/CacheLoader.scala	/^  val io = IO(new Bundle {$/;"	l
io	src/main/scala/dataflow/filter/CacheVecLoader.scala	/^  val io = IO(new Bundle {$/;"	l
io	src/main/scala/dataflow/filter/VecFilter.scala	/^  val io = IO(new Bundle {$/;"	l
io	src/main/scala/dataflow/fuse/computeFuse01.scala	/^  val io = IO(new Bundle {$/;"	l
io	src/main/scala/dataflow/fuse/computeFuse02.scala	/^  val io = IO(new Bundle {$/;"	l
io	src/main/scala/dataflow/fuse/computeFuse03.scala	/^  val io = IO(new Bundle {$/;"	l
io	src/main/scala/dataflow/fuse/computeFuse04.scala	/^  val io = IO(new Bundle {$/;"	l
io	src/main/scala/dataflow/graph/compute01DF.scala	/^  val io = IO(new Bundle {$/;"	l
io	src/main/scala/dataflow/graph/compute02DF.scala	/^  val io = IO(new Bundle {$/;"	l
io	src/main/scala/dataflow/graph/compute03DF.scala	/^  val io = IO(new Bundle {$/;"	l
io	src/main/scala/dataflow/graph/compute04DF.scala	/^  val io = IO(new Bundle {$/;"	l
io	src/main/scala/dataflow/tests/Add01.scala	/^  val io = IO(new Bundle {$/;"	l
io	src/main/scala/generator/cilk/bgemm.scala	/^  val io = IO(new Bundle {$/;"	l
io	src/main/scala/generator/cilk/bgemm_detach1.scala	/^  val io = IO(new Bundle {$/;"	l
io	src/main/scala/generator/cilk/bgemm_detach2.scala	/^  val io = IO(new Bundle {$/;"	l
io	src/main/scala/generator/cilk/bgemm_detach3.scala	/^  val io = IO(new Bundle {$/;"	l
io	src/main/scala/generator/cilk/cilk_for_test01.scala	/^  val io = IO(new Bundle {$/;"	l
io	src/main/scala/generator/cilk/cilk_for_test02.scala	/^  val io = IO(new Bundle {$/;"	l
io	src/main/scala/generator/cilk/cilk_for_test02_mul.scala	/^  val io = IO(new Bundle {$/;"	l
io	src/main/scala/generator/cilk/cilk_for_test04.scala	/^  val io = IO(new Bundle {$/;"	l
io	src/main/scala/generator/cilk/cilk_for_test04_detach.scala	/^  val io = IO(new Bundle {$/;"	l
io	src/main/scala/generator/cilk/cilk_for_test05.scala	/^  val io = IO(new Bundle {$/;"	l
io	src/main/scala/generator/cilk/cilk_for_test05_detach.scala	/^  val io = IO(new Bundle {$/;"	l
io	src/main/scala/generator/cilk/cilk_for_test06.scala	/^  val io = IO(new Bundle {$/;"	l
io	src/main/scala/generator/cilk/cilk_for_test06_detach.scala	/^  val io = IO(new Bundle {$/;"	l
io	src/main/scala/generator/cilk/cilk_for_test06_detach_2.scala	/^  val io = IO(new Bundle {$/;"	l
io	src/main/scala/generator/cilk/cilk_for_test07.scala	/^  val io = IO(new Bundle {$/;"	l
io	src/main/scala/generator/cilk/cilk_for_test07_detach.scala	/^  val io = IO(new Bundle {$/;"	l
io	src/main/scala/generator/cilk/cilk_for_test08.scala	/^  val io = IO(new Bundle {$/;"	l
io	src/main/scala/generator/cilk/cilk_for_test08_detach.scala	/^  val io = IO(new Bundle {$/;"	l
io	src/main/scala/generator/cilk/cilk_for_test09.scala	/^  val io = IO(new Bundle {$/;"	l
io	src/main/scala/generator/cilk/cilk_for_test09_inner.scala	/^  val io = IO(new Bundle {$/;"	l
io	src/main/scala/generator/cilk/cilk_for_test12.scala	/^  val io = IO(new Bundle {$/;"	l
io	src/main/scala/generator/cilk/cilk_for_test12_detach1.scala	/^  val io = IO(new Bundle {$/;"	l
io	src/main/scala/generator/cilk/cilk_for_test12_detach2.scala	/^  val io = IO(new Bundle {$/;"	l
io	src/main/scala/generator/cilk/cilk_for_test12_detach3.scala	/^  val io = IO(new Bundle {$/;"	l
io	src/main/scala/generator/cilk/cilk_spawn_test01.scala	/^  val io = IO(new Bundle {$/;"	l
io	src/main/scala/generator/cilk/cilk_spawn_test02.scala	/^  val io = IO(new Bundle {$/;"	l
io	src/main/scala/generator/cilk/fib.scala	/^  val io = IO(new Bundle {$/;"	l
io	src/main/scala/generator/cilk/fib_continue.scala	/^  val io = IO(new Bundle {$/;"	l
io	src/main/scala/generator/cilk/mergesort.scala	/^  val io = IO(new Bundle {$/;"	l
io	src/main/scala/generator/cilk/mergesort_merge.scala	/^  val io = IO(new Bundle {$/;"	l
io	src/main/scala/generator/cilk/stencil.scala	/^  val io = IO(new Bundle {$/;"	l
io	src/main/scala/generator/cilk/stencil_detach1.scala	/^  val io = IO(new Bundle {$/;"	l
io	src/main/scala/generator/cilk/stencil_inner.scala	/^  val io = IO(new Bundle {$/;"	l
io	src/main/scala/generator/test01.scala	/^  val io = IO(new Bundle {$/;"	l
io	src/main/scala/generator/test02.scala	/^  val io = IO(new Bundle {$/;"	l
io	src/main/scala/generator/test03.scala	/^  val io = IO(new Bundle {$/;"	l
io	src/main/scala/generator/test04.scala	/^  val io = IO(new Bundle {$/;"	l
io	src/main/scala/generator/test05.scala	/^  val io = IO(new Bundle {$/;"	l
io	src/main/scala/generator/test05b.scala	/^  val io = IO(new Bundle {$/;"	l
io	src/main/scala/generator/test05c.scala	/^  val io = IO(new Bundle {$/;"	l
io	src/main/scala/generator/test06.scala	/^  val io = IO(new Bundle {$/;"	l
io	src/main/scala/generator/test08.scala	/^  val io = IO(new Bundle {$/;"	l
io	src/main/scala/generator/test09.scala	/^  val io = IO(new Bundle {$/;"	l
io	src/main/scala/generator/test10.scala	/^  val io = IO(new Bundle {$/;"	l
io	src/main/scala/generator/test11.scala	/^  val io = IO(new Bundle {$/;"	l
io	src/main/scala/generator/test11_add.scala	/^  val io = IO(new Bundle {$/;"	l
io	src/main/scala/generator/test12.scala	/^  val io = IO(new Bundle {$/;"	l
io	src/main/scala/generator/test12_inner.scala	/^  val io = IO(new Bundle {$/;"	l
io	src/main/scala/generator/test14.scala	/^  val io = IO(new Bundle {$/;"	l
io	src/main/scala/generator/test14_inner.scala	/^  val io = IO(new Bundle {$/;"	l
io	src/main/scala/generator/test15.scala	/^  val io = IO(new Bundle {$/;"	l
io	src/main/scala/junctions/CombineDecoupled.scala	/^  val io = IO(new CombineCallIO(argTypes))$/;"	l
io	src/main/scala/junctions/CombineDecoupled.scala	/^  val io = IO(new CombineCustomIO(argTypes))$/;"	l
io	src/main/scala/junctions/CombineDecoupled.scala	/^  val io = IO(new CombineDataIO(argTypes))$/;"	l
io	src/main/scala/junctions/SplitDecoupled.scala	/^  val io = IO(new SplitCallIO(argTypes))$/;"	l
io	src/main/scala/junctions/SplitDecoupled.scala	/^  val io = IO(new SplitCallNewIO(argTypes))$/;"	l
io	src/main/scala/junctions/SplitDecoupled.scala	/^  val io = IO(new SplitCustomIO(argTypes))$/;"	l
io	src/main/scala/junctions/SplitDecoupled.scala	/^  val io = IO(new SplitDataIO(argTypes))$/;"	l
io	src/main/scala/junctions/nasti.scala	/^  val io = new NastiArbiterIO(arbN)$/;"	l
io	src/main/scala/loop/Example1.scala	/^  lazy val io = IO(new LoopExampleIO(ID)(new DataBundle()))$/;"	l
io	src/main/scala/loop/LoopHeader.scala	/^  lazy val io = IO(new LoopHeaderIO(NumInputs, NumOuts)(new DataBundle()))$/;"	l
io	src/main/scala/memory/MemArbiter.scala	/^  val io = IO(new Bundle {$/;"	l
io	src/main/scala/memory/ReadMemoryController.scala	/^  val io = IO(new Bundle {$/;"	l
io	src/main/scala/memory/ReadWriteArbiter.scala	/^  val io = IO(new Bundle {$/;"	l
io	src/main/scala/memory/UnifiedController.scala	/^  val io = IO(new Bundle {$/;"	l
io	src/main/scala/memory/UnifiedTypController.scala	/^  val io = IO(new Bundle {$/;"	l
io	src/main/scala/memory/WriteMemoryController.scala	/^   val io = IO(new Bundle {$/;"	l
io	src/main/scala/memory/WriteMemoryController.scala	/^  val io = IO(new Bundle {$/;"	l
io	src/main/scala/muxes/Muxes.scala	/^  val io = IO(new Bundle {$/;"	l
io	src/main/scala/muxes/TestMux.scala	/^  val io = IO(new Bundle {$/;"	l
io	src/main/scala/node/Alu.scala	/^  val io = IO(new Bundle {$/;"	l
io	src/main/scala/node/BitCastNode.scala	/^  lazy val io = IO(new BitCastNodeIO(NumOuts))$/;"	l
io	src/main/scala/node/BranchNode.scala	/^  val io = IO(new CBranchFastIO()(p))$/;"	l
io	src/main/scala/node/BranchNode.scala	/^  val io = IO(new CompareBranchIO())$/;"	l
io	src/main/scala/node/BranchNode.scala	/^  val io = IO(new UBranchFastIO()(p))$/;"	l
io	src/main/scala/node/Comparision.scala	/^  val io = IO(new Bundle {$/;"	l
io	src/main/scala/node/HandShaking.scala	/^  lazy val io = IO(new HandShakingCtrlMaskIO(NumInputs, NumOuts, NumPhi))$/;"	l
io	src/main/scala/node/HandShaking.scala	/^  lazy val io = IO(new HandShakingCtrlNoMaskIO(NumOuts))$/;"	l
io	src/main/scala/node/HandShaking.scala	/^  lazy val io = IO(new HandShakingFusedIO(NumIns, NumOuts)(new DataBundle))$/;"	l
io	src/main/scala/node/HandShaking.scala	/^  lazy val io = IO(new HandShakingIONPS(NumOuts)(gen))$/;"	l
io	src/main/scala/node/HandShaking.scala	/^  lazy val io = IO(new HandShakingIONPS(NumOuts)(new ControlBundle))$/;"	l
io	src/main/scala/node/HandShaking.scala	/^  lazy val io = IO(new HandShakingIOPS(NumPredOps, NumSuccOps, NumOuts)(gen))$/;"	l
io	src/main/scala/node/LoadMaskNode.scala	/^  val io = IO(new Bundle {$/;"	l
io	src/main/scala/node/Relay.scala	/^  val io = IO(new Bundle {$/;"	l
io	src/main/scala/node/SelectNode.scala	/^  lazy val io = IO(new SelectNodeIO(NumOuts))$/;"	l
io	src/main/scala/node/SextNode.scala	/^  lazy val io = IO(new SextNodeIO(SrcW, DesW, NumOuts))$/;"	l
io	src/main/scala/node/TypCompute.scala	/^  val io = IO(new Bundle {$/;"	l
io	src/main/scala/node/ZextNode.scala	/^  lazy val io = IO(new ZextNodeIO(SrcW, DesW, NumOuts))$/;"	l
io	src/main/scala/regfile/InputRegFile.scala	/^  val io = IO(new Bundle{$/;"	l
io	src/main/scala/regfile/RegFile.scala	/^   val io = IO(new RegFileBundle(size))$/;"	l
io	src/main/scala/stack/InterleavedStack.scala	/^  val io = IO(new Bundle {$/;"	l
io	src/main/scala/stack/StackMem.scala	/^  val io = IO(new StackMemIO)$/;"	l
io	src/main/scala/switches/Dyser.scala	/^  val io = IO(new Bundle {$/;"	l
io	src/main/scala/switches/DyserSwitch.scala	/^  val io = IO(new Bundle {$/;"	l
io	src/main/scala/switches/example/ex1.scala	/^  val io = IO(new Bundle {$/;"	l
io	src/test/scala/accel/CacheTests.scala	/^  val io = IO(new Bundle {$/;"	l
io	src/test/scala/concurrent/DecoupledTaskTest.scala	/^  val io = IO(new Bundle {$/;"	l
io	src/test/scala/dataflow/UnTypMemDataflow.scala	/^  val io = IO(new Bundle{$/;"	l
io	src/test/scala/generator/cilk/bgemm_test.scala	/^  val io = IO( new CoreBundle {$/;"	l
io	src/test/scala/generator/cilk/cilk_for_test02_test.scala	/^  val io = IO(new Bundle {$/;"	l
io	src/test/scala/generator/cilk/cilk_for_test04_test.scala	/^  val io = IO( new CoreBundle {$/;"	l
io	src/test/scala/generator/cilk/cilk_for_test05_test.scala	/^  val io = IO(new Bundle {$/;"	l
io	src/test/scala/generator/cilk/cilk_for_test06_test.scala	/^  val io = IO(new CoreBundle {$/;"	l
io	src/test/scala/generator/cilk/cilk_for_test07_test.scala	/^  val io = IO( new CoreBundle {$/;"	l
io	src/test/scala/generator/cilk/cilk_for_test08_test.scala	/^  val io = IO( new CoreBundle {$/;"	l
io	src/test/scala/generator/cilk/cilk_for_test09_test.scala	/^  val io = IO( new CoreBundle {$/;"	l
io	src/test/scala/generator/cilk/cilk_for_test12_test.scala	/^  val io = IO( new CoreBundle {$/;"	l
io	src/test/scala/generator/cilk/fib_test.scala	/^  val io = IO( new CoreBundle {$/;"	l
io	src/test/scala/generator/cilk/mergesort_test.scala	/^  val io = IO( new CoreBundle {$/;"	l
io	src/test/scala/generator/cilk/stencil_test.scala	/^  val io = IO(new CoreBundle {$/;"	l
io	src/test/scala/generator/test05_test.scala	/^  val io = IO( new CoreBundle {$/;"	l
io	src/test/scala/generator/test11_test.scala	/^  val io = IO(new Bundle {$/;"	l
io	src/test/scala/generator/test15_test.scala	/^  val io = IO( new CoreBundle {$/;"	l
io_CacheReq_bits_addr	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  output [15:0] io_CacheReq_bits_addr,$/;"	p
io_CacheReq_bits_data	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  output [15:0] io_CacheReq_bits_data,$/;"	p
io_CacheReq_ready	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  input         io_CacheReq_ready,$/;"	p
io_CacheReq_valid	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  output        io_CacheReq_valid,$/;"	p
io_CacheResp_bits_data	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  input  [15:0] io_CacheResp_bits_data,$/;"	p
io_CacheResp_valid	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  input         io_CacheResp_valid$/;"	p
io_CacheResp_valid	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  input         io_CacheResp_valid,$/;"	p
io_MemReq_bits_addr	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  output [15:0] io_MemReq_bits_addr,$/;"	p
io_MemReq_bits_mask	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  output [1:0]  io_MemReq_bits_mask,$/;"	p
io_MemReq_ready	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  input         io_MemReq_ready,$/;"	p
io_MemResp_valid	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  input         io_MemResp_valid,$/;"	p
io_NodeReq_bits_RouteID	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  input  [15:0] io_NodeReq_bits_RouteID,$/;"	p
io_NodeReq_bits_data	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  input  [15:0] io_NodeReq_bits_data,$/;"	p
io_NodeReq_ready	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  output        io_NodeReq_ready,$/;"	p
io_ReadIn_0_bits_RouteID	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  input  [15:0] io_ReadIn_0_bits_RouteID,$/;"	p
io_ReadIn_0_bits_Typ	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  input  [7:0]  io_ReadIn_0_bits_Typ,$/;"	p
io_ReadIn_0_bits_address	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  input  [15:0] io_ReadIn_0_bits_address,$/;"	p
io_ReadIn_0_ready	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  output        io_ReadIn_0_ready,$/;"	p
io_ReadIn_0_valid	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  input         io_ReadIn_0_valid,$/;"	p
io_ReadIn_1_bits_RouteID	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  input  [15:0] io_ReadIn_1_bits_RouteID,$/;"	p
io_ReadIn_1_bits_Typ	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  input  [7:0]  io_ReadIn_1_bits_Typ,$/;"	p
io_ReadIn_1_bits_address	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  input  [15:0] io_ReadIn_1_bits_address,$/;"	p
io_ReadIn_1_ready	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  output        io_ReadIn_1_ready,$/;"	p
io_ReadIn_1_valid	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  input         io_ReadIn_1_valid,$/;"	p
io_ReadOut_0_RouteID	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  output [15:0] io_ReadOut_0_RouteID,$/;"	p
io_ReadOut_0_data	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  output [15:0] io_ReadOut_0_data,$/;"	p
io_ReadOut_0_valid	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  output        io_ReadOut_0_valid,$/;"	p
io_ReadOut_1_RouteID	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  output [15:0] io_ReadOut_1_RouteID,$/;"	p
io_ReadOut_1_data	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  output [15:0] io_ReadOut_1_data$/;"	p
io_ReadOut_1_valid	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  output        io_ReadOut_1_valid,$/;"	p
io_WriteIn_0_bits_RouteID	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  input  [15:0] io_WriteIn_0_bits_RouteID,$/;"	p
io_WriteIn_0_bits_data	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  input  [15:0] io_WriteIn_0_bits_data,$/;"	p
io_WriteIn_0_bits_node	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  input  [15:0] io_WriteIn_0_bits_node,$/;"	p
io_WriteIn_0_ready	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  output        io_WriteIn_0_ready,$/;"	p
io_WriteOut_0_done	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  output        io_WriteOut_0_done,$/;"	p
io_WriteOut_0_valid	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  output        io_WriteOut_0_valid,$/;"	p
io_chosen	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  output        io_chosen$/;"	p
io_en	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  input         io_en,$/;"	p
io_en	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  input   io_en,$/;"	p
io_enable	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  input         io_enable$/;"	p
io_in_0_bits_RouteID	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  input  [15:0] io_in_0_bits_RouteID,$/;"	p
io_in_0_bits_addr	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  input  [15:0] io_in_0_bits_addr,$/;"	p
io_in_0_bits_address	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  input  [15:0] io_in_0_bits_address,$/;"	p
io_in_0_bits_data	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  input  [15:0] io_in_0_bits_data,$/;"	p
io_in_0_bits_done	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  input         io_in_0_bits_done,$/;"	p
io_in_0_bits_mask	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  input  [1:0]  io_in_0_bits_mask,$/;"	p
io_in_0_bits_valid	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  input         io_in_0_bits_valid,$/;"	p
io_in_0_ready	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  output        io_in_0_ready,$/;"	p
io_in_0_ready	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  output  io_in_0_ready,$/;"	p
io_in_0_valid	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  input         io_in_0_valid,$/;"	p
io_in_1_bits_RouteID	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  input  [15:0] io_in_1_bits_RouteID,$/;"	p
io_in_1_bits_addr	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  input  [15:0] io_in_1_bits_addr,$/;"	p
io_in_1_bits_address	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  input  [15:0] io_in_1_bits_address,$/;"	p
io_in_1_bits_address	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  input  [5:0]  io_in_1_bits_address,$/;"	p
io_in_1_bits_mask	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  input  [1:0]  io_in_1_bits_mask,$/;"	p
io_in_1_ready	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  output        io_in_1_ready,$/;"	p
io_in_1_ready	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  output  io_in_1_ready,$/;"	p
io_in_1_valid	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  input         io_in_1_valid,$/;"	p
io_input_RouteID	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  input  [15:0] io_input_RouteID,$/;"	p
io_input_data	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  input  [15:0] io_input_data,$/;"	p
io_input_valid	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  input         io_input_valid,$/;"	p
io_out_bits_RouteID	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  output [15:0] io_out_bits_RouteID,$/;"	p
io_out_bits_addr	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  output [15:0] io_out_bits_addr,$/;"	p
io_out_bits_address	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  output [15:0] io_out_bits_address$/;"	p
io_out_bits_address	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  output [15:0] io_out_bits_address,$/;"	p
io_out_bits_address	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  output [5:0]  io_out_bits_address,$/;"	p
io_out_bits_data	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  output [15:0] io_out_bits_data,$/;"	p
io_out_bits_mask	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  output [1:0]  io_out_bits_mask,$/;"	p
io_out_bits_valid	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  output        io_out_bits_valid,$/;"	p
io_out_ready	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  input         io_out_ready,$/;"	p
io_out_ready	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  input   io_out_ready,$/;"	p
io_out_valid	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  output        io_out_valid,$/;"	p
io_output_bits_data	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  output [15:0] io_output_bits_data,$/;"	p
io_output_bits_done	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  output        io_output_bits_done,$/;"	p
io_output_bits_valid	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  output        io_output_bits_valid,$/;"	p
io_output_ready	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  input         io_output_ready,$/;"	p
io_outputs_0_RouteID	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  output [15:0] io_outputs_0_RouteID,$/;"	p
io_outputs_0_data	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  output [15:0] io_outputs_0_data,$/;"	p
io_outputs_0_done	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  output        io_outputs_0_done,$/;"	p
io_outputs_0_valid	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  output        io_outputs_0_valid,$/;"	p
io_outputs_1_RouteID	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  output [15:0] io_outputs_1_RouteID,$/;"	p
io_outputs_1_data	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  output [15:0] io_outputs_1_data$/;"	p
io_outputs_1_valid	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  output        io_outputs_1_valid,$/;"	p
io_rdata1	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  output [15:0] io_rdata1,$/;"	p
io_sel	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  input         io_sel,$/;"	p
io_wdata	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  input  [15:0] io_wdata,$/;"	p
io_wen	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  input         io_wen,$/;"	p
isHighSubnormalIn	src/main/scala/FPU/FPALU.scala	/^    val isHighSubnormalIn = x(exp + sig - 3, sig - 1) < 2.U$/;"	l
isInf	src/main/scala/FPU/FPALU.scala	/^    val isInf = isSpecial && !code(0)$/;"	l
isNaN	src/main/scala/FPU/FPALU.scala	/^    val isNaN = code.andR$/;"	l
isNaN	src/main/scala/FPU/FPALU.scala	/^  def isNaN(x: UInt) = x(sig + exp - 1, sig + exp - 3).andR$/;"	m
isNormal	src/main/scala/FPU/FPALU.scala	/^    val isNormal = codeHi === 1.U && !isHighSubnormalIn || codeHi === 2.U$/;"	l
isQNaN	src/main/scala/FPU/FPALU.scala	/^    val isQNaN = isNaN && x(sig-2)$/;"	l
isSNaN	src/main/scala/FPU/FPALU.scala	/^    val isSNaN = isNaN && !x(sig-2)$/;"	l
isSNaN	src/main/scala/FPU/FPALU.scala	/^  def isSNaN(x: UInt) = isNaN(x) && !x(sig - 2)$/;"	m
isSpecial	src/main/scala/FPU/FPALU.scala	/^    val isSpecial = codeHi === 3.U$/;"	l
isSt_R	src/test/scala/memory/deprecated/ReadWriteArbiter.scala	/^  val isSt_R = RegInit(false.B)$/;"	l
isSubnormal	src/main/scala/FPU/FPALU.scala	/^    val isSubnormal = code === 1.U || codeHi === 1.U && isHighSubnormalIn$/;"	l
isSwitch	src/test/scala/verilogmain/TypStackSweeper.scala	/^      def isSwitch(s: String) = (s(0) == '-')$/;"	m
isSwitch	src/test/scala/verilogmain/TypeStackSweeper16b.scala	/^      def isSwitch(s: String) = (s(0) == '-')$/;"	m
isWrite	src/main/scala/memory/ReadMemoryController.scala	/^  val isWrite = RegNext(false.B, init=true.B)$/;"	l
isWrite	src/main/scala/memory/WriteMemoryController.scala	/^  val isWrite = RegNext(true.B, init=false.B)$/;"	l
isZero	src/main/scala/FPU/FPALU.scala	/^    val isZero = code === 0.U$/;"	l
is_alloc	src/main/scala/accel/Cache.scala	/^  val is_alloc  = state === s_REFILL && read_wrap_out$/;"	l
is_alloc_reg	src/main/scala/accel/Cache.scala	/^  val is_alloc_reg = RegNext(is_alloc)$/;"	l
is_dirty	src/main/scala/accel/Cache.scala	/^  val is_dirty = valid(idx_reg) && dirty(idx_reg)$/;"	l
is_idle	src/main/scala/accel/Cache.scala	/^  val is_idle   = state === s_IDLE$/;"	l
is_read	src/main/scala/accel/Cache.scala	/^  val is_read   = state === s_READ_CACHE$/;"	l
is_write	src/main/scala/accel/Cache.scala	/^  val is_write  = state === s_WRITE_CACHE$/;"	l
iswrite	src/main/scala/accel/Cache.scala	/^  val iswrite = Bool()$/;"	l
iswrite	src/main/scala/interfaces/interfaces.scala	/^  val iswrite = Bool()$/;"	l
itertools	scripts/extract_activity.py	/^import itertools$/;"	i
json	scripts/TypeStackFile.py	/^import json$/;"	i
junctions	src/main/scala/junctions/CombineDecoupled.scala	/^package junctions$/;"	p
junctions	src/main/scala/junctions/SplitDecoupled.scala	/^package junctions$/;"	p
junctions	src/main/scala/junctions/nasti.scala	/^package junctions$/;"	p
junctions	src/test/scala/junctions/CombineDecoupledTest.scala	/^package junctions$/;"	p
junctions	src/test/scala/junctions/SplitDecoupledTest.scala	/^package junctions$/;"	p
kern	src/main/scala/dataflow/filter/BasicFilter.scala	/^    val kern   = Vec(FilterSize,Flipped(Decoupled(new DataBundle())))$/;"	l
kern	src/main/scala/dataflow/filter/VecFilter.scala	/^    val kern   = Vec(FilterSize,Flipped(Decoupled(new TypBundle())))$/;"	l
knobList	src/main/scala/config/cde/Dump.scala	/^  val knobList = mutable.ListBuffer[Any]()$/;"	l
knobValues	src/main/scala/config/cde/Config.scala	/^  val knobValues: Any => Any = { case x => throw new CDEMatchError(x) }$/;"	l
knobs	src/main/scala/config/cde/Parameters.scala	/^  def knobs():List[Any] = {$/;"	m
last	src/main/scala/junctions/nasti.scala	/^  val last = Bool()$/;"	l
lastGrant	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  reg  lastGrant;$/;"	r
latchEnable	src/main/scala/loop/LoopBlock.scala	/^  val latchEnable = Flipped(Decoupled(new ControlBundle()))$/;"	l
latchEntry	src/main/scala/concurrent/TaskController.scala	/^  val latchEntry = RegNext(init=false.B, next=ChildArb.io.out.fire())$/;"	l
latchedEnable	src/main/scala/concurrent/Detach.scala	/^  val latchedEnable = RegInit(ControlBundle.default)$/;"	l
lb_L_0	src/main/scala/generator/cilk/cilk_for_test12.scala	/^  val lb_L_0 = Module(new LoopBlock(ID=999,NumIns=List(1,1,1),NumOuts=0,NumExits=1));$/;"	l
lb_L_0	src/main/scala/generator/cilk/cilk_for_test12_detach1.scala	/^  val lb_L_0 = Module(new LoopBlock(ID=999,NumIns=List(2,1),NumOuts=0,NumExits=1));$/;"	l
lb_L_0	src/main/scala/generator/cilk/cilk_for_test12_detach2.scala	/^  val lb_L_0 = Module(new LoopBlock(ID=999,NumIns=List(1,1),NumOuts=0,NumExits=1));$/;"	l
lb_L_0	src/main/scala/generator/cilk/mergesort_merge.scala	/^  val lb_L_0 = Module(new LoopBlock(ID=999,NumIns=List(4,2,1,1,2,1,1),NumOuts=0,NumExits=1)) \/\/@todo Fix NumExits$/;"	l
lb_L_0	src/main/scala/generator/test05.scala	/^  val lb_L_0 = Module(new LoopBlock(ID=999,NumIns=List(2,1),NumOuts=0,NumExits=1));$/;"	l
lb_L_0	src/main/scala/generator/test05b.scala	/^  val lb_L_0 = Module(new LoopBlock(ID=999,NumIns=List(1,2),NumOuts=1,NumExits=1));$/;"	l
lb_L_0	src/main/scala/generator/test05c.scala	/^  val lb_L_0 = Module(new LoopBlock(ID=999,NumIns=List(1,1),NumOuts=1,NumExits=1));$/;"	l
lb_L_0	src/main/scala/generator/test15.scala	/^  val lb_L_0 = Module(new LoopBlock(ID=999,NumIns=List(2,1),NumOuts=0,NumExits=1)) \/\/@todo Fix NumExits$/;"	l
lb_L_1	src/main/scala/generator/test15.scala	/^  val lb_L_1 = Module(new LoopBlock(ID=999,NumIns=List(2,3),NumOuts=0,NumExits=1)) \/\/@todo Fix NumExits$/;"	l
lb_L_2	src/main/scala/generator/test15.scala	/^  val lb_L_2 = Module(new LoopBlock(ID=999,NumIns=List(2,2),NumOuts=1,NumExits=1)) \/\/@todo Fix NumExits$/;"	l
ld	src/main/scala/dataflow/filter/BasicLoader.scala	/^    val ld = Module(new UnTypLoad(NumPredOps=0, NumSuccOps=0, NumOuts=1,ID=i,RouteID=i))$/;"	l
ld	src/main/scala/dataflow/filter/CacheLoader.scala	/^    val ld = Module(new UnTypLoad(NumPredOps=0, NumSuccOps=0, NumOuts=1,ID=i,RouteID=i))$/;"	l
ld	src/main/scala/dataflow/filter/CacheVecLoader.scala	/^    val ld = Module(new TypLoad(NumPredOps=0, NumSuccOps=0, NumOuts=1,ID=i,RouteID=i))$/;"	l
left_R	src/main/scala/FPU/FPCompare.scala	/^  val left_R = RegInit(DataBundle.default)$/;"	l
left_R	src/main/scala/FPU/FPComputeNode.scala	/^  val left_R = RegInit(DataBundle.default)$/;"	l
left_R	src/main/scala/node/BranchNode.scala	/^  val left_R = RegInit(DataBundle.default)$/;"	l
left_R	src/main/scala/node/ComputeNode.scala	/^  val left_R = RegInit(DataBundle.default)$/;"	l
left_R	src/main/scala/node/IcmpNode.scala	/^  val left_R = RegInit(DataBundle.default)$/;"	l
left_R	src/main/scala/node/TypCompute.scala	/^  val left_R = RegInit(TypBundle.default)$/;"	l
left_valid_R	src/main/scala/FPU/FPCompare.scala	/^  val left_valid_R = RegInit(false.B)$/;"	l
left_valid_R	src/main/scala/FPU/FPComputeNode.scala	/^  val left_valid_R = RegInit(false.B)$/;"	l
left_valid_R	src/main/scala/node/BranchNode.scala	/^  val left_valid_R = RegInit(false.B)$/;"	l
left_valid_R	src/main/scala/node/ComputeNode.scala	/^  val left_valid_R = RegInit(false.B)$/;"	l
left_valid_R	src/main/scala/node/IcmpNode.scala	/^  val left_valid_R = RegInit(false.B)$/;"	l
len	src/main/scala/accel/CacheModel.scala	/^  val len   = (dataBeats - 1).U$/;"	l
len	src/main/scala/accel/NastiMemSlave.scala	/^  val len = (dataBeats - 1).U$/;"	l
len	src/main/scala/accel/PerfectCacheModel.scala	/^  val len   = (dataBeats - 1).U$/;"	l
len	src/main/scala/junctions/nasti.scala	/^  val len    = UInt(width = nastiXLenBits)$/;"	l
len	src/test/scala/accel/CacheTests.scala	/^  val len   = (dataBeats - 1).U$/;"	l
len	src/test/scala/accel/coredf/AccelTests01.scala	/^  val len = (dataBeats - 1).U$/;"	l
len	src/test/scala/accel/coredf/FilterDFTests.scala	/^  val len = (dataBeats - 1).U$/;"	l
len	src/test/scala/accel/coredf/VecFilterNoKernDFTests.scala	/^  val len = (dataBeats - 1).U$/;"	l
len_list	src/test/scala/generator/cilk/mergesort_test.scala	/^    val len_list = List(100)$/;"	l
length	src/main/scala/FPU/FPALU.scala	/^  val length = 8$/;"	l
length	src/main/scala/node/Alu.scala	/^  val length = 14$/;"	l
length	src/main/scala/node/Comparision.scala	/^  val length  = 11$/;"	l
linebuffer	src/main/scala/memory/ReadMemoryController.scala	/^  val linebuffer = RegInit(VecInit(Seq.fill(2)(0.U(xlen.W))))$/;"	l
linebuffer	src/main/scala/memory/ReadTypMemoryController.scala	/^  val linebuffer = RegInit(Vec(Seq.fill(Beats + 1)(0.U(xlen.W))))$/;"	l
linebuffer	src/main/scala/memory/WriteMemoryController.scala	/^  val linebuffer = RegInit(Vec(Seq.fill(2)(0.U(xlen.W))))$/;"	l
linebuffer	src/main/scala/memory/WriteTypMemoryController.scala	/^  val linebuffer = RegInit(Vec(Seq.fill(Beats)(0.U(xlen.W))))$/;"	l
linebuffer	src/main/scala/node/LoadMaskNode.scala	/^  val linebuffer   = RegInit(Vec(Seq.fill(2)(0.U(xlen.W))))$/;"	l
linebuffer	src/main/scala/node/TypLoad.scala	/^  val linebuffer = RegInit(Vec(Seq.fill(Beats)(0.U(xlen.W))))$/;"	l
linebuffer_0	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  reg [15:0] linebuffer_0;$/;"	r
linebuffer_1	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  reg [15:0] linebuffer_1;$/;"	r
linebuffer_2	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  reg [15:0] linebuffer_2;$/;"	r
linemask	src/main/scala/memory/WriteTypMemoryController.scala	/^  val linemask   = RegInit(Vec(Seq.fill(Beats)(0.U((xlen\/8).W))))$/;"	l
linemask_0	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  reg [1:0] linemask_0;$/;"	r
linemask_1	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  reg [1:0] linemask_1;$/;"	r
liveIn	src/main/scala/loop/LoopBlock.scala	/^  val liveIn      = new VariableDecoupledVec(NumIns)$/;"	l
liveIn_R	src/main/scala/loop/LoopBlock.scala	/^  val liveIn_R  = RegInit(VecInit(Seq.fill(NumIns.length){DataBundle.default}))$/;"	l
liveIn_R_valid	src/main/scala/loop/LoopBlock.scala	/^  val liveIn_R_valid = for(i <- NumIns.indices) yield {$/;"	l
liveOut	src/main/scala/loop/LoopBlock.scala	/^  val liveOut     = Flipped(Vec(NumOuts, Decoupled(new DataBundle())))$/;"	l
liveOutFire_R	src/main/scala/loop/LoopBlock.scala	/^  val liveOutFire_R = Seq.fill(NumOuts)(RegInit(false.B))$/;"	l
liveOut_R	src/main/scala/loop/LoopBlock.scala	/^  val liveOut_R =  Seq.fill(NumOuts)(RegInit(DataBundle.default))$/;"	l
load	src/main/scala/dataflow/MemDataFlow.scala	/^    val load = Module(new UnTypLoad(NumPredOps=1,NumSuccOps=0,NumOuts=2,ID=i,RouteID=i))$/;"	l
load0	src/main/scala/generator/cilk/fib_continue.scala	/^  val load0 = Module(new UnTypLoad(NumPredOps=0, NumSuccOps=0, NumOuts=1,ID=0,RouteID=0))$/;"	l
load0_in	src/main/scala/generator/cilk/fib_continue.scala	/^  val load0_in = Map($/;"	l
load1	src/main/scala/generator/cilk/cilk_for_test02_mul.scala	/^  val load1 = Module(new UnTypLoad(NumPredOps=0, NumSuccOps=0, NumOuts=1,ID=1,RouteID=0))$/;"	l
load1	src/main/scala/generator/cilk/cilk_for_test04_detach.scala	/^  val load1 = Module(new UnTypLoad(NumPredOps=0, NumSuccOps=0, NumOuts=1,ID=1,RouteID=0))$/;"	l
load1	src/main/scala/generator/cilk/cilk_for_test05_detach.scala	/^  val load1 = Module(new UnTypLoad(NumPredOps=0, NumSuccOps=0, NumOuts=1,ID=1,RouteID=0))$/;"	l
load1	src/main/scala/generator/cilk/cilk_for_test07_detach.scala	/^  val load1 = Module(new UnTypLoad(NumPredOps=0, NumSuccOps=0, NumOuts=1,ID=1,RouteID=0))$/;"	l
load1	src/main/scala/generator/cilk/cilk_for_test08_detach.scala	/^  val load1 = Module(new UnTypLoad(NumPredOps=0, NumSuccOps=0, NumOuts=3,ID=1,RouteID=0))$/;"	l
load1	src/main/scala/generator/cilk/cilk_for_test12_detach3.scala	/^  val load1 = Module(new UnTypLoad(NumPredOps=0, NumSuccOps=0, NumOuts=1,ID=1,RouteID=0))$/;"	l
load1	src/main/scala/generator/cilk/fib_continue.scala	/^  val load1 = Module(new UnTypLoad(NumPredOps=0, NumSuccOps=0, NumOuts=1,ID=1,RouteID=1))$/;"	l
load1	src/main/scala/generator/cilk/mergesort_merge.scala	/^  val load1 = Module(new UnTypLoad(NumPredOps=0, NumSuccOps=0, NumOuts=1,ID=1,RouteID=0))$/;"	l
load10	src/main/scala/generator/cilk/cilk_for_test12.scala	/^  val load10 = Module(new UnTypLoad(NumPredOps=0, NumSuccOps=0, NumOuts=1,ID=10,RouteID=0))$/;"	l
load10	src/main/scala/generator/cilk/cilk_for_test12_detach1.scala	/^  val load10 = Module(new UnTypLoad(NumPredOps=0, NumSuccOps=0, NumOuts=2,ID=10,RouteID=0))$/;"	l
load10	src/main/scala/generator/cilk/cilk_for_test12_detach2.scala	/^  val load10 = Module(new UnTypLoad(NumPredOps=0, NumSuccOps=0, NumOuts=1,ID=10,RouteID=0))$/;"	l
load10	src/main/scala/generator/test05b.scala	/^  val load10 = Module(new UnTypLoad(NumPredOps=0, NumSuccOps=0, NumOuts=1,ID=10,RouteID=0))$/;"	l
load10_in	src/main/scala/generator/cilk/cilk_for_test12.scala	/^  val load10_in = Map($/;"	l
load10_in	src/main/scala/generator/cilk/cilk_for_test12_detach1.scala	/^  val load10_in = Map($/;"	l
load10_in	src/main/scala/generator/cilk/cilk_for_test12_detach2.scala	/^  val load10_in = Map($/;"	l
load10_in	src/main/scala/generator/test05b.scala	/^  val load10_in = Map($/;"	l
load11	src/main/scala/generator/cilk/bgemm_detach3.scala	/^  val load11 = Module(new UnTypLoad(NumPredOps=0, NumSuccOps=0, NumOuts=1,ID=11,RouteID=0))$/;"	l
load11	src/main/scala/generator/cilk/cilk_spawn_test02.scala	/^  val load11 = Module(new UnTypLoad(NumPredOps=0, NumSuccOps=0, NumOuts=1,ID=11,RouteID=0))$/;"	l
load11	src/main/scala/generator/cilk/mergesort_merge.scala	/^  val load11 = Module(new UnTypLoad(NumPredOps=0, NumSuccOps=0, NumOuts=1,ID=11,RouteID=5))$/;"	l
load11_in	src/main/scala/generator/cilk/bgemm_detach3.scala	/^  val load11_in = Map($/;"	l
load11_in	src/main/scala/generator/cilk/cilk_spawn_test02.scala	/^  val load11_in = Map($/;"	l
load11_in	src/main/scala/generator/cilk/mergesort_merge.scala	/^  val load11_in = Map($/;"	l
load12	src/main/scala/generator/cilk/cilk_spawn_test02.scala	/^  val load12 = Module(new UnTypLoad(NumPredOps=0, NumSuccOps=0, NumOuts=1,ID=12,RouteID=1))$/;"	l
load12_in	src/main/scala/generator/cilk/cilk_spawn_test02.scala	/^  val load12_in = Map($/;"	l
load13	src/main/scala/generator/cilk/cilk_for_test12.scala	/^  val load13 = Module(new UnTypLoad(NumPredOps=1, NumSuccOps=0, NumOuts=1,ID=13,RouteID=1))$/;"	l
load13	src/main/scala/generator/cilk/cilk_for_test12_detach1.scala	/^  val load13 = Module(new UnTypLoad(NumPredOps=0, NumSuccOps=0, NumOuts=1,ID=13,RouteID=1))$/;"	l
load13	src/main/scala/generator/cilk/mergesort_merge.scala	/^  val load13 = Module(new UnTypLoad(NumPredOps=0, NumSuccOps=0, NumOuts=1,ID=13,RouteID=6))$/;"	l
load13	src/main/scala/generator/cilk/stencil_detach1.scala	/^  val load13 = Module(new UnTypLoad(NumPredOps = 0, NumSuccOps = 0, NumOuts = 1, ID = 13, RouteID = 0))$/;"	l
load13_in	src/main/scala/generator/cilk/cilk_for_test12.scala	/^  val load13_in = Map($/;"	l
load13_in	src/main/scala/generator/cilk/cilk_for_test12_detach1.scala	/^  val load13_in = Map($/;"	l
load13_in	src/main/scala/generator/cilk/mergesort_merge.scala	/^  val load13_in = Map($/;"	l
load13_in	src/main/scala/generator/cilk/stencil_detach1.scala	/^  val load13_in = Map($/;"	l
load14	src/main/scala/generator/test05.scala	/^  val load14 = Module(new UnTypLoad(NumPredOps=0, NumSuccOps=0, NumOuts=1,ID=14,RouteID=1))$/;"	l
load14	src/main/scala/generator/test06.scala	/^  val load14 = Module(new UnTypLoad(NumPredOps=1, NumSuccOps=0, NumOuts=1,ID=14,RouteID=2))$/;"	l
load14	src/main/scala/generator/test15.scala	/^  val load14 = Module(new UnTypLoad(NumPredOps=0, NumSuccOps=0, NumOuts=1,ID=14,RouteID=0))$/;"	l
load14_in	src/main/scala/generator/test05.scala	/^  val load14_in = Map($/;"	l
load14_in	src/main/scala/generator/test06.scala	/^  val load14_in = Map($/;"	l
load14_in	src/main/scala/generator/test15.scala	/^  val load14_in = Map($/;"	l
load15	src/main/scala/generator/cilk/stencil_inner.scala	/^  val load15 = Module(new UnTypLoad(NumPredOps = 0, NumSuccOps = 0, NumOuts = 1, ID = 15, RouteID = 0))$/;"	l
load15	src/main/scala/generator/test05b.scala	/^  val load15 = Module(new UnTypLoad(NumPredOps=1, NumSuccOps=0, NumOuts=1,ID=15,RouteID=1))$/;"	l
load15_in	src/main/scala/generator/cilk/stencil_inner.scala	/^  val load15_in = Map($/;"	l
load15_in	src/main/scala/generator/test05b.scala	/^  val load15_in = Map($/;"	l
load16	src/main/scala/generator/cilk/cilk_for_test09.scala	/^  val load16 = Module(new UnTypLoad(NumPredOps = 0, NumSuccOps = 0, NumOuts = 1, ID = 16, RouteID = 1))$/;"	l
load16_in	src/main/scala/generator/cilk/cilk_for_test09.scala	/^  val load16_in = Map($/;"	l
load17	src/main/scala/generator/cilk/cilk_for_test05_detach.scala	/^  val load17 = Module(new UnTypLoad(NumPredOps=0, NumSuccOps=0, NumOuts=1,ID=17,RouteID=4))$/;"	l
load17_in	src/main/scala/generator/cilk/cilk_for_test05_detach.scala	/^  val load17_in = Map($/;"	l
load19	src/main/scala/generator/cilk/cilk_for_test05_detach.scala	/^  val load19 = Module(new UnTypLoad(NumPredOps=0, NumSuccOps=0, NumOuts=1,ID=19,RouteID=5))$/;"	l
load19	src/main/scala/generator/cilk/stencil_inner.scala	/^  val load19 = Module(new UnTypLoad(NumPredOps = 0, NumSuccOps = 0, NumOuts = 1, ID = 19, RouteID = 1))$/;"	l
load19	src/main/scala/generator/test05.scala	/^  val load19 = Module(new UnTypLoad(NumPredOps=1, NumSuccOps=0, NumOuts=1,ID=19,RouteID=2))$/;"	l
load19_in	src/main/scala/generator/cilk/cilk_for_test05_detach.scala	/^  val load19_in = Map($/;"	l
load19_in	src/main/scala/generator/cilk/stencil_inner.scala	/^  val load19_in = Map($/;"	l
load19_in	src/main/scala/generator/test05.scala	/^  val load19_in = Map($/;"	l
load1_in	src/main/scala/generator/cilk/cilk_for_test02_mul.scala	/^  val load1_in = Map($/;"	l
load1_in	src/main/scala/generator/cilk/cilk_for_test04_detach.scala	/^  val load1_in = Map($/;"	l
load1_in	src/main/scala/generator/cilk/cilk_for_test05_detach.scala	/^  val load1_in = Map($/;"	l
load1_in	src/main/scala/generator/cilk/cilk_for_test07_detach.scala	/^  val load1_in = Map($/;"	l
load1_in	src/main/scala/generator/cilk/cilk_for_test08_detach.scala	/^  val load1_in = Map($/;"	l
load1_in	src/main/scala/generator/cilk/cilk_for_test12_detach3.scala	/^  val load1_in = Map($/;"	l
load1_in	src/main/scala/generator/cilk/fib_continue.scala	/^  val load1_in = Map($/;"	l
load1_in	src/main/scala/generator/cilk/mergesort_merge.scala	/^  val load1_in = Map($/;"	l
load2	src/main/scala/generator/cilk/cilk_for_test06_detach_2.scala	/^  val load2 = Module(new UnTypLoad(NumPredOps = 0, NumSuccOps = 0, NumOuts = 1, ID = 2, RouteID = 0))$/;"	l
load20	src/main/scala/generator/cilk/bgemm_detach3.scala	/^  val load20 = Module(new UnTypLoad(NumPredOps=0, NumSuccOps=0, NumOuts=1,ID=20,RouteID=1))$/;"	l
load20_in	src/main/scala/generator/cilk/bgemm_detach3.scala	/^  val load20_in = Map($/;"	l
load23	src/main/scala/generator/test15.scala	/^  val load23 = Module(new UnTypLoad(NumPredOps=0, NumSuccOps=0, NumOuts=1,ID=23,RouteID=1))$/;"	l
load23_in	src/main/scala/generator/test15.scala	/^  val load23_in = Map($/;"	l
load25	src/main/scala/generator/cilk/bgemm_detach3.scala	/^  val load25 = Module(new UnTypLoad(NumPredOps=0, NumSuccOps=0, NumOuts=1,ID=25,RouteID=2))$/;"	l
load25	src/main/scala/generator/cilk/mergesort_merge.scala	/^  val load25 = Module(new UnTypLoad(NumPredOps=0, NumSuccOps=0, NumOuts=1,ID=25,RouteID=0))$/;"	l
load25_in	src/main/scala/generator/cilk/bgemm_detach3.scala	/^  val load25_in = Map($/;"	l
load25_in	src/main/scala/generator/cilk/mergesort_merge.scala	/^  val load25_in = Map($/;"	l
load27	src/main/scala/generator/cilk/mergesort_merge.scala	/^  val load27 = Module(new UnTypLoad(NumPredOps=0, NumSuccOps=0, NumOuts=1,ID=27,RouteID=1))$/;"	l
load27_in	src/main/scala/generator/cilk/mergesort_merge.scala	/^  val load27_in = Map($/;"	l
load2_in	src/main/scala/generator/cilk/cilk_for_test06_detach_2.scala	/^  val load2_in = Map($/;"	l
load3	src/main/scala/generator/cilk/cilk_for_test04_detach.scala	/^  val load3 = Module(new UnTypLoad(NumPredOps=0, NumSuccOps=0, NumOuts=1,ID=3,RouteID=1))$/;"	l
load3	src/main/scala/generator/cilk/cilk_for_test05_detach.scala	/^  val load3 = Module(new UnTypLoad(NumPredOps=0, NumSuccOps=0, NumOuts=1,ID=3,RouteID=1))$/;"	l
load3	src/main/scala/generator/cilk/cilk_for_test07_detach.scala	/^  val load3 = Module(new UnTypLoad(NumPredOps=0, NumSuccOps=0, NumOuts=1,ID=3,RouteID=1))$/;"	l
load3	src/main/scala/generator/cilk/cilk_for_test08_detach.scala	/^  val load3 = Module(new UnTypLoad(NumPredOps=0, NumSuccOps=0, NumOuts=3,ID=3,RouteID=1))$/;"	l
load3	src/main/scala/generator/cilk/fib_continue.scala	/^  val load3 = Module(new UnTypLoad(NumPredOps=0, NumSuccOps=0, NumOuts=1,ID=3,RouteID=2))$/;"	l
load3	src/main/scala/generator/cilk/mergesort_merge.scala	/^  val load3 = Module(new UnTypLoad(NumPredOps=0, NumSuccOps=0, NumOuts=1,ID=3,RouteID=1))$/;"	l
load31	src/main/scala/generator/cilk/mergesort_merge.scala	/^  val load31 = Module(new UnTypLoad(NumPredOps=0, NumSuccOps=0, NumOuts=1,ID=31,RouteID=2))$/;"	l
load31	src/main/scala/generator/test15.scala	/^  val load31 = Module(new UnTypLoad(NumPredOps=0, NumSuccOps=0, NumOuts=2,ID=31,RouteID=2))$/;"	l
load31_in	src/main/scala/generator/cilk/mergesort_merge.scala	/^  val load31_in = Map($/;"	l
load31_in	src/main/scala/generator/test15.scala	/^  val load31_in = Map($/;"	l
load37	src/main/scala/generator/cilk/mergesort_merge.scala	/^  val load37 = Module(new UnTypLoad(NumPredOps=0, NumSuccOps=0, NumOuts=1,ID=37,RouteID=3))$/;"	l
load37_in	src/main/scala/generator/cilk/mergesort_merge.scala	/^  val load37_in = Map($/;"	l
load3_in	src/main/scala/generator/cilk/cilk_for_test04_detach.scala	/^  val load3_in = Map($/;"	l
load3_in	src/main/scala/generator/cilk/cilk_for_test05_detach.scala	/^  val load3_in = Map($/;"	l
load3_in	src/main/scala/generator/cilk/cilk_for_test07_detach.scala	/^  val load3_in = Map($/;"	l
load3_in	src/main/scala/generator/cilk/cilk_for_test08_detach.scala	/^  val load3_in = Map($/;"	l
load3_in	src/main/scala/generator/cilk/fib_continue.scala	/^  val load3_in = Map($/;"	l
load3_in	src/main/scala/generator/cilk/mergesort_merge.scala	/^  val load3_in = Map($/;"	l
load5	src/main/scala/generator/cilk/cilk_for_test06_detach_2.scala	/^  val load5 = Module(new UnTypLoad(NumPredOps = 0, NumSuccOps = 0, NumOuts = 1, ID = 5, RouteID = 1))$/;"	l
load5	src/main/scala/generator/cilk/cilk_for_test07_detach.scala	/^  val load5 = Module(new UnTypLoad(NumPredOps=0, NumSuccOps=0, NumOuts=1,ID=5,RouteID=2))$/;"	l
load5	src/main/scala/generator/cilk/cilk_for_test08_detach.scala	/^  val load5 = Module(new UnTypLoad(NumPredOps=0, NumSuccOps=0, NumOuts=3,ID=5,RouteID=2))$/;"	l
load5	src/main/scala/generator/cilk/mergesort_merge.scala	/^  val load5 = Module(new UnTypLoad(NumPredOps=0, NumSuccOps=0, NumOuts=1,ID=5,RouteID=2))$/;"	l
load5	src/main/scala/generator/test05.scala	/^  val load5 = Module(new UnTypLoad(NumPredOps=0, NumSuccOps=0, NumOuts=1,ID=5,RouteID=0))$/;"	l
load5	src/main/scala/generator/test10.scala	/^  val load5 = Module(new UnTypLoad(NumPredOps=0, NumSuccOps=0, NumOuts=1,ID=5,RouteID=0))$/;"	l
load5	src/main/scala/generator/test11.scala	/^  val load5 = Module(new UnTypLoad(NumPredOps=0, NumSuccOps=0, NumOuts=1,ID=5,RouteID=0))$/;"	l
load5_in	src/main/scala/generator/cilk/cilk_for_test06_detach_2.scala	/^  val load5_in = Map($/;"	l
load5_in	src/main/scala/generator/cilk/cilk_for_test07_detach.scala	/^  val load5_in = Map($/;"	l
load5_in	src/main/scala/generator/cilk/cilk_for_test08_detach.scala	/^  val load5_in = Map($/;"	l
load5_in	src/main/scala/generator/cilk/mergesort_merge.scala	/^  val load5_in = Map($/;"	l
load5_in	src/main/scala/generator/test05.scala	/^  val load5_in = Map($/;"	l
load5_in	src/main/scala/generator/test10.scala	/^  val load5_in = Map($/;"	l
load5_in	src/main/scala/generator/test11.scala	/^  val load5_in = Map($/;"	l
load6	src/main/scala/generator/cilk/cilk_for_test01.scala	/^  val load6 = Module(new UnTypLoad(NumPredOps=0, NumSuccOps=0, NumOuts=1,ID=6,RouteID=0))$/;"	l
load6_in	src/main/scala/generator/cilk/cilk_for_test01.scala	/^  val load6_in = Map($/;"	l
load7	src/main/scala/generator/cilk/cilk_for_test05_detach.scala	/^  val load7 = Module(new UnTypLoad(NumPredOps=0, NumSuccOps=0, NumOuts=1,ID=7,RouteID=2))$/;"	l
load7	src/main/scala/generator/cilk/cilk_for_test07_detach.scala	/^  val load7 = Module(new UnTypLoad(NumPredOps=0, NumSuccOps=0, NumOuts=1,ID=7,RouteID=3))$/;"	l
load7	src/main/scala/generator/cilk/cilk_spawn_test01.scala	/^  val load7 = Module(new UnTypLoad(NumPredOps=0, NumSuccOps=0, NumOuts=1,ID=7,RouteID=0))$/;"	l
load7	src/main/scala/generator/cilk/mergesort_merge.scala	/^  val load7 = Module(new UnTypLoad(NumPredOps=0, NumSuccOps=0, NumOuts=1,ID=7,RouteID=3))$/;"	l
load7	src/main/scala/generator/test06.scala	/^  val load7 = Module(new UnTypLoad(NumPredOps=1, NumSuccOps=0, NumOuts=1,ID=7,RouteID=0))$/;"	l
load7	src/main/scala/generator/test10.scala	/^  val load7 = Module(new UnTypLoad(NumPredOps=0, NumSuccOps=0, NumOuts=1,ID=7,RouteID=1))$/;"	l
load7	src/main/scala/generator/test11.scala	/^  val load7 = Module(new UnTypLoad(NumPredOps=0, NumSuccOps=0, NumOuts=1,ID=7,RouteID=1))$/;"	l
load7_in	src/main/scala/generator/cilk/cilk_for_test05_detach.scala	/^  val load7_in = Map($/;"	l
load7_in	src/main/scala/generator/cilk/cilk_for_test07_detach.scala	/^  val load7_in = Map($/;"	l
load7_in	src/main/scala/generator/cilk/cilk_spawn_test01.scala	/^  val load7_in = Map($/;"	l
load7_in	src/main/scala/generator/cilk/mergesort_merge.scala	/^  val load7_in = Map($/;"	l
load7_in	src/main/scala/generator/test06.scala	/^  val load7_in = Map($/;"	l
load7_in	src/main/scala/generator/test10.scala	/^  val load7_in = Map($/;"	l
load7_in	src/main/scala/generator/test11.scala	/^  val load7_in = Map($/;"	l
load8	src/main/scala/generator/cilk/cilk_for_test09.scala	/^  val load8 = Module(new UnTypLoad(NumPredOps = 0, NumSuccOps = 0, NumOuts = 1, ID = 8, RouteID = 0))$/;"	l
load8_in	src/main/scala/generator/cilk/cilk_for_test09.scala	/^  val load8_in = Map($/;"	l
load9	src/main/scala/generator/cilk/cilk_for_test05_detach.scala	/^  val load9 = Module(new UnTypLoad(NumPredOps=0, NumSuccOps=0, NumOuts=1,ID=9,RouteID=3))$/;"	l
load9	src/main/scala/generator/cilk/mergesort_merge.scala	/^  val load9 = Module(new UnTypLoad(NumPredOps=0, NumSuccOps=0, NumOuts=1,ID=9,RouteID=4))$/;"	l
load9	src/main/scala/generator/test06.scala	/^  val load9 = Module(new UnTypLoad(NumPredOps=1, NumSuccOps=0, NumOuts=1,ID=9,RouteID=1))$/;"	l
load9_in	src/main/scala/generator/cilk/cilk_for_test05_detach.scala	/^  val load9_in = Map($/;"	l
load9_in	src/main/scala/generator/cilk/mergesort_merge.scala	/^  val load9_in = Map($/;"	l
load9_in	src/main/scala/generator/test06.scala	/^  val load9_in = Map($/;"	l
lock	src/main/scala/junctions/nasti.scala	/^  val lock   = Bool()$/;"	l
log	src/main/scala/config/config.scala	/^  val log     = p(TRACE)$/;"	l
look	src/main/scala/config/cde/Parameters.scala	/^      val look = _look$/;"	l
look	src/main/scala/config/cde/Parameters.scala	/^    val look: _Lookup$/;"	l
loop	src/main/scala/loop/Example1.scala	/^package loop$/;"	p
loop	src/main/scala/loop/LoopBlock.scala	/^package loop$/;"	p
loop	src/main/scala/loop/LoopElement.scala	/^package loop$/;"	p
loop	src/main/scala/loop/LoopEnd.scala	/^package loop$/;"	p
loop	src/main/scala/loop/LoopHeader.scala	/^package loop$/;"	p
loop	src/main/scala/loop/LoopStart.scala	/^package loop$/;"	p
loop	src/test/scala/loop/Ex1.scala	/^package loop$/;"	p
loop	src/test/scala/loop/LoopRegnode.scala	/^package loop$/;"	p
loop	src/test/scala/loop/SerialLoop.scala	/^package loop$/;"	p
loopBack	src/main/scala/control/BasicBlock.scala	/^  val loopBack = Flipped(Decoupled(new ControlBundle))$/;"	l
loopExit	src/main/scala/loop/LoopBlock.scala	/^  val loopExit    = Flipped(Vec(NumExits,Decoupled(new ControlBundle())))$/;"	l
loop_L_0_LiveOut_0	src/main/scala/generator/cilk/cilk_for_test09_inner.scala	/^  val loop_L_0_LiveOut_0 = Module(new LiveOutNode(NumOuts = 1, ID = 0))$/;"	l
loop_L_0_LiveOut_0	src/main/scala/generator/test05c.scala	/^  val loop_L_0_LiveOut_0 = Module(new LiveOutNode(NumOuts = 1, ID = 0))$/;"	l
loop_L_0_LiveOut_0	src/main/scala/generator/test14.scala	/^  val loop_L_0_LiveOut_0 = Module(new LiveOutNode(NumOuts = 1, ID = 0))$/;"	l
loop_L_0_LiveOut_0	src/main/scala/generator/test14_inner.scala	/^  val loop_L_0_LiveOut_0 = Module(new LiveOutNode(NumOuts = 1, ID = 0))$/;"	l
loop_L_0_PHI_0	src/main/scala/generator/cilk/stencil_inner.scala	/^  val loop_L_0_PHI_0 = Module(new LiveOutNode(NumOuts = 1, ID = 0))$/;"	l
loop_L_0_PHI_1	src/main/scala/generator/cilk/stencil_inner.scala	/^  val loop_L_0_PHI_1 = Module(new LiveOutNode(NumOuts = 1, ID = 0))$/;"	l
loop_L_0_liveIN_0	src/main/scala/generator/cilk/bgemm.scala	/^  val loop_L_0_liveIN_0 = Module(new LiveInNode(NumOuts = 1, ID = 0))$/;"	l
loop_L_0_liveIN_0	src/main/scala/generator/cilk/bgemm_detach1.scala	/^  val loop_L_0_liveIN_0 = Module(new LiveInNode(NumOuts = 1, ID = 0))$/;"	l
loop_L_0_liveIN_0	src/main/scala/generator/cilk/bgemm_detach2.scala	/^  val loop_L_0_liveIN_0 = Module(new LiveInNode(NumOuts = 1, ID = 0))$/;"	l
loop_L_0_liveIN_0	src/main/scala/generator/cilk/bgemm_detach3.scala	/^  val loop_L_0_liveIN_0 = Module(new LiveInNode(NumOuts = 2, ID = 0))$/;"	l
loop_L_0_liveIN_0	src/main/scala/generator/cilk/cilk_for_test08.scala	/^  val loop_L_0_liveIN_0 = Module(new LiveInNode(NumOuts = 1, ID = 0))$/;"	l
loop_L_0_liveIN_0	src/main/scala/generator/cilk/cilk_for_test09.scala	/^  val loop_L_0_liveIN_0 = Module(new LiveInNode(NumOuts = 1, ID = 0))$/;"	l
loop_L_0_liveIN_0	src/main/scala/generator/cilk/cilk_for_test09_inner.scala	/^  val loop_L_0_liveIN_0 = Module(new LiveInNode(NumOuts = 1, ID = 0))$/;"	l
loop_L_0_liveIN_0	src/main/scala/generator/cilk/stencil.scala	/^  val loop_L_0_liveIN_0 = Module(new LiveInNewNode(NumOuts = 1, ID = 0))$/;"	l
loop_L_0_liveIN_0	src/main/scala/generator/cilk/stencil_detach1.scala	/^  val loop_L_0_liveIN_0 = Module(new LiveInNewNode(NumOuts = 1, ID = 0))$/;"	l
loop_L_0_liveIN_0	src/main/scala/generator/cilk/stencil_inner.scala	/^  val loop_L_0_liveIN_0 = Module(new LiveInNewNode(NumOuts = 1, ID = 0))$/;"	l
loop_L_0_liveIN_0	src/main/scala/generator/test05b.scala	/^  val loop_L_0_liveIN_0 = Module(new LiveInNode(NumOuts = 1, ID = 0))$/;"	l
loop_L_0_liveIN_0	src/main/scala/generator/test05c.scala	/^  val loop_L_0_liveIN_0 = Module(new LiveInNode(NumOuts = 1, ID = 0))$/;"	l
loop_L_0_liveIN_0	src/main/scala/generator/test14.scala	/^  val loop_L_0_liveIN_0 = Module(new LiveInNode(NumOuts = 1, ID = 0))$/;"	l
loop_L_0_liveIN_0	src/main/scala/generator/test14_inner.scala	/^  val loop_L_0_liveIN_0 = Module(new LiveInNode(NumOuts = 1, ID = 0))$/;"	l
loop_L_0_liveIN_1	src/main/scala/generator/cilk/bgemm.scala	/^  val loop_L_0_liveIN_1 = Module(new LiveInNode(NumOuts = 1, ID = 0))$/;"	l
loop_L_0_liveIN_1	src/main/scala/generator/cilk/bgemm_detach1.scala	/^  val loop_L_0_liveIN_1 = Module(new LiveInNode(NumOuts = 1, ID = 0))$/;"	l
loop_L_0_liveIN_1	src/main/scala/generator/cilk/bgemm_detach2.scala	/^  val loop_L_0_liveIN_1 = Module(new LiveInNode(NumOuts = 1, ID = 0))$/;"	l
loop_L_0_liveIN_1	src/main/scala/generator/cilk/bgemm_detach3.scala	/^  val loop_L_0_liveIN_1 = Module(new LiveInNode(NumOuts = 1, ID = 0))$/;"	l
loop_L_0_liveIN_1	src/main/scala/generator/cilk/cilk_for_test08.scala	/^  val loop_L_0_liveIN_1 = Module(new LiveInNode(NumOuts = 1, ID = 0))$/;"	l
loop_L_0_liveIN_1	src/main/scala/generator/cilk/cilk_for_test09.scala	/^  val loop_L_0_liveIN_1 = Module(new LiveInNode(NumOuts = 1, ID = 0))$/;"	l
loop_L_0_liveIN_1	src/main/scala/generator/cilk/stencil.scala	/^  val loop_L_0_liveIN_1 = Module(new LiveInNewNode(NumOuts = 1, ID = 0))$/;"	l
loop_L_0_liveIN_1	src/main/scala/generator/cilk/stencil_detach1.scala	/^  val loop_L_0_liveIN_1 = Module(new LiveInNewNode(NumOuts = 1, ID = 0))$/;"	l
loop_L_0_liveIN_1	src/main/scala/generator/cilk/stencil_inner.scala	/^  val loop_L_0_liveIN_1 = Module(new LiveInNewNode(NumOuts = 1, ID = 0))$/;"	l
loop_L_0_liveIN_1	src/main/scala/generator/test05b.scala	/^  val loop_L_0_liveIN_1 = Module(new LiveInNode(NumOuts = 2, ID = 0))$/;"	l
loop_L_0_liveIN_1	src/main/scala/generator/test05c.scala	/^  val loop_L_0_liveIN_1 = Module(new LiveInNode(NumOuts = 1, ID = 0))$/;"	l
loop_L_0_liveIN_1	src/main/scala/generator/test14.scala	/^  val loop_L_0_liveIN_1 = Module(new LiveInNode(NumOuts = 1, ID = 0))$/;"	l
loop_L_0_liveIN_2	src/main/scala/generator/cilk/bgemm.scala	/^  val loop_L_0_liveIN_2 = Module(new LiveInNode(NumOuts = 1, ID = 0))$/;"	l
loop_L_0_liveIN_2	src/main/scala/generator/cilk/bgemm_detach1.scala	/^  val loop_L_0_liveIN_2 = Module(new LiveInNode(NumOuts = 1, ID = 0))$/;"	l
loop_L_0_liveIN_2	src/main/scala/generator/cilk/bgemm_detach2.scala	/^  val loop_L_0_liveIN_2 = Module(new LiveInNode(NumOuts = 1, ID = 0))$/;"	l
loop_L_0_liveIN_2	src/main/scala/generator/cilk/bgemm_detach3.scala	/^  val loop_L_0_liveIN_2 = Module(new LiveInNode(NumOuts = 1, ID = 0))$/;"	l
loop_L_0_liveIN_2	src/main/scala/generator/cilk/cilk_for_test09.scala	/^  val loop_L_0_liveIN_2 = Module(new LiveInNode(NumOuts = 2, ID = 0))$/;"	l
loop_L_0_liveIN_2	src/main/scala/generator/cilk/stencil_detach1.scala	/^  val loop_L_0_liveIN_2 = Module(new LiveInNewNode(NumOuts = 1, ID = 0))$/;"	l
loop_L_0_liveIN_2	src/main/scala/generator/cilk/stencil_inner.scala	/^  val loop_L_0_liveIN_2 = Module(new LiveInNewNode(NumOuts = 1, ID = 0))$/;"	l
loop_L_0_liveIN_3	src/main/scala/generator/cilk/bgemm_detach1.scala	/^  val loop_L_0_liveIN_3 = Module(new LiveInNode(NumOuts = 1, ID = 0))$/;"	l
loop_L_0_liveIN_3	src/main/scala/generator/cilk/bgemm_detach2.scala	/^  val loop_L_0_liveIN_3 = Module(new LiveInNode(NumOuts = 1, ID = 0))$/;"	l
loop_L_0_liveIN_3	src/main/scala/generator/cilk/bgemm_detach3.scala	/^  val loop_L_0_liveIN_3 = Module(new LiveInNode(NumOuts = 1, ID = 0))$/;"	l
loop_L_0_liveIN_3	src/main/scala/generator/cilk/stencil_detach1.scala	/^  val loop_L_0_liveIN_3 = Module(new LiveInNewNode(NumOuts = 1, ID = 0))$/;"	l
loop_L_0_liveIN_3	src/main/scala/generator/cilk/stencil_inner.scala	/^  val loop_L_0_liveIN_3 = Module(new LiveInNewNode(NumOuts = 1, ID = 0))$/;"	l
loop_L_0_liveIN_4	src/main/scala/generator/cilk/bgemm_detach2.scala	/^  val loop_L_0_liveIN_4 = Module(new LiveInNode(NumOuts = 1, ID = 0))$/;"	l
loop_L_0_liveIN_4	src/main/scala/generator/cilk/bgemm_detach3.scala	/^  val loop_L_0_liveIN_4 = Module(new LiveInNode(NumOuts = 1, ID = 0))$/;"	l
loop_L_0_liveIN_4	src/main/scala/generator/cilk/stencil_inner.scala	/^  val loop_L_0_liveIN_4 = Module(new LiveInNewNode(NumOuts = 1, ID = 0))$/;"	l
loop_L_0_liveIN_5	src/main/scala/generator/cilk/bgemm_detach3.scala	/^  val loop_L_0_liveIN_5 = Module(new LiveInNode(NumOuts = 1, ID = 0))$/;"	l
loop_L_0_liveIN_DELAY_0	src/main/scala/generator/cilk/stencil.scala	/^  val loop_L_0_liveIN_DELAY_0 = Module(new LiveOutNode(NumOuts = 1, ID = 0))$/;"	l
loop_L_0_liveIN_DELAY_0	src/main/scala/generator/cilk/stencil_detach1.scala	/^  val loop_L_0_liveIN_DELAY_0 = Module(new LiveOutNode(NumOuts = 1, ID = 0))$/;"	l
loop_L_0_liveIN_DELAY_0	src/main/scala/generator/cilk/stencil_inner.scala	/^  val loop_L_0_liveIN_DELAY_0 = Module(new LiveOutNode(NumOuts = 1, ID = 0))$/;"	l
loop_L_0_liveIN_DELAY_1	src/main/scala/generator/cilk/stencil.scala	/^  val loop_L_0_liveIN_DELAY_1 = Module(new LiveOutNode(NumOuts = 1, ID = 0))$/;"	l
loop_L_0_liveIN_DELAY_1	src/main/scala/generator/cilk/stencil_detach1.scala	/^  val loop_L_0_liveIN_DELAY_1 = Module(new LiveOutNode(NumOuts = 1, ID = 0))$/;"	l
loop_L_0_liveIN_DELAY_1	src/main/scala/generator/cilk/stencil_inner.scala	/^  val loop_L_0_liveIN_DELAY_1 = Module(new LiveOutNode(NumOuts = 1, ID = 0))$/;"	l
loop_L_0_liveIN_DELAY_2	src/main/scala/generator/cilk/stencil_detach1.scala	/^  val loop_L_0_liveIN_DELAY_2 = Module(new LiveOutNode(NumOuts = 1, ID = 0))$/;"	l
loop_L_0_liveIN_DELAY_2	src/main/scala/generator/cilk/stencil_inner.scala	/^  val loop_L_0_liveIN_DELAY_2 = Module(new LiveOutNode(NumOuts = 2, ID = 0))$/;"	l
loop_L_0_liveIN_DELAY_3	src/main/scala/generator/cilk/stencil_detach1.scala	/^  val loop_L_0_liveIN_DELAY_3 = Module(new LiveOutNode(NumOuts = 1, ID = 0))$/;"	l
loop_L_0_liveIN_DELAY_3	src/main/scala/generator/cilk/stencil_inner.scala	/^  val loop_L_0_liveIN_DELAY_3 = Module(new LiveOutNode(NumOuts = 2, ID = 0))$/;"	l
loop_L_0_liveIN_DELAY_4	src/main/scala/generator/cilk/stencil_inner.scala	/^  val loop_L_0_liveIN_DELAY_4 = Module(new LiveOutNode(NumOuts = 1, ID = 0))$/;"	l
loop_L_0_live_Control_0	src/main/scala/generator/cilk/stencil_detach1.scala	/^  val loop_L_0_live_Control_0 = Module(new LiveOutControlNode(NumOuts = 1, ID = 0))$/;"	l
loop_L_10_liveIN_0	src/main/scala/generator/cilk/cilk_for_test02.scala	/^  val loop_L_10_liveIN_0 = Module(new LiveInNode(NumOuts = 1, ID = 0))$/;"	l
loop_L_10_liveIN_0	src/main/scala/generator/test11.scala	/^  val loop_L_10_liveIN_0 = Module(new LiveInNode(NumOuts = 1, ID = 0))$/;"	l
loop_L_10_liveIN_1	src/main/scala/generator/cilk/cilk_for_test02.scala	/^  val loop_L_10_liveIN_1 = Module(new LiveInNode(NumOuts = 1, ID = 0))$/;"	l
loop_L_10_liveIN_1	src/main/scala/generator/test11.scala	/^  val loop_L_10_liveIN_1 = Module(new LiveInNode(NumOuts = 1, ID = 0))$/;"	l
loop_L_10_liveIN_2	src/main/scala/generator/test11.scala	/^  val loop_L_10_liveIN_2 = Module(new LiveInNode(NumOuts = 1, ID = 0))$/;"	l
loop_L_13_liveIN_0	src/main/scala/generator/test12.scala	/^  val loop_L_13_liveIN_0 = Module(new LiveInNode(NumOuts = 1, ID = 0))$/;"	l
loop_L_13_liveOut_0	src/main/scala/generator/test12.scala	/^  val loop_L_13_liveOut_0 = Module(new LiveOutNode(NumOuts = 1, ID = 0))$/;"	l
loop_L_1_liveIN_0	src/main/scala/generator/cilk/bgemm_detach3.scala	/^  val loop_L_1_liveIN_0 = Module(new LiveInNode(NumOuts = 1, ID = 0))$/;"	l
loop_L_1_liveIN_1	src/main/scala/generator/cilk/bgemm_detach3.scala	/^  val loop_L_1_liveIN_1 = Module(new LiveInNode(NumOuts = 2, ID = 0))$/;"	l
loop_L_1_liveIN_2	src/main/scala/generator/cilk/bgemm_detach3.scala	/^  val loop_L_1_liveIN_2 = Module(new LiveInNode(NumOuts = 1, ID = 0))$/;"	l
loop_L_4_liveIN_0	src/main/scala/generator/test04.scala	/^  val loop_L_4_liveIN_0 = Module(new LiveInNode(NumOuts = 1, ID = 0))$/;"	l
loop_L_4_liveIN_0	src/main/scala/generator/test10.scala	/^  val loop_L_4_liveIN_0 = Module(new LiveInNode(NumOuts = 1, ID = 0))$/;"	l
loop_L_4_liveIN_1	src/main/scala/generator/test04.scala	/^  val loop_L_4_liveIN_1 = Module(new LiveInNode(NumOuts = 1, ID = 0))$/;"	l
loop_L_4_liveIN_1	src/main/scala/generator/test10.scala	/^  val loop_L_4_liveIN_1 = Module(new LiveInNode(NumOuts = 1, ID = 0))$/;"	l
loop_L_4_liveIN_2	src/main/scala/generator/test10.scala	/^  val loop_L_4_liveIN_2 = Module(new LiveInNode(NumOuts = 1, ID = 0))$/;"	l
loop_L_5_LiveOut_0	src/main/scala/generator/test08.scala	/^  val loop_L_5_LiveOut_0 = Module(new LiveOutNode(NumOuts = 1, ID = 0))$/;"	l
loop_L_5_LiveOut_0	src/main/scala/generator/test09.scala	/^  val loop_L_5_LiveOut_0 = Module(new LiveOutNode(NumOuts = 1, ID = 0))$/;"	l
loop_L_5_liveIN_0	src/main/scala/generator/cilk/cilk_for_test01.scala	/^  val loop_L_5_liveIN_0 = Module(new LiveInNode(NumOuts = 1, ID = 0))$/;"	l
loop_L_5_liveIN_0	src/main/scala/generator/cilk/cilk_for_test04.scala	/^  val loop_L_5_liveIN_0 = Module(new LiveInNode(NumOuts = 1, ID = 0))$/;"	l
loop_L_5_liveIN_0	src/main/scala/generator/cilk/cilk_for_test05.scala	/^  val loop_L_5_liveIN_0 = Module(new LiveInNode(NumOuts = 1, ID = 0))$/;"	l
loop_L_5_liveIN_0	src/main/scala/generator/cilk/cilk_for_test06.scala	/^  val loop_L_5_liveIN_0 = Module(new LiveInNewNode(NumOuts = 1, ID = 0))$/;"	l
loop_L_5_liveIN_0	src/main/scala/generator/test08.scala	/^  val loop_L_5_liveIN_0 = Module(new LiveInNode(NumOuts = 1, ID = 0))$/;"	l
loop_L_5_liveIN_0	src/main/scala/generator/test09.scala	/^  val loop_L_5_liveIN_0 = Module(new LiveInNode(NumOuts = 1, ID = 0))$/;"	l
loop_L_5_liveIN_0	src/main/scala/generator/test12_inner.scala	/^  val loop_L_5_liveIN_0 = Module(new LiveInNode(NumOuts = 1, ID = 0))$/;"	l
loop_L_5_liveIN_1	src/main/scala/generator/cilk/cilk_for_test01.scala	/^  val loop_L_5_liveIN_1 = Module(new LiveInNode(NumOuts = 1, ID = 0))$/;"	l
loop_L_5_liveIN_1	src/main/scala/generator/cilk/cilk_for_test04.scala	/^  val loop_L_5_liveIN_1 = Module(new LiveInNode(NumOuts = 1, ID = 1))$/;"	l
loop_L_5_liveIN_1	src/main/scala/generator/cilk/cilk_for_test05.scala	/^  val loop_L_5_liveIN_1 = Module(new LiveInNode(NumOuts = 1, ID = 0))$/;"	l
loop_L_5_liveIN_1	src/main/scala/generator/cilk/cilk_for_test06.scala	/^  val loop_L_5_liveIN_1 = Module(new LiveInNewNode(NumOuts = 1, ID = 0))$/;"	l
loop_L_5_liveIN_2	src/main/scala/generator/cilk/cilk_for_test04.scala	/^  val loop_L_5_liveIN_2 = Module(new LiveInNode(NumOuts = 1, ID = 2))$/;"	l
loop_L_5_liveIN_2	src/main/scala/generator/cilk/cilk_for_test05.scala	/^  val loop_L_5_liveIN_2 = Module(new LiveInNode(NumOuts = 1, ID = 0))$/;"	l
loop_L_5_liveIN_2	src/main/scala/generator/cilk/cilk_for_test06.scala	/^  val loop_L_5_liveIN_2 = Module(new LiveInNewNode(NumOuts = 1, ID = 0))$/;"	l
loop_L_5_liveIN_3	src/main/scala/generator/cilk/cilk_for_test06.scala	/^  val loop_L_5_liveIN_3 = Module(new LiveOutNode(NumOuts = 1, ID = 0))$/;"	l
loop_L_5_liveIN_4	src/main/scala/generator/cilk/cilk_for_test06.scala	/^  val loop_L_5_liveIN_4 = Module(new LiveOutNode(NumOuts = 1, ID = 0))$/;"	l
loop_L_5_liveIN_Control_0	src/main/scala/generator/cilk/cilk_for_test06.scala	/^  val loop_L_5_liveIN_Control_0 = Module(new LiveOutControlNode(NumOuts = 1, ID = 0))$/;"	l
loop_L_5_liveIN_TMP_0	src/main/scala/generator/cilk/cilk_for_test06.scala	/^  val loop_L_5_liveIN_TMP_0 = Module(new LiveOutNode(NumOuts = 1, ID = 0))$/;"	l
loop_L_5_liveIN_TMP_1	src/main/scala/generator/cilk/cilk_for_test06.scala	/^  val loop_L_5_liveIN_TMP_1 = Module(new LiveOutNode(NumOuts = 1, ID = 0))$/;"	l
loop_L_5_liveIN_TMP_2	src/main/scala/generator/cilk/cilk_for_test06.scala	/^  val loop_L_5_liveIN_TMP_2 = Module(new LiveOutNode(NumOuts = 1, ID = 0))$/;"	l
loop_L_5_liveOut_0	src/main/scala/generator/test12_inner.scala	/^  val loop_L_5_liveOut_0 = Module(new LiveOutNode(NumOuts = 1, ID = 0))$/;"	l
loop_L_6_liveIN_0	src/main/scala/generator/cilk/cilk_for_test06_detach.scala	/^  val loop_L_6_liveIN_0 = Module(new LiveInNewNode(NumOuts = 1, ID = 0))$/;"	l
loop_L_6_liveIN_0	src/main/scala/generator/cilk/cilk_for_test07.scala	/^  val loop_L_6_liveIN_0 = Module(new LiveInNode(NumOuts = 1, ID = 0))$/;"	l
loop_L_6_liveIN_1	src/main/scala/generator/cilk/cilk_for_test06_detach.scala	/^  val loop_L_6_liveIN_1 = Module(new LiveInNewNode(NumOuts = 1, ID = 0))$/;"	l
loop_L_6_liveIN_1	src/main/scala/generator/cilk/cilk_for_test07.scala	/^  val loop_L_6_liveIN_1 = Module(new LiveInNode(NumOuts = 1, ID = 0))$/;"	l
loop_L_6_liveIN_2	src/main/scala/generator/cilk/cilk_for_test06_detach.scala	/^  val loop_L_6_liveIN_2 = Module(new LiveInNewNode(NumOuts = 1, ID = 0))$/;"	l
loop_L_6_liveIN_2	src/main/scala/generator/cilk/cilk_for_test07.scala	/^  val loop_L_6_liveIN_2 = Module(new LiveInNode(NumOuts = 1, ID = 0))$/;"	l
loop_L_6_liveIN_3	src/main/scala/generator/cilk/cilk_for_test06_detach.scala	/^  val loop_L_6_liveIN_3 = Module(new LiveInNewNode(NumOuts = 1, ID = 0))$/;"	l
loop_L_6_liveIN_4	src/main/scala/generator/cilk/cilk_for_test06_detach.scala	/^  val loop_L_6_liveIN_4 = Module(new LiveOutNode(NumOuts = 1, ID = 0))$/;"	l
loop_L_6_liveIN_5	src/main/scala/generator/cilk/cilk_for_test06_detach.scala	/^  val loop_L_6_liveIN_5 = Module(new LiveOutNode(NumOuts = 1, ID = 0))$/;"	l
loop_L_6_liveIN_TMP_0	src/main/scala/generator/cilk/cilk_for_test06_detach.scala	/^  val loop_L_6_liveIN_TMP_0 = Module(new LiveOutNode(NumOuts = 1, ID = 0))$/;"	l
loop_L_6_liveIN_TMP_1	src/main/scala/generator/cilk/cilk_for_test06_detach.scala	/^  val loop_L_6_liveIN_TMP_1 = Module(new LiveOutNode(NumOuts = 1, ID = 0))$/;"	l
loop_L_6_liveIN_TMP_2	src/main/scala/generator/cilk/cilk_for_test06_detach.scala	/^  val loop_L_6_liveIN_TMP_2 = Module(new LiveOutNode(NumOuts = 1, ID = 0))$/;"	l
loop_L_6_liveIN_TMP_3	src/main/scala/generator/cilk/cilk_for_test06_detach.scala	/^  val loop_L_6_liveIN_TMP_3 = Module(new LiveOutNode(NumOuts = 1, ID = 0))$/;"	l
loop_L_6_live_Control_0	src/main/scala/generator/cilk/cilk_for_test06_detach.scala	/^  val loop_L_6_live_Control_0 = Module(new LiveOutControlNode(NumOuts = 1, ID = 0))$/;"	l
loop_L_7_LiveOut_0	src/main/scala/generator/test03.scala	/^  val loop_L_7_LiveOut_0 = Module(new LiveOutNode(NumOuts = 1, ID = 0))$/;"	l
loop_L_7_liveIN_0	src/main/scala/generator/test03.scala	/^  val loop_L_7_liveIN_0 = Module(new LiveInNode(NumOuts = 2, ID = 0))$/;"	l
loop_L_7_liveIN_1	src/main/scala/generator/test03.scala	/^  val loop_L_7_liveIN_1 = Module(new LiveInNode(NumOuts = 1, ID = 0))$/;"	l
loop_L_7_liveIN_2	src/main/scala/generator/test03.scala	/^  val loop_L_7_liveIN_2 = Module(new LiveInNode(NumOuts = 1, ID = 0))$/;"	l
loop_back_R	src/main/scala/control/BasicBlock.scala	/^  val loop_back_R = RegInit(ControlBundle.default)$/;"	l
loop_back_valid_R	src/main/scala/control/BasicBlock.scala	/^  val loop_back_valid_R = RegInit(false.B)$/;"	l
m	scripts/extract_activity.py	/^        m = found.group(1)$/;"	v
m	src/test/scala/verilogmain/TypStackSweeper.scala	/^    val m = G.reduceLeft(_ & _)$/;"	l
m	src/test/scala/verilogmain/TypeStackSweeper16b.scala	/^    val m = G.reduceLeft(_ & _)$/;"	l
m0	src/main/scala/dataflow/AdditionDF.scala	/^  val m0 = Module(new IcmpNode(NumOuts = 1, ID = 0, opCode = "EQ")(sign = false))$/;"	l
m0	src/main/scala/dataflow/AllocaDF.scala	/^  val m0 = Module(new AllocaNode(NumOuts = 1,ID = 0,RouteID=0))$/;"	l
m0	src/main/scala/dataflow/fuse/computeFuse01.scala	/^  val m0 = Module(new Chain(NumOps = 3, ID = 0, OpCodes = Array("And","Xor","Add"))(sign = false)(p))$/;"	l
m0	src/main/scala/dataflow/fuse/computeFuse02.scala	/^  val m0 = Module(new Chain(NumOps = 3, ID = 0, OpCodes = Array("Xor","And","Xor"))(sign = false))$/;"	l
m0	src/main/scala/dataflow/fuse/computeFuse02.scala	/^  val m0 = Module(new Chain(NumOps = 5, ID = 0, OpCodes = Array("Xor","And","Xor","ShiftRight","Or"))(sign = false))$/;"	l
m0	src/main/scala/dataflow/fuse/computeFuse03.scala	/^  val m0 = Module(new Chain(NumOps = 6, ID = 0, OpCodes = Array("And","Xor","ShiftLeft","And","Add", "ShiftRight"))(sign = false))$/;"	l
m0	src/main/scala/dataflow/fuse/computeFuse03.scala	/^  val m0 = Module(new ComputeNode(NumOuts = 1, ID = 0, opCode = "And")(sign = false))$/;"	l
m0	src/main/scala/dataflow/fuse/computeFuse04.scala	/^  val m0 = Module(new Chain(NumOps = 3, ID = 0, OpCodes = Array("And","ShiftLeft","Xor"))(sign = false))$/;"	l
m0	src/main/scala/dataflow/fuse/computeFuse04.scala	/^  val m0 = Module(new Chain(NumOps = 4, ID = 0, OpCodes = Array("And","ShiftLeft","Xor","Or"))(sign = false))$/;"	l
m0	src/main/scala/dataflow/graph/compute01DF.scala	/^  val m0 = Module(new ComputeNode(NumOuts = 1, ID = 0, opCode = "And")(sign = false))$/;"	l
m0	src/main/scala/dataflow/graph/compute02DF.scala	/^  val m0 = Module(new ComputeNode(NumOuts = 1, ID = 0, opCode = "Xor")(sign = false))$/;"	l
m0	src/main/scala/dataflow/graph/compute03DF.scala	/^  val m0 = Module(new ComputeNode(NumOuts = 1, ID = 0, opCode = "And")(sign = false))$/;"	l
m0	src/main/scala/dataflow/graph/compute04DF.scala	/^  val m0 = Module(new ComputeNode(NumOuts = 1, ID = 0, opCode = "And")(sign = false))$/;"	l
m0	src/main/scala/dataflow/tests/Add01.scala	/^  val m0 = Module(new ComputeNode(NumOuts = 1, ID = 0, opCode = "Add")(sign = false))$/;"	l
m1	src/main/scala/dataflow/AdditionDF.scala	/^  val m1 = Module(new CBranchNode(ID = 1))$/;"	l
m1	src/main/scala/dataflow/fuse/computeFuse02.scala	/^  val m1 = Module(new Chain(NumOps = 2, ID = 0, OpCodes = Array("ShiftRight","Or"))(sign = false))$/;"	l
m1	src/main/scala/dataflow/fuse/computeFuse02.scala	/^  val m1 = Module(new ComputeNode(NumOuts = 1, ID = 0, opCode = "ShiftLeft")(sign = false))$/;"	l
m1	src/main/scala/dataflow/fuse/computeFuse03.scala	/^  val m1 = Module(new ComputeNode(NumOuts = 1, ID = 0, opCode = "Xor")(sign = false))$/;"	l
m1	src/main/scala/dataflow/fuse/computeFuse04.scala	/^  val m1 = Module(new ComputeNode(NumOuts = 1, ID = 0, opCode = "And")(sign = false))$/;"	l
m1	src/main/scala/dataflow/graph/compute01DF.scala	/^  val m1 = Module(new ComputeNode(NumOuts = 1, ID = 0, opCode = "Xor")(sign = false))$/;"	l
m1	src/main/scala/dataflow/graph/compute02DF.scala	/^  val m1 = Module(new ComputeNode(NumOuts = 1, ID = 0, opCode = "And")(sign = false))$/;"	l
m1	src/main/scala/dataflow/graph/compute03DF.scala	/^  val m1 = Module(new ComputeNode(NumOuts = 1, ID = 0, opCode = "Xor")(sign = false))$/;"	l
m1	src/main/scala/dataflow/graph/compute04DF.scala	/^  val m1 = Module(new ComputeNode(NumOuts = 1, ID = 0, opCode = "ShiftLeft")(sign = false))$/;"	l
m10	src/main/scala/dataflow/graph/compute03DF.scala	/^  val m10 = Module(new ComputeNode(NumOuts = 1, ID = 0, opCode = "ShiftRight")(sign = false))$/;"	l
m1_brn_bb	src/main/scala/dataflow/AdditionDF.scala	/^  val m1_brn_bb = Map($/;"	l
m2	src/main/scala/dataflow/AdditionDF.scala	/^  val m2 = Module(new ComputeNode(NumOuts = 1, ID = 2, opCode = "Add")(sign = false))$/;"	l
m2	src/main/scala/dataflow/fuse/computeFuse02.scala	/^  val m2 = Module(new ComputeNode(NumOuts = 1, ID = 0, opCode = "ShiftLeft")(sign = false))$/;"	l
m2	src/main/scala/dataflow/fuse/computeFuse03.scala	/^  val m2 = Module(new Chain(NumOps = 4, ID = 0, OpCodes = Array("ShiftLeft","And","Add", "ShiftRight"))(sign = false))$/;"	l
m2	src/main/scala/dataflow/fuse/computeFuse03.scala	/^  val m2 = Module(new ComputeNode(NumOuts = 2, ID = 0, opCode = "Xor")(sign = false))$/;"	l
m2	src/main/scala/dataflow/fuse/computeFuse04.scala	/^  val m2 = Module(new ComputeNode(NumOuts = 1, ID = 0, opCode = "Or")(sign = false))$/;"	l
m2	src/main/scala/dataflow/graph/compute01DF.scala	/^  val m2 = Module(new ComputeNode(NumOuts = 1, ID = 0, opCode = "Add")(sign = false))$/;"	l
m2	src/main/scala/dataflow/graph/compute02DF.scala	/^  val m2 = Module(new ComputeNode(NumOuts = 2, ID = 0, opCode = "Xor")(sign = false))$/;"	l
m2	src/main/scala/dataflow/graph/compute03DF.scala	/^  val m2 = Module(new ComputeNode(NumOuts = 2, ID = 0, opCode = "Xor")(sign = false))$/;"	l
m2	src/main/scala/dataflow/graph/compute04DF.scala	/^  val m2 = Module(new ComputeNode(NumOuts = 2, ID = 0, opCode = "Xor")(sign = false))$/;"	l
m3	src/main/scala/dataflow/AdditionDF.scala	/^  val m3 = Module(new UBranchNode(ID = 3))$/;"	l
m3	src/main/scala/dataflow/fuse/computeFuse03.scala	/^  val m3 = Module(new Chain(NumOps = 4, ID = 0, OpCodes = Array("ShiftLeft","And","Add", "ShiftRight"))(sign = false))$/;"	l
m3	src/main/scala/dataflow/graph/compute02DF.scala	/^  val m3 = Module(new ComputeNode(NumOuts = 1, ID = 0, opCode = "ShiftLeft")(sign = false))$/;"	l
m3	src/main/scala/dataflow/graph/compute03DF.scala	/^  val m3 = Module(new ComputeNode(NumOuts = 1, ID = 0, opCode = "ShiftLeft")(sign = false))$/;"	l
m3	src/main/scala/dataflow/graph/compute04DF.scala	/^  val m3 = Module(new ComputeNode(NumOuts = 1, ID = 0, opCode = "And")(sign = false))$/;"	l
m3_ubrn_bb	src/main/scala/dataflow/AdditionDF.scala	/^  val m3_ubrn_bb = Map($/;"	l
m4	src/main/scala/dataflow/AdditionDF.scala	/^  val m4 = Module(new PhiNode(NumInputs = 2, NumOuts = 1, ID = 4))$/;"	l
m4	src/main/scala/dataflow/fuse/computeFuse03.scala	/^  val m4 = Module(new Chain(NumOps = 4, ID = 0, OpCodes = Array("ShiftLeft","And","Add", "ShiftRight"))(sign = false))$/;"	l
m4	src/main/scala/dataflow/graph/compute02DF.scala	/^  val m4 = Module(new ComputeNode(NumOuts = 1, ID = 0, opCode = "ShiftRight")(sign = false))$/;"	l
m4	src/main/scala/dataflow/graph/compute03DF.scala	/^  val m4 = Module(new ComputeNode(NumOuts = 1, ID = 0, opCode = "ShiftLeft")(sign = false))$/;"	l
m4	src/main/scala/dataflow/graph/compute04DF.scala	/^  val m4 = Module(new ComputeNode(NumOuts = 1, ID = 0, opCode = "Or")(sign = false))$/;"	l
m4_phi_in	src/main/scala/dataflow/AdditionDF.scala	/^  val m4_phi_in = Map($/;"	l
m5	src/main/scala/dataflow/AdditionDF.scala	/^  val m5 = Module(new ComputeNode(NumOuts = 1, ID = 5, opCode = "Add")(sign = false))$/;"	l
m5	src/main/scala/dataflow/graph/compute02DF.scala	/^  val m5 = Module(new ComputeNode(NumOuts = 1, ID = 0, opCode = "Or")(sign = false))$/;"	l
m5	src/main/scala/dataflow/graph/compute03DF.scala	/^  val m5 = Module(new ComputeNode(NumOuts = 1, ID = 0, opCode = "And")(sign = false))$/;"	l
m6	src/main/scala/dataflow/graph/compute03DF.scala	/^  val m6 = Module(new ComputeNode(NumOuts = 1, ID = 0, opCode = "And")(sign = false))$/;"	l
m7	src/main/scala/dataflow/graph/compute03DF.scala	/^  val m7 = Module(new ComputeNode(NumOuts = 1, ID = 0, opCode = "Add")(sign = false))$/;"	l
m8	src/main/scala/dataflow/graph/compute03DF.scala	/^  val m8 = Module(new ComputeNode(NumOuts = 1, ID = 0, opCode = "Add")(sign = false))$/;"	l
m9	src/main/scala/dataflow/graph/compute03DF.scala	/^  val m9 = Module(new ComputeNode(NumOuts = 1, ID = 0, opCode = "ShiftRight")(sign = false))$/;"	l
m_ar	src/main/scala/junctions/nasti.scala	/^      val m_ar = io.master(i).ar$/;"	l
m_aw	src/main/scala/junctions/nasti.scala	/^      val m_aw = io.master(i).aw$/;"	l
m_b	src/main/scala/junctions/nasti.scala	/^      val m_b = io.master(i).b$/;"	l
m_r	src/main/scala/junctions/nasti.scala	/^      val m_r = io.master(i).r$/;"	l
m_w	src/main/scala/junctions/nasti.scala	/^      val m_w = io.master(i).w$/;"	l
makeMask	src/main/scala/config/cde/Parameters.scala	/^  def makeMask(mask:(Any,View,View,View)=>Any) = {$/;"	m
makeMask	src/main/scala/config/cde/Parameters.scala	/^  def makeMask(mask:Map[Any,Any]) = {$/;"	m
makeMask	src/main/scala/config/cde/Parameters.scala	/^  def makeMask(mask:PartialFunction[Any,Any]) = {$/;"	m
mask	src/main/scala/accel/Cache.scala	/^  val mask    = UInt((xlen\/8).W)$/;"	l
mask	src/main/scala/accel/NastiMaster.scala	/^  val mask = UInt((xlen\/8).W)$/;"	l
mask	src/main/scala/interfaces/interfaces.scala	/^  val mask    = UInt((xlen\/8).W)$/;"	l
mask	src/main/scala/interfaces/interfaces.scala	/^  val mask = UInt((xlen \/ 8).W)$/;"	l
mask	src/main/scala/node/helpers.scala	/^      val mask = (wordmask << alignment)$/;"	l
mask	src/main/scala/node/helpers.scala	/^      val mask = Mux(sel === MT_H.asUInt || sel === MT_HU.asUInt, Fill(16,1.U),$/;"	l
mask	src/main/scala/node/helpers.scala	/^      val mask = Mux(sel === MT_H.asUInt || sel === MT_HU.asUInt, Fill(2,1.U),$/;"	l
mask	src/main/scala/stack/InterleavedStack.scala	/^  val mask = Seq.fill(NumPorts)(WireInit(0.U(numRAMs.W)))$/;"	l
mask	src/test/scala/accel/AccelTests.scala	/^        val mask     = Vec(testVec)(testCnt).op2$/;"	l
mask	src/test/scala/accel/CacheTests.scala	/^  val mask = (Vec(testVec)(testCnt) >> (blen + slen + tlen + bBits))$/;"	l
mask	src/test/scala/accel/coredf/AccelTests01.scala	/^        val mask     = Vec(testVec)(testCnt).op2$/;"	l
mask	src/test/scala/accel/coredf/FilterDFTests.scala	/^        val mask     = Vec(testVec)(testCnt).op2$/;"	l
mask	src/test/scala/accel/coredf/VecFilterNoKernDFTests.scala	/^        val mask     = Vec(testVec)(testCnt).op2$/;"	l
mask_R	src/main/scala/node/PhiNode.scala	/^  val mask_R = RegInit(0.U(NumInputs.W))$/;"	l
mask_fired_R	src/main/scala/control/BasicBlock.scala	/^  val mask_fired_R = RegInit(VecInit(Seq.fill(NumPhi)(false.B)))$/;"	l
mask_ready_R	src/main/scala/node/HandShaking.scala	/^  val mask_ready_R = Seq.fill(NumPhi)(RegInit(false.B))$/;"	l
mask_ready_W	src/main/scala/control/BasicBlock.scala	/^  val mask_ready_W = mask_ready_R.reduceLeft(_ && _)$/;"	l
mask_valid_R	src/main/scala/control/BasicBlock.scala	/^  val mask_valid_R = RegInit(VecInit(Seq.fill(NumPhi)(false.B)))$/;"	l
mask_valid_R	src/main/scala/node/HandShaking.scala	/^  val mask_valid_R = Seq.fill(NumPhi)(RegInit(false.B))$/;"	l
mask_valid_R	src/main/scala/node/PhiNode.scala	/^  val mask_valid_R = RegInit(false.B)$/;"	l
mask_valid_W	src/main/scala/control/BasicBlock.scala	/^  val mask_valid_W = mask_valid_R.reduceLeft(_ && _)$/;"	l
mask_value_R	src/main/scala/control/BasicBlock.scala	/^  val mask_value_R = RegInit(0.U(2.W))$/;"	l
master	src/main/scala/junctions/nasti.scala	/^  val master = Vec(arbN, new NastiIO).flip$/;"	l
mat2x2	src/main/scala/node/TypCompute.scala	/^class mat2x2(implicit p: Parameters) extends Numbers {$/;"	c
mat2x2likeNumber	src/main/scala/node/TypCompute.scala	/^    implicit object mat2x2likeNumber extends OperatorLike[mat2x2] {$/;"	c
matplotlib	scripts/extract_activity.py	/^import matplotlib$/;"	i
matplotlib	scripts/extract_activity.py	/^import matplotlib.pyplot as plt$/;"	i
max	src/main/scala/config/cde/Expression.scala	/^      val max = x.map(i => Ex.eval(i.expr,(x:Any)=>null)).max$/;"	l
maxActive	src/main/scala/concurrent/TaskController.scala	/^  val maxActive = RegInit(0.U(24.W))$/;"	l
maxID	src/test/scala/concurrent/DetachTest.scala	/^  val maxID = 10$/;"	l
maxN	src/main/scala/regfile/InputRegFile.scala	/^    val maxN  = Input(UInt(xlen.W))$/;"	l
me	src/main/scala/config/cde/Parameters.scala	/^    val me = this$/;"	l
mem	src/main/scala/accel/NastiMemSlave.scala	/^  val mem = Mem(depth, UInt(nastiXDataBits.W))$/;"	l
mem	src/main/scala/accel/PerfectCacheModel.scala	/^  val mem = Mem(depth, UInt(nastiXDataBits.W))$/;"	l
mem	src/main/scala/stack/InterleavedStack.scala	/^    val mem = Module(new StackMem(size\/numRAMs))$/;"	l
mem	src/main/scala/stack/StackMem.scala	/^  val mem = Mem(size, UInt(xlen.W))$/;"	l
mem	src/test/scala/accel/CacheTests.scala	/^  val mem = Mem(1 << 20, UInt(nastiXDataBits.W))$/;"	l
mem	src/test/scala/accel/coredf/AccelTests01.scala	/^  val mem = Mem(1 << 20, UInt(nastiXDataBits.W))$/;"	l
mem	src/test/scala/accel/coredf/FilterDFTests.scala	/^  val mem = Mem(1 << 20, UInt(nastiXDataBits.W))$/;"	l
mem	src/test/scala/accel/coredf/VecFilterNoKernDFTests.scala	/^  val mem = Mem(1 << 20, UInt(nastiXDataBits.W))$/;"	l
memCopy	src/test/scala/generator/cilk/bgemm_test.scala	/^  val memCopy = Mem(1024, UInt(32.W))      \/\/ Local memory just to keep track of writes to cache for validation$/;"	l
memCopy	src/test/scala/generator/cilk/cilk_for_test04_test.scala	/^  val memCopy = Mem(1024, UInt(32.W))      \/\/ Local memory just to keep track of writes to cache for validation$/;"	l
memCopy	src/test/scala/generator/cilk/cilk_for_test06_test.scala	/^  val memCopy = Mem(1024, UInt(32.W)) \/\/ Local memory just to keep track of writes to cache for validation$/;"	l
memCopy	src/test/scala/generator/cilk/cilk_for_test07_test.scala	/^  val memCopy = Mem(1024, UInt(32.W))      \/\/ Local memory just to keep track of writes to cache for validation$/;"	l
memCopy	src/test/scala/generator/cilk/cilk_for_test08_test.scala	/^  val memCopy = Mem(1024, UInt(32.W))      \/\/ Local memory just to keep track of writes to cache for validation$/;"	l
memCopy	src/test/scala/generator/cilk/cilk_for_test09_test.scala	/^  val memCopy = Mem(1024, UInt(32.W))      \/\/ Local memory just to keep track of writes to cache for validation$/;"	l
memCopy	src/test/scala/generator/cilk/cilk_for_test12_test.scala	/^  val memCopy = Mem(1024, UInt(32.W))      \/\/ Local memory just to keep track of writes to cache for validation$/;"	l
memCopy	src/test/scala/generator/cilk/mergesort_test.scala	/^  val memCopy = Mem(1024, UInt(32.W))      \/\/ Local memory just to keep track of writes to cache for validation$/;"	l
memCopy	src/test/scala/generator/cilk/stencil_test.scala	/^  val memCopy = Mem(1024, UInt(32.W)) \/\/ Local memory just to keep track of writes to cache for validation$/;"	l
memCopy	src/test/scala/generator/test05_test.scala	/^  val memCopy = Mem(1024, UInt(32.W))      \/\/ Local memory just to keep track of writes to cache for validation$/;"	l
memCopy	src/test/scala/generator/test15_test.scala	/^  val memCopy = Mem(1024, UInt(32.W))      \/\/ Local memory just to keep track of writes to cache for validation$/;"	l
memModel	src/test/scala/dataflow/UnTypMemDataflow.scala	/^  val memModel = Module(new NastiMemSlave)$/;"	l
memModel	src/test/scala/generator/cilk/bgemm_test.scala	/^  val memModel = Module(new NastiMemSlave) \/\/ Model of DRAM to connect to Cache$/;"	l
memModel	src/test/scala/generator/cilk/cilk_for_test01_test.scala	/^  val memModel = Module(new NastiMemSlave)$/;"	l
memModel	src/test/scala/generator/cilk/cilk_for_test02_test.scala	/^  val memModel = Module(new NastiMemSlave)$/;"	l
memModel	src/test/scala/generator/cilk/cilk_for_test04_test.scala	/^  val memModel = Module(new NastiMemSlave) \/\/ Model of DRAM to connect to Cache$/;"	l
memModel	src/test/scala/generator/cilk/cilk_for_test05_test.scala	/^  val memModel = Module(new NastiMemSlave)$/;"	l
memModel	src/test/scala/generator/cilk/cilk_for_test06_test.scala	/^  val memModel = Module(new NastiMemSlave) \/\/ Model of DRAM to connect to Cache$/;"	l
memModel	src/test/scala/generator/cilk/cilk_for_test07_test.scala	/^  val memModel = Module(new NastiMemSlave) \/\/ Model of DRAM to connect to Cache$/;"	l
memModel	src/test/scala/generator/cilk/cilk_for_test08_test.scala	/^  val memModel = Module(new NastiMemSlave) \/\/ Model of DRAM to connect to Cache$/;"	l
memModel	src/test/scala/generator/cilk/cilk_for_test09_test.scala	/^  val memModel = Module(new NastiMemSlave) \/\/ Model of DRAM to connect to Cache$/;"	l
memModel	src/test/scala/generator/cilk/cilk_for_test12_test.scala	/^  val memModel = Module(new NastiMemSlave) \/\/ Model of DRAM to connect to Cache$/;"	l
memModel	src/test/scala/generator/cilk/cilk_spawn_test01_test.scala	/^  val memModel = Module(new NastiMemSlave)$/;"	l
memModel	src/test/scala/generator/cilk/cilk_spawn_test02_test.scala	/^  val memModel = Module(new NastiMemSlave)$/;"	l
memModel	src/test/scala/generator/cilk/mergesort_test.scala	/^  val memModel = Module(new NastiMemSlave) \/\/ Model of DRAM to connect to Cache$/;"	l
memModel	src/test/scala/generator/cilk/stencil_test.scala	/^  val memModel = Module(new NastiMemSlave) \/\/ Model of DRAM to connect to Cache$/;"	l
memModel	src/test/scala/generator/test01_test.scala	/^  val memModel = Module(new NastiMemSlave)$/;"	l
memModel	src/test/scala/generator/test02_test.scala	/^  val memModel = Module(new NastiMemSlave)$/;"	l
memModel	src/test/scala/generator/test03_test.scala	/^  val memModel = Module(new NastiMemSlave)$/;"	l
memModel	src/test/scala/generator/test04_test.scala	/^  val memModel = Module(new NastiMemSlave)$/;"	l
memModel	src/test/scala/generator/test05_test.scala	/^  val memModel = Module(new NastiMemSlave) \/\/ Model of DRAM to connect to Cache$/;"	l
memModel	src/test/scala/generator/test06_test.scala	/^  val memModel = Module(new NastiMemSlave)$/;"	l
memModel	src/test/scala/generator/test08_test.scala	/^  val memModel = Module(new NastiMemSlave)$/;"	l
memModel	src/test/scala/generator/test09_test.scala	/^  val memModel = Module(new NastiMemSlave)$/;"	l
memModel	src/test/scala/generator/test10_test.scala	/^  val memModel = Module(new NastiMemSlave)$/;"	l
memModel	src/test/scala/generator/test11_test.scala	/^  val memModel = Module(new NastiMemSlave)$/;"	l
memModel	src/test/scala/generator/test12_test.scala	/^  val memModel = Module(new NastiMemSlave)$/;"	l
memModel	src/test/scala/generator/test14_test.scala	/^  val memModel = Module(new NastiMemSlave)$/;"	l
memModel	src/test/scala/generator/test15_test.scala	/^  val memModel = Module(new NastiMemSlave) \/\/ Model of DRAM to connect to Cache$/;"	l
memReq	src/main/scala/node/LoadSimple.scala	/^  val memReq = Decoupled(new ReadReq())$/;"	l
memReq	src/main/scala/node/StoreNode.scala	/^  val memReq = Decoupled(new WriteReq())$/;"	l
memReq	src/main/scala/node/StoreSimple.scala	/^  val memReq = Decoupled(new WriteReq())$/;"	l
memReq	src/main/scala/node/TypLoad.scala	/^  val memReq = Decoupled(new ReadReq())$/;"	l
memReq	src/main/scala/node/TypStore.scala	/^  val memReq = Decoupled(new WriteReq())$/;"	l
memReq_R	src/main/scala/memory/UnifiedController.scala	/^  val memReq_R = RegInit(MemReq.default)$/;"	l
memResp	src/main/scala/node/LoadSimple.scala	/^  val memResp = Input(Flipped(new ReadResp()))$/;"	l
memResp	src/main/scala/node/StoreNode.scala	/^  val memResp = Input(Flipped(new WriteResp()))$/;"	l
memResp	src/main/scala/node/StoreSimple.scala	/^  val memResp = Input(Flipped(new WriteResp()))$/;"	l
memResp	src/main/scala/node/TypLoad.scala	/^  val memResp = Input(Flipped(new ReadResp()))$/;"	l
memResp	src/main/scala/node/TypStore.scala	/^  val memResp = Input(Flipped(new WriteResp()))$/;"	l
memResp_R	src/main/scala/memory/UnifiedController.scala	/^  val memResp_R = RegInit(MemResp.default)$/;"	l
memState	src/main/scala/accel/NastiMemSlave.scala	/^  val memState = RegInit(sMemIdle)$/;"	l
memState	src/test/scala/accel/CacheTests.scala	/^  val memState = RegInit(sMemIdle)$/;"	l
memState	src/test/scala/accel/coredf/AccelTests01.scala	/^  val memState = RegInit(sMemIdle)$/;"	l
memState	src/test/scala/accel/coredf/FilterDFTests.scala	/^  val memState = RegInit(sMemIdle)$/;"	l
memState	src/test/scala/accel/coredf/VecFilterNoKernDFTests.scala	/^  val memState = RegInit(sMemIdle)$/;"	l
mem_req_fire	src/main/scala/node/LoadSimple.scala	/^  val mem_req_fire = addr_valid_R && IsPredValid()$/;"	l
mem_req_fire	src/main/scala/node/StoreNode.scala	/^  val mem_req_fire = addr_valid_R & data_valid_R$/;"	l
mem_req_fire	src/main/scala/node/StoreSimple.scala	/^  val mem_req_fire = addr_valid_R && data_valid_R && IsPredValid()$/;"	l
mem_req_fire	src/main/scala/node/TypLoad.scala	/^  val mem_req_fire = addr_valid_R && IsPredValid()$/;"	l
mem_req_fire	src/main/scala/node/TypStore.scala	/^  val mem_req_fire = addr_valid_R && data_valid_R  && IsPredValid()$/;"	l
memory	src/main/scala/memory/MemArbiter.scala	/^package memory$/;"	p
memory	src/main/scala/memory/ReadMemoryController.scala	/^package memory$/;"	p
memory	src/main/scala/memory/ReadTypMemoryController.scala	/^package memory$/;"	p
memory	src/main/scala/memory/ReadWriteArbiter.scala	/^package memory$/;"	p
memory	src/main/scala/memory/UnifiedController.scala	/^package memory$/;"	p
memory	src/main/scala/memory/UnifiedTypController.scala	/^package memory$/;"	p
memory	src/main/scala/memory/WriteMemoryController.scala	/^package memory$/;"	p
memory	src/main/scala/memory/WriteTypMemoryController.scala	/^package memory$/;"	p
memory	src/test/scala/memory/MSHR.scala	/^package memory$/;"	p
memory	src/test/scala/memory/MemoryController.scala	/^package memory$/;"	p
memory	src/test/scala/memory/MemoryController2.scala	/^package memory$/;"	p
memory	src/test/scala/memory/ReadMemoryController.scala	/^package memory$/;"	p
memory	src/test/scala/memory/ReadTypTableEntry.scala	/^package memory$/;"	p
memory	src/test/scala/memory/ReadWriteArbiter01.scala	/^package memory$/;"	p
memory	src/test/scala/memory/UnifiedController.scala	/^package memory$/;"	p
memory	src/test/scala/memory/WriteMemoryController.scala	/^package memory$/;"	p
memory.deprecated	src/test/scala/memory/deprecated/ReadWriteArbiter.scala	/^package memory.deprecated$/;"	p
mems	src/main/scala/stack/InterleavedStack.scala	/^  val mems = for (i <- 0 until numRAMs) yield {$/;"	l
merge	src/test/scala/generator/cilk/mergesort_test.scala	/^    def merge(left: List[Int], right: List[Int]): List[Int] =$/;"	m
mergeSort	src/test/scala/generator/cilk/mergesort_test.scala	/^    def mergeSort(list: List[Int]): List[Int] = {$/;"	m
mergesort	src/test/scala/generator/cilk/mergesort_test.scala	/^  val mergesort = for (i <- 0 until NumMergesorts) yield {$/;"	l
mergesortDF	src/main/scala/generator/cilk/mergesort.scala	/^class mergesortDF(implicit p: Parameters) extends mergesortDFIO()(p) {$/;"	c
mergesortDFIO	src/main/scala/generator/cilk/mergesort.scala	/^abstract class mergesortDFIO(implicit val p: Parameters) extends Module with CoreParams {$/;"	c
mergesortMain	src/main/scala/generator/cilk/mergesort.scala	/^object mergesortMain extends App {$/;"	c
mergesortMain	src/test/scala/generator/cilk/mergesort_test.scala	/^class mergesortMain(tiles : Int)(implicit p: Parameters) extends mergesortMainIO {$/;"	c
mergesortMainIO	src/test/scala/generator/cilk/mergesort_test.scala	/^class mergesortMainIO(implicit val p: Parameters)  extends Module with CoreParams with CacheParams {$/;"	c
mergesortTest01	src/test/scala/generator/cilk/mergesort_test.scala	/^class mergesortTest01[T <: mergesortMainIO](c: T, len : Int) extends PeekPokeTester(c) {$/;"	c
mergesortTester1	src/test/scala/generator/cilk/mergesort_test.scala	/^class mergesortTester1 extends FlatSpec with Matchers {$/;"	c
mergesort_merge	src/test/scala/generator/cilk/mergesort_test.scala	/^  val mergesort_merge = for (i <- 0 until NumMergesorts) yield {$/;"	l
mergesort_mergeDF	src/main/scala/generator/cilk/mergesort_merge.scala	/^class mergesort_mergeDF(implicit p: Parameters) extends mergesort_mergeDFIO()(p) {$/;"	c
mergesort_mergeDFIO	src/main/scala/generator/cilk/mergesort_merge.scala	/^abstract class mergesort_mergeDFIO(implicit val p: Parameters) extends Module with CoreParams {$/;"	c
mergesort_mergeMain	src/main/scala/generator/cilk/mergesort_merge.scala	/^object mergesort_mergeMain extends App {$/;"	c
mergesortby	src/test/scala/generator/cilk/mergesort_test.scala	/^    val mergesortby = Module(new mergesortDF())$/;"	l
mergesortby_continue	src/test/scala/generator/cilk/mergesort_test.scala	/^    val mergesortby_continue = Module(new mergesort_mergeDF())$/;"	l
metaMem	src/main/scala/accel/Cache.scala	/^  val metaMem  = Mem(nSets, new MetaData)$/;"	l
min	src/main/scala/config/cde/Expression.scala	/^      val min = x.map(i => Ex.eval(i.expr,(x:Any)=>null)).min$/;"	l
module_name	src/main/scala/FPU/FPCompare.scala	/^  val module_name = file.value.split("\/").tail.last.split("\\\\.").head.capitalize$/;"	l
module_name	src/main/scala/FPU/FPComputeNode.scala	/^  val module_name = file.value.split("\/").tail.last.split("\\\\.").head.capitalize$/;"	l
module_name	src/main/scala/FPU/FPUDiv.scala	/^  val module_name = file.value.split("\/").tail.last.split("\\\\.").head.capitalize$/;"	l
module_name	src/main/scala/FPU/ResizeFN.scala	/^  val module_name = file.value.split("\/").tail.last.split("\\\\.").head.capitalize$/;"	l
module_name	src/main/scala/concurrent/Detach.scala	/^  val module_name = file.value.split("\/").tail.last.split("\\\\.").head.capitalize$/;"	l
module_name	src/main/scala/concurrent/Reattach.scala	/^  val module_name = file.value.split("\/").tail.last.split("\\\\.").head.capitalize$/;"	l
module_name	src/main/scala/concurrent/Sync.scala	/^  val module_name = file.value.split("\/").tail.last.split("\\\\.").head.capitalize$/;"	l
module_name	src/main/scala/control/BasicBlock.scala	/^  val module_name = file.value.split("\/").tail.last.split("\\\\.").head.capitalize$/;"	l
module_name	src/main/scala/loop/LiveInNode.scala	/^  val module_name = file.value.split("\/").tail.last.split("\\\\.").head.capitalize$/;"	l
module_name	src/main/scala/loop/LiveOutNode.scala	/^  val module_name = file.value.split("\/").tail.last.split("\\\\.").head.capitalize$/;"	l
module_name	src/main/scala/loop/LoopBlock.scala	/^  val module_name = file.value.split("\/").tail.last.split("\\\\.").head.capitalize$/;"	l
module_name	src/main/scala/node/Alloca.scala	/^  val module_name = file.value.split("\/").tail.last.split("\\\\.").head.capitalize$/;"	l
module_name	src/main/scala/node/BranchNode.scala	/^  val module_name = file.value.split("\/").tail.last.split("\\\\.").head.capitalize$/;"	l
module_name	src/main/scala/node/CallInNode.scala	/^  val module_name = file.value.split("\/").tail.last.split("\\\\.").head.capitalize$/;"	l
module_name	src/main/scala/node/CallNode.scala	/^  val module_name = file.value.split("\/").tail.last.split("\\\\.").head.capitalize$/;"	l
module_name	src/main/scala/node/CallOutNode.scala	/^  val module_name = file.value.split("\/").tail.last.split("\\\\.").head.capitalize$/;"	l
module_name	src/main/scala/node/ComputeNode.scala	/^  val module_name = file.value.split("\/").tail.last.split("\\\\.").head.capitalize$/;"	l
module_name	src/main/scala/node/ConstNode.scala	/^  val module_name = file.value.split("\/").tail.last.split("\\\\.").head.capitalize$/;"	l
module_name	src/main/scala/node/GepNode.scala	/^  val module_name = file.value.split("\/").tail.last.split("\\\\.").head.capitalize$/;"	l
module_name	src/main/scala/node/IcmpNode.scala	/^  val module_name = file.value.split("\/").tail.last.split("\\\\.").head.capitalize$/;"	l
module_name	src/main/scala/node/LoadSimple.scala	/^  val module_name = file.value.split("\/").tail.last.split("\\\\.").head.capitalize$/;"	l
module_name	src/main/scala/node/PhiNode.scala	/^  val module_name = file.value.split("\/").tail.last.split("\\\\.").head.capitalize$/;"	l
module_name	src/main/scala/node/RetNode.scala	/^  val module_name = file.value.split("\/").tail.last.split("\\\\.").head.capitalize$/;"	l
module_name	src/main/scala/node/StoreSimple.scala	/^  val module_name = file.value.split("\/").tail.last.split("\\\\.").head.capitalize$/;"	l
module_name	src/main/scala/node/TypLoad.scala	/^  val module_name = file.value.split("\/").tail.last.split("\\\\.").head.capitalize$/;"	l
module_name	src/main/scala/node/TypStore.scala	/^  val module_name = file.value.split("\/").tail.last.split("\\\\.").head.capitalize$/;"	l
mshrlen	src/main/scala/config/config.scala	/^  val mshrlen = p(MSHRLEN)$/;"	l
mul	src/main/scala/dataflow/filter/BasicFilter.scala	/^    val mul = Module(new ComputeNode(NumOuts = 1, ID = 0, opCode = "mul")(sign = false))$/;"	l
mul	src/main/scala/dataflow/filter/VecFilter.scala	/^    val mul = Module(new TypCompute(NumOuts = 1, ID = 0, opCode = "Mul")(sign=false)(new vec3))$/;"	l
mul0	src/main/scala/generator/cilk/bgemm_detach1.scala	/^  val mul0 = Module (new ComputeNode(NumOuts = 1, ID = 0, opCode = "mul")(sign=false))$/;"	l
mul0	src/main/scala/generator/cilk/bgemm_detach2.scala	/^  val mul0 = Module (new ComputeNode(NumOuts = 1, ID = 0, opCode = "mul")(sign=false))$/;"	l
mul0	src/main/scala/generator/test01.scala	/^  val mul0 = Module(new ComputeNode(NumOuts = 1, ID = 0, opCode = "mul")(sign = false))$/;"	l
mul0_in	src/main/scala/generator/cilk/bgemm_detach1.scala	/^  val mul0_in = Map($/;"	l
mul0_in	src/main/scala/generator/cilk/bgemm_detach2.scala	/^  val mul0_in = Map($/;"	l
mul0_in	src/main/scala/generator/test01.scala	/^  val mul0_in = Map($/;"	l
mul10	src/main/scala/generator/cilk/stencil_detach1.scala	/^  val mul10 = Module(new ComputeNode(NumOuts = 1, ID = 10, opCode = "mul")(sign = false))$/;"	l
mul10_in	src/main/scala/generator/cilk/stencil_detach1.scala	/^  val mul10_in = Map($/;"	l
mul11	src/main/scala/generator/cilk/cilk_for_test07_detach.scala	/^  val mul11 = Module (new ComputeNode(NumOuts = 1, ID = 11, opCode = "mul")(sign=false))$/;"	l
mul11_in	src/main/scala/generator/cilk/cilk_for_test07_detach.scala	/^  val mul11_in = Map($/;"	l
mul12	src/main/scala/generator/cilk/stencil_inner.scala	/^  val mul12 = Module(new ComputeNode(NumOuts = 1, ID = 12, opCode = "mul")(sign = false))$/;"	l
mul12_in	src/main/scala/generator/cilk/stencil_inner.scala	/^  val mul12_in = Map($/;"	l
mul14	src/main/scala/generator/cilk/cilk_for_test08_detach.scala	/^  val mul14 = Module (new ComputeNode(NumOuts = 1, ID = 14, opCode = "mul")(sign=false))$/;"	l
mul14_in	src/main/scala/generator/cilk/cilk_for_test08_detach.scala	/^  val mul14_in = Map($/;"	l
mul15	src/main/scala/generator/cilk/cilk_for_test08_detach.scala	/^  val mul15 = Module (new ComputeNode(NumOuts = 1, ID = 15, opCode = "mul")(sign=false))$/;"	l
mul15	src/main/scala/generator/test15.scala	/^  val mul15 = Module (new ComputeNode(NumOuts = 1, ID = 15, opCode = "mul")(sign=false))$/;"	l
mul15_in	src/main/scala/generator/cilk/cilk_for_test08_detach.scala	/^  val mul15_in = Map($/;"	l
mul15_in	src/main/scala/generator/test15.scala	/^  val mul15_in = Map($/;"	l
mul16	src/main/scala/generator/cilk/stencil_detach1.scala	/^  val mul16 = Module(new ComputeNode(NumOuts = 1, ID = 16, opCode = "mul")(sign = false))$/;"	l
mul16	src/main/scala/generator/cilk/stencil_inner.scala	/^  val mul16 = Module(new ComputeNode(NumOuts = 1, ID = 16, opCode = "mul")(sign = false))$/;"	l
mul16_in	src/main/scala/generator/cilk/stencil_detach1.scala	/^  val mul16_in = Map($/;"	l
mul16_in	src/main/scala/generator/cilk/stencil_inner.scala	/^  val mul16_in = Map($/;"	l
mul17	src/main/scala/generator/cilk/cilk_for_test08_detach.scala	/^  val mul17 = Module (new ComputeNode(NumOuts = 1, ID = 17, opCode = "mul")(sign=false))$/;"	l
mul17_in	src/main/scala/generator/cilk/cilk_for_test08_detach.scala	/^  val mul17_in = Map($/;"	l
mul2	src/main/scala/generator/cilk/cilk_for_test02_mul.scala	/^  val mul2 = Module (new ComputeNode(NumOuts = 1, ID = 2, opCode = "mul")(sign=false))$/;"	l
mul2	src/main/scala/generator/cilk/cilk_for_test12_detach3.scala	/^  val mul2 = Module (new ComputeNode(NumOuts = 1, ID = 2, opCode = "mul")(sign=false))$/;"	l
mul21	src/main/scala/generator/cilk/bgemm_detach3.scala	/^  val mul21 = Module (new ComputeNode(NumOuts = 1, ID = 21, opCode = "mul")(sign=false))$/;"	l
mul21_in	src/main/scala/generator/cilk/bgemm_detach3.scala	/^  val mul21_in = Map($/;"	l
mul22	src/main/scala/generator/cilk/cilk_for_test08_detach.scala	/^  val mul22 = Module (new ComputeNode(NumOuts = 1, ID = 22, opCode = "mul")(sign=false))$/;"	l
mul22_in	src/main/scala/generator/cilk/cilk_for_test08_detach.scala	/^  val mul22_in = Map($/;"	l
mul23	src/main/scala/generator/cilk/cilk_for_test08_detach.scala	/^  val mul23 = Module (new ComputeNode(NumOuts = 1, ID = 23, opCode = "mul")(sign=false))$/;"	l
mul23_in	src/main/scala/generator/cilk/cilk_for_test08_detach.scala	/^  val mul23_in = Map($/;"	l
mul25	src/main/scala/generator/cilk/cilk_for_test08_detach.scala	/^  val mul25 = Module (new ComputeNode(NumOuts = 1, ID = 25, opCode = "mul")(sign=false))$/;"	l
mul25_in	src/main/scala/generator/cilk/cilk_for_test08_detach.scala	/^  val mul25_in = Map($/;"	l
mul2_in	src/main/scala/generator/cilk/cilk_for_test02_mul.scala	/^  val mul2_in = Map($/;"	l
mul2_in	src/main/scala/generator/cilk/cilk_for_test12_detach3.scala	/^  val mul2_in = Map($/;"	l
mul5	src/main/scala/generator/cilk/bgemm_detach3.scala	/^  val mul5 = Module (new ComputeNode(NumOuts = 2, ID = 5, opCode = "mul")(sign=false))$/;"	l
mul5_in	src/main/scala/generator/cilk/bgemm_detach3.scala	/^  val mul5_in = Map($/;"	l
mul6	src/main/scala/generator/cilk/cilk_for_test08_detach.scala	/^  val mul6 = Module (new ComputeNode(NumOuts = 1, ID = 6, opCode = "mul")(sign=false))$/;"	l
mul6	src/main/scala/generator/test03.scala	/^  val mul6 = Module(new ComputeNode(NumOuts = 1, ID = 6, opCode = "mul")(sign = false))$/;"	l
mul6	src/main/scala/generator/test05.scala	/^  val mul6 = Module (new ComputeNode(NumOuts = 1, ID = 6, opCode = "mul")(sign=false))$/;"	l
mul6_in	src/main/scala/generator/cilk/cilk_for_test08_detach.scala	/^  val mul6_in = Map($/;"	l
mul6_in	src/main/scala/generator/test03.scala	/^  val mul6_in = Map($/;"	l
mul6_in	src/main/scala/generator/test05.scala	/^  val mul6_in = Map($/;"	l
mul7	src/main/scala/generator/cilk/bgemm_detach3.scala	/^  val mul7 = Module (new ComputeNode(NumOuts = 1, ID = 7, opCode = "mul")(sign=false))$/;"	l
mul7	src/main/scala/generator/cilk/cilk_for_test01.scala	/^  val mul7 = Module (new ComputeNode(NumOuts = 1, ID = 7, opCode = "mul")(sign=false))$/;"	l
mul7	src/main/scala/generator/cilk/cilk_for_test08_detach.scala	/^  val mul7 = Module (new ComputeNode(NumOuts = 1, ID = 7, opCode = "mul")(sign=false))$/;"	l
mul7_in	src/main/scala/generator/cilk/bgemm_detach3.scala	/^  val mul7_in = Map($/;"	l
mul7_in	src/main/scala/generator/cilk/cilk_for_test01.scala	/^  val mul7_in = Map($/;"	l
mul7_in	src/main/scala/generator/cilk/cilk_for_test08_detach.scala	/^  val mul7_in = Map($/;"	l
mul9	src/main/scala/generator/cilk/cilk_for_test07_detach.scala	/^  val mul9 = Module (new ComputeNode(NumOuts = 1, ID = 9, opCode = "mul")(sign=false))$/;"	l
mul9	src/main/scala/generator/cilk/cilk_for_test08_detach.scala	/^  val mul9 = Module (new ComputeNode(NumOuts = 1, ID = 9, opCode = "mul")(sign=false))$/;"	l
mul9_in	src/main/scala/generator/cilk/cilk_for_test07_detach.scala	/^  val mul9_in = Map($/;"	l
mul9_in	src/main/scala/generator/cilk/cilk_for_test08_detach.scala	/^  val mul9_in = Map($/;"	l
mulAddRecFN	src/main/scala/FPU/FPALU.scala	/^  val mulAddRecFN = Module(new MulAddRecFN(t.expWidth, t.sigWidth))$/;"	l
multiplication	src/main/scala/node/TypCompute.scala	/^      def multiplication(l: mat2x2, r: mat2x2)(implicit p: Parameters): mat2x2 = {$/;"	m
multiplication	src/main/scala/node/TypCompute.scala	/^      def multiplication(l: vec2, r: vec2)(implicit p: Parameters): vec2 = {$/;"	m
multiplication	src/main/scala/node/TypCompute.scala	/^      def multiplication(l: vec3, r: vec3)(implicit p: Parameters): vec3 = {$/;"	m
multiplication	src/main/scala/node/TypCompute.scala	/^    def multiplication(l: T, r: T)(implicit p: Parameters): T$/;"	m
multiplication	src/main/scala/node/TypCompute.scala	/^    def multiplication[T](l: T, r: T)(implicit op: OperatorLike[T], p: Parameters): T = op.multiplication(l, r)$/;"	m
mux	src/main/scala/stack/InterleavedStack.scala	/^    val mux = Module(new Arbiter(new MemResp,numRAMs))$/;"	l
mux	src/main/scala/switches/DyserSwitch.scala	/^  val mux   = Module(new Mux(new DataBundle(),NInputs))$/;"	l
muxes	src/main/scala/muxes/Muxes.scala	/^package muxes$/;"	p
muxes	src/main/scala/muxes/TestMux.scala	/^package muxes$/;"	p
muxes	src/test/scala/muxes/TestMux.scala	/^package muxes$/;"	p
myID	src/main/scala/memory/WriteMemoryController.scala	/^  val myID = RegNext(ID, 0.U)$/;"	l
myargs	src/test/scala/dataflow/fuse/computeFuse01.scala	/^  val myargs = Array("--backend-name", "verilator", "--target-dir", "test_run_dir")$/;"	l
n	src/test/scala/generator/cilk/mergesort_test.scala	/^      val n = list.length \/ 2$/;"	l
nSets	src/main/scala/accel/Cache.scala	/^  val nSets  = p(NSets)$/;"	l
nWays	src/main/scala/accel/Cache.scala	/^  val nWays  = p(NWays) \/\/ Not used...$/;"	l
nWords	src/main/scala/accel/Cache.scala	/^  val nWords = bBits \/ xlen$/;"	l
n_list	src/test/scala/generator/cilk/fib_test.scala	/^  val n_list = List(13)$/;"	l
nasti	src/main/scala/accel/Cache.scala	/^  val nasti = new NastiIO$/;"	l
nasti	src/main/scala/accel/DataBundleReg.scala	/^      val nasti = Flipped(new NastiIO())$/;"	l
nasti	src/main/scala/accel/NastiMaster.scala	/^      val nasti = new NastiIO()$/;"	l
nasti	src/main/scala/accel/NastiMemSlave.scala	/^  val nasti = Flipped(new NastiIO)$/;"	l
nasti	src/main/scala/accel/SimpleReg.scala	/^      val nasti = Flipped(new NastiIO())$/;"	l
nasti	src/test/scala/accel/CacheTests.scala	/^    val nasti = new NastiIO$/;"	l
nastiARUserBits	src/main/scala/junctions/nasti.scala	/^  val nastiARUserBits = nastiXUserBits$/;"	l
nastiAWUserBits	src/main/scala/junctions/nasti.scala	/^  val nastiAWUserBits = nastiXUserBits$/;"	l
nastiBUserBits	src/main/scala/junctions/nasti.scala	/^  val nastiBUserBits = nastiXUserBits$/;"	l
nastiExternal	src/main/scala/junctions/nasti.scala	/^  val nastiExternal = p(NastiKey)$/;"	l
nastiRIdBits	src/main/scala/junctions/nasti.scala	/^  val nastiRIdBits = nastiExternal.idBits$/;"	l
nastiRUserBits	src/main/scala/junctions/nasti.scala	/^  val nastiRUserBits = nastiXUserBits$/;"	l
nastiWIdBits	src/main/scala/junctions/nasti.scala	/^  val nastiWIdBits = nastiExternal.idBits$/;"	l
nastiWStrobeBits	src/main/scala/junctions/nasti.scala	/^  val nastiWStrobeBits = nastiXDataBits \/ 8$/;"	l
nastiWUserBits	src/main/scala/junctions/nasti.scala	/^  val nastiWUserBits = nastiXUserBits$/;"	l
nastiXAddrBits	src/main/scala/junctions/nasti.scala	/^  val nastiXAddrBits = nastiExternal.addrBits$/;"	l
nastiXBurstBits	src/main/scala/junctions/nasti.scala	/^  val nastiXBurstBits = 2$/;"	l
nastiXCacheBits	src/main/scala/junctions/nasti.scala	/^  val nastiXCacheBits = 4$/;"	l
nastiXDataBits	src/main/scala/junctions/nasti.scala	/^  val nastiXDataBits = nastiExternal.dataBits$/;"	l
nastiXIdBits	src/main/scala/junctions/nasti.scala	/^  val nastiXIdBits = max(nastiWIdBits, nastiRIdBits)$/;"	l
nastiXLenBits	src/main/scala/junctions/nasti.scala	/^  val nastiXLenBits = 8$/;"	l
nastiXProtBits	src/main/scala/junctions/nasti.scala	/^  val nastiXProtBits = 3$/;"	l
nastiXQosBits	src/main/scala/junctions/nasti.scala	/^  val nastiXQosBits = 4$/;"	l
nastiXRegionBits	src/main/scala/junctions/nasti.scala	/^  val nastiXRegionBits = 4$/;"	l
nastiXRespBits	src/main/scala/junctions/nasti.scala	/^  val nastiXRespBits = 2$/;"	l
nastiXSizeBits	src/main/scala/junctions/nasti.scala	/^  val nastiXSizeBits = 3$/;"	l
nastiXUserBits	src/main/scala/junctions/nasti.scala	/^  val nastiXUserBits = 5$/;"	l
newOutput	scripts/extract_activity.py	/^        newOutput = ''  # error handling$/;"	v
nextOption	src/test/scala/verilogmain/TypStackSweeper.scala	/^    def nextOption(map: OptionMap, list: List[String]): OptionMap = {$/;"	m
nextOption	src/test/scala/verilogmain/TypeStackSweeper16b.scala	/^    def nextOption(map: OptionMap, list: List[String]): OptionMap = {$/;"	m
node	src/main/scala/loop/LiveInNode.scala	/^package node$/;"	p
node	src/main/scala/loop/LiveOutNode.scala	/^package node$/;"	p
node	src/main/scala/node/Alloca.scala	/^package node$/;"	p
node	src/main/scala/node/Alu.scala	/^package node$/;"	p
node	src/main/scala/node/BitCastNode.scala	/^package node$/;"	p
node	src/main/scala/node/BranchNode.scala	/^package node$/;"	p
node	src/main/scala/node/CallInNode.scala	/^package node$/;"	p
node	src/main/scala/node/CallNode.scala	/^package node$/;"	p
node	src/main/scala/node/CallOutNode.scala	/^package node$/;"	p
node	src/main/scala/node/Comparision.scala	/^package node$/;"	p
node	src/main/scala/node/ComputeNode.scala	/^package node$/;"	p
node	src/main/scala/node/ConstNode.scala	/^package node$/;"	p
node	src/main/scala/node/CustomFunctionalUnit.scala	/^package node$/;"	p
node	src/main/scala/node/Expand.scala	/^package node$/;"	p
node	src/main/scala/node/FusedComputeNode.scala	/^package node$/;"	p
node	src/main/scala/node/GepNode.scala	/^package node$/;"	p
node	src/main/scala/node/HandShaking.scala	/^package node$/;"	p
node	src/main/scala/node/IcmpNode.scala	/^package node$/;"	p
node	src/main/scala/node/JumpNode.scala	/^package node$/;"	p
node	src/main/scala/node/LoadMaskNode.scala	/^  package node$/;"	p
node	src/main/scala/node/LoadSimple.scala	/^package node$/;"	p
node	src/main/scala/node/PhiNode.scala	/^package node$/;"	p
node	src/main/scala/node/Relay.scala	/^package node$/;"	p
node	src/main/scala/node/RetNode.scala	/^package node$/;"	p
node	src/main/scala/node/SelectNode.scala	/^package node$/;"	p
node	src/main/scala/node/SextNode.scala	/^package node$/;"	p
node	src/main/scala/node/StoreNode.scala	/^package node$/;"	p
node	src/main/scala/node/StoreSimple.scala	/^package node$/;"	p
node	src/main/scala/node/TypCompute.scala	/^package node$/;"	p
node	src/main/scala/node/TypLoad.scala	/^package node$/;"	p
node	src/main/scala/node/TypStore.scala	/^package node$/;"	p
node	src/main/scala/node/ZextNode.scala	/^package node$/;"	p
node	src/main/scala/node/helpers.scala	/^package node$/;"	p
node	src/test/scala/loop/LiveIn.scala	/^package node$/;"	p
node	src/test/scala/loop/LiveOut.scala	/^package node$/;"	p
node	src/test/scala/node/FusedComputeNode.scala	/^package node$/;"	p
node	src/test/scala/node/GepNode.scala	/^package node$/;"	p
node	src/test/scala/node/LoadSimple.scala	/^package node$/;"	p
node	src/test/scala/node/PhiNode.scala	/^package node$/;"	p
node	src/test/scala/node/StoreSimple.scala	/^package node$/;"	p
node	src/test/scala/node/TypCompute.scala	/^package node$/;"	p
node	src/test/scala/node/TypLoad.scala	/^package node$/;"	p
node	src/test/scala/node/TypStore.scala	/^package node$/;"	p
node	src/test/scala/node/allocaNode.scala	/^package node$/;"	p
node	src/test/scala/node/branchNode.scala	/^package node$/;"	p
node	src/test/scala/node/cmpNode.scala	/^package node$/;"	p
node	src/test/scala/node/computeNode.scala	/^package node$/;"	p
node	src/test/scala/node/controlNode.scala	/^package node$/;"	p
node	src/test/scala/node/relayNode.scala	/^package node$/;"	p
node	src/test/scala/node/sextNode.scala	/^package node$/;"	p
nodeID	src/main/scala/node/LoadMaskNode.scala	/^  val nodeID = RegInit(ID.U)$/;"	l
nodeID_R	src/main/scala/node/HandShaking.scala	/^  val nodeID_R = RegInit(BID.U)$/;"	l
nodeID_R	src/main/scala/node/HandShaking.scala	/^  val nodeID_R = RegInit(ID.U)$/;"	l
nodeID_R	src/main/scala/node/StoreNode.scala	/^  val nodeID_R = RegInit(ID.U)$/;"	l
node_name	src/main/scala/FPU/FPCompare.scala	/^  val node_name = name.value$/;"	l
node_name	src/main/scala/FPU/FPComputeNode.scala	/^  val node_name = name.value$/;"	l
node_name	src/main/scala/FPU/FPUDiv.scala	/^  val node_name = name.value$/;"	l
node_name	src/main/scala/FPU/ResizeFN.scala	/^  val node_name = name.value$/;"	l
node_name	src/main/scala/concurrent/Detach.scala	/^  val node_name = name.value$/;"	l
node_name	src/main/scala/concurrent/Reattach.scala	/^  val node_name = name.value$/;"	l
node_name	src/main/scala/concurrent/Sync.scala	/^  val node_name = name.value$/;"	l
node_name	src/main/scala/control/BasicBlock.scala	/^  val node_name = name.value$/;"	l
node_name	src/main/scala/loop/LiveInNode.scala	/^  val node_name = name.value$/;"	l
node_name	src/main/scala/loop/LiveOutNode.scala	/^  val node_name = name.value$/;"	l
node_name	src/main/scala/loop/LoopBlock.scala	/^  val node_name = name.value$/;"	l
node_name	src/main/scala/node/Alloca.scala	/^  val node_name = name.value$/;"	l
node_name	src/main/scala/node/BranchNode.scala	/^  val node_name = name.value$/;"	l
node_name	src/main/scala/node/CallInNode.scala	/^  val node_name = name.value$/;"	l
node_name	src/main/scala/node/CallNode.scala	/^  val node_name = name.value$/;"	l
node_name	src/main/scala/node/CallOutNode.scala	/^  val node_name = name.value$/;"	l
node_name	src/main/scala/node/ComputeNode.scala	/^  val node_name = name.value$/;"	l
node_name	src/main/scala/node/ConstNode.scala	/^  val node_name = name.value$/;"	l
node_name	src/main/scala/node/GepNode.scala	/^  val node_name = name.value$/;"	l
node_name	src/main/scala/node/IcmpNode.scala	/^  val node_name = name.value$/;"	l
node_name	src/main/scala/node/LoadSimple.scala	/^  val node_name = name.value$/;"	l
node_name	src/main/scala/node/PhiNode.scala	/^  val node_name = name.value$/;"	l
node_name	src/main/scala/node/RetNode.scala	/^  val node_name = name.value$/;"	l
node_name	src/main/scala/node/StoreSimple.scala	/^  val node_name = name.value$/;"	l
node_name	src/main/scala/node/TypLoad.scala	/^  val node_name = name.value$/;"	l
node_name	src/main/scala/node/TypStore.scala	/^  val node_name = name.value$/;"	l
nopCmd	src/test/scala/accel/AccelTests.scala	/^  val nopCmd :: rdCmd :: wrCmd :: pollCmd :: Nil = Enum(4) \/\/ OpCodes$/;"	l
nopCmd	src/test/scala/accel/coredf/AccelTests01.scala	/^  val nopCmd :: rdCmd :: wrCmd :: pollCmd :: Nil = Enum(4) \/\/ OpCodes$/;"	l
nopCmd	src/test/scala/accel/coredf/FilterDFTests.scala	/^  val nopCmd :: rdCmd :: wrCmd :: pollCmd :: Nil = Enum(4) \/\/ OpCodes$/;"	l
nopCmd	src/test/scala/accel/coredf/VecFilterNoKernDFTests.scala	/^  val nopCmd :: rdCmd :: wrCmd :: pollCmd :: Nil = Enum(4) \/\/ OpCodes$/;"	l
ntpath	scripts/TypeStackFile.py	/^import ntpath$/;"	i
numActive	src/main/scala/concurrent/TaskController.scala	/^  val numActive = RegInit(0.U(24.W))$/;"	l
numBits	src/main/scala/stack/InterleavedStack.scala	/^  val numBits = ramIdx(0)-ramIdx(1)+1$/;"	l
numByte	src/main/scala/interfaces/interfaces.scala	/^  val numByte = UInt(xlen.W)$/;"	l
numCfg	src/main/scala/accel/DataBundleReg.scala	/^  val numCfg = if (xlen == 32) 2 else 1;$/;"	l
numCfg	src/main/scala/accel/SimpleReg.scala	/^  val numCfg = if (xlen == 32) 2 else 1;$/;"	l
numChildren	src/test/scala/concurrent/DecoupledTaskTest.scala	/^  val numChildren = 4$/;"	l
numInputs	src/main/scala/switches/Dyser.scala	/^  val numInputs = Map($/;"	l
numOps	src/test/scala/dataflow/UnTypMemDataflow.scala	/^  val numOps = 4$/;"	l
numOut	src/main/scala/concurrent/TaskController.scala	/^  val numOut = RegInit(0.U(16.W))$/;"	l
numRAMs	src/main/scala/stack/InterleavedStack.scala	/^  val numRAMs = 1<<(numBits)$/;"	l
o	src/main/scala/node/TypCompute.scala	/^    val o = Output(Valid(gen))$/;"	l
objString	src/main/scala/config/cde/Parameters.scala	/^  private lazy val objString = {$/;"	l
ofClass	src/main/scala/config/cde/Parameters.scala	/^    def ofClass = "of class " + obj.getClass.getName$/;"	m
off	src/test/scala/accel/CacheTests.scala	/^  val off   = req.addr(blen - 1, 0)$/;"	l
off	src/test/scala/accel/CacheTests.scala	/^  val off  = (Vec(testVec)(testCnt))(blen - 1, 0)$/;"	l
off_reg	src/main/scala/accel/Cache.scala	/^  val off_reg  = addr_reg(blen-1, byteOffsetBits)$/;"	l
offs	src/test/scala/accel/CacheTests.scala	/^  val offs = Vector.fill(6)(rand_off)$/;"	l
op	src/main/scala/dataflow/MemDataFlow.scala	/^    val op  = Module(new ComputeNode(NumOuts = 1, ID = 0, opCode = "Add")(sign = false))$/;"	l
op0	src/test/scala/accel/AccelTests.scala	/^  val op0 = UInt()$/;"	l
op0	src/test/scala/accel/coredf/AccelTests01.scala	/^  val op0 = UInt()$/;"	l
op1	src/test/scala/accel/AccelTests.scala	/^  val op1 = UInt()$/;"	l
op1	src/test/scala/accel/coredf/AccelTests01.scala	/^  val op1 = UInt()$/;"	l
op2	src/test/scala/accel/AccelTests.scala	/^  val op2 = UInt()$/;"	l
op2	src/test/scala/accel/coredf/AccelTests01.scala	/^  val op2 = UInt()$/;"	l
op3	src/test/scala/accel/AccelTests.scala	/^  val op3 = UInt()$/;"	l
op3	src/test/scala/accel/coredf/AccelTests01.scala	/^  val op3 = UInt()$/;"	l
opCode	src/test/scala/accel/AccelTests.scala	/^  val opCode = UInt()$/;"	l
opCode	src/test/scala/accel/coredf/AccelTests01.scala	/^  val opCode = UInt()$/;"	l
opMap	src/main/scala/FPU/FPALU.scala	/^  val opMap = Map($/;"	l
opMap	src/main/scala/node/Alu.scala	/^  val opMap = Map($/;"	l
operation	src/main/scala/node/TypCompute.scala	/^object operation {$/;"	c
ops	src/test/scala/verilogmain/TypStackSweeper.scala	/^  val ops = optionkv('OpSize).asInstanceOf[Int]$/;"	l
ops	src/test/scala/verilogmain/TypeStackSweeper16b.scala	/^  val ops = optionkv('OpSize).asInstanceOf[Int]$/;"	l
optionkv	src/test/scala/verilogmain/TypStackSweeper.scala	/^  val optionkv = optionsparse(designargs, optionslist)$/;"	l
optionkv	src/test/scala/verilogmain/TypeStackSweeper16b.scala	/^  val optionkv = optionsparse(designargs, optionslist)$/;"	l
options	src/test/scala/verilogmain/TypStackSweeper.scala	/^    val options = nextOption(Map(), arglist)$/;"	l
options	src/test/scala/verilogmain/TypeStackSweeper16b.scala	/^    val options = nextOption(Map(), arglist)$/;"	l
optionslist	src/test/scala/verilogmain/TypStackSweeper.scala	/^  val optionslist = Array('OpSize, 'BaseSize, 'EntrySize, 'AF)$/;"	l
optionslist	src/test/scala/verilogmain/TypeStackSweeper16b.scala	/^  val optionslist = Array('OpSize, 'BaseSize, 'EntrySize, 'AF)$/;"	l
optionsparse	src/test/scala/verilogmain/TypStackSweeper.scala	/^  def optionsparse(designargs: Array[String], optionslist: Array[Symbol]): OptionMap = {$/;"	m
optionsparse	src/test/scala/verilogmain/TypeStackSweeper16b.scala	/^  def optionsparse(designargs: Array[String], optionslist: Array[Symbol]): OptionMap = {$/;"	m
orderedActivity	scripts/extract_activity.py	/^orderedActivity = collections.OrderedDict(sorted(activity.items(), key=lambda t: t[int(args.sort)], reverse=True))$/;"	v
os	scripts/TypeStackFile.py	/^import os, errno$/;"	i
out	src/main/scala/FPU/FPALU.scala	/^    val out = Output(UInt(xlen.W))$/;"	l
out	src/main/scala/arbiters/ArbiterTree.scala	/^    val out = Decoupled(Output(gen))$/;"	l
out	src/main/scala/generator/cilk/bgemm.scala	/^    val out = Decoupled(new Call(List(32)))$/;"	l
out	src/main/scala/generator/cilk/bgemm_detach1.scala	/^    val out = Decoupled(new Call(List(32)))$/;"	l
out	src/main/scala/generator/cilk/bgemm_detach2.scala	/^    val out = Decoupled(new Call(List(32)))$/;"	l
out	src/main/scala/generator/cilk/bgemm_detach3.scala	/^    val out = Decoupled(new Call(List(32)))$/;"	l
out	src/main/scala/generator/cilk/cilk_for_test01.scala	/^    val out = Decoupled(new Call(List(32)))$/;"	l
out	src/main/scala/generator/cilk/cilk_for_test02.scala	/^    val out = Decoupled(new Call(List(32)))$/;"	l
out	src/main/scala/generator/cilk/cilk_for_test02_mul.scala	/^    val out = Decoupled(new Call(List(32)))$/;"	l
out	src/main/scala/generator/cilk/cilk_for_test04.scala	/^    val out = Decoupled(new Call(List(32)))$/;"	l
out	src/main/scala/generator/cilk/cilk_for_test04_detach.scala	/^    val out = Decoupled(new Call(List(32)))$/;"	l
out	src/main/scala/generator/cilk/cilk_for_test05.scala	/^    val out = Decoupled(new Call(List(32)))$/;"	l
out	src/main/scala/generator/cilk/cilk_for_test05_detach.scala	/^    val out = Decoupled(new Call(List(32)))$/;"	l
out	src/main/scala/generator/cilk/cilk_for_test06.scala	/^    val out = Decoupled(new Call(List(32)))$/;"	l
out	src/main/scala/generator/cilk/cilk_for_test06_detach.scala	/^    val out = Decoupled(new Call(List(32)))$/;"	l
out	src/main/scala/generator/cilk/cilk_for_test06_detach_2.scala	/^    val out = Decoupled(new Call(List(32)))$/;"	l
out	src/main/scala/generator/cilk/cilk_for_test07.scala	/^    val out = Decoupled(new Call(List(32)))$/;"	l
out	src/main/scala/generator/cilk/cilk_for_test07_detach.scala	/^    val out = Decoupled(new Call(List(32)))$/;"	l
out	src/main/scala/generator/cilk/cilk_for_test08.scala	/^    val out = Decoupled(new Call(List(32)))$/;"	l
out	src/main/scala/generator/cilk/cilk_for_test08_detach.scala	/^    val out = Decoupled(new Call(List(32)))$/;"	l
out	src/main/scala/generator/cilk/cilk_for_test09.scala	/^    val out = Decoupled(new Call(List(32)))$/;"	l
out	src/main/scala/generator/cilk/cilk_for_test09_inner.scala	/^    val out = Decoupled(new Call(List(32)))$/;"	l
out	src/main/scala/generator/cilk/cilk_for_test12.scala	/^    val out = Decoupled(new Call(List(32)))$/;"	l
out	src/main/scala/generator/cilk/cilk_for_test12_detach1.scala	/^    val out = Decoupled(new Call(List(32)))$/;"	l
out	src/main/scala/generator/cilk/cilk_for_test12_detach2.scala	/^    val out = Decoupled(new Call(List(32)))$/;"	l
out	src/main/scala/generator/cilk/cilk_for_test12_detach3.scala	/^    val out = Decoupled(new Call(List(32)))$/;"	l
out	src/main/scala/generator/cilk/cilk_spawn_test01.scala	/^    val out = Decoupled(new Call(List(32)))$/;"	l
out	src/main/scala/generator/cilk/cilk_spawn_test02.scala	/^    val out = Decoupled(new Call(List(32)))$/;"	l
out	src/main/scala/generator/cilk/fib.scala	/^    val out = Decoupled(new Call(List(32)))$/;"	l
out	src/main/scala/generator/cilk/fib_continue.scala	/^    val out = Decoupled(new Call(List(32)))$/;"	l
out	src/main/scala/generator/cilk/mergesort.scala	/^    val out = Decoupled(new Call(List(32)))$/;"	l
out	src/main/scala/generator/cilk/mergesort_merge.scala	/^    val out = Decoupled(new Call(List(32)))$/;"	l
out	src/main/scala/generator/cilk/stencil.scala	/^    val out = Decoupled(new Call(List(32)))$/;"	l
out	src/main/scala/generator/cilk/stencil_detach1.scala	/^    val out = Decoupled(new Call(List(32)))$/;"	l
out	src/main/scala/generator/cilk/stencil_inner.scala	/^    val out = Decoupled(new Call(List(32)))$/;"	l
out	src/main/scala/generator/test01.scala	/^    val out = Decoupled(new Call(List(32)))$/;"	l
out	src/main/scala/generator/test02.scala	/^    val out = Decoupled(new Call(List(32)))$/;"	l
out	src/main/scala/generator/test03.scala	/^    val out = Decoupled(new Call(List(32)))$/;"	l
out	src/main/scala/generator/test04.scala	/^    val out = Decoupled(new Call(List(32)))$/;"	l
out	src/main/scala/generator/test05.scala	/^    val out = Decoupled(new Call(List(32)))$/;"	l
out	src/main/scala/generator/test05b.scala	/^    val out = Decoupled(new Call(List(32)))$/;"	l
out	src/main/scala/generator/test05c.scala	/^    val out = Decoupled(new Call(List(32)))$/;"	l
out	src/main/scala/generator/test06.scala	/^    val out = Decoupled(new Call(List(32)))$/;"	l
out	src/main/scala/generator/test08.scala	/^    val out = Decoupled(new Call(List(32)))$/;"	l
out	src/main/scala/generator/test09.scala	/^    val out = Decoupled(new Call(List(32)))$/;"	l
out	src/main/scala/generator/test10.scala	/^    val out = Decoupled(new Call(List(32)))$/;"	l
out	src/main/scala/generator/test11.scala	/^    val out = Decoupled(new Call(List(32)))$/;"	l
out	src/main/scala/generator/test11_add.scala	/^    val out = Decoupled(new Call(List(32)))$/;"	l
out	src/main/scala/generator/test12.scala	/^    val out = Decoupled(new Call(List(32)))$/;"	l
out	src/main/scala/generator/test12_inner.scala	/^    val out = Decoupled(new Call(List(32)))$/;"	l
out	src/main/scala/generator/test14.scala	/^    val out = Decoupled(new Call(List(32)))$/;"	l
out	src/main/scala/generator/test14_inner.scala	/^    val out = Decoupled(new Call(List(32)))$/;"	l
out	src/main/scala/generator/test15.scala	/^    val out = Decoupled(new Call(List(32)))$/;"	l
out	src/main/scala/node/Alu.scala	/^    val out = Output(SInt(xlen.W))$/;"	l
out	src/main/scala/node/Alu.scala	/^    val out = Output(UInt(xlen.W))$/;"	l
out	src/main/scala/node/Comparision.scala	/^    val out = Output(SInt(xlen.W))$/;"	l
out	src/main/scala/node/Comparision.scala	/^    val out = Output(UInt(xlen.W))$/;"	l
out	src/main/scala/node/helpers.scala	/^     val out =  Mux(typ.asUInt === MT_H,  data(15,0),$/;"	l
out	src/main/scala/node/helpers.scala	/^     val out = Mux(typ.asUInt === MT_H,  Cat(Fill(16, data(15)),  data(15,0)),$/;"	l
out	src/main/scala/switches/DyserSwitch.scala	/^    val out = Decoupled(new DataBundle())$/;"	l
out	src/test/scala/concurrent/DecoupledTaskTest.scala	/^  val out = Array((in(0), in(1)).zipped.map(_ + _),$/;"	l
out	src/test/scala/generator/cilk/bgemm_test.scala	/^    val out = Decoupled(new Call(List(32)))$/;"	l
out	src/test/scala/generator/cilk/cilk_for_test02_test.scala	/^    val out = Decoupled(new Call(List(32)))$/;"	l
out	src/test/scala/generator/cilk/cilk_for_test04_test.scala	/^    val out = Decoupled(new Call(List(32)))$/;"	l
out	src/test/scala/generator/cilk/cilk_for_test05_test.scala	/^    val out = Decoupled(new Call(List(32)))$/;"	l
out	src/test/scala/generator/cilk/cilk_for_test06_test.scala	/^    val out = Decoupled(new Call(List(32)))$/;"	l
out	src/test/scala/generator/cilk/cilk_for_test07_test.scala	/^    val out = Decoupled(new Call(List(32)))$/;"	l
out	src/test/scala/generator/cilk/cilk_for_test08_test.scala	/^    val out = Decoupled(new Call(List(32)))$/;"	l
out	src/test/scala/generator/cilk/cilk_for_test09_test.scala	/^    val out = Decoupled(new Call(List(32)))$/;"	l
out	src/test/scala/generator/cilk/cilk_for_test12_test.scala	/^    val out = Decoupled(new Call(List(32)))$/;"	l
out	src/test/scala/generator/cilk/fib_test.scala	/^    val out = Decoupled(new Call(List(32)))$/;"	l
out	src/test/scala/generator/cilk/mergesort_test.scala	/^    val out = Decoupled(new Call(List(32)))$/;"	l
out	src/test/scala/generator/cilk/stencil_test.scala	/^    val out = Decoupled(new Call(List(32)))$/;"	l
out	src/test/scala/generator/test05_test.scala	/^    val out = Decoupled(new Call(List(32)))$/;"	l
out	src/test/scala/generator/test11_test.scala	/^    val out = Decoupled(new Call(List(32)))$/;"	l
out	src/test/scala/generator/test15_test.scala	/^    val out = Decoupled(new Call(List(32)))$/;"	l
out2	src/test/scala/concurrent/DecoupledTaskTest.scala	/^  val out2 = Array((out(0), out(1)).zipped.map(_ + _))$/;"	l
outAddrVec	src/test/scala/generator/cilk/bgemm_test.scala	/^  val outAddrVec = List.range(256, 256+100, 4)$/;"	l
outAddrVec	src/test/scala/generator/cilk/cilk_for_test04_test.scala	/^  val outAddrVec = List("h40".U,"h44".U,"h48".U,"h4C".U,"h50".U)$/;"	l
outAddrVec	src/test/scala/generator/cilk/cilk_for_test06_test.scala	/^  val outAddrVec = List.range(256, 256 + 100, 4)$/;"	l
outAddrVec	src/test/scala/generator/cilk/cilk_for_test07_test.scala	/^  val outAddrVec = List.range(256, 256+36, 4)$/;"	l
outAddrVec	src/test/scala/generator/cilk/cilk_for_test08_test.scala	/^  val outAddrVec = List.range(256, 256+(pixels*3*4), 4)$/;"	l
outAddrVec	src/test/scala/generator/cilk/cilk_for_test09_test.scala	/^  val outAddrVec = List.range(256, 256+(pixels*3*4), 4)$/;"	l
outAddrVec	src/test/scala/generator/cilk/cilk_for_test12_test.scala	/^  val outAddrVec = List.range(64, 64+4*8, 4)$/;"	l
outAddrVec	src/test/scala/generator/cilk/mergesort_test.scala	/^  val outAddrVec = List.range(4*inDataVec.length, 4*inDataVec.length*2, 4)$/;"	l
outAddrVec	src/test/scala/generator/cilk/stencil_test.scala	/^  val outAddrVec = List.range(4 * inDataVec.length, 2 * 4 * inDataVec.length, 4)$/;"	l
outAddrVec	src/test/scala/generator/test05_test.scala	/^  val outAddrVec = List.range(0, 4*10, 4)$/;"	l
outAddrVec	src/test/scala/generator/test05_test.scala	/^  val outAddrVec = List.range(0, 4*8, 4)$/;"	l
outAddrVec	src/test/scala/generator/test15_test.scala	/^  val outAddrVec = List.range(0, 4*8, 4)$/;"	l
outData	src/main/scala/loop/LoopElement.scala	/^  val outData = new Bundle{$/;"	l
outDataVec	src/test/scala/generator/cilk/bgemm_test.scala	/^  val outDataVec = inA.zip(inB).map { case (x, y) => x + y }$/;"	l
outDataVec	src/test/scala/generator/cilk/cilk_for_test04_test.scala	/^  val outDataVec = List(2.U,4.U,6.U,8.U,10.U)$/;"	l
outDataVec	src/test/scala/generator/cilk/cilk_for_test06_test.scala	/^  val outDataVec = inA.zip(inB).map { case (x, y) => x + y }$/;"	l
outDataVec	src/test/scala/generator/cilk/cilk_for_test07_test.scala	/^  val outDataVec = List(2,8,18,32,50,72,98,128,0)$/;"	l
outDataVec	src/test/scala/generator/cilk/cilk_for_test08_test.scala	/^  val outDataVec = List(0,0,1,  4,7,4,  1,1,4,$/;"	l
outDataVec	src/test/scala/generator/cilk/cilk_for_test09_test.scala	/^  val outDataVec = List(0,0,1,  4,7,4,  1,1,4,$/;"	l
outDataVec	src/test/scala/generator/cilk/cilk_for_test12_test.scala	/^  val outDataVec = List(0,16777216,33554432,50331648,67108864,83886080,100663296,134283520)$/;"	l
outDataVec	src/test/scala/generator/cilk/mergesort_test.scala	/^  val outDataVec = mergeSort(inDataVec)$/;"	l
outDataVec	src/test/scala/generator/cilk/stencil_test.scala	/^  val outDataVec = List($/;"	l
outDataVec	src/test/scala/generator/test05_test.scala	/^  val outDataVec = List(0,1024,2048,3072,4096,5120,6144,7168,8192,10240)$/;"	l
outDataVec	src/test/scala/generator/test05_test.scala	/^  val outDataVec = List(0,16777216,33554432,50331648,67108864,83886080,100663296,134283520)$/;"	l
outDataVec	src/test/scala/generator/test05_test.scala	/^  val outDataVec = List(0,2,4,6,8,10,12,14,16,19)$/;"	l
outDataVec	src/test/scala/generator/test15_test.scala	/^  val outDataVec = List(0,16777216,33554432,50331648,67108864,83886080,100663296,134283520)$/;"	l
outE	src/main/scala/switches/Dyser.scala	/^    val outE = Decoupled(new DataBundle)$/;"	l
outN	src/main/scala/switches/Dyser.scala	/^    val outN = Decoupled(new DataBundle)$/;"	l
outNE	src/main/scala/switches/Dyser.scala	/^    val outNE = Decoupled(new DataBundle)$/;"	l
outNW	src/main/scala/switches/Dyser.scala	/^    val outNW = Decoupled(new DataBundle)$/;"	l
outPorts	src/main/scala/concurrent/Sync.scala	/^  val outPorts = Module(new ExpandNode(NumOuts=NumOuts, ID=0)(new ControlBundle))$/;"	l
outS	src/main/scala/switches/Dyser.scala	/^    val outS = Decoupled(new DataBundle)$/;"	l
outSE	src/main/scala/switches/Dyser.scala	/^    val outSE = Decoupled(new DataBundle)$/;"	l
outSW	src/main/scala/switches/Dyser.scala	/^    val outSW = Decoupled(new DataBundle)$/;"	l
outW	src/main/scala/switches/Dyser.scala	/^    val outW = Decoupled(new DataBundle)$/;"	l
out_R	src/main/scala/control/BasicBlock.scala	/^  val out_R = RegInit(ControlBundle.default)$/;"	l
out_arb	src/main/scala/memory/ReadMemoryController.scala	/^  val out_arb = Module(new RRArbiter(new ReadResp, MLPSize))$/;"	l
out_arb	src/main/scala/memory/ReadTypMemoryController.scala	/^  val out_arb = Module(new LockingRRArbiter(new ReadResp, MLPSize, count = Beats))$/;"	l
out_arb	src/main/scala/memory/WriteMemoryController.scala	/^  val out_arb = Module(new RRArbiter(new WriteResp, MLPSize))$/;"	l
out_arb	src/main/scala/memory/WriteTypMemoryController.scala	/^  val out_arb = Module(new RRArbiter(new WriteResp, MLPSize))$/;"	l
out_arb_clock	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire  out_arb_clock;$/;"	n
out_arb_io_chosen	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire  out_arb_io_chosen;$/;"	n
out_arb_io_in_0_bits_RouteID	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire [15:0] out_arb_io_in_0_bits_RouteID;$/;"	n
out_arb_io_in_0_bits_data	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire [15:0] out_arb_io_in_0_bits_data;$/;"	n
out_arb_io_in_0_bits_done	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire  out_arb_io_in_0_bits_done;$/;"	n
out_arb_io_in_0_bits_valid	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire  out_arb_io_in_0_bits_valid;$/;"	n
out_arb_io_in_0_ready	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire  out_arb_io_in_0_ready;$/;"	n
out_arb_io_in_0_valid	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire  out_arb_io_in_0_valid;$/;"	n
out_arb_io_in_1_bits_RouteID	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire [15:0] out_arb_io_in_1_bits_RouteID;$/;"	n
out_arb_io_in_1_bits_data	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire [15:0] out_arb_io_in_1_bits_data;$/;"	n
out_arb_io_in_1_bits_valid	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire  out_arb_io_in_1_bits_valid;$/;"	n
out_arb_io_in_1_ready	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire  out_arb_io_in_1_ready;$/;"	n
out_arb_io_in_1_valid	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire  out_arb_io_in_1_valid;$/;"	n
out_arb_io_out_bits_RouteID	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire [15:0] out_arb_io_out_bits_RouteID;$/;"	n
out_arb_io_out_bits_data	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire [15:0] out_arb_io_out_bits_data;$/;"	n
out_arb_io_out_bits_done	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire  out_arb_io_out_bits_done;$/;"	n
out_arb_io_out_bits_valid	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire  out_arb_io_out_bits_valid;$/;"	n
out_arb_io_out_ready	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire  out_arb_io_out_ready;$/;"	n
out_arb_io_out_valid	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire  out_arb_io_out_valid;$/;"	n
out_arb_reset	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire  out_arb_reset;$/;"	n
out_data_R	src/main/scala/FPU/FPCompare.scala	/^  val out_data_R = RegInit(DataBundle.default)$/;"	l
out_data_R	src/main/scala/FPU/FPComputeNode.scala	/^  val out_data_R = RegInit(DataBundle.default)$/;"	l
out_data_R	src/main/scala/FPU/ResizeFN.scala	/^  val out_data_R = Reg(new CustomDataBundle((UInt((Src.ieeeWidth).W))))$/;"	l
out_data_R	src/main/scala/node/ComputeNode.scala	/^  val out_data_R = RegInit(DataBundle.default)$/;"	l
out_data_R	src/main/scala/node/IcmpNode.scala	/^  val out_data_R = RegInit(DataBundle.default)$/;"	l
out_data_R	src/main/scala/node/PhiNode.scala	/^  val out_data_R = RegInit(DataBundle.default)$/;"	l
out_demux	src/main/scala/FPU/SharedDiv.scala	/^  val out_demux = Module(new DeMuxTree(BaseSize = 2, NumOps = NumOps, new FUResp))$/;"	l
out_demux	src/main/scala/memory/ReadMemoryController.scala	/^  val out_demux = Module(new DeMuxTree(BaseSize = BaseSize, NumOps = NumOps, new ReadResp()))$/;"	l
out_demux	src/main/scala/memory/ReadTypMemoryController.scala	/^  val out_demux = Module(new DeMuxTree(BaseSize = BaseSize, NumOps = NumOps, new ReadResp()))$/;"	l
out_demux	src/main/scala/memory/WriteMemoryController.scala	/^  val out_demux = Module(new DeMuxTree(BaseSize = BaseSize, NumOps = NumOps, new WriteResp()))$/;"	l
out_demux	src/main/scala/memory/WriteTypMemoryController.scala	/^  val out_demux = Module(new DeMuxTree(BaseSize = BaseSize, NumOps = NumOps, new WriteResp()))$/;"	l
out_demux_io_enable	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire  out_demux_io_enable;$/;"	n
out_demux_io_input_RouteID	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire [15:0] out_demux_io_input_RouteID;$/;"	n
out_demux_io_input_data	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire [15:0] out_demux_io_input_data;$/;"	n
out_demux_io_input_done	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire  out_demux_io_input_done;$/;"	n
out_demux_io_input_valid	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire  out_demux_io_input_valid;$/;"	n
out_demux_io_outputs_0_RouteID	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire [15:0] out_demux_io_outputs_0_RouteID;$/;"	n
out_demux_io_outputs_0_data	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire [15:0] out_demux_io_outputs_0_data;$/;"	n
out_demux_io_outputs_0_done	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire  out_demux_io_outputs_0_done;$/;"	n
out_demux_io_outputs_0_valid	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire  out_demux_io_outputs_0_valid;$/;"	n
out_demux_io_outputs_1_RouteID	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire [15:0] out_demux_io_outputs_1_RouteID;$/;"	n
out_demux_io_outputs_1_data	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire [15:0] out_demux_io_outputs_1_data;$/;"	n
out_demux_io_outputs_1_valid	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire  out_demux_io_outputs_1_valid;$/;"	n
out_fire_W	src/main/scala/concurrent/Sync.scala	/^  val out_fire_W = WireInit(false.B)$/;"	l
out_fired_R	src/main/scala/control/BasicBlock.scala	/^  val out_fired_R = RegInit(VecInit(Seq.fill(NumOuts)(false.B)))$/;"	l
out_ready_R	src/main/scala/concurrent/Reattach.scala	/^  val out_ready_R = RegInit(VecInit(Seq.fill(NumOuts)(false.B)))$/;"	l
out_ready_R	src/main/scala/concurrent/Sync.scala	/^  val out_ready_R = RegInit(VecInit(Seq.fill(NumOuts)(false.B)))$/;"	l
out_ready_R	src/main/scala/node/BranchNode.scala	/^  val out_ready_R = RegInit(VecInit(Seq.fill(2)(false.B)))$/;"	l
out_ready_R	src/main/scala/node/HandShaking.scala	/^  val out_ready_R = RegInit(VecInit(Seq.fill(NumOuts)(false.B)))$/;"	l
out_ready_R	src/main/scala/node/HandShaking.scala	/^  val out_ready_R = Seq.fill(NumOuts)(RegInit(false.B))$/;"	l
out_ready_R	src/main/scala/node/RetNode.scala	/^  val out_ready_R = RegInit(false.B)$/;"	l
out_ready_W	src/main/scala/concurrent/Detach.scala	/^  val out_ready_W = out_ready_R.asUInt.andR$/;"	l
out_ready_W	src/main/scala/concurrent/Reattach.scala	/^  val out_ready_W = WireInit(VecInit(Seq.fill(NumOuts)(false.B)))$/;"	l
out_ready_W	src/main/scala/concurrent/Sync.scala	/^  val out_ready_W = WireInit(VecInit(Seq.fill(NumOuts)(false.B)))$/;"	l
out_ready_W	src/main/scala/control/BasicBlock.scala	/^  val out_ready_W = out_ready_R.asUInt.andR$/;"	l
out_ready_W	src/main/scala/node/BranchNode.scala	/^  val out_ready_W = out_ready_R.asUInt.andR$/;"	l
out_ready_W	src/main/scala/node/HandShaking.scala	/^  val out_ready_W = Seq.fill(NumOuts)(WireInit(false.B))$/;"	l
out_ready_W	src/main/scala/node/HandShaking.scala	/^  val out_ready_W = WireInit(VecInit(Seq.fill(NumOuts) {$/;"	l
out_val_R	src/main/scala/control/BasicBlock.scala	/^  val out_val_R = RegInit(VecInit(Seq.fill(NumOuts)(false.B)))$/;"	l
out_valid_R	src/main/scala/concurrent/Reattach.scala	/^  val out_valid_R = RegInit(VecInit(Seq.fill(NumOuts)(false.B)))$/;"	l
out_valid_R	src/main/scala/concurrent/Sync.scala	/^  val out_valid_R = RegInit(VecInit(Seq.fill(NumOuts)(false.B)))$/;"	l
out_valid_R	src/main/scala/control/BasicBlock.scala	/^  val out_valid_R = RegInit(VecInit(Seq.fill(NumOuts)(false.B)))$/;"	l
out_valid_R	src/main/scala/node/BranchNode.scala	/^  val out_valid_R = RegInit(VecInit(Seq.fill(2)(false.B)))$/;"	l
out_valid_R	src/main/scala/node/HandShaking.scala	/^  val out_valid_R = RegInit(VecInit(Seq.fill(NumOuts)(false.B)))$/;"	l
out_valid_R	src/main/scala/node/HandShaking.scala	/^  val out_valid_R = Seq.fill(NumOuts)(RegInit(false.B))$/;"	l
out_valid_R	src/main/scala/node/RetNode.scala	/^  val out_valid_R = RegInit(false.B)$/;"	l
out_valid_W	src/main/scala/concurrent/Detach.scala	/^  val out_valid_W = out_valid_R.asUInt.andR$/;"	l
out_valid_W	src/main/scala/control/BasicBlock.scala	/^  val out_valid_W = out_valid_R.asUInt.andR$/;"	l
out_valid_W	src/main/scala/node/BranchNode.scala	/^  val out_valid_W = out_valid_R.asUInt.andR$/;"	l
out_valid_W	src/main/scala/node/HandShaking.scala	/^  val out_valid_W = WireInit(VecInit(Seq.fill(NumOuts) {$/;"	l
outmux	src/main/scala/stack/InterleavedStack.scala	/^  val outmux = for (output <- 0 until NumPorts) yield {$/;"	l
outptr	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  reg [1:0] outptr;$/;"	r
outptr	src/main/scala/memory/ReadTypMemoryController.scala	/^  val outptr = RegInit(0.U(log2Ceil(Beats + 1).W))$/;"	l
output	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  output        io_CacheReq_valid,$/;"	p
output	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  output        io_MemReq_valid,$/;"	p
output	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  output        io_ReadIn_0_ready,$/;"	p
output	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  output        io_ReadIn_1_ready,$/;"	p
output	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  output        io_ReadOut_0_valid,$/;"	p
output	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  output        io_ReadOut_1_valid,$/;"	p
output	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  output        io_chosen$/;"	p
output	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  output        io_free$/;"	p
output	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  output        io_in_0_ready,$/;"	p
output	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  output        io_in_1_ready,$/;"	p
output	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  output        io_out_bits_done$/;"	p
output	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  output        io_out_bits_valid,$/;"	p
output	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  output        io_out_valid,$/;"	p
output	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  output        io_output_valid,$/;"	p
output	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  output        io_outputs_0_done$/;"	p
output	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  output        io_outputs_0_valid,$/;"	p
output	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  output        io_outputs_1_valid,$/;"	p
output	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  output  io_out_valid$/;"	p
output	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  output  io_outputs_0_valid$/;"	p
output	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  output [15:0] io_CacheReq_bits_addr,$/;"	p
output	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  output [15:0] io_MemReq_bits_data,$/;"	p
output	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  output [15:0] io_ReadOut_0_RouteID,$/;"	p
output	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  output [15:0] io_ReadOut_0_data,$/;"	p
output	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  output [15:0] io_ReadOut_1_RouteID,$/;"	p
output	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  output [15:0] io_ReadOut_1_data,$/;"	p
output	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  output [15:0] io_WriteOut_0_RouteID,$/;"	p
output	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  output [15:0] io_out_bits_RouteID,$/;"	p
output	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  output [15:0] io_out_bits_addr,$/;"	p
output	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  output [15:0] io_out_bits_data,$/;"	p
output	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  output [15:0] io_output_bits_RouteID,$/;"	p
output	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  output [15:0] io_outputs_0_RouteID,$/;"	p
output	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  output [15:0] io_outputs_0_data,$/;"	p
output	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  output [15:0] io_outputs_1_RouteID,$/;"	p
output	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  output [15:0] io_outputs_1_data$/;"	p
output	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  output [15:0] io_outputs_1_data,$/;"	p
output	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  output [1:0]  io_CacheReq_bits_mask,$/;"	p
output	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  output [1:0]  io_out_bits_mask$/;"	p
output	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  output [5:0]  io_out_bits_address,$/;"	p
output	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  output [7:0]  io_CacheReq_bits_tag,$/;"	p
output	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  output [7:0]  io_MemReq_bits_tag,$/;"	p
output	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  output [7:0]  io_out_bits_tag,$/;"	p
output	src/main/scala/memory/ReadMemoryController.scala	/^    val output = Decoupled(new ReadResp)$/;"	l
output	src/main/scala/memory/ReadMemoryController.scala	/^  val output = WireInit(0.U(xlen.W))$/;"	l
output	src/main/scala/memory/WriteMemoryController.scala	/^    val output = Decoupled(new WriteResp)$/;"	l
output	src/main/scala/muxes/Muxes.scala	/^    val output = Output(gen)$/;"	l
outputArg	src/main/scala/loop/LoopEnd.scala	/^  val outputArg = Vec(NumOuts, Decoupled(new DataBundle()))$/;"	l
outputArg	src/main/scala/loop/LoopHeader.scala	/^  val outputArg = Vec(NumOuts, Decoupled(gen))$/;"	l
outputArg	src/main/scala/loop/LoopStart.scala	/^  val outputArg = Vec(NumOuts, Decoupled(new DataBundle()))$/;"	l
outputReg	src/main/scala/accel/DataBundleReg.scala	/^  val outputReg = RegInit(0.U(xlen.W))$/;"	l
outputReg	src/main/scala/accel/SimpleReg.scala	/^  val outputReg = RegInit(0.U(xlen.W))$/;"	l
outputReg	src/main/scala/junctions/CombineDecoupled.scala	/^  val outputReg    = RegInit(0.U.asTypeOf(io.Out))$/;"	l
outputReg	src/main/scala/junctions/CombineDecoupled.scala	/^  val outputReg  = RegInit(0.U.asTypeOf(io.Out))$/;"	l
outputReg	src/main/scala/node/RetNode.scala	/^  val outputReg = RegInit(0.U.asTypeOf(io.Out))$/;"	l
outputValidReg	src/main/scala/junctions/SplitDecoupled.scala	/^  val outputValidReg = RegInit(VecInit(Seq.fill(argTypes.length + 1)(false.B)))$/;"	l
outputValidReg	src/main/scala/junctions/SplitDecoupled.scala	/^  val outputValidReg = RegInit(VecInit(Seq.fill(argTypes.length){false.B}))$/;"	l
outputValidReg	src/main/scala/junctions/SplitDecoupled.scala	/^  val outputValidReg = for(i <- argTypes.indices) yield {$/;"	l
outputValidReg	src/main/scala/node/CallInNode.scala	/^  val outputValidReg = RegInit(VecInit(Seq.fill(argTypes.length + 1)(false.B)))$/;"	l
output_R	src/main/scala/node/RetNode.scala	/^  val output_R = RegInit(0.U.asTypeOf(io.Out.bits))$/;"	l
outputs	src/main/scala/muxes/Muxes.scala	/^    val outputs = Output(Vec(Nops, gen))$/;"	l
outputs	src/main/scala/muxes/Muxes.scala	/^    val outputs = Vec(Nops, Output(gen))$/;"	l
p	src/main/scala/accel/Main.scala	/^  implicit val p = config.Parameters.root((new AccelConfig).toInstance)$/;"	l
p	src/main/scala/accel/Main.scala	/^  implicit val p = config.Parameters.root((new VecFilterDFConfig).toInstance)$/;"	l
p	src/main/scala/config/config.scala	/^  implicit val p: Parameters$/;"	l
p	src/main/scala/generator/cilk/bgemm.scala	/^  implicit val p = config.Parameters.root((new MiniConfig).toInstance)$/;"	l
p	src/main/scala/generator/cilk/bgemm_detach1.scala	/^  implicit val p = config.Parameters.root((new MiniConfig).toInstance)$/;"	l
p	src/main/scala/generator/cilk/bgemm_detach2.scala	/^  implicit val p = config.Parameters.root((new MiniConfig).toInstance)$/;"	l
p	src/main/scala/generator/cilk/bgemm_detach3.scala	/^  implicit val p = config.Parameters.root((new MiniConfig).toInstance)$/;"	l
p	src/main/scala/generator/cilk/cilk_for_test01.scala	/^  implicit val p = config.Parameters.root((new MiniConfig).toInstance)$/;"	l
p	src/main/scala/generator/cilk/cilk_for_test02.scala	/^  implicit val p = config.Parameters.root((new MiniConfig).toInstance)$/;"	l
p	src/main/scala/generator/cilk/cilk_for_test02_mul.scala	/^  implicit val p = config.Parameters.root((new MiniConfig).toInstance)$/;"	l
p	src/main/scala/generator/cilk/cilk_for_test04.scala	/^  implicit val p = config.Parameters.root((new MiniConfig).toInstance)$/;"	l
p	src/main/scala/generator/cilk/cilk_for_test04_detach.scala	/^  implicit val p = config.Parameters.root((new MiniConfig).toInstance)$/;"	l
p	src/main/scala/generator/cilk/cilk_for_test05.scala	/^  implicit val p = config.Parameters.root((new MiniConfig).toInstance)$/;"	l
p	src/main/scala/generator/cilk/cilk_for_test05_detach.scala	/^  implicit val p = config.Parameters.root((new MiniConfig).toInstance)$/;"	l
p	src/main/scala/generator/cilk/cilk_for_test06.scala	/^  implicit val p = config.Parameters.root((new MiniConfig).toInstance)$/;"	l
p	src/main/scala/generator/cilk/cilk_for_test06_detach.scala	/^  implicit val p = config.Parameters.root((new MiniConfig).toInstance)$/;"	l
p	src/main/scala/generator/cilk/cilk_for_test06_detach_2.scala	/^  implicit val p = config.Parameters.root((new MiniConfig).toInstance)$/;"	l
p	src/main/scala/generator/cilk/cilk_for_test07.scala	/^  implicit val p = config.Parameters.root((new MiniConfig).toInstance)$/;"	l
p	src/main/scala/generator/cilk/cilk_for_test07_detach.scala	/^  implicit val p = config.Parameters.root((new MiniConfig).toInstance)$/;"	l
p	src/main/scala/generator/cilk/cilk_for_test08.scala	/^  implicit val p = config.Parameters.root((new MiniConfig).toInstance)$/;"	l
p	src/main/scala/generator/cilk/cilk_for_test08_detach.scala	/^  implicit val p = config.Parameters.root((new MiniConfig).toInstance)$/;"	l
p	src/main/scala/generator/cilk/cilk_for_test09.scala	/^  implicit val p = config.Parameters.root((new MiniConfig).toInstance)$/;"	l
p	src/main/scala/generator/cilk/cilk_for_test09_inner.scala	/^  implicit val p = config.Parameters.root((new MiniConfig).toInstance)$/;"	l
p	src/main/scala/generator/cilk/cilk_for_test12.scala	/^  implicit val p = config.Parameters.root((new MiniConfig).toInstance)$/;"	l
p	src/main/scala/generator/cilk/cilk_for_test12_detach1.scala	/^  implicit val p = config.Parameters.root((new MiniConfig).toInstance)$/;"	l
p	src/main/scala/generator/cilk/cilk_for_test12_detach2.scala	/^  implicit val p = config.Parameters.root((new MiniConfig).toInstance)$/;"	l
p	src/main/scala/generator/cilk/cilk_for_test12_detach3.scala	/^  implicit val p = config.Parameters.root((new MiniConfig).toInstance)$/;"	l
p	src/main/scala/generator/cilk/cilk_spawn_test01.scala	/^  implicit val p = config.Parameters.root((new MiniConfig).toInstance)$/;"	l
p	src/main/scala/generator/cilk/cilk_spawn_test02.scala	/^  implicit val p = config.Parameters.root((new MiniConfig).toInstance)$/;"	l
p	src/main/scala/generator/cilk/fib.scala	/^  implicit val p = config.Parameters.root((new MiniConfig).toInstance)$/;"	l
p	src/main/scala/generator/cilk/fib_continue.scala	/^  implicit val p = config.Parameters.root((new MiniConfig).toInstance)$/;"	l
p	src/main/scala/generator/cilk/mergesort.scala	/^  implicit val p = config.Parameters.root((new MiniConfig).toInstance)$/;"	l
p	src/main/scala/generator/cilk/mergesort_merge.scala	/^  implicit val p = config.Parameters.root((new MiniConfig).toInstance)$/;"	l
p	src/main/scala/generator/cilk/stencil.scala	/^  implicit val p = config.Parameters.root((new MiniConfig).toInstance)$/;"	l
p	src/main/scala/generator/cilk/stencil_detach1.scala	/^  implicit val p = config.Parameters.root((new MiniConfig).toInstance)$/;"	l
p	src/main/scala/generator/cilk/stencil_inner.scala	/^  implicit val p = config.Parameters.root((new MiniConfig).toInstance)$/;"	l
p	src/main/scala/generator/test01.scala	/^  implicit val p = config.Parameters.root((new MiniConfig).toInstance)$/;"	l
p	src/main/scala/generator/test02.scala	/^  implicit val p = config.Parameters.root((new MiniConfig).toInstance)$/;"	l
p	src/main/scala/generator/test03.scala	/^  implicit val p = config.Parameters.root((new MiniConfig).toInstance)$/;"	l
p	src/main/scala/generator/test04.scala	/^  implicit val p = config.Parameters.root((new MiniConfig).toInstance)$/;"	l
p	src/main/scala/generator/test05.scala	/^  implicit val p = config.Parameters.root((new MiniConfig).toInstance)$/;"	l
p	src/main/scala/generator/test05b.scala	/^  implicit val p = config.Parameters.root((new MiniConfig).toInstance)$/;"	l
p	src/main/scala/generator/test05c.scala	/^  implicit val p = config.Parameters.root((new MiniConfig).toInstance)$/;"	l
p	src/main/scala/generator/test06.scala	/^  implicit val p = config.Parameters.root((new MiniConfig).toInstance)$/;"	l
p	src/main/scala/generator/test08.scala	/^  implicit val p = config.Parameters.root((new MiniConfig).toInstance)$/;"	l
p	src/main/scala/generator/test09.scala	/^  implicit val p = config.Parameters.root((new MiniConfig).toInstance)$/;"	l
p	src/main/scala/generator/test10.scala	/^  implicit val p = config.Parameters.root((new MiniConfig).toInstance)$/;"	l
p	src/main/scala/generator/test11.scala	/^  implicit val p = config.Parameters.root((new MiniConfig).toInstance)$/;"	l
p	src/main/scala/generator/test11_add.scala	/^  implicit val p = config.Parameters.root((new MiniConfig).toInstance)$/;"	l
p	src/main/scala/generator/test12.scala	/^  implicit val p = config.Parameters.root((new MiniConfig).toInstance)$/;"	l
p	src/main/scala/generator/test12_inner.scala	/^  implicit val p = config.Parameters.root((new MiniConfig).toInstance)$/;"	l
p	src/main/scala/generator/test14.scala	/^  implicit val p = config.Parameters.root((new MiniConfig).toInstance)$/;"	l
p	src/main/scala/generator/test14_inner.scala	/^  implicit val p = config.Parameters.root((new MiniConfig).toInstance)$/;"	l
p	src/main/scala/generator/test15.scala	/^  implicit val p = config.Parameters.root((new MiniConfig).toInstance)$/;"	l
p	src/main/scala/junctions/nasti.scala	/^  implicit val p: Parameters$/;"	l
p	src/main/scala/verilogmain/TypeMemDataflow.scala	/^  implicit val p = config.Parameters.root((new MiniConfig).toInstance)$/;"	l
p	src/test/scala/FPU/FPCompareNode.scala	/^   implicit val p = config.Parameters.root((new SinglePrecisionFPConfig).toInstance)$/;"	l
p	src/test/scala/FPU/FPComputeNode.scala	/^   implicit val p = config.Parameters.root((new SinglePrecisionFPConfig).toInstance)$/;"	l
p	src/test/scala/FPU/FPDiv.scala	/^  implicit val p = config.Parameters.root((new MiniConfig).toInstance)$/;"	l
p	src/test/scala/FPU/FPResizeNode.scala	/^   implicit val p = config.Parameters.root((new SinglePrecisionFPConfig).toInstance)$/;"	l
p	src/test/scala/FPU/SharedFPDiv.scala	/^  implicit val p = config.Parameters.root((new HALFPrecisionFPConfig).toInstance)$/;"	l
p	src/test/scala/accel/AccelTests.scala	/^  implicit val p = config.Parameters.root((new MiniConfig).toInstance)$/;"	l
p	src/test/scala/accel/CacheTests.scala	/^  implicit val p = config.Parameters.root((new MiniConfig).toInstance)$/;"	l
p	src/test/scala/accel/coredf/AccelTests01.scala	/^  implicit val p = config.Parameters.root((new MiniConfig).toInstance)$/;"	l
p	src/test/scala/accel/coredf/FilterDFTests.scala	/^  implicit val p = config.Parameters.root((new MiniConfig).toInstance)$/;"	l
p	src/test/scala/accel/coredf/VecFilterNoKernDFTests.scala	/^  implicit val p = config.Parameters.root((new VecFilterDFConfig).toInstance)$/;"	l
p	src/test/scala/arbiters/ArbitersTest.scala	/^  implicit val p = config.Parameters.root((new MiniConfig).toInstance)$/;"	l
p	src/test/scala/concurrent/DecoupledTaskTest.scala	/^  implicit val p = config.Parameters.root((new MiniConfig).toInstance)$/;"	l
p	src/test/scala/concurrent/DetachTest.scala	/^  implicit val p = config.Parameters.root((new MiniConfig).toInstance)$/;"	l
p	src/test/scala/concurrent/ReattachTest.scala	/^  implicit val p = config.Parameters.root((new MiniConfig).toInstance)$/;"	l
p	src/test/scala/concurrent/TaskControllerTest.scala	/^  implicit val p = config.Parameters.root((new MiniConfig).toInstance)$/;"	l
p	src/test/scala/dataflow/01-sample.scala	/^   implicit val p = config.Parameters.root((new MiniConfig).toInstance)$/;"	l
p	src/test/scala/dataflow/02-alloca.scala	/^   implicit val p = config.Parameters.root((new MiniConfig).toInstance)$/;"	l
p	src/test/scala/dataflow/FPDivDataFlow.scala	/^  implicit val p = config.Parameters.root((new MiniConfig).toInstance)$/;"	l
p	src/test/scala/dataflow/LoadMaskTest.scala	/^  implicit val p = config.Parameters.root((new MiniConfig).toInstance)$/;"	l
p	src/test/scala/dataflow/TypeLoadDataflow.scala	/^   implicit val p = config.Parameters.root((new MiniConfig).toInstance)$/;"	l
p	src/test/scala/dataflow/TypeMemDataFlow.scala	/^  implicit val p = config.Parameters.root((new MiniConfig).toInstance)$/;"	l
p	src/test/scala/dataflow/UnTypMemDataflow.scala	/^   implicit val p = config.Parameters.root((new MiniConfig).toInstance)$/;"	l
p	src/test/scala/dataflow/fuse/computeFuse01.scala	/^  implicit val p = config.Parameters.root((new MiniConfig).toInstance)$/;"	l
p	src/test/scala/dataflow/fuse/computeFuse02.scala	/^  implicit val p = config.Parameters.root((new MiniConfig).toInstance)$/;"	l
p	src/test/scala/dataflow/fuse/computeFuse03.scala	/^  implicit val p = config.Parameters.root((new MiniConfig).toInstance)$/;"	l
p	src/test/scala/dataflow/fuse/computeFuse04.scala	/^  implicit val p = config.Parameters.root((new MiniConfig).toInstance)$/;"	l
p	src/test/scala/dataflow/graph/compute01Df.scala	/^  implicit val p = config.Parameters.root((new MiniConfig).toInstance)$/;"	l
p	src/test/scala/dataflow/graph/compute02Df.scala	/^  implicit val p = config.Parameters.root((new MiniConfig).toInstance)$/;"	l
p	src/test/scala/dataflow/graph/compute03DF.scala	/^  implicit val p = config.Parameters.root((new MiniConfig).toInstance)$/;"	l
p	src/test/scala/dataflow/graph/compute04DF.scala	/^  implicit val p = config.Parameters.root((new MiniConfig).toInstance)$/;"	l
p	src/test/scala/dataflow/tests/Add01.scala	/^   implicit val p = config.Parameters.root((new MiniConfig).toInstance)$/;"	l
p	src/test/scala/generator/cilk/bgemm_test.scala	/^  implicit val p = config.Parameters.root((new MiniConfig).toInstance)$/;"	l
p	src/test/scala/generator/cilk/cilk_for_test01_test.scala	/^  implicit val p = config.Parameters.root((new MiniConfig).toInstance)$/;"	l
p	src/test/scala/generator/cilk/cilk_for_test02_test.scala	/^  implicit val p = config.Parameters.root((new MiniConfig).toInstance)$/;"	l
p	src/test/scala/generator/cilk/cilk_for_test04_test.scala	/^  implicit val p = config.Parameters.root((new MiniConfig).toInstance)$/;"	l
p	src/test/scala/generator/cilk/cilk_for_test05_test.scala	/^  implicit val p = config.Parameters.root((new MiniConfig).toInstance)$/;"	l
p	src/test/scala/generator/cilk/cilk_for_test06_test.scala	/^  implicit val p = config.Parameters.root((new MiniConfig).toInstance)$/;"	l
p	src/test/scala/generator/cilk/cilk_for_test07_test.scala	/^  implicit val p = config.Parameters.root((new MiniConfig).toInstance)$/;"	l
p	src/test/scala/generator/cilk/cilk_for_test08_test.scala	/^  implicit val p = config.Parameters.root((new MiniConfig).toInstance)$/;"	l
p	src/test/scala/generator/cilk/cilk_for_test09_test.scala	/^  implicit val p = config.Parameters.root((new MiniConfig).toInstance)$/;"	l
p	src/test/scala/generator/cilk/cilk_for_test12_test.scala	/^  implicit val p = config.Parameters.root((new MiniConfig).toInstance)$/;"	l
p	src/test/scala/generator/cilk/cilk_spawn_test01_test.scala	/^  implicit val p = config.Parameters.root((new MiniConfig).toInstance)$/;"	l
p	src/test/scala/generator/cilk/cilk_spawn_test02_test.scala	/^  implicit val p = config.Parameters.root((new MiniConfig).toInstance)$/;"	l
p	src/test/scala/generator/cilk/fib_test.scala	/^  implicit val p = config.Parameters.root((new MiniConfig).toInstance)$/;"	l
p	src/test/scala/generator/cilk/mergesort_test.scala	/^  implicit val p = config.Parameters.root((new MiniConfig).toInstance)$/;"	l
p	src/test/scala/generator/cilk/stencil_test.scala	/^  implicit val p = config.Parameters.root((new MiniConfig).toInstance)$/;"	l
p	src/test/scala/generator/test01_test.scala	/^  implicit val p = config.Parameters.root((new MiniConfig).toInstance)$/;"	l
p	src/test/scala/generator/test02_test.scala	/^  implicit val p = config.Parameters.root((new MiniConfig).toInstance)$/;"	l
p	src/test/scala/generator/test03_test.scala	/^  implicit val p = config.Parameters.root((new MiniConfig).toInstance)$/;"	l
p	src/test/scala/generator/test04_test.scala	/^  implicit val p = config.Parameters.root((new MiniConfig).toInstance)$/;"	l
p	src/test/scala/generator/test05_test.scala	/^  implicit val p = config.Parameters.root((new MiniConfig).toInstance)$/;"	l
p	src/test/scala/generator/test06_test.scala	/^  implicit val p = config.Parameters.root((new MiniConfig).toInstance)$/;"	l
p	src/test/scala/generator/test08_test.scala	/^  implicit val p = config.Parameters.root((new MiniConfig).toInstance)$/;"	l
p	src/test/scala/generator/test09_test.scala	/^  implicit val p = config.Parameters.root((new MiniConfig).toInstance)$/;"	l
p	src/test/scala/generator/test10_test.scala	/^  implicit val p = config.Parameters.root((new MiniConfig).toInstance)$/;"	l
p	src/test/scala/generator/test11_test.scala	/^  implicit val p = config.Parameters.root((new MiniConfig).toInstance)$/;"	l
p	src/test/scala/generator/test12_test.scala	/^  implicit val p = config.Parameters.root((new MiniConfig).toInstance)$/;"	l
p	src/test/scala/generator/test14_test.scala	/^  implicit val p = config.Parameters.root((new MiniConfig).toInstance)$/;"	l
p	src/test/scala/generator/test15_test.scala	/^  implicit val p = config.Parameters.root((new MiniConfig).toInstance)$/;"	l
p	src/test/scala/junctions/CombineDecoupledTest.scala	/^  implicit val p = config.Parameters.root((new MiniConfig).toInstance)$/;"	l
p	src/test/scala/junctions/SplitDecoupledTest.scala	/^  implicit val p = config.Parameters.root((new MiniConfig).toInstance)$/;"	l
p	src/test/scala/loop/Ex1.scala	/^  implicit val p = config.Parameters.root((new MiniConfig).toInstance)$/;"	l
p	src/test/scala/loop/LiveIn.scala	/^   implicit val p = config.Parameters.root((new MiniConfig).toInstance)$/;"	l
p	src/test/scala/loop/LiveOut.scala	/^   implicit val p = config.Parameters.root((new MiniConfig).toInstance)$/;"	l
p	src/test/scala/loop/LoopRegnode.scala	/^  implicit val p = config.Parameters.root((new MiniConfig).toInstance)$/;"	l
p	src/test/scala/loop/SerialLoop.scala	/^  implicit val p = config.Parameters.root((new MiniConfig).toInstance)$/;"	l
p	src/test/scala/memory/MSHR.scala	/^  implicit val p = config.Parameters.root((new MiniConfig).toInstance)$/;"	l
p	src/test/scala/memory/MemoryController.scala	/^  implicit val p = config.Parameters.root((new MiniConfig).toInstance)$/;"	l
p	src/test/scala/memory/MemoryController2.scala	/^  implicit val p = config.Parameters.root((new MiniConfig).toInstance)$/;"	l
p	src/test/scala/memory/ReadMemoryController.scala	/^  implicit val p = config.Parameters.root((new MiniConfig).toInstance)$/;"	l
p	src/test/scala/memory/ReadTypTableEntry.scala	/^  implicit val p = config.Parameters.root((new MiniConfig).toInstance)$/;"	l
p	src/test/scala/memory/ReadWriteArbiter01.scala	/^  implicit val p = config.Parameters.root((new MiniConfig).toInstance)$/;"	l
p	src/test/scala/memory/UnifiedController.scala	/^	implicit val p = config.Parameters.root((new MiniConfig).toInstance)$/;"	l
p	src/test/scala/memory/WriteMemoryController.scala	/^  implicit val p = config.Parameters.root((new MiniConfig).toInstance)$/;"	l
p	src/test/scala/memory/deprecated/ReadWriteArbiter.scala	/^  implicit val p = config.Parameters.root((new MiniConfig).toInstance)$/;"	l
p	src/test/scala/muxes/TestMux.scala	/^  implicit val p = config.Parameters.root((new MiniConfig).toInstance)$/;"	l
p	src/test/scala/node/FusedComputeNode.scala	/^   implicit val p = config.Parameters.root((new MiniConfig).toInstance)$/;"	l
p	src/test/scala/node/GepNode.scala	/^   implicit val p = config.Parameters.root((new MiniConfig).toInstance)$/;"	l
p	src/test/scala/node/LoadSimple.scala	/^  implicit val p = config.Parameters.root((new MiniConfig).toInstance)$/;"	l
p	src/test/scala/node/PhiNode.scala	/^   implicit val p = config.Parameters.root((new MiniConfig).toInstance)$/;"	l
p	src/test/scala/node/StoreSimple.scala	/^  implicit val p = config.Parameters.root((new MiniConfig).toInstance)$/;"	l
p	src/test/scala/node/TypCompute.scala	/^   implicit val p = config.Parameters.root((new MiniConfig).toInstance)$/;"	l
p	src/test/scala/node/TypLoad.scala	/^  implicit val p = config.Parameters.root((new MiniConfig).toInstance)$/;"	l
p	src/test/scala/node/TypStore.scala	/^  implicit val p = config.Parameters.root((new MiniConfig).toInstance)$/;"	l
p	src/test/scala/node/allocaNode.scala	/^   implicit val p = config.Parameters.root((new MiniConfig).toInstance)$/;"	l
p	src/test/scala/node/branchNode.scala	/^   implicit val p = config.Parameters.root((new MiniConfig).toInstance)$/;"	l
p	src/test/scala/node/cmpNode.scala	/^   implicit val p = config.Parameters.root((new MiniConfig).toInstance)$/;"	l
p	src/test/scala/node/computeNode.scala	/^   implicit val p = config.Parameters.root((new MiniConfig).toInstance)$/;"	l
p	src/test/scala/node/controlNode.scala	/^  implicit val p = config.Parameters.root((new MiniConfig).toInstance)$/;"	l
p	src/test/scala/node/relayNode.scala	/^   implicit val p = config.Parameters.root((new MiniConfig).toInstance)$/;"	l
p	src/test/scala/node/sextNode.scala	/^  implicit val p = config.Parameters.root((new MiniConfig).toInstance)$/;"	l
p	src/test/scala/regfile/InputReg.scala	/^   implicit val p = config.Parameters.root((new MiniConfig).toInstance)$/;"	l
p	src/test/scala/stack/StackTest.scala	/^   implicit val p = config.Parameters.root((new MiniConfig).toInstance)$/;"	l
p	src/test/scala/switches/Dyser.scala	/^  implicit val p = config.Parameters.root((new MiniConfig).toInstance)$/;"	l
p	src/test/scala/switches/DyserMux.scala	/^  implicit val p = config.Parameters.root((new MiniConfig).toInstance)$/;"	l
p	src/test/scala/switches/SwitchInControl.scala	/^  implicit val p = config.Parameters.root((new MiniConfig).toInstance)$/;"	l
p	src/test/scala/switches/example/ex1.scala	/^  implicit val p = config.Parameters.root((new MiniConfig).toInstance)$/;"	l
p	src/test/scala/verilogmain/Dataflow64.scala	/^  implicit val p = config.Parameters.root((new MiniConfig).toInstance)$/;"	l
p	src/test/scala/verilogmain/FusedDataflow.scala	/^  implicit val p = config.Parameters.root((new MiniConfig).toInstance)$/;"	l
p	src/test/scala/verilogmain/MixedDataflow32.scala	/^  implicit val p = config.Parameters.root((new MiniConfig).toInstance)$/;"	l
p	src/test/scala/verilogmain/MixedDataflow64.scala	/^  implicit val p = config.Parameters.root((new MixedDataflowConfig).toInstance)$/;"	l
p	src/test/scala/verilogmain/TypStackSweeper.scala	/^  implicit val p = config.Parameters.root((new MiniConfig).toInstance)$/;"	l
p	src/test/scala/verilogmain/TypeStackSweeper16b.scala	/^  implicit val p = config.Parameters.root((new TypeStackFileVerilog16bConfig).toInstance)$/;"	l
palette	scripts/extract_activity.py	/^palette = itertools.cycle(sns.color_palette())$/;"	v
param	src/main/scala/dataflow/AdditionDF.scala	/^  val param = functionParam$/;"	l
param	src/main/scala/generator/cilk/bgemm.scala	/^  val param = Data_bgemm_FlowParam$/;"	l
param	src/main/scala/generator/cilk/bgemm_detach1.scala	/^  val param = Data_bgemm_detach1_FlowParam$/;"	l
param	src/main/scala/generator/cilk/bgemm_detach2.scala	/^  val param = Data_bgemm_detach2_FlowParam$/;"	l
param	src/main/scala/generator/cilk/bgemm_detach3.scala	/^  val param = Data_bgemm_detach3_FlowParam$/;"	l
param	src/main/scala/generator/cilk/cilk_for_test01.scala	/^  val param = Data_cilk_for_test01_FlowParam$/;"	l
param	src/main/scala/generator/cilk/cilk_for_test02.scala	/^  val param = Data_cilk_for_test02_FlowParam$/;"	l
param	src/main/scala/generator/cilk/cilk_for_test02_mul.scala	/^  val param = Data_cilk_for_test02_mul_FlowParam$/;"	l
param	src/main/scala/generator/cilk/cilk_for_test04.scala	/^  val param = Data_cilk_for_test04_FlowParam$/;"	l
param	src/main/scala/generator/cilk/cilk_for_test04_detach.scala	/^  val param = Data_cilk_for_test04_detach_FlowParam$/;"	l
param	src/main/scala/generator/cilk/cilk_for_test05.scala	/^  val param = Data_cilk_for_test05_FlowParam$/;"	l
param	src/main/scala/generator/cilk/cilk_for_test05_detach.scala	/^  val param = Data_cilk_for_test05_detach_FlowParam$/;"	l
param	src/main/scala/generator/cilk/cilk_for_test06.scala	/^  val param = Data_cilk_for_test06_FlowParam$/;"	l
param	src/main/scala/generator/cilk/cilk_for_test06_detach.scala	/^  val param = Data_cilk_for_test06_detach_FlowParam$/;"	l
param	src/main/scala/generator/cilk/cilk_for_test06_detach_2.scala	/^  val param = Data_cilk_for_test06_detach_2_FlowParam$/;"	l
param	src/main/scala/generator/cilk/cilk_for_test07.scala	/^  val param = Data_cilk_for_test07_FlowParam$/;"	l
param	src/main/scala/generator/cilk/cilk_for_test07_detach.scala	/^  val param = Data_cilk_for_test07_detach_FlowParam$/;"	l
param	src/main/scala/generator/cilk/cilk_for_test08.scala	/^  val param = Data_cilk_for_test08_FlowParam$/;"	l
param	src/main/scala/generator/cilk/cilk_for_test08_detach.scala	/^  val param = Data_cilk_for_test08_detach_FlowParam$/;"	l
param	src/main/scala/generator/cilk/cilk_for_test09.scala	/^  val param = Data_cilk_for_test09_FlowParam$/;"	l
param	src/main/scala/generator/cilk/cilk_for_test09_inner.scala	/^  val param = Data_cilk_for_test09_inner_FlowParam$/;"	l
param	src/main/scala/generator/cilk/cilk_for_test12.scala	/^  val param = Data_cilk_for_test12_FlowParam$/;"	l
param	src/main/scala/generator/cilk/cilk_for_test12_detach1.scala	/^  val param = Data_cilk_for_test12_detach1_FlowParam$/;"	l
param	src/main/scala/generator/cilk/cilk_for_test12_detach2.scala	/^  val param = Data_cilk_for_test12_detach2_FlowParam$/;"	l
param	src/main/scala/generator/cilk/cilk_for_test12_detach3.scala	/^  val param = Data_cilk_for_test12_detach3_FlowParam$/;"	l
param	src/main/scala/generator/cilk/cilk_spawn_test01.scala	/^  val param = Data_cilk_spawn_test01_FlowParam$/;"	l
param	src/main/scala/generator/cilk/cilk_spawn_test02.scala	/^  val param = Data_cilk_spawn_test02_FlowParam$/;"	l
param	src/main/scala/generator/cilk/fib.scala	/^  val param = Data_fib_FlowParam$/;"	l
param	src/main/scala/generator/cilk/fib_continue.scala	/^  val param = Data_fib_continue_FlowParam$/;"	l
param	src/main/scala/generator/cilk/mergesort.scala	/^  val param = Data_mergesort_FlowParam$/;"	l
param	src/main/scala/generator/cilk/mergesort_merge.scala	/^  val param = Data_mergesort_merge_FlowParam$/;"	l
param	src/main/scala/generator/cilk/stencil.scala	/^  val param = Data_stencil_FlowParam$/;"	l
param	src/main/scala/generator/cilk/stencil_detach1.scala	/^  val param = Data_stencil_detach1_FlowParam$/;"	l
param	src/main/scala/generator/cilk/stencil_inner.scala	/^  val param = Data_stencil_inner_FlowParam$/;"	l
param	src/main/scala/generator/test01.scala	/^  val param = Data_test01_FlowParam$/;"	l
param	src/main/scala/generator/test02.scala	/^  val param = Data_test02_FlowParam$/;"	l
param	src/main/scala/generator/test03.scala	/^  val param = Data_test03_FlowParam$/;"	l
param	src/main/scala/generator/test04.scala	/^  val param = Data_test04_FlowParam$/;"	l
param	src/main/scala/generator/test05.scala	/^  val param = Data_test05_FlowParam$/;"	l
param	src/main/scala/generator/test05b.scala	/^  val param = Data_test05b_FlowParam$/;"	l
param	src/main/scala/generator/test05c.scala	/^  val param = Data_test05c_FlowParam$/;"	l
param	src/main/scala/generator/test06.scala	/^  val param = Data_test06_FlowParam$/;"	l
param	src/main/scala/generator/test08.scala	/^  val param = Data_test08_FlowParam$/;"	l
param	src/main/scala/generator/test09.scala	/^  val param = Data_test09_FlowParam$/;"	l
param	src/main/scala/generator/test10.scala	/^  val param = Data_test10_FlowParam$/;"	l
param	src/main/scala/generator/test11.scala	/^  val param = Data_test11_FlowParam$/;"	l
param	src/main/scala/generator/test11_add.scala	/^  val param = Data_test11_add_FlowParam$/;"	l
param	src/main/scala/generator/test12.scala	/^  val param = Data_test12_FlowParam$/;"	l
param	src/main/scala/generator/test12_inner.scala	/^  val param = Data_test12_inner_FlowParam$/;"	l
param	src/main/scala/generator/test14.scala	/^  val param = Data_test14_FlowParam$/;"	l
param	src/main/scala/generator/test14_inner.scala	/^  val param = Data_test14_inner_FlowParam$/;"	l
param	src/main/scala/generator/test15.scala	/^  val param = Data_test15_FlowParam$/;"	l
param	src/main/scala/switches/Dyser.scala	/^  val param = switchParam$/;"	l
parentID	src/main/scala/concurrent/TaskController.scala	/^  var parentID = Wire(new ParentBundle())$/;"	l
parentIn	src/main/scala/concurrent/TaskController.scala	/^  val parentIn  = Vec(numParent, Flipped(Decoupled(new Call(argTypes))))  \/\/ Requests from calling block(s)$/;"	l
parentOut	src/main/scala/concurrent/TaskController.scala	/^  val parentOut = Vec(numParent, Decoupled(new Call(retTypes)))           \/\/ Returns to calling block(s)$/;"	l
parentTable	src/main/scala/concurrent/TaskController.scala	/^  val parentTable = SyncReadMem(1 << tlen, new ParentBundle())$/;"	l
parsenode	scripts/TypeStackFile.py	/^def parsenode(name,node):$/;"	f
parser	scripts/extract_activity.py	/^parser = argparse.ArgumentParser()$/;"	v
phi1	src/main/scala/generator/cilk/cilk_for_test01.scala	/^  val phi1 = Module (new PhiNode(NumInputs = 2, NumOuts = 4, ID = 1))$/;"	l
phi1	src/main/scala/generator/cilk/cilk_for_test02.scala	/^  val phi1 = Module (new PhiNode(NumInputs = 2, NumOuts = 3, ID = 1))$/;"	l
phi1	src/main/scala/generator/cilk/cilk_for_test04.scala	/^  val phi1 = Module (new PhiNode(NumInputs = 2, NumOuts = 3, ID = 1))$/;"	l
phi1	src/main/scala/generator/cilk/cilk_for_test05.scala	/^  val phi1 = Module (new PhiNode(NumInputs = 2, NumOuts = 3, ID = 1))$/;"	l
phi1	src/main/scala/generator/cilk/cilk_for_test06.scala	/^  val phi1 = Module(new PhiNode(NumInputs = 2, NumOuts = 3, ID = 1))$/;"	l
phi1	src/main/scala/generator/cilk/cilk_for_test06_detach.scala	/^  val phi1 = Module(new PhiNode(NumInputs = 2, NumOuts = 3, ID = 1))$/;"	l
phi1	src/main/scala/generator/cilk/cilk_for_test09_inner.scala	/^  val phi1 = Module (new PhiNode(NumInputs = 2, NumOuts = 2, ID = 1))$/;"	l
phi1	src/main/scala/generator/cilk/cilk_for_test12_detach1.scala	/^  val phi1 = Module (new PhiNode(NumInputs = 2, NumOuts = 2, ID = 1))$/;"	l
phi1	src/main/scala/generator/cilk/cilk_for_test12_detach2.scala	/^  val phi1 = Module (new PhiNode(NumInputs = 2, NumOuts = 3, ID = 1))$/;"	l
phi1	src/main/scala/generator/cilk/stencil.scala	/^  val phi1 = Module(new PhiNode(NumInputs = 2, NumOuts = 3, ID = 1))$/;"	l
phi1	src/main/scala/generator/cilk/stencil_inner.scala	/^  val phi1 = Module(new PhiNode(NumInputs = 2, NumOuts = 3, ID = 1))$/;"	l
phi1	src/main/scala/generator/test03.scala	/^  val phi1 = Module(new PhiNode(NumInputs = 2, NumOuts = 2, ID = 1))$/;"	l
phi1	src/main/scala/generator/test05.scala	/^  val phi1 = Module (new PhiNode(NumInputs = 2, NumOuts = 4, ID = 1))$/;"	l
phi1	src/main/scala/generator/test05b.scala	/^  val phi1 = Module (new PhiNode(NumInputs = 2, NumOuts = 2, ID = 1))$/;"	l
phi1	src/main/scala/generator/test05c.scala	/^  val phi1 = Module (new PhiNode(NumInputs = 2, NumOuts = 2, ID = 1))$/;"	l
phi1	src/main/scala/generator/test08.scala	/^  val phi1 = Module (new PhiNode(NumInputs = 2, NumOuts = 2, ID = 1))$/;"	l
phi1	src/main/scala/generator/test09.scala	/^  val phi1 = Module (new PhiNode(NumInputs = 2, NumOuts = 1, ID = 1))$/;"	l
phi1	src/main/scala/generator/test10.scala	/^  val phi1 = Module (new PhiNode(NumInputs = 2, NumOuts = 5, ID = 1))$/;"	l
phi1	src/main/scala/generator/test11.scala	/^  val phi1 = Module (new PhiNode(NumInputs = 2, NumOuts = 5, ID = 1))$/;"	l
phi1	src/main/scala/generator/test12.scala	/^  val phi1 = Module (new PhiNode(NumInputs = 2, NumOuts = 3, ID = 1))$/;"	l
phi1	src/main/scala/generator/test12_inner.scala	/^  val phi1 = Module (new PhiNode(NumInputs = 2, NumOuts = 2, ID = 1))$/;"	l
phi1	src/main/scala/generator/test14.scala	/^  val phi1 = Module (new PhiNode(NumInputs = 2, NumOuts = 2, ID = 1))$/;"	l
phi1	src/main/scala/generator/test14_inner.scala	/^  val phi1 = Module (new PhiNode(NumInputs = 2, NumOuts = 2, ID = 1))$/;"	l
phi1	src/main/scala/generator/test15.scala	/^  val phi1 = Module (new PhiNode(NumInputs = 2, NumOuts = 2, ID = 1))$/;"	l
phi10	src/main/scala/generator/test15.scala	/^  val phi10 = Module (new PhiNode(NumInputs = 2, NumOuts = 4, ID = 10))$/;"	l
phi10_in	src/main/scala/generator/test15.scala	/^  val phi10_in = Map($/;"	l
phi10_phi_in	src/main/scala/generator/test15.scala	/^  val phi10_phi_in = Map($/;"	l
phi12	src/main/scala/generator/test04.scala	/^  val phi12 = Module (new PhiNode(NumInputs = 2, NumOuts = 1, ID = 12))$/;"	l
phi12_in	src/main/scala/generator/test04.scala	/^  val phi12_in = Map($/;"	l
phi12_phi_in	src/main/scala/generator/test04.scala	/^  val phi12_phi_in = Map($/;"	l
phi13	src/main/scala/generator/test04.scala	/^  val phi13 = Module (new PhiNode(NumInputs = 2, NumOuts = 1, ID = 13))$/;"	l
phi13_in	src/main/scala/generator/test04.scala	/^  val phi13_in = Map($/;"	l
phi13_phi_in	src/main/scala/generator/test04.scala	/^  val phi13_phi_in = Map($/;"	l
phi14	src/main/scala/generator/cilk/bgemm_detach3.scala	/^  val phi14 = Module (new PhiNode(NumInputs = 2, NumOuts = 4, ID = 14))$/;"	l
phi14_in	src/main/scala/generator/cilk/bgemm_detach3.scala	/^  val phi14_in = Map($/;"	l
phi14_phi_in	src/main/scala/generator/cilk/bgemm_detach3.scala	/^  val phi14_phi_in = Map($/;"	l
phi15	src/main/scala/generator/cilk/mergesort_merge.scala	/^  val phi15 = Module (new PhiNode(NumInputs = 2, NumOuts = 5, ID = 15))$/;"	l
phi15_in	src/main/scala/generator/cilk/mergesort_merge.scala	/^  val phi15_in = Map($/;"	l
phi15_phi_in	src/main/scala/generator/cilk/mergesort_merge.scala	/^  val phi15_phi_in = Map($/;"	l
phi16	src/main/scala/generator/cilk/mergesort_merge.scala	/^  val phi16 = Module (new PhiNode(NumInputs = 2, NumOuts = 5, ID = 16))$/;"	l
phi16_in	src/main/scala/generator/cilk/mergesort_merge.scala	/^  val phi16_in = Map($/;"	l
phi16_phi_in	src/main/scala/generator/cilk/mergesort_merge.scala	/^  val phi16_phi_in = Map($/;"	l
phi17	src/main/scala/generator/cilk/mergesort_merge.scala	/^  val phi17 = Module (new PhiNode(NumInputs = 2, NumOuts = 4, ID = 17))$/;"	l
phi17_in	src/main/scala/generator/cilk/mergesort_merge.scala	/^  val phi17_in = Map($/;"	l
phi17_phi_in	src/main/scala/generator/cilk/mergesort_merge.scala	/^  val phi17_phi_in = Map($/;"	l
phi1_in	src/main/scala/generator/cilk/cilk_for_test01.scala	/^  val phi1_in = Map($/;"	l
phi1_in	src/main/scala/generator/cilk/cilk_for_test02.scala	/^  val phi1_in = Map($/;"	l
phi1_in	src/main/scala/generator/cilk/cilk_for_test04.scala	/^  val phi1_in = Map($/;"	l
phi1_in	src/main/scala/generator/cilk/cilk_for_test05.scala	/^  val phi1_in = Map($/;"	l
phi1_in	src/main/scala/generator/cilk/cilk_for_test06.scala	/^  val phi1_in = Map($/;"	l
phi1_in	src/main/scala/generator/cilk/cilk_for_test06_detach.scala	/^  val phi1_in = Map($/;"	l
phi1_in	src/main/scala/generator/cilk/cilk_for_test09_inner.scala	/^  val phi1_in = Map($/;"	l
phi1_in	src/main/scala/generator/cilk/cilk_for_test12_detach1.scala	/^  val phi1_in = Map($/;"	l
phi1_in	src/main/scala/generator/cilk/cilk_for_test12_detach2.scala	/^  val phi1_in = Map($/;"	l
phi1_in	src/main/scala/generator/cilk/stencil.scala	/^  val phi1_in = Map($/;"	l
phi1_in	src/main/scala/generator/cilk/stencil_inner.scala	/^  val phi1_in = Map($/;"	l
phi1_in	src/main/scala/generator/test03.scala	/^  val phi1_in = Map($/;"	l
phi1_in	src/main/scala/generator/test05.scala	/^  val phi1_in = Map($/;"	l
phi1_in	src/main/scala/generator/test05b.scala	/^  val phi1_in = Map($/;"	l
phi1_in	src/main/scala/generator/test05c.scala	/^  val phi1_in = Map($/;"	l
phi1_in	src/main/scala/generator/test08.scala	/^  val phi1_in = Map($/;"	l
phi1_in	src/main/scala/generator/test09.scala	/^  val phi1_in = Map($/;"	l
phi1_in	src/main/scala/generator/test10.scala	/^  val phi1_in = Map($/;"	l
phi1_in	src/main/scala/generator/test11.scala	/^  val phi1_in = Map($/;"	l
phi1_in	src/main/scala/generator/test12.scala	/^  val phi1_in = Map($/;"	l
phi1_in	src/main/scala/generator/test12_inner.scala	/^  val phi1_in = Map($/;"	l
phi1_in	src/main/scala/generator/test14.scala	/^  val phi1_in = Map($/;"	l
phi1_in	src/main/scala/generator/test14_inner.scala	/^  val phi1_in = Map($/;"	l
phi1_in	src/main/scala/generator/test15.scala	/^  val phi1_in = Map($/;"	l
phi1_phi_in	src/main/scala/generator/cilk/cilk_for_test01.scala	/^  val phi1_phi_in = Map($/;"	l
phi1_phi_in	src/main/scala/generator/cilk/cilk_for_test02.scala	/^  val phi1_phi_in = Map($/;"	l
phi1_phi_in	src/main/scala/generator/cilk/cilk_for_test04.scala	/^  val phi1_phi_in = Map($/;"	l
phi1_phi_in	src/main/scala/generator/cilk/cilk_for_test05.scala	/^  val phi1_phi_in = Map($/;"	l
phi1_phi_in	src/main/scala/generator/cilk/cilk_for_test06.scala	/^  val phi1_phi_in = Map($/;"	l
phi1_phi_in	src/main/scala/generator/cilk/cilk_for_test06_detach.scala	/^  val phi1_phi_in = Map($/;"	l
phi1_phi_in	src/main/scala/generator/cilk/cilk_for_test09_inner.scala	/^  val phi1_phi_in = Map($/;"	l
phi1_phi_in	src/main/scala/generator/cilk/cilk_for_test12_detach1.scala	/^  val phi1_phi_in = Map($/;"	l
phi1_phi_in	src/main/scala/generator/cilk/cilk_for_test12_detach2.scala	/^  val phi1_phi_in = Map($/;"	l
phi1_phi_in	src/main/scala/generator/cilk/stencil.scala	/^  val phi1_phi_in = Map($/;"	l
phi1_phi_in	src/main/scala/generator/cilk/stencil_inner.scala	/^  val phi1_phi_in = Map($/;"	l
phi1_phi_in	src/main/scala/generator/test03.scala	/^  val phi1_phi_in = Map($/;"	l
phi1_phi_in	src/main/scala/generator/test05.scala	/^  val phi1_phi_in = Map($/;"	l
phi1_phi_in	src/main/scala/generator/test05b.scala	/^  val phi1_phi_in = Map($/;"	l
phi1_phi_in	src/main/scala/generator/test05c.scala	/^  val phi1_phi_in = Map($/;"	l
phi1_phi_in	src/main/scala/generator/test08.scala	/^  val phi1_phi_in = Map($/;"	l
phi1_phi_in	src/main/scala/generator/test09.scala	/^  val phi1_phi_in = Map($/;"	l
phi1_phi_in	src/main/scala/generator/test10.scala	/^  val phi1_phi_in = Map($/;"	l
phi1_phi_in	src/main/scala/generator/test11.scala	/^  val phi1_phi_in = Map($/;"	l
phi1_phi_in	src/main/scala/generator/test12.scala	/^  val phi1_phi_in = Map($/;"	l
phi1_phi_in	src/main/scala/generator/test12_inner.scala	/^  val phi1_phi_in = Map($/;"	l
phi1_phi_in	src/main/scala/generator/test14.scala	/^  val phi1_phi_in = Map($/;"	l
phi1_phi_in	src/main/scala/generator/test14_inner.scala	/^  val phi1_phi_in = Map($/;"	l
phi1_phi_in	src/main/scala/generator/test15.scala	/^  val phi1_phi_in = Map($/;"	l
phi2	src/main/scala/generator/cilk/bgemm.scala	/^  val phi2 = Module (new PhiNode(NumInputs = 2, NumOuts = 3, ID = 2))$/;"	l
phi2	src/main/scala/generator/cilk/bgemm_detach3.scala	/^  val phi2 = Module (new PhiNode(NumInputs = 2, NumOuts = 4, ID = 2))$/;"	l
phi2	src/main/scala/generator/cilk/cilk_for_test09_inner.scala	/^  val phi2 = Module (new PhiNode(NumInputs = 2, NumOuts = 2, ID = 2))$/;"	l
phi2	src/main/scala/generator/test03.scala	/^  val phi2 = Module(new PhiNode(NumInputs = 2, NumOuts = 2, ID = 2))$/;"	l
phi2	src/main/scala/generator/test04.scala	/^  val phi2 = Module (new PhiNode(NumInputs = 2, NumOuts = 5, ID = 2))$/;"	l
phi2	src/main/scala/generator/test05c.scala	/^  val phi2 = Module (new PhiNode(NumInputs = 2, NumOuts = 2, ID = 2))$/;"	l
phi2	src/main/scala/generator/test08.scala	/^  val phi2 = Module (new PhiNode(NumInputs = 2, NumOuts = 2, ID = 2))$/;"	l
phi2	src/main/scala/generator/test09.scala	/^  val phi2 = Module (new PhiNode(NumInputs = 2, NumOuts = 3, ID = 2))$/;"	l
phi2	src/main/scala/generator/test12.scala	/^  val phi2 = Module (new PhiNode(NumInputs = 2, NumOuts = 2, ID = 2))$/;"	l
phi2	src/main/scala/generator/test12_inner.scala	/^  val phi2 = Module (new PhiNode(NumInputs = 2, NumOuts = 2, ID = 2))$/;"	l
phi2	src/main/scala/generator/test14.scala	/^  val phi2 = Module (new PhiNode(NumInputs = 2, NumOuts = 2, ID = 2))$/;"	l
phi2	src/main/scala/generator/test14_inner.scala	/^  val phi2 = Module (new PhiNode(NumInputs = 2, NumOuts = 2, ID = 2))$/;"	l
phi2	src/main/scala/generator/test15.scala	/^  val phi2 = Module (new PhiNode(NumInputs = 2, NumOuts = 2, ID = 2))$/;"	l
phi2_in	src/main/scala/generator/cilk/bgemm.scala	/^  val phi2_in = Map($/;"	l
phi2_in	src/main/scala/generator/cilk/bgemm_detach3.scala	/^  val phi2_in = Map($/;"	l
phi2_in	src/main/scala/generator/cilk/cilk_for_test09_inner.scala	/^  val phi2_in = Map($/;"	l
phi2_in	src/main/scala/generator/test03.scala	/^  val phi2_in = Map($/;"	l
phi2_in	src/main/scala/generator/test04.scala	/^  val phi2_in = Map($/;"	l
phi2_in	src/main/scala/generator/test05c.scala	/^  val phi2_in = Map($/;"	l
phi2_in	src/main/scala/generator/test08.scala	/^  val phi2_in = Map($/;"	l
phi2_in	src/main/scala/generator/test09.scala	/^  val phi2_in = Map($/;"	l
phi2_in	src/main/scala/generator/test12.scala	/^  val phi2_in = Map($/;"	l
phi2_in	src/main/scala/generator/test12_inner.scala	/^  val phi2_in = Map($/;"	l
phi2_in	src/main/scala/generator/test14.scala	/^  val phi2_in = Map($/;"	l
phi2_in	src/main/scala/generator/test14_inner.scala	/^  val phi2_in = Map($/;"	l
phi2_in	src/main/scala/generator/test15.scala	/^  val phi2_in = Map($/;"	l
phi2_phi_in	src/main/scala/generator/cilk/bgemm.scala	/^  val phi2_phi_in = Map($/;"	l
phi2_phi_in	src/main/scala/generator/cilk/bgemm_detach3.scala	/^  val phi2_phi_in = Map($/;"	l
phi2_phi_in	src/main/scala/generator/cilk/cilk_for_test09_inner.scala	/^  val phi2_phi_in = Map($/;"	l
phi2_phi_in	src/main/scala/generator/test03.scala	/^  val phi2_phi_in = Map($/;"	l
phi2_phi_in	src/main/scala/generator/test04.scala	/^  val phi2_phi_in = Map($/;"	l
phi2_phi_in	src/main/scala/generator/test05c.scala	/^  val phi2_phi_in = Map($/;"	l
phi2_phi_in	src/main/scala/generator/test08.scala	/^  val phi2_phi_in = Map($/;"	l
phi2_phi_in	src/main/scala/generator/test09.scala	/^  val phi2_phi_in = Map($/;"	l
phi2_phi_in	src/main/scala/generator/test12.scala	/^  val phi2_phi_in = Map($/;"	l
phi2_phi_in	src/main/scala/generator/test12_inner.scala	/^  val phi2_phi_in = Map($/;"	l
phi2_phi_in	src/main/scala/generator/test14.scala	/^  val phi2_phi_in = Map($/;"	l
phi2_phi_in	src/main/scala/generator/test14_inner.scala	/^  val phi2_phi_in = Map($/;"	l
phi2_phi_in	src/main/scala/generator/test15.scala	/^  val phi2_phi_in = Map($/;"	l
phi3	src/main/scala/generator/cilk/cilk_for_test07.scala	/^  val phi3 = Module (new PhiNode(NumInputs = 2, NumOuts = 2, ID = 3))$/;"	l
phi3	src/main/scala/generator/cilk/cilk_for_test08.scala	/^  val phi3 = Module (new PhiNode(NumInputs = 2, NumOuts = 2, ID = 3))$/;"	l
phi3	src/main/scala/generator/cilk/cilk_for_test09.scala	/^  val phi3 = Module(new PhiNode(NumInputs = 2, NumOuts = 2, ID = 3))$/;"	l
phi3	src/main/scala/generator/cilk/cilk_for_test12.scala	/^  val phi3 = Module (new PhiNode(NumInputs = 2, NumOuts = 2, ID = 3))$/;"	l
phi3	src/main/scala/generator/cilk/stencil_detach1.scala	/^  val phi3 = Module(new PhiNode(NumInputs = 2, NumOuts = 3, ID = 3))$/;"	l
phi3	src/main/scala/generator/test04.scala	/^  val phi3 = Module (new PhiNode(NumInputs = 2, NumOuts = 5, ID = 3))$/;"	l
phi3_in	src/main/scala/generator/cilk/cilk_for_test07.scala	/^  val phi3_in = Map($/;"	l
phi3_in	src/main/scala/generator/cilk/cilk_for_test08.scala	/^  val phi3_in = Map($/;"	l
phi3_in	src/main/scala/generator/cilk/cilk_for_test09.scala	/^  val phi3_in = Map($/;"	l
phi3_in	src/main/scala/generator/cilk/cilk_for_test12.scala	/^  val phi3_in = Map($/;"	l
phi3_in	src/main/scala/generator/cilk/stencil_detach1.scala	/^  val phi3_in = Map($/;"	l
phi3_in	src/main/scala/generator/test04.scala	/^  val phi3_in = Map($/;"	l
phi3_phi_in	src/main/scala/generator/cilk/cilk_for_test07.scala	/^  val phi3_phi_in = Map($/;"	l
phi3_phi_in	src/main/scala/generator/cilk/cilk_for_test08.scala	/^  val phi3_phi_in = Map($/;"	l
phi3_phi_in	src/main/scala/generator/cilk/cilk_for_test09.scala	/^  val phi3_phi_in = Map($/;"	l
phi3_phi_in	src/main/scala/generator/cilk/cilk_for_test12.scala	/^  val phi3_phi_in = Map($/;"	l
phi3_phi_in	src/main/scala/generator/cilk/stencil_detach1.scala	/^  val phi3_phi_in = Map($/;"	l
phi3_phi_in	src/main/scala/generator/test04.scala	/^  val phi3_phi_in = Map($/;"	l
phi4	src/main/scala/generator/cilk/bgemm_detach1.scala	/^  val phi4 = Module (new PhiNode(NumInputs = 2, NumOuts = 3, ID = 4))$/;"	l
phi4	src/main/scala/generator/cilk/bgemm_detach2.scala	/^  val phi4 = Module (new PhiNode(NumInputs = 2, NumOuts = 3, ID = 4))$/;"	l
phi42	src/main/scala/generator/cilk/mergesort_merge.scala	/^  val phi42 = Module (new PhiNode(NumInputs = 2, NumOuts = 2, ID = 42))$/;"	l
phi42_in	src/main/scala/generator/cilk/mergesort_merge.scala	/^  val phi42_in = Map($/;"	l
phi42_phi_in	src/main/scala/generator/cilk/mergesort_merge.scala	/^  val phi42_phi_in = Map($/;"	l
phi43	src/main/scala/generator/cilk/mergesort_merge.scala	/^  val phi43 = Module (new PhiNode(NumInputs = 2, NumOuts = 2, ID = 43))$/;"	l
phi43_in	src/main/scala/generator/cilk/mergesort_merge.scala	/^  val phi43_in = Map($/;"	l
phi43_phi_in	src/main/scala/generator/cilk/mergesort_merge.scala	/^  val phi43_phi_in = Map($/;"	l
phi4_in	src/main/scala/generator/cilk/bgemm_detach1.scala	/^  val phi4_in = Map($/;"	l
phi4_in	src/main/scala/generator/cilk/bgemm_detach2.scala	/^  val phi4_in = Map($/;"	l
phi4_phi_in	src/main/scala/generator/cilk/bgemm_detach1.scala	/^  val phi4_phi_in = Map($/;"	l
phi4_phi_in	src/main/scala/generator/cilk/bgemm_detach2.scala	/^  val phi4_phi_in = Map($/;"	l
phi5	src/main/scala/generator/test02.scala	/^  val phi5 = Module (new PhiNode(NumInputs = 2, NumOuts = 1, ID = 5))$/;"	l
phi5_in	src/main/scala/generator/test02.scala	/^  val phi5_in = Map($/;"	l
phi5_phi_in	src/main/scala/generator/test02.scala	/^  val phi5_phi_in = Map($/;"	l
phi6	src/main/scala/generator/test15.scala	/^  val phi6 = Module (new PhiNode(NumInputs = 2, NumOuts = 2, ID = 6))$/;"	l
phi6_in	src/main/scala/generator/test15.scala	/^  val phi6_in = Map($/;"	l
phi6_phi_in	src/main/scala/generator/test15.scala	/^  val phi6_phi_in = Map($/;"	l
phi_L_DELAY_0	src/main/scala/generator/cilk/stencil.scala	/^  val phi_L_DELAY_0 = Module(new LiveOutNode(NumOuts = 1, ID = 0))$/;"	l
phi_L_DELAY_0	src/main/scala/generator/cilk/stencil_detach1.scala	/^  val phi_L_DELAY_0 = Module(new LiveOutNode(NumOuts = 1, ID = 0))$/;"	l
phi_L_DELAY_1	src/main/scala/generator/cilk/stencil.scala	/^  val phi_L_DELAY_1 = Module(new LiveOutNode(NumOuts = 1, ID = 0))$/;"	l
phi_L_DELAY_1	src/main/scala/generator/cilk/stencil_detach1.scala	/^  val phi_L_DELAY_1 = Module(new LiveOutNode(NumOuts = 1, ID = 0))$/;"	l
pixels	src/test/scala/generator/cilk/cilk_for_test08_test.scala	/^  val pixels = 8$/;"	l
pixels	src/test/scala/generator/cilk/cilk_for_test09_test.scala	/^  val pixels = 8$/;"	l
plt	scripts/extract_activity.py	/^import matplotlib.pyplot as plt$/;"	i
pollingRead	src/test/scala/accel/AccelTests.scala	/^  val pollingRead = RegInit(false.B)$/;"	l
pollingRead	src/test/scala/accel/coredf/AccelTests01.scala	/^  val pollingRead = RegInit(false.B)$/;"	l
pollingRead	src/test/scala/accel/coredf/FilterDFTests.scala	/^  val pollingRead = RegInit(false.B)$/;"	l
pollingRead	src/test/scala/accel/coredf/VecFilterNoKernDFTests.scala	/^  val pollingRead = RegInit(false.B)$/;"	l
pp	scripts/extract_activity.py	/^pp = pprint.PrettyPrinter(indent=2)$/;"	v
pp	src/main/scala/utility/Printf.scala	/^  def pp(prefix: String, message: String, args: Bits*): Unit = {$/;"	m
pprint	scripts/extract_activity.py	/^import pprint$/;"	i
pred	src/main/scala/dataflow/AdditionDF.scala	/^    val pred = Decoupled(new ControlBundle)$/;"	l
pred	src/main/scala/dataflow/AllocaDF.scala	/^    val pred = Decoupled(new Bool())$/;"	l
pred	src/main/scala/dataflow/tests/Add01.scala	/^    val pred = Decoupled(new ControlBundle)$/;"	l
predArb	src/main/scala/control/BasicBlock.scala	/^  val predArb = Module(new RRArbiter(new ControlBundle(), NumInputs))$/;"	l
predValid	src/main/scala/node/LoadMaskNode.scala	/^  val predValid =  RegInit(Vec(Seq.fill(NumPredOps)(false.B)))$/;"	l
predValidInt	src/main/scala/node/LoadMaskNode.scala	/^  val predValidInt = predValid.asUInt$/;"	l
pred_R	src/main/scala/control/BasicBlock.scala	/^  val pred_R = RegInit(ControlBundle.default)$/;"	l
pred_R	src/main/scala/node/Alloca.scala	/^  val pred_R = RegInit(false.B)$/;"	l
pred_R	src/main/scala/node/TypCompute.scala	/^  val pred_R = RegInit(init = false.B)$/;"	l
pred_bundle_R	src/main/scala/node/HandShaking.scala	/^  val pred_bundle_R = Seq.fill(NumPredOps)(RegInit(ControlBundle.default))$/;"	l
pred_valid_R	src/main/scala/node/HandShaking.scala	/^  val pred_valid_R = Seq.fill(NumPredOps)(RegInit(false.B))$/;"	l
predicate	src/main/scala/FPU/FPCompare.scala	/^  val predicate = left_R.predicate & right_R.predicate\/\/ & IsEnable()$/;"	l
predicate	src/main/scala/FPU/FPComputeNode.scala	/^  val predicate = left_R.predicate & right_R.predicate\/\/ & IsEnable()$/;"	l
predicate	src/main/scala/FPU/FPUDiv.scala	/^  val predicate = a_R.predicate && b_R.predicate && enable_R.control$/;"	l
predicate	src/main/scala/FPU/ResizeFN.scala	/^  val predicate = Input_R.predicate \/\/  IsEnable()$/;"	l
predicate	src/main/scala/concurrent/Reattach.scala	/^  val predicate = ctrlPredicate_R(0).predicate$/;"	l
predicate	src/main/scala/concurrent/Sync.scala	/^  val predicate = IsEnable()$/;"	l
predicate	src/main/scala/control/BasicBlock.scala	/^  val predicate = predicate_in_R.asUInt().orR$/;"	l
predicate	src/main/scala/control/BasicBlock.scala	/^  val predicate = predicate_in_R.control$/;"	l
predicate	src/main/scala/control/BasicBlock.scala	/^  val predicate = predicate_in_R.map(_.control).reduceLeft(_ || _)$/;"	l
predicate	src/main/scala/interfaces/interfaces.scala	/^  val predicate = Bool()$/;"	l
predicate	src/main/scala/interfaces/interfaces.scala	/^val predicate = Bool ()$/;"	l
predicate	src/main/scala/node/Alloca.scala	/^  val predicate = alloca_R.predicate & IsEnable()$/;"	l
predicate	src/main/scala/node/BranchNode.scala	/^  val predicate = IsEnable()$/;"	l
predicate	src/main/scala/node/ComputeNode.scala	/^  val predicate = left_R.predicate & right_R.predicate\/\/ & IsEnable()$/;"	l
predicate	src/main/scala/node/CustomFunctionalUnit.scala	/^  val predicate = IsInPredicate() & IsEnable()$/;"	l
predicate	src/main/scala/node/Expand.scala	/^  val predicate = IsEnable()$/;"	l
predicate	src/main/scala/node/FusedComputeNode.scala	/^  val predicate = IsInPredicate() & IsEnable()$/;"	l
predicate	src/main/scala/node/GepNode.scala	/^  val predicate = IsEnable()$/;"	l
predicate	src/main/scala/node/GepNode.scala	/^  val predicate = base_addr_R.predicate & IsEnable()$/;"	l
predicate	src/main/scala/node/GepNode.scala	/^  val predicate = base_addr_R.predicate & idx1_R.predicate & IsEnable()$/;"	l
predicate	src/main/scala/node/IcmpNode.scala	/^  val predicate = left_R.predicate & right_R.predicate \/\/& IsEnable()$/;"	l
predicate	src/main/scala/node/JumpNode.scala	/^  val predicate = input_R.predicate & IsEnable()$/;"	l
predicate	src/main/scala/node/LoadSimple.scala	/^  val predicate = addr_R.predicate && enable_R.control$/;"	l
predicate	src/main/scala/node/StoreNode.scala	/^  val predicate = enable_R.control$/;"	l
predicate	src/main/scala/node/StoreSimple.scala	/^  val predicate = addr_R.predicate && data_R.predicate && enable_R.control$/;"	l
predicate	src/main/scala/node/TypCompute.scala	/^  val predicate = left_R.predicate & right_R.predicate & IsEnable()$/;"	l
predicate	src/main/scala/node/TypLoad.scala	/^  val predicate = addr_R.predicate && enable_R.control$/;"	l
predicate	src/main/scala/node/TypStore.scala	/^  val predicate = addr_R.predicate && data_R.predicate && enable_R.control$/;"	l
predicateIn	src/main/scala/concurrent/Reattach.scala	/^  val predicateIn = Vec(NumPredOps, Flipped(Decoupled(new DataBundle()(p))))$/;"	l
predicateIn	src/main/scala/control/BasicBlock.scala	/^  val predicateIn = Flipped(Decoupled(new ControlBundle()))$/;"	l
predicateIn	src/main/scala/control/BasicBlock.scala	/^  val predicateIn = Vec(NumInputs, Flipped(Decoupled(new ControlBundle())))$/;"	l
predicate_control_R	src/main/scala/control/BasicBlock.scala	/^  val predicate_control_R = RegInit(VecInit(Seq.fill(NumInputs)(false.B)))$/;"	l
predicate_in_R	src/main/scala/control/BasicBlock.scala	/^  val predicate_in_R = RegInit(ControlBundle.default)$/;"	l
predicate_in_R	src/main/scala/control/BasicBlock.scala	/^  val predicate_in_R = RegInit(VecInit(Seq.fill(NumInputs)(ControlBundle.default)))$/;"	l
predicate_in_R	src/main/scala/control/BasicBlock.scala	/^  val predicate_in_R = RegInit(VecInit(Seq.fill(NumInputs)(false.B)))$/;"	l
predicate_valid_R	src/main/scala/control/BasicBlock.scala	/^  val predicate_valid_R = RegInit(VecInit(Seq.fill(NumInputs)(false.B)))$/;"	l
predicate_valid_R	src/main/scala/control/BasicBlock.scala	/^  val predicate_valid_R = RegInit(false.B)$/;"	l
predicate_valid_W	src/main/scala/control/BasicBlock.scala	/^  val predicate_valid_W = WireInit(VecInit(Seq.fill(NumInputs)(false.B)))$/;"	l
pretty	src/main/scala/config/cde/Expression.scala	/^  def pretty(e:Ex[_]):String = {$/;"	m
prev	src/main/scala/arbiters/ArbiterTree.scala	/^  var prev = Seq.fill(0) { Module(new LockingRRArbiter(gen,4,count=Locks)).io }$/;"	l
prev	src/main/scala/muxes/Muxes.scala	/^  var prev = Seq.fill(0) { Module(new Demux(gen, 4)).io }$/;"	l
printInValid	src/main/scala/node/HandShaking.scala	/^  def printInValid(): Unit = {$/;"	m
printfDebug	src/main/scala/utility/Printf.scala	/^  def printfDebug(m: String, a: Bits*) { pp("\\n[DEBUG] ", printfSigil++m, a:_*) }$/;"	m
printfError	src/main/scala/utility/Printf.scala	/^  def printfError(m: String, a: Bits*) { pp("\\n[ERROR] ", printfSigil++m, a:_*) }$/;"	m
printfInfo	src/main/scala/utility/Printf.scala	/^  def printfInfo (m: String, a: Bits*) { pp("\\n[INFO] ",  printfSigil++m, a:_*) }$/;"	m
printfSigil	src/main/scala/utility/Printf.scala	/^  val printfSigil = ""$/;"	l
printfTodo	src/main/scala/utility/Printf.scala	/^  def printfTodo (m: String, a: Bits*) { pp("\\n[TODO] ",  printfSigil++m, a:_*) }$/;"	m
printfWarn	src/main/scala/utility/Printf.scala	/^  def printfWarn (m: String, a: Bits*) { pp("\\n[WARN] ",  printfSigil++m, a:_*) }$/;"	m
prot	src/main/scala/junctions/nasti.scala	/^  val prot   = UInt(width = nastiXProtBits)$/;"	l
ptr	src/main/scala/dataflow/filter/BasicLoader.scala	/^    val ptr    = Vec(FilterSize,Flipped(Decoupled(new DataBundle())))$/;"	l
ptr	src/main/scala/dataflow/filter/CacheLoader.scala	/^    val ptr    = Vec(FilterSize,Flipped(Decoupled(new DataBundle())))$/;"	l
ptr	src/main/scala/dataflow/filter/CacheVecLoader.scala	/^    val ptr    = Vec(FilterSize,Flipped(Decoupled(new TypBundle())))$/;"	l
ptr	src/main/scala/interfaces/interfaces.scala	/^  val ptr = UInt(xlen.W)$/;"	l
ptr	src/main/scala/memory/ReadMemoryController.scala	/^  val ptr = RegInit(0.U(log2Ceil(2).W))$/;"	l
ptr	src/main/scala/memory/WriteMemoryController.scala	/^  val ptr = RegInit(0.U(log2Ceil(2).W))$/;"	l
ptr	src/main/scala/node/LoadMaskNode.scala	/^  val ptr          = RegInit(0.U((2*xlen).W))$/;"	l
push	src/main/scala/config/cde/Parameters.scala	/^  def push():Parameters =$/;"	m
push	src/main/scala/config/cde/Parameters.scala	/^  final def push() = {$/;"	m
q	src/main/scala/config/cde/Parameters.scala	/^    var q = List[Ex[_]](c)$/;"	l
qNaN	src/main/scala/FPU/FPALU.scala	/^  def qNaN = UInt((BigInt(7) << (exp + sig - 3)) + (BigInt(1) << (sig - 2)), exp + sig + 1)$/;"	m
qos	src/main/scala/junctions/nasti.scala	/^  val qos    = UInt(width = nastiXQosBits)$/;"	l
r	src/main/scala/config/cde/Expression.scala	/^    val r = rank(e)$/;"	l
r	src/main/scala/junctions/nasti.scala	/^    val r = Wire(new NastiReadDataChannel)$/;"	l
r	src/main/scala/junctions/nasti.scala	/^  val r  = Decoupled(new NastiReadDataChannel).flip$/;"	l
rState	src/main/scala/accel/NastiMaster.scala	/^  val rState = RegInit(sIdle);    \/\/ Read data channel state$/;"	l
raddr	src/main/scala/arbiters/TypeStackFile.scala	/^  val raddr = Cat(ReadController.io.MemReq.bits.taskID, ReadController.io.MemReq.bits.addr(wordindex + log2Ceil(Size) - 1, wordindex))$/;"	l
raddr1	src/main/scala/regfile/RegFile.scala	/^  val raddr1 = Input(UInt(max(1,log2Ceil(size)).W))$/;"	l
raddr2	src/main/scala/regfile/RegFile.scala	/^  val raddr2 = Input(UInt(max(1,log2Ceil(size)).W))$/;"	l
raminit	src/test/scala/generator/cilk/cilk_for_test05_test.scala	/^  val raminit = RegInit(true.B)$/;"	l
raminit	src/test/scala/generator/test10_test.scala	/^  val raminit = RegInit(true.B)$/;"	l
raminit	src/test/scala/generator/test11_test.scala	/^  val raminit = RegInit(true.B)$/;"	l
raminit	src/test/scala/generator/test12_test.scala	/^  val raminit = RegInit(true.B)$/;"	l
rand_data	src/test/scala/accel/CacheTests.scala	/^  def rand_data = (((0 until (nastiXDataBits \/ 8)) foldLeft BigInt(0))((r, i) =>$/;"	m
rand_idx	src/test/scala/accel/CacheTests.scala	/^  def rand_idx = rnd.nextInt(1 << slen).U(slen.W)$/;"	m
rand_mask	src/test/scala/accel/CacheTests.scala	/^  def rand_mask = (rnd.nextInt((1 << (xlen \/ 8)) - 1) + 1).U((xlen \/ 8).W)$/;"	m
rand_off	src/test/scala/accel/CacheTests.scala	/^  def rand_off = (rnd.nextInt(1 << blen) & -4).U(blen.W)$/;"	m
rand_tag	src/test/scala/accel/CacheTests.scala	/^  def rand_tag = rnd.nextInt(1 << tlen).U(tlen.W)$/;"	m
rank	src/main/scala/config/cde/Expression.scala	/^    def rank(e:Ex[_]):Int = e match {$/;"	m
rdAddr	src/main/scala/accel/NastiMemSlave.scala	/^  val rdAddr = (dutMem.ar.bits.addr >> size).asUInt() + rCnt.asUInt()$/;"	l
rdata	src/main/scala/accel/Cache.scala	/^  val rdata = RegInit(0.U(128.W))$/;"	l
rdata1	src/main/scala/regfile/RegFile.scala	/^  val rdata1 = Output(UInt(xlen.W))$/;"	l
rdata2	src/main/scala/regfile/RegFile.scala	/^  val rdata2 = Output(UInt(xlen.W))$/;"	l
rdata_buf	src/main/scala/accel/Cache.scala	/^  val rdata_buf = RegEnable(rdata, ren_reg)$/;"	l
re	scripts/extract_activity.py	/^import re$/;"	i
read	src/main/scala/accel/Cache.scala	/^  val read = Mux(is_alloc_reg, refill_buf.asUInt, Mux(ren_reg, rdata, rdata_buf))$/;"	l
read	src/main/scala/accel/NastiMaster.scala	/^  val read = Bool()$/;"	l
read	src/test/scala/accel/CacheTests.scala	/^  val read  = data(idx)$/;"	l
readAddrReadyReg	src/main/scala/accel/DataBundleReg.scala	/^  val readAddrReadyReg = RegInit(false.B)$/;"	l
readAddrReadyReg	src/main/scala/accel/SimpleReg.scala	/^  val readAddrReadyReg = RegInit(false.B)$/;"	l
readAddrReg	src/main/scala/accel/DataBundleReg.scala	/^  val readAddrReg = RegInit(0.U(32.W))$/;"	l
readAddrReg	src/main/scala/accel/SimpleReg.scala	/^  val readAddrReg = RegInit(0.U(32.W))$/;"	l
readBankSelect	src/main/scala/accel/DataBundleReg.scala	/^  val readBankSelect = readAddrReg(bankSelBit)$/;"	l
readBankSelect	src/main/scala/accel/SimpleReg.scala	/^  val readBankSelect = readAddrReg(bankSelBit)$/;"	l
readData	src/main/scala/accel/CacheModel.scala	/^  val readData  = data(setIdx)$/;"	l
readRegSelect	src/main/scala/accel/DataBundleReg.scala	/^  val readRegSelect = readAddrReg(regSelBits+wordSelBits-1, wordSelBits)$/;"	l
readRegSelect	src/main/scala/accel/SimpleReg.scala	/^  val readRegSelect = readAddrReg(regSelBits+wordSelBits-1, wordSelBits)$/;"	l
readValidReg	src/main/scala/accel/DataBundleReg.scala	/^  val readValidReg = RegInit(false.B)$/;"	l
readValidReg	src/main/scala/accel/SimpleReg.scala	/^  val readValidReg = RegInit(false.B)$/;"	l
read_entry	src/main/scala/memory/ReadMemoryController.scala	/^    val read_entry = Module(new ReadTableEntry(i))$/;"	l
read_entry	src/main/scala/memory/ReadTypMemoryController.scala	/^    val read_entry = Module(new ReadTypTableEntry(i))$/;"	l
readidx	src/test/scala/memory/WriteMemoryController.scala	/^	var readidx = 0$/;"	l
ready	src/main/scala/accel/Core.scala	/^      val ready  = Output(Bool())$/;"	l
ready	src/main/scala/accel/DataBundleReg.scala	/^      val ready = Input(Bool())$/;"	l
ready	src/main/scala/accel/DataBundleReg.scala	/^  val ready = RegInit(init=0.U(cNum.W))$/;"	l
ready	src/main/scala/accel/SimpleReg.scala	/^      val ready = Input(Bool())$/;"	l
readyBits	src/main/scala/concurrent/TaskController.scala	/^  val readyBits = WireInit(VecInit(Seq.fill(numChild)(false.B)))$/;"	l
reattach10	src/main/scala/generator/cilk/cilk_for_test05.scala	/^  val reattach10 = Module(new Reattach(NumPredOps=1, ID=10))$/;"	l
reattach10	src/main/scala/generator/cilk/cilk_for_test06.scala	/^  val reattach10 = Module(new ReattachNode(ID = 10))$/;"	l
reattach10	src/main/scala/generator/cilk/stencil.scala	/^  val reattach10 = Module(new ReattachNode(ID = 10))$/;"	l
reattach10_in	src/main/scala/generator/cilk/cilk_for_test05.scala	/^  val reattach10_in = Map($/;"	l
reattach10_in	src/main/scala/generator/cilk/cilk_for_test06.scala	/^  val reattach10_in = Map($/;"	l
reattach10_in	src/main/scala/generator/cilk/stencil.scala	/^  val reattach10_in = Map($/;"	l
reattach11	src/main/scala/generator/cilk/bgemm.scala	/^  val reattach11 = Module(new Reattach(NumPredOps=1, ID=11))$/;"	l
reattach11	src/main/scala/generator/cilk/cilk_for_test01.scala	/^  val reattach11 = Module(new Reattach(NumPredOps=1, ID=11))$/;"	l
reattach11	src/main/scala/generator/cilk/cilk_for_test04.scala	/^  val reattach11 = Module(new Reattach(NumPredOps=1, ID=11))$/;"	l
reattach11	src/main/scala/generator/cilk/cilk_for_test06_detach.scala	/^  val reattach11 = Module(new ReattachNode(ID = 11))$/;"	l
reattach11	src/main/scala/generator/cilk/fib.scala	/^  val reattach11 = Module(new Reattach(NumPredOps=1, ID=11))$/;"	l
reattach11_in	src/main/scala/generator/cilk/bgemm.scala	/^  val reattach11_in = Map($/;"	l
reattach11_in	src/main/scala/generator/cilk/cilk_for_test01.scala	/^  val reattach11_in = Map($/;"	l
reattach11_in	src/main/scala/generator/cilk/cilk_for_test04.scala	/^  val reattach11_in = Map($/;"	l
reattach11_in	src/main/scala/generator/cilk/cilk_for_test06_detach.scala	/^  val reattach11_in = Map($/;"	l
reattach11_in	src/main/scala/generator/cilk/fib.scala	/^  val reattach11_in = Map($/;"	l
reattach12	src/main/scala/generator/cilk/cilk_for_test09.scala	/^  val reattach12 = Module(new Reattach(NumPredOps = 1, ID = 12))$/;"	l
reattach12_in	src/main/scala/generator/cilk/cilk_for_test09.scala	/^  val reattach12_in = Map($/;"	l
reattach14	src/main/scala/generator/cilk/bgemm_detach1.scala	/^  val reattach14 = Module(new Reattach(NumPredOps=1, ID=14))$/;"	l
reattach14	src/main/scala/generator/cilk/bgemm_detach2.scala	/^  val reattach14 = Module(new Reattach(NumPredOps=1, ID=14))$/;"	l
reattach14_in	src/main/scala/generator/cilk/bgemm_detach1.scala	/^  val reattach14_in = Map($/;"	l
reattach14_in	src/main/scala/generator/cilk/bgemm_detach2.scala	/^  val reattach14_in = Map($/;"	l
reattach15	src/main/scala/generator/cilk/fib.scala	/^  val reattach15 = Module(new Reattach(NumPredOps=1, ID=15))$/;"	l
reattach15_in	src/main/scala/generator/cilk/fib.scala	/^  val reattach15_in = Map($/;"	l
reattach16	src/main/scala/generator/cilk/cilk_for_test12.scala	/^  val reattach16 = Module(new Reattach(NumPredOps=1, ID=16))$/;"	l
reattach16	src/main/scala/generator/cilk/cilk_for_test12_detach2.scala	/^  val reattach16 = Module(new Reattach(NumPredOps=1, ID=16))$/;"	l
reattach16_in	src/main/scala/generator/cilk/cilk_for_test12.scala	/^  val reattach16_in = Map($/;"	l
reattach16_in	src/main/scala/generator/cilk/cilk_for_test12_detach2.scala	/^  val reattach16_in = Map($/;"	l
reattach19	src/main/scala/generator/cilk/cilk_for_test12_detach1.scala	/^  val reattach19 = Module(new Reattach(NumPredOps=1, ID=19))$/;"	l
reattach19	src/main/scala/generator/cilk/mergesort.scala	/^  val reattach19 = Module(new Reattach(NumPredOps=1, ID=19))$/;"	l
reattach19_in	src/main/scala/generator/cilk/cilk_for_test12_detach1.scala	/^  val reattach19_in = Map($/;"	l
reattach19_in	src/main/scala/generator/cilk/mergesort.scala	/^  val reattach19_in = Map($/;"	l
reattach22	src/main/scala/generator/cilk/mergesort.scala	/^  val reattach22 = Module(new Reattach(NumPredOps=1, ID=22))$/;"	l
reattach22_in	src/main/scala/generator/cilk/mergesort.scala	/^  val reattach22_in = Map($/;"	l
reattach4	src/main/scala/generator/cilk/cilk_spawn_test01.scala	/^  val reattach4 = Module(new Reattach(NumPredOps=1, ID=4))$/;"	l
reattach4_in	src/main/scala/generator/cilk/cilk_spawn_test01.scala	/^  val reattach4_in = Map($/;"	l
reattach5	src/main/scala/generator/cilk/cilk_spawn_test02.scala	/^  val reattach5 = Module(new Reattach(NumPredOps=1, ID=5))$/;"	l
reattach5_in	src/main/scala/generator/cilk/cilk_spawn_test02.scala	/^  val reattach5_in = Map($/;"	l
reattach7	src/main/scala/generator/cilk/cilk_for_test02.scala	/^  val reattach7 = Module(new Reattach(NumPredOps=1, ID=7))$/;"	l
reattach7_in	src/main/scala/generator/cilk/cilk_for_test02.scala	/^  val reattach7_in = Map($/;"	l
reattach9	src/main/scala/generator/cilk/cilk_for_test07.scala	/^  val reattach9 = Module(new Reattach(NumPredOps=1, ID=9))$/;"	l
reattach9	src/main/scala/generator/cilk/cilk_for_test08.scala	/^  val reattach9 = Module(new Reattach(NumPredOps=1, ID=9))$/;"	l
reattach9	src/main/scala/generator/cilk/cilk_spawn_test02.scala	/^  val reattach9 = Module(new Reattach(NumPredOps=1, ID=9))$/;"	l
reattach9_in	src/main/scala/generator/cilk/cilk_for_test07.scala	/^  val reattach9_in = Map($/;"	l
reattach9_in	src/main/scala/generator/cilk/cilk_for_test08.scala	/^  val reattach9_in = Map($/;"	l
reattach9_in	src/main/scala/generator/cilk/cilk_spawn_test02.scala	/^  val reattach9_in = Map($/;"	l
recFNsrc	src/main/scala/FPU/ResizeFN.scala	/^  val recFNsrc = Src.recode(Input_R.data)$/;"	l
recode	src/main/scala/FPU/FPALU.scala	/^  def recode(x: UInt) = hardfloat.recFNFromFN(exp, sig, x)$/;"	m
recodedWidth	src/main/scala/FPU/FPALU.scala	/^  def recodedWidth = ieeeWidth + 1$/;"	m
recvptr	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  reg [1:0] recvptr;$/;"	r
recvptr	src/main/scala/memory/ReadTypMemoryController.scala	/^  val recvptr = RegInit(0.U(log2Ceil(Beats + 1).W))$/;"	l
recvptr	src/main/scala/memory/WriteTypMemoryController.scala	/^  val recvptr        = RegInit(0.U((log2Ceil(Beats)+1).W))$/;"	l
recvptr	src/main/scala/node/TypLoad.scala	/^  val recvptr = RegInit(0.U(log2Ceil(Beats + 1).W))$/;"	l
refill_buf	src/main/scala/accel/Cache.scala	/^  val refill_buf = Reg(Vec(dataBeats, UInt(nastiXDataBits.W)))$/;"	l
regFileTests	src/test/scala/regfile/InputReg.scala	/^class regFileTests extends  FlatSpec with Matchers {$/;"	c
regSelBits	src/main/scala/accel/DataBundleReg.scala	/^  val regSelBits = log2Ceil(math.max(cNum+numCfg, sNum+numCfg))$/;"	l
regSelBits	src/main/scala/accel/SimpleReg.scala	/^  val regSelBits = log2Ceil(math.max(cNum+numCfg, sNum+numCfg))$/;"	l
regfile	src/main/scala/regfile/InputRegFile.scala	/^package regfile$/;"	p
regfile	src/main/scala/regfile/RegFile.scala	/^package regfile$/;"	p
regfile	src/test/scala/regfile/InputReg.scala	/^package regfile$/;"	p
region	src/main/scala/junctions/nasti.scala	/^  val region = UInt(width = nastiXRegionBits)$/;"	l
regs	src/main/scala/accel/Accelerator.scala	/^  val regs  = Module(new DataBundleReg(cNum, sNum))$/;"	l
regs	src/main/scala/regfile/RegFile.scala	/^  val regs = SyncReadMem(size,Vec(xlen\/8, UInt(8.W)))$/;"	l
regs_0	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  reg [7:0] regs_0 [0:3];$/;"	r
regs_0__T_20_addr	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire [1:0] regs_0__T_20_addr;$/;"	n
regs_0__T_20_addr_pipe_0	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  reg [1:0] regs_0__T_20_addr_pipe_0;$/;"	r
regs_0__T_20_data	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire [7:0] regs_0__T_20_data;$/;"	n
regs_0__T_33_addr	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire [1:0] regs_0__T_33_addr;$/;"	n
regs_0__T_33_addr_pipe_0	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  reg [1:0] regs_0__T_33_addr_pipe_0;$/;"	r
regs_0__T_33_data	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire [7:0] regs_0__T_33_data;$/;"	n
regs_0__T_58_addr	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire [1:0] regs_0__T_58_addr;$/;"	n
regs_0__T_58_data	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire [7:0] regs_0__T_58_data;$/;"	n
regs_0__T_58_en	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire  regs_0__T_58_en;$/;"	n
regs_0__T_58_mask	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire  regs_0__T_58_mask;$/;"	n
regs_1	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  reg [7:0] regs_1 [0:3];$/;"	r
regs_1__T_20_addr	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire [1:0] regs_1__T_20_addr;$/;"	n
regs_1__T_20_addr_pipe_0	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  reg [1:0] regs_1__T_20_addr_pipe_0;$/;"	r
regs_1__T_20_data	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire [7:0] regs_1__T_20_data;$/;"	n
regs_1__T_33_addr	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire [1:0] regs_1__T_33_addr;$/;"	n
regs_1__T_33_addr_pipe_0	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  reg [1:0] regs_1__T_33_addr_pipe_0;$/;"	r
regs_1__T_33_data	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire [7:0] regs_1__T_33_data;$/;"	n
regs_1__T_58_addr	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire [1:0] regs_1__T_58_addr;$/;"	n
regs_1__T_58_data	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire [7:0] regs_1__T_58_data;$/;"	n
regs_1__T_58_en	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire  regs_1__T_58_en;$/;"	n
regs_1__T_58_mask	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire  regs_1__T_58_mask;$/;"	n
ren	src/main/scala/accel/Cache.scala	/^  val ren = !wen && (is_idle || is_read) && io.cpu.req.valid$/;"	l
ren_reg	src/main/scala/accel/Cache.scala	/^  val ren_reg = RegNext(ren)$/;"	l
req	src/main/scala/accel/Cache.scala	/^  val req   = Flipped(Decoupled(new MemReq))$/;"	l
req	src/main/scala/accel/CacheModel.scala	/^  val req      = io.cpu.req.bits$/;"	l
req	src/main/scala/accel/NastiMaster.scala	/^      val req  = Flipped(Decoupled(new NastiMasterReq()))$/;"	l
req	src/main/scala/stack/StackMem.scala	/^  val req   = Flipped(Decoupled(new MemReq))$/;"	l
req	src/test/scala/accel/AccelTests.scala	/^  val req = RegInit(NastiMasterReq())$/;"	l
req	src/test/scala/accel/CacheTests.scala	/^    val req   = Flipped(Decoupled(new MemReq))$/;"	l
req	src/test/scala/accel/CacheTests.scala	/^  val req   = io.req.bits$/;"	l
req	src/test/scala/accel/coredf/AccelTests01.scala	/^  val req = RegInit(NastiMasterReq())$/;"	l
req	src/test/scala/accel/coredf/FilterDFTests.scala	/^  val req = RegInit(NastiMasterReq())$/;"	l
req	src/test/scala/accel/coredf/VecFilterNoKernDFTests.scala	/^  val req = RegInit(NastiMasterReq())$/;"	l
req	src/test/scala/memory/ReadMemoryController.scala	/^	var req  = false$/;"	l
req	src/test/scala/memory/WriteMemoryController.scala	/^	var req  = false$/;"	l
reqAddr	src/main/scala/accel/Core.scala	/^  val reqAddr = Reg(UInt(32.W))$/;"	l
reqArb	src/main/scala/memory/MemArbiter.scala	/^  val reqArb  = Module(new RRArbiter(new MemReq, NumPorts))$/;"	l
reqT	src/test/scala/memory/ReadMemoryController.scala	/^	var reqT = 0$/;"	l
reqT	src/test/scala/memory/WriteMemoryController.scala	/^	var reqT = 0$/;"	l
reqTag	src/main/scala/accel/Core.scala	/^  val reqTag = Reg(io.cache.req.bits.tag.cloneType)$/;"	l
reqValid	src/test/scala/accel/AccelTests.scala	/^  val reqValid = RegInit(false.B)$/;"	l
reqValid	src/test/scala/accel/coredf/AccelTests01.scala	/^  val reqValid = RegInit(false.B)$/;"	l
reqValid	src/test/scala/accel/coredf/FilterDFTests.scala	/^  val reqValid = RegInit(false.B)$/;"	l
reqValid	src/test/scala/accel/coredf/VecFilterNoKernDFTests.scala	/^  val reqValid = RegInit(false.B)$/;"	l
req_ready_r	src/main/scala/accel/NastiMaster.scala	/^  val req_ready_r = RegInit(false.B)$/;"	l
req_valid	src/main/scala/node/Alloca.scala	/^  val req_valid = RegInit(false.B)$/;"	l
request_R	src/main/scala/memory/ReadMemoryController.scala	/^  val request_R = RegInit(ReadReq.default)$/;"	l
request_R	src/main/scala/memory/ReadTypMemoryController.scala	/^  val request_R = RegInit(ReadReq.default)$/;"	l
request_R	src/main/scala/memory/WriteMemoryController.scala	/^  val request_R = RegInit(WriteReq.default)$/;"	l
request_R	src/main/scala/memory/WriteTypMemoryController.scala	/^  val request_R = RegInit(WriteReq.default)$/;"	l
request_R_RouteID	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  reg [15:0] request_R_RouteID;$/;"	r
request_valid_R	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  reg  request_valid_R;$/;"	r
request_valid_R	src/main/scala/memory/ReadMemoryController.scala	/^  val request_valid_R = RegInit(false.B)$/;"	l
request_valid_R	src/main/scala/memory/ReadTypMemoryController.scala	/^  val request_valid_R = RegInit(false.B)$/;"	l
request_valid_R	src/main/scala/memory/WriteMemoryController.scala	/^  val request_valid_R = RegInit(false.B)$/;"	l
request_valid_R	src/main/scala/memory/WriteTypMemoryController.scala	/^  val request_valid_R = RegInit(false.B)$/;"	l
res	src/main/scala/FPU/FPALU.scala	/^    var res = mapping(0)._2$/;"	l
res	src/main/scala/node/Alu.scala	/^    var res = mapping(0)._2$/;"	l
res	src/main/scala/node/Comparision.scala	/^    var res = mapping(0)._2$/;"	l
res	src/main/scala/node/Relay.scala	/^  val res = tokenCMP_w.asUInt.andR$/;"	l
resp	src/main/scala/accel/Cache.scala	/^  val resp  = Output(Valid(new MemResp))$/;"	l
resp	src/main/scala/accel/NastiMaster.scala	/^      val resp = Valid(new NastiMasterResp())$/;"	l
resp	src/main/scala/junctions/nasti.scala	/^  val resp = UInt(width = nastiXRespBits)$/;"	l
resp	src/main/scala/stack/StackMem.scala	/^  val resp  = Output(Valid(new MemResp))$/;"	l
resp	src/test/scala/accel/CacheTests.scala	/^    val resp  = Decoupled(new MemResp)$/;"	l
resp_R	src/main/scala/accel/PerfectCacheModel.scala	/^  val resp_R = Reg(io.cache.resp.bits.cloneType)$/;"	l
resp_R	src/main/scala/stack/StackMem.scala	/^  val resp_R = Reg(io.resp.cloneType)$/;"	l
resp_r	src/main/scala/accel/NastiMaster.scala	/^  val resp_r = RegInit(NastiMasterResp(0.U,0.U))$/;"	l
resp_valid_r	src/main/scala/accel/NastiMaster.scala	/^  val resp_valid_r = RegInit(false.B)$/;"	l
result	src/main/scala/accel/CacheModel.scala	/^    val result = Wire(UInt())$/;"	l
result	src/main/scala/accel/CacheModel.scala	/^    val result = dst;$/;"	l
result	src/main/scala/dataflow/AdditionDF.scala	/^    val result = Decoupled(new DataBundle)$/;"	l
result	src/main/scala/dataflow/AllocaDF.scala	/^    val result = Decoupled(new DataBundle)$/;"	l
result	src/main/scala/dataflow/TestCacheDataFlow.scala	/^			val result = Decoupled(new DataBundle)$/;"	l
result	src/main/scala/dataflow/tests/Add01.scala	/^    val result = Decoupled(new DataBundle)$/;"	l
result	src/main/scala/switches/example/ex1.scala	/^    val result = Decoupled(new DataBundle)$/;"	l
result	src/test/scala/generator/cilk/bgemm_test.scala	/^  var result = false$/;"	l
result	src/test/scala/generator/cilk/cilk_for_test01_test.scala	/^  var result = false$/;"	l
result	src/test/scala/generator/cilk/cilk_for_test02_test.scala	/^  var result = false$/;"	l
result	src/test/scala/generator/cilk/cilk_for_test04_test.scala	/^  var result = false$/;"	l
result	src/test/scala/generator/cilk/cilk_for_test05_test.scala	/^  var result = false$/;"	l
result	src/test/scala/generator/cilk/cilk_for_test06_test.scala	/^  var result = false$/;"	l
result	src/test/scala/generator/cilk/cilk_for_test07_test.scala	/^  var result = false$/;"	l
result	src/test/scala/generator/cilk/cilk_for_test08_test.scala	/^  var result = false$/;"	l
result	src/test/scala/generator/cilk/cilk_for_test09_test.scala	/^  var result = false$/;"	l
result	src/test/scala/generator/cilk/cilk_for_test12_test.scala	/^  var result = false$/;"	l
result	src/test/scala/generator/cilk/cilk_spawn_test01_test.scala	/^  var result = false$/;"	l
result	src/test/scala/generator/cilk/cilk_spawn_test02_test.scala	/^  var result = false$/;"	l
result	src/test/scala/generator/cilk/fib_test.scala	/^  var result = false$/;"	l
result	src/test/scala/generator/cilk/mergesort_test.scala	/^  var result = false$/;"	l
result	src/test/scala/generator/cilk/stencil_test.scala	/^  var result = false$/;"	l
result	src/test/scala/generator/test01_test.scala	/^  var result = false$/;"	l
result	src/test/scala/generator/test02_test.scala	/^  var result = false$/;"	l
result	src/test/scala/generator/test03_test.scala	/^  var result = false$/;"	l
result	src/test/scala/generator/test04_test.scala	/^  var result = false$/;"	l
result	src/test/scala/generator/test05_test.scala	/^  var result = false$/;"	l
result	src/test/scala/generator/test06_test.scala	/^  var result = false$/;"	l
result	src/test/scala/generator/test08_test.scala	/^  var result = false$/;"	l
result	src/test/scala/generator/test09_test.scala	/^  var result = false$/;"	l
result	src/test/scala/generator/test10_test.scala	/^  var result = false$/;"	l
result	src/test/scala/generator/test11_test.scala	/^  var result = false$/;"	l
result	src/test/scala/generator/test12_test.scala	/^  var result = false$/;"	l
result	src/test/scala/generator/test14_test.scala	/^  var result = false$/;"	l
result	src/test/scala/generator/test15_test.scala	/^  var result = false$/;"	l
ret1	src/main/scala/generator/test01.scala	/^  val ret1 = Module(new RetNode(retTypes=List(32),ID=1))$/;"	l
ret1	src/main/scala/generator/test11_add.scala	/^  val ret1 = Module(new RetNode(retTypes=List(32), ID=1))$/;"	l
ret10	src/main/scala/generator/test03.scala	/^  val ret10 = Module(new RetNode(retTypes = List(32), ID = 10))$/;"	l
ret10	src/main/scala/generator/test12.scala	/^  val ret10 = Module(new RetNode(retTypes=List(32), ID=10))$/;"	l
ret10	src/main/scala/generator/test14.scala	/^  val ret10 = Module(new RetNode(retTypes=List(32), ID=10))$/;"	l
ret10_in	src/main/scala/generator/test03.scala	/^  val ret10_in = Map($/;"	l
ret10_in	src/main/scala/generator/test12.scala	/^  val ret10_in = Map($/;"	l
ret10_in	src/main/scala/generator/test14.scala	/^  val ret10_in = Map($/;"	l
ret11	src/main/scala/generator/cilk/cilk_for_test02.scala	/^  val ret11 = Module(new RetNode(retTypes=List(32), ID=11))$/;"	l
ret11	src/main/scala/generator/cilk/cilk_for_test06_detach_2.scala	/^  val ret11 = Module(new RetNode(retTypes = List(32), ID = 11))$/;"	l
ret11	src/main/scala/generator/test05c.scala	/^  val ret11 = Module(new RetNode(retTypes=List(32), ID=11))$/;"	l
ret11_in	src/main/scala/generator/cilk/cilk_for_test02.scala	/^  val ret11_in = Map($/;"	l
ret11_in	src/main/scala/generator/cilk/cilk_for_test06_detach_2.scala	/^  val ret11_in = Map($/;"	l
ret11_in	src/main/scala/generator/test05c.scala	/^  val ret11_in = Map($/;"	l
ret12	src/main/scala/generator/cilk/bgemm_detach1.scala	/^  val ret12 = Module(new RetNode(retTypes=List(32), ID=12))$/;"	l
ret12	src/main/scala/generator/cilk/bgemm_detach2.scala	/^  val ret12 = Module(new RetNode(retTypes=List(32), ID=12))$/;"	l
ret12_in	src/main/scala/generator/cilk/bgemm_detach1.scala	/^  val ret12_in = Map($/;"	l
ret12_in	src/main/scala/generator/cilk/bgemm_detach2.scala	/^  val ret12_in = Map($/;"	l
ret14	src/main/scala/generator/cilk/cilk_for_test12.scala	/^  val ret14 = Module(new RetNode(retTypes=List(32), ID=14))$/;"	l
ret14	src/main/scala/generator/cilk/cilk_for_test12_detach2.scala	/^  val ret14 = Module(new RetNode(retTypes=List(32), ID=14))$/;"	l
ret14	src/main/scala/generator/cilk/cilk_spawn_test02.scala	/^  val ret14 = Module(new RetNode(retTypes=List(32), ID=14))$/;"	l
ret14	src/main/scala/generator/test10.scala	/^  val ret14 = Module(new RetNode(retTypes=List(32), ID=14))$/;"	l
ret14	src/main/scala/generator/test11.scala	/^  val ret14 = Module(new RetNode(retTypes=List(32), ID=14))$/;"	l
ret14_in	src/main/scala/generator/cilk/cilk_for_test12.scala	/^  val ret14_in = Map($/;"	l
ret14_in	src/main/scala/generator/cilk/cilk_for_test12_detach2.scala	/^  val ret14_in = Map($/;"	l
ret14_in	src/main/scala/generator/cilk/cilk_spawn_test02.scala	/^  val ret14_in = Map($/;"	l
ret14_in	src/main/scala/generator/test10.scala	/^  val ret14_in = Map($/;"	l
ret14_in	src/main/scala/generator/test11.scala	/^  val ret14_in = Map($/;"	l
ret15	src/main/scala/generator/cilk/cilk_for_test01.scala	/^  val ret15 = Module(new RetNode(retTypes=List(32), ID=15))$/;"	l
ret15	src/main/scala/generator/cilk/cilk_for_test05_detach.scala	/^  val ret15 = Module(new RetNode(retTypes=List(32), ID=15))$/;"	l
ret15	src/main/scala/generator/cilk/cilk_for_test07_detach.scala	/^  val ret15 = Module(new RetNode(retTypes=List(32), ID=15))$/;"	l
ret15	src/main/scala/generator/test04.scala	/^  val ret15 = Module(new RetNode(retTypes=List(32), ID=15))$/;"	l
ret15	src/main/scala/generator/test06.scala	/^  val ret15 = Module(new RetNode(retTypes=List(32), ID=15))$/;"	l
ret15_in	src/main/scala/generator/cilk/cilk_for_test01.scala	/^  val ret15_in = Map($/;"	l
ret15_in	src/main/scala/generator/cilk/cilk_for_test05_detach.scala	/^  val ret15_in = Map($/;"	l
ret15_in	src/main/scala/generator/cilk/cilk_for_test07_detach.scala	/^  val ret15_in = Map($/;"	l
ret15_in	src/main/scala/generator/test04.scala	/^  val ret15_in = Map($/;"	l
ret15_in	src/main/scala/generator/test06.scala	/^  val ret15_in = Map($/;"	l
ret16	src/main/scala/generator/test05b.scala	/^  val ret16 = Module(new RetNode(retTypes=List(32), ID=16))$/;"	l
ret16_in	src/main/scala/generator/test05b.scala	/^  val ret16_in = Map($/;"	l
ret17	src/main/scala/generator/cilk/cilk_for_test09.scala	/^  val ret17 = Module(new RetNode(retTypes = List(32), ID = 17))$/;"	l
ret17	src/main/scala/generator/cilk/cilk_for_test12_detach1.scala	/^  val ret17 = Module(new RetNode(retTypes=List(32), ID=17))$/;"	l
ret17_in	src/main/scala/generator/cilk/cilk_for_test09.scala	/^  val ret17_in = Map($/;"	l
ret17_in	src/main/scala/generator/cilk/cilk_for_test12_detach1.scala	/^  val ret17_in = Map($/;"	l
ret19	src/main/scala/generator/cilk/fib.scala	/^  val ret19 = Module(new RetNode(retTypes=List(32), ID=19))$/;"	l
ret19_in	src/main/scala/generator/cilk/fib.scala	/^  val ret19_in = Map($/;"	l
ret1_in	src/main/scala/generator/test01.scala	/^  val ret1_in = Map($/;"	l
ret1_in	src/main/scala/generator/test11_add.scala	/^  val ret1_in = Map($/;"	l
ret2	src/main/scala/generator/cilk/cilk_for_test07.scala	/^  val ret2 = Module(new RetNode(retTypes=List(32), ID=2))$/;"	l
ret2	src/main/scala/generator/cilk/cilk_for_test08.scala	/^  val ret2 = Module(new RetNode(retTypes=List(32), ID=2))$/;"	l
ret20	src/main/scala/generator/cilk/fib.scala	/^  val ret20 = Module(new RetNode(retTypes=List(32), ID=20)) \/\/ manual$/;"	l
ret20	src/main/scala/generator/test05.scala	/^  val ret20 = Module(new RetNode(retTypes=List(32), ID=20))$/;"	l
ret20_in	src/main/scala/generator/test05.scala	/^  val ret20_in = Map($/;"	l
ret21	src/main/scala/generator/cilk/stencil_detach1.scala	/^  val ret21 = Module(new RetNode(retTypes = List(32), ID = 21))$/;"	l
ret21_in	src/main/scala/generator/cilk/stencil_detach1.scala	/^  val ret21_in = Map($/;"	l
ret26	src/main/scala/generator/cilk/mergesort.scala	/^  val ret26 = Module(new RetNode(retTypes=List(32), ID=26))$/;"	l
ret26_in	src/main/scala/generator/cilk/mergesort.scala	/^  val ret26_in = Map($/;"	l
ret27	src/main/scala/generator/cilk/mergesort.scala	/^  val ret27 = Module(new RetNode(retTypes=List(32), ID=27))$/;"	l
ret27	src/main/scala/generator/cilk/stencil_inner.scala	/^  val ret27 = Module(new RetNode(retTypes = List(32), ID = 27))$/;"	l
ret27_in	src/main/scala/generator/cilk/stencil_inner.scala	/^  val ret27_in = Map($/;"	l
ret2_in	src/main/scala/generator/cilk/cilk_for_test07.scala	/^  val ret2_in = Map($/;"	l
ret2_in	src/main/scala/generator/cilk/cilk_for_test08.scala	/^  val ret2_in = Map($/;"	l
ret30	src/main/scala/generator/cilk/cilk_for_test08_detach.scala	/^  val ret30 = Module(new RetNode(retTypes=List(32), ID=30))$/;"	l
ret30_in	src/main/scala/generator/cilk/cilk_for_test08_detach.scala	/^  val ret30_in = Map($/;"	l
ret35	src/main/scala/generator/cilk/bgemm_detach3.scala	/^  val ret35 = Module(new RetNode(retTypes=List(32), ID=35))$/;"	l
ret35_in	src/main/scala/generator/cilk/bgemm_detach3.scala	/^  val ret35_in = Map($/;"	l
ret39	src/main/scala/generator/test15.scala	/^  val ret39 = Module(new RetNode(retTypes=List(32), ID=39))$/;"	l
ret39_in	src/main/scala/generator/test15.scala	/^  val ret39_in = Map($/;"	l
ret4	src/test/scala/concurrent/DecoupledTaskTest.scala	/^  val ret4 = Module(new RetNode(ID=3,retTypes=List(32)))$/;"	l
ret47	src/main/scala/generator/cilk/mergesort_merge.scala	/^  val ret47 = Module(new RetNode(retTypes=List(32), ID=47))$/;"	l
ret47_in	src/main/scala/generator/cilk/mergesort_merge.scala	/^  val ret47_in = Map($/;"	l
ret5	src/main/scala/generator/cilk/cilk_for_test02_mul.scala	/^  val ret5 = Module(new RetNode(retTypes=List(32), ID=5))$/;"	l
ret5	src/main/scala/generator/cilk/fib_continue.scala	/^  val ret5 = Module(new RetNode(retTypes=List(32), ID=5))$/;"	l
ret5_in	src/main/scala/generator/cilk/cilk_for_test02_mul.scala	/^  val ret5_in = Map($/;"	l
ret5_in	src/main/scala/generator/cilk/fib_continue.scala	/^  val ret5_in = Map($/;"	l
ret6	src/main/scala/generator/cilk/cilk_for_test12_detach3.scala	/^  val ret6 = Module(new RetNode(retTypes=List(32), ID=6))$/;"	l
ret6	src/main/scala/generator/test02.scala	/^  val ret6 = Module(new RetNode(retTypes=List(32), ID=6))$/;"	l
ret6_in	src/main/scala/generator/cilk/cilk_for_test12_detach3.scala	/^  val ret6_in = Map($/;"	l
ret6_in	src/main/scala/generator/test02.scala	/^  val ret6_in = Map($/;"	l
ret8	src/main/scala/generator/cilk/cilk_for_test04.scala	/^  val ret8 = Module(new RetNode(retTypes=List(32), ID=8))$/;"	l
ret8	src/main/scala/generator/cilk/cilk_for_test04_detach.scala	/^  val ret8 = Module(new RetNode(retTypes=List(32), ID=8))$/;"	l
ret8	src/main/scala/generator/cilk/cilk_for_test05.scala	/^  val ret8 = Module(new RetNode(retTypes=List(32), ID=8))$/;"	l
ret8	src/main/scala/generator/cilk/cilk_for_test06.scala	/^  val ret8 = Module(new RetNode(retTypes = List(32), ID = 8))$/;"	l
ret8	src/main/scala/generator/cilk/stencil.scala	/^  val ret8 = Module(new RetNode(retTypes = List(32), ID = 8))$/;"	l
ret8_in	src/main/scala/generator/cilk/cilk_for_test04.scala	/^  val ret8_in = Map($/;"	l
ret8_in	src/main/scala/generator/cilk/cilk_for_test04_detach.scala	/^  val ret8_in = Map($/;"	l
ret8_in	src/main/scala/generator/cilk/cilk_for_test05.scala	/^  val ret8_in = Map($/;"	l
ret8_in	src/main/scala/generator/cilk/cilk_for_test06.scala	/^  val ret8_in = Map($/;"	l
ret8_in	src/main/scala/generator/cilk/stencil.scala	/^  val ret8_in = Map($/;"	l
ret9	src/main/scala/generator/cilk/bgemm.scala	/^  val ret9 = Module(new RetNode(retTypes=List(32), ID=9))$/;"	l
ret9	src/main/scala/generator/cilk/cilk_for_test06_detach.scala	/^  val ret9 = Module(new RetNode(retTypes = List(32), ID = 9))$/;"	l
ret9	src/main/scala/generator/cilk/cilk_for_test09_inner.scala	/^  val ret9 = Module(new RetNode(retTypes=List(32), ID=9))$/;"	l
ret9	src/main/scala/generator/cilk/cilk_spawn_test01.scala	/^  val ret9 = Module(new RetNode(retTypes=List(32), ID=9))$/;"	l
ret9	src/main/scala/generator/test08.scala	/^  val ret9 = Module(new RetNode(retTypes=List(32), ID=9))$/;"	l
ret9	src/main/scala/generator/test09.scala	/^  val ret9 = Module(new RetNode(retTypes=List(32), ID=9))$/;"	l
ret9	src/main/scala/generator/test12_inner.scala	/^  val ret9 = Module(new RetNode(retTypes=List(32), ID=9))$/;"	l
ret9	src/main/scala/generator/test14_inner.scala	/^  val ret9 = Module(new RetNode(retTypes=List(32), ID=9))$/;"	l
ret9_in	src/main/scala/generator/cilk/bgemm.scala	/^  val ret9_in = Map($/;"	l
ret9_in	src/main/scala/generator/cilk/cilk_for_test06_detach.scala	/^  val ret9_in = Map($/;"	l
ret9_in	src/main/scala/generator/cilk/cilk_for_test09_inner.scala	/^  val ret9_in = Map($/;"	l
ret9_in	src/main/scala/generator/cilk/cilk_spawn_test01.scala	/^  val ret9_in = Map($/;"	l
ret9_in	src/main/scala/generator/test08.scala	/^  val ret9_in = Map($/;"	l
ret9_in	src/main/scala/generator/test09.scala	/^  val ret9_in = Map($/;"	l
ret9_in	src/main/scala/generator/test12_inner.scala	/^  val ret9_in = Map($/;"	l
ret9_in	src/main/scala/generator/test14_inner.scala	/^  val ret9_in = Map($/;"	l
retArb	src/main/scala/generator/cilk/fib.scala	/^  val retArb = Module(new Arbiter(new Call(List(32)),2))$/;"	l
retArb	src/main/scala/generator/cilk/mergesort.scala	/^  val retArb = Module(new Arbiter(new Call(List(32)),2))$/;"	l
retExpand	src/main/scala/concurrent/TaskController.scala	/^  val retExpand = Module(new ExpandNode(NumOuts=2,ID=0)(new Call(retTypes)))$/;"	l
retIn	src/main/scala/node/CallNode.scala	/^  val retIn   = Flipped(Decoupled(new Call(retTypes))) \/\/ From task$/;"	l
right_R	src/main/scala/FPU/FPCompare.scala	/^  val right_R = RegInit(DataBundle.default)$/;"	l
right_R	src/main/scala/FPU/FPComputeNode.scala	/^  val right_R = RegInit(DataBundle.default)$/;"	l
right_R	src/main/scala/node/BranchNode.scala	/^  val right_R = RegInit(DataBundle.default)$/;"	l
right_R	src/main/scala/node/ComputeNode.scala	/^  val right_R = RegInit(DataBundle.default)$/;"	l
right_R	src/main/scala/node/IcmpNode.scala	/^  val right_R = RegInit(DataBundle.default)$/;"	l
right_R	src/main/scala/node/TypCompute.scala	/^  val right_R = RegInit(TypBundle.default)$/;"	l
right_valid_R	src/main/scala/FPU/FPCompare.scala	/^  val right_valid_R = RegInit(false.B)$/;"	l
right_valid_R	src/main/scala/FPU/FPComputeNode.scala	/^  val right_valid_R = RegInit(false.B)$/;"	l
right_valid_R	src/main/scala/node/BranchNode.scala	/^  val right_valid_R = RegInit(false.B)$/;"	l
right_valid_R	src/main/scala/node/ComputeNode.scala	/^  val right_valid_R = RegInit(false.B)$/;"	l
right_valid_R	src/main/scala/node/IcmpNode.scala	/^  val right_valid_R = RegInit(false.B)$/;"	l
rmeta	src/main/scala/accel/Cache.scala	/^  val rmeta = Reg(new MetaData)$/;"	l
rnd	src/test/scala/accel/CacheTests.scala	/^  val rnd = new scala.util.Random$/;"	l
root	src/main/scala/config/cde/Parameters.scala	/^  def root(w:World) = {$/;"	m
root	src/main/scala/config/configurations.scala	/^  def root(p: Parameters) = p$/;"	m
rt	src/main/scala/config/cde/Expression.scala	/^      val rt = rank(t)$/;"	l
sAIdle	src/main/scala/accel/NastiMaster.scala	/^  val sAIdle :: sARead :: sAWrite :: sAWait :: Nil = Enum(4);$/;"	l
sIdle	src/main/scala/accel/CacheModel.scala	/^  val sIdle :: sWrite :: sWrAck :: sRead :: Nil = Enum(4)$/;"	l
sIdle	src/main/scala/accel/NastiMaster.scala	/^  val sIdle :: sWait :: Nil = Enum(2);$/;"	l
sIdle	src/test/scala/accel/AccelTests.scala	/^  val sIdle :: sNastiReadReq :: sNastiReadResp :: sNastiWriteReq :: sDone :: Nil = Enum(5)$/;"	l
sIdle	src/test/scala/accel/CacheTests.scala	/^  val sIdle :: sWrite :: sWrAck :: sRead :: Nil = Enum(4)$/;"	l
sIdle	src/test/scala/accel/coredf/AccelTests01.scala	/^  val sIdle :: sNastiReadReq :: sNastiReadResp :: sNastiWriteReq :: sDone :: Nil = Enum(5)$/;"	l
sIdle	src/test/scala/accel/coredf/FilterDFTests.scala	/^  val sIdle :: sNastiReadReq :: sNastiReadResp :: sNastiWriteReq :: sDone :: Nil = Enum(5)$/;"	l
sIdle	src/test/scala/accel/coredf/VecFilterNoKernDFTests.scala	/^  val sIdle :: sNastiReadReq :: sNastiReadResp :: sNastiWriteReq :: sDone :: Nil = Enum(5)$/;"	l
sIdle	src/test/scala/memory/deprecated/ReadWriteArbiter.scala	/^  val sIdle :: sReq :: sDone :: Nil = Enum(3)$/;"	l
sInit	src/test/scala/accel/CacheTests.scala	/^  val sInit :: sStart :: sWait :: sDone :: Nil = Enum(4)$/;"	l
sMemIdle	src/main/scala/accel/NastiMemSlave.scala	/^  val sMemIdle :: sMemWrite :: sMemWrAck :: sMemRead :: Nil = Enum(4)$/;"	l
sMemIdle	src/test/scala/accel/CacheTests.scala	/^  val sMemIdle :: sMemWrite :: sMemWrAck :: sMemRead :: Nil = Enum(4)$/;"	l
sMemIdle	src/test/scala/accel/coredf/AccelTests01.scala	/^  val sMemIdle :: sMemWrite :: sMemWrAck :: sMemRead :: Nil = Enum(4)$/;"	l
sMemIdle	src/test/scala/accel/coredf/FilterDFTests.scala	/^  val sMemIdle :: sMemWrite :: sMemWrAck :: sMemRead :: Nil = Enum(4)$/;"	l
sMemIdle	src/test/scala/accel/coredf/VecFilterNoKernDFTests.scala	/^  val sMemIdle :: sMemWrite :: sMemWrAck :: sMemRead :: Nil = Enum(4)$/;"	l
s_IDLE	src/main/scala/FPU/FPCompare.scala	/^  val s_IDLE :: s_COMPUTE :: Nil = Enum(2)$/;"	l
s_IDLE	src/main/scala/FPU/FPComputeNode.scala	/^  val s_IDLE :: s_COMPUTE :: Nil = Enum(2)$/;"	l
s_IDLE	src/main/scala/FPU/ResizeFN.scala	/^  val s_IDLE :: s_COMPUTE :: Nil = Enum(2)$/;"	l
s_IDLE	src/main/scala/concurrent/Reattach.scala	/^  val s_IDLE :: s_COMPUTE :: Nil = Enum(2)$/;"	l
s_IDLE	src/main/scala/concurrent/Sync.scala	/^  val s_IDLE :: s_COMPUTE :: s_DONE :: Nil = Enum(3)$/;"	l
s_IDLE	src/main/scala/concurrent/Sync.scala	/^  val s_IDLE :: s_COUNT :: s_WAIT :: Nil = Enum(3)$/;"	l
s_IDLE	src/main/scala/concurrent/TaskController.scala	/^  val s_IDLE :: s_COMPUTE :: Nil = Enum(2)$/;"	l
s_IDLE	src/main/scala/control/BasicBlock.scala	/^  val s_IDLE :: s_COMPUTE :: Nil = Enum(2)$/;"	l
s_IDLE	src/main/scala/control/BasicBlock.scala	/^  val s_IDLE :: s_LATCH :: Nil = Enum(2)$/;"	l
s_IDLE	src/main/scala/loop/LiveInNode.scala	/^  val s_IDLE :: s_LATCH :: Nil = Enum(2)$/;"	l
s_IDLE	src/main/scala/loop/LiveInNode.scala	/^  val s_IDLE :: s_LATCH :: s_VALIDOUT :: Nil = Enum(3)$/;"	l
s_IDLE	src/main/scala/loop/LiveOutNode.scala	/^  val s_IDLE :: s_LATCH :: s_VALIDOUT :: Nil = Enum(3)$/;"	l
s_IDLE	src/main/scala/node/BranchNode.scala	/^  val s_IDLE :: s_COMPUTE :: Nil = Enum(2)$/;"	l
s_IDLE	src/main/scala/node/ComputeNode.scala	/^  val s_IDLE :: s_COMPUTE :: Nil = Enum(2)$/;"	l
s_IDLE	src/main/scala/node/ConstNode.scala	/^  val s_IDLE :: s_COMPUTE :: Nil = Enum(2)$/;"	l
s_IDLE	src/main/scala/node/GepNode.scala	/^  val s_IDLE :: s_COMPUTE :: Nil = Enum(2)$/;"	l
s_IDLE	src/main/scala/node/IcmpNode.scala	/^  val s_IDLE :: s_COMPUTE :: Nil = Enum(2)$/;"	l
s_IDLE	src/main/scala/node/PhiNode.scala	/^  val s_IDLE :: s_COMPUTE :: Nil = Enum(2)$/;"	l
s_IDLE	src/main/scala/node/RetNode.scala	/^  val s_IDLE :: s_COMPUTE :: Nil = Enum(2)$/;"	l
s_INIT	src/main/scala/loop/LoopElement.scala	/^  val s_INIT :: s_LATCH :: Nil = Enum(2)$/;"	l
s_START	src/main/scala/control/BasicBlock.scala	/^  val s_START :: s_FEED :: s_END :: Nil = Enum(3)$/;"	l
s_idle	src/main/scala/FPU/FPUDiv.scala	/^  val s_idle :: s_RECEIVING :: s_Done :: Nil = Enum(3)$/;"	l
s_idle	src/main/scala/concurrent/Detach.scala	/^  val s_idle :: s_OUTPUT :: Nil = Enum(2)$/;"	l
s_idle	src/main/scala/concurrent/Reattach.scala	/^  val s_idle :: s_COMPUTE :: Nil = Enum(2)$/;"	l
s_idle	src/main/scala/control/BasicBlock.scala	/^  val s_idle :: s_LATCH :: s_COMPUTE :: Nil = Enum(3)$/;"	l
s_idle	src/main/scala/junctions/SplitDecoupled.scala	/^  val s_idle :: s_latch :: Nil = Enum(2)$/;"	l
s_idle	src/main/scala/junctions/SplitDecoupled.scala	/^  val s_idle :: s_latched :: Nil = Enum(2)$/;"	l
s_idle	src/main/scala/loop/LoopBlock.scala	/^  val s_idle :: s_active :: s_end :: Nil = Enum(3)$/;"	l
s_idle	src/main/scala/memory/ReadMemoryController.scala	/^  val s_idle :: s_SENDING :: s_RECEIVING :: s_Done :: Nil = Enum(4)$/;"	l
s_idle	src/main/scala/memory/ReadTypMemoryController.scala	/^  val s_idle :: s_SENDING :: s_RECEIVING :: s_Done :: Nil = Enum(4)$/;"	l
s_idle	src/main/scala/memory/WriteMemoryController.scala	/^  val s_idle :: s_SENDING :: s_RECEIVING :: s_Done :: Nil = Enum(4)$/;"	l
s_idle	src/main/scala/memory/WriteTypMemoryController.scala	/^  val s_idle :: s_SENDING :: s_RECEIVING :: s_Done :: Nil = Enum(4)$/;"	l
s_idle	src/main/scala/node/Alloca.scala	/^  val s_idle :: s_req :: s_done :: Nil = Enum(3)$/;"	l
s_idle	src/main/scala/node/BranchNode.scala	/^  val s_idle :: s_OUTPUT :: Nil = Enum(2)$/;"	l
s_idle	src/main/scala/node/CallInNode.scala	/^  val s_idle :: s_latched :: Nil = Enum(2)$/;"	l
s_idle	src/main/scala/node/CallOutNode.scala	/^  val s_idle :: s_Done :: Nil = Enum(2)$/;"	l
s_idle	src/main/scala/node/CustomFunctionalUnit.scala	/^  val s_idle :: s_LATCH :: s_COMPUTE :: Nil = Enum(3)$/;"	l
s_idle	src/main/scala/node/Expand.scala	/^  val s_idle :: s_LATCH :: s_COMPUTE :: Nil = Enum(3)$/;"	l
s_idle	src/main/scala/node/FusedComputeNode.scala	/^  val s_idle :: s_LATCH :: s_COMPUTE :: Nil = Enum(3)$/;"	l
s_idle	src/main/scala/node/JumpNode.scala	/^  val s_idle :: s_LATCH :: s_COMPUTE :: Nil = Enum(3)$/;"	l
s_idle	src/main/scala/node/LoadSimple.scala	/^  val s_idle :: s_RECEIVING :: s_Done :: Nil = Enum(3)$/;"	l
s_idle	src/main/scala/node/StoreNode.scala	/^  val s_idle :: s_WAITING :: s_RECEIVING :: s_Done :: Nil = Enum(4)$/;"	l
s_idle	src/main/scala/node/StoreSimple.scala	/^  val s_idle :: s_RECEIVING :: s_Done :: Nil = Enum(3)$/;"	l
s_idle	src/main/scala/node/TypCompute.scala	/^  val s_idle :: s_LATCH :: s_COMPUTE :: Nil = Enum(3)$/;"	l
s_idle	src/main/scala/node/TypLoad.scala	/^  val s_idle :: s_RECEIVING :: s_Done :: Nil = Enum(4)$/;"	l
s_idle	src/main/scala/node/TypStore.scala	/^  val s_idle :: s_RECEIVING :: s_Done :: Nil = Enum(3)$/;"	l
s_init	src/main/scala/node/LoadMaskNode.scala	/^  val s_init :: s_SENDING :: s_RECEIVING  :: s_Done :: Nil = Enum(4)$/;"	l
sdiv10	src/main/scala/generator/test05c.scala	/^  val sdiv10 = Module (new ComputeNode(NumOuts = 1, ID = 10, opCode = "udiv")(sign=false))$/;"	l
sdiv10_in	src/main/scala/generator/test05c.scala	/^  val sdiv10_in = Map($/;"	l
sdiv11	src/main/scala/generator/cilk/cilk_for_test12.scala	/^  val sdiv11 = Module (new ComputeNode(NumOuts = 1, ID = 11, opCode = "udiv")(sign=false))$/;"	l
sdiv11_in	src/main/scala/generator/cilk/cilk_for_test12.scala	/^  val sdiv11_in = Map($/;"	l
sdiv38	src/main/scala/generator/test15.scala	/^  val sdiv38 = Module (new ComputeNode(NumOuts = 1, ID = 38, opCode = "udiv")(sign=false))$/;"	l
sdiv38_in	src/main/scala/generator/test15.scala	/^  val sdiv38_in = Map($/;"	l
sel	src/main/scala/concurrent/TaskController.scala	/^  val sel = PriorityEncoder(readyBits)$/;"	l
sel	src/main/scala/muxes/Muxes.scala	/^    val sel = Input(UInt(glen.W))$/;"	l
sel	src/main/scala/muxes/Muxes.scala	/^    val sel = Input(UInt(max(1, log2Ceil(Nops)).W))$/;"	l
sel	src/main/scala/node/PhiNode.scala	/^  val sel = OHToUInt(mask_R)$/;"	l
sel	src/main/scala/stack/InterleavedStack.scala	/^  val sel = Seq.fill(NumPorts)(RegInit(0.U(numBits.W)))$/;"	l
sel	src/main/scala/stack/InterleavedStack.scala	/^  val sel = Seq.fill(numRAMs)(RegInit(0.U(log2Ceil(NumPorts).W)))$/;"	l
sendbytemask	src/main/scala/memory/ReadMemoryController.scala	/^  val sendbytemask = RegInit(0.U(((2) * xlen\/8).W))$/;"	l
sendbytemask	src/main/scala/memory/ReadTypMemoryController.scala	/^  val sendbytemask = RegInit(0.U(((Beats) * xlen \/ 8).W))$/;"	l
sendbytemask	src/main/scala/memory/WriteMemoryController.scala	/^  val sendbytemask = RegInit(0.U(((2) * xlen\/8).W))$/;"	l
sendbytemask	src/main/scala/memory/WriteTypMemoryController.scala	/^  val sendbytemask = RegInit(0.U(((Beats) * xlen\/8).W))$/;"	l
sendbytemask	src/main/scala/node/LoadMaskNode.scala	/^  val sendbytemask = RegInit(0.U((2*xlen).W))$/;"	l
sendptr	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  reg [1:0] sendptr;$/;"	r
sendptr	src/main/scala/memory/ReadTypMemoryController.scala	/^  val sendptr = RegInit(0.U(log2Ceil(Beats + 1).W))$/;"	l
sendptr	src/main/scala/memory/WriteTypMemoryController.scala	/^  val sendptr        = RegInit(0.U((log2Ceil(Beats)+1).W))$/;"	l
sendptr	src/main/scala/node/TypStore.scala	/^  val sendptr = Counter(Beats)$/;"	l
setIdx	src/main/scala/accel/CacheModel.scala	/^  val setIdx   = req.addr(blen + slen - 1, blen)  \/\/ set index of cache (assumes ways = 1)$/;"	l
sextTester	src/test/scala/node/sextNode.scala	/^class sextTester(df: SextNode)$/;"	c
sextTests	src/test/scala/node/sextNode.scala	/^class sextTests extends  FlatSpec with Matchers {$/;"	c
shutil	scripts/TypeStackFile.py	/^import shutil$/;"	i
sid	src/main/scala/concurrent/TaskController.scala	/^  val sid = UInt(tlen.W)  \/\/ Static ID (e.g. parent identifier)$/;"	l
sigWidth	src/main/scala/FPU/FPALU.scala	/^  def sigWidth  = sig$/;"	m
sign	src/main/scala/FPU/FPALU.scala	/^    val sign = x(sig + exp)$/;"	l
signed	src/main/scala/node/CustomFunctionalUnit.scala	/^  var signed = if (sign == true) "S" else "U"$/;"	l
signed	src/main/scala/node/FusedComputeNode.scala	/^  var signed = if (sign == true) "S" else "U"$/;"	l
signed	src/main/scala/node/TypCompute.scala	/^  var signed = if (sign == true) "S" else "U"$/;"	l
sigs	src/test/scala/node/LoadSimple.scala	/^  val sigs = Seq(c.io.enable.valid, c.io.enable.bits.control,$/;"	l
size	src/main/scala/accel/CacheModel.scala	/^  val size  = log2Ceil(nastiXDataBits \/ 8).U$/;"	l
size	src/main/scala/accel/NastiMemSlave.scala	/^  val size = log2Ceil(nastiXDataBits \/ 8).U$/;"	l
size	src/main/scala/accel/PerfectCacheModel.scala	/^  val size  = log2Ceil(nastiXDataBits \/ 8).U$/;"	l
size	src/main/scala/interfaces/interfaces.scala	/^  val size = UInt(xlen.W)$/;"	l
size	src/main/scala/junctions/nasti.scala	/^  val size   = UInt(width = nastiXSizeBits)$/;"	l
size	src/test/scala/accel/CacheTests.scala	/^  val size  = log2Ceil(nastiXDataBits \/ 8).U$/;"	l
size	src/test/scala/accel/coredf/AccelTests01.scala	/^  val size = log2Ceil(nastiXDataBits \/ 8).U$/;"	l
size	src/test/scala/accel/coredf/FilterDFTests.scala	/^  val size = log2Ceil(nastiXDataBits \/ 8).U$/;"	l
size	src/test/scala/accel/coredf/VecFilterNoKernDFTests.scala	/^  val size = log2Ceil(nastiXDataBits \/ 8).U$/;"	l
slave	src/main/scala/junctions/nasti.scala	/^  val slave = new NastiIO$/;"	l
slave_b_arb_id	src/main/scala/junctions/nasti.scala	/^    val slave_b_arb_id = io.slave.b.bits.id(arbIdBits - 1, 0)$/;"	l
slave_r_arb_id	src/main/scala/junctions/nasti.scala	/^    val slave_r_arb_id = io.slave.r.bits.id(arbIdBits - 1, 0)$/;"	l
slen	src/main/scala/accel/Cache.scala	/^  val slen   = log2Ceil(nSets)$/;"	l
sns	scripts/extract_activity.py	/^import seaborn as sns$/;"	i
splitIn	src/test/scala/concurrent/DecoupledTaskTest.scala	/^  val splitIn = Module(new SplitCall(List(32,32,32,32)))$/;"	l
sqlite3	scripts/TypeStackFile.py	/^import sqlite3$/;"	i
stack	src/main/scala/dataflow/AllocaDF.scala	/^  val stack = Module(new Stack(NumOps = 2))$/;"	l
stack	src/main/scala/stack/StackAlloca.scala	/^package stack$/;"	p
stack	src/test/scala/stack/StackTest.scala	/^package stack$/;"	p
stackSize	src/main/scala/generator/cilk/fib.scala	/^  val stackSize = 16 \/\/ bytes$/;"	l
stall	src/main/scala/accel/Core.scala	/^  val stall = !io.cache.resp.valid$/;"	l
start	src/main/scala/accel/Core.scala	/^      val start  = Input(Bool())$/;"	l
start	src/main/scala/accel/DataBundleReg.scala	/^      val start = Output(Bool())$/;"	l
start	src/main/scala/accel/SimpleReg.scala	/^      val start = Output(Bool())$/;"	l
start	src/main/scala/concurrent/Detach.scala	/^  val start = IsEnableValid() \/\/ Registered version of io.enable.fire$/;"	l
start	src/main/scala/concurrent/Reattach.scala	/^  val start = ctrlReady_R.asUInt.andR && IsEnableValid()$/;"	l
start	src/main/scala/concurrent/Sync.scala	/^  val start     = IsEnableValid()$/;"	l
start	src/main/scala/control/BasicBlock.scala	/^  val start = predicate_valid_R$/;"	l
start	src/main/scala/control/BasicBlock.scala	/^  val start = predicate_valid_R.asUInt().andR()$/;"	l
start	src/main/scala/control/BasicBlock.scala	/^  val start = predicate_valid_R.asUInt().orR$/;"	l
start	src/main/scala/dataflow/TestCacheDataFlow.scala	/^			val start = Input(Bool())$/;"	l
start	src/main/scala/dataflow/tests/Add01.scala	/^    val start = Input(new Bool())$/;"	l
start	src/main/scala/node/Alloca.scala	/^  val start = alloca_R.valid & IsEnableValid()$/;"	l
start	src/main/scala/node/BranchNode.scala	/^  val start = IsEnableValid()$/;"	l
start	src/main/scala/node/BranchNode.scala	/^  val start = cmp_valid_R & IsEnableValid()$/;"	l
start	src/main/scala/node/CustomFunctionalUnit.scala	/^  val start = IsInValid() & IsEnableValid()$/;"	l
start	src/main/scala/node/Expand.scala	/^  val start = indata_valid_R & IsEnableValid()$/;"	l
start	src/main/scala/node/FusedComputeNode.scala	/^  val start = IsInValid() & IsEnableValid()$/;"	l
start	src/main/scala/node/JumpNode.scala	/^  val start = input_valid_R & IsEnableValid()$/;"	l
start	src/main/scala/node/StoreNode.scala	/^  val start = addr_valid_R & data_valid_R & enable_valid_R$/;"	l
start	src/main/scala/node/TypCompute.scala	/^  val start = left_R.valid & right_R.valid & IsEnableValid()$/;"	l
start	src/main/scala/node/TypStore.scala	/^  val start = addr_valid_R & data_valid_R & IsPredValid() & IsEnableValid()$/;"	l
start	src/main/scala/switches/example/ex1.scala	/^    val start = Input(new Bool())$/;"	l
start_reg	src/main/scala/accel/coredf/CoreDF.scala	/^  val start_reg = RegInit(false.B)$/;"	l
start_reg	src/main/scala/accel/coredf/TestCacheDF.scala	/^  val start_reg = RegInit(false.B)$/;"	l
stat	src/main/scala/accel/Cache.scala	/^  val stat  = Output(UInt(xlen.W))$/;"	l
stat	src/main/scala/accel/Core.scala	/^      val stat   = Vec(sNum,Decoupled(new DataBundle()))$/;"	l
stat	src/main/scala/accel/DataBundleReg.scala	/^      val stat  = Vec(sNum,Flipped(Decoupled(new DataBundle())))$/;"	l
stat	src/main/scala/accel/SimpleReg.scala	/^      val stat = Input(Vec(sNum,UInt(xlen.W)))$/;"	l
statBank	src/main/scala/accel/DataBundleReg.scala	/^  val statBank = RegInit(Vec(Seq.fill(sNum+numCfg)(0.asUInt(xlen.W))))$/;"	l
statBank	src/main/scala/accel/SimpleReg.scala	/^  val statBank = RegInit(Vec(Seq.fill(sNum+numCfg)(0.asUInt(xlen.W))))$/;"	l
state	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  reg [1:0] state;$/;"	r
state	src/main/scala/FPU/FPCompare.scala	/^  val state = RegInit(s_IDLE)$/;"	l
state	src/main/scala/FPU/FPComputeNode.scala	/^  val state = RegInit(s_IDLE)$/;"	l
state	src/main/scala/FPU/FPUDiv.scala	/^  val state = RegInit(s_idle)$/;"	l
state	src/main/scala/FPU/ResizeFN.scala	/^  val state = RegInit(s_IDLE)$/;"	l
state	src/main/scala/accel/Cache.scala	/^  val state = RegInit(s_IDLE)$/;"	l
state	src/main/scala/accel/CacheModel.scala	/^  val state = RegInit(sIdle)$/;"	l
state	src/main/scala/accel/Core.scala	/^  val state = RegInit(init = sIdle)$/;"	l
state	src/main/scala/accel/coredf/CoreDF.scala	/^  val state = RegInit(init = s_idle)$/;"	l
state	src/main/scala/accel/coredf/TestCacheDF.scala	/^  val state = RegInit(init = s_idle)$/;"	l
state	src/main/scala/concurrent/Detach.scala	/^  val state = RegInit(s_idle)$/;"	l
state	src/main/scala/concurrent/Reattach.scala	/^  val state = RegInit(s_IDLE)$/;"	l
state	src/main/scala/concurrent/Reattach.scala	/^  val state = RegInit(s_idle)$/;"	l
state	src/main/scala/concurrent/Sync.scala	/^  val state = RegInit(s_IDLE)$/;"	l
state	src/main/scala/concurrent/TaskController.scala	/^  val state = RegInit(s_IDLE)$/;"	l
state	src/main/scala/control/BasicBlock.scala	/^  val state = RegInit(s_IDLE)$/;"	l
state	src/main/scala/control/BasicBlock.scala	/^  val state = RegInit(s_START)$/;"	l
state	src/main/scala/control/BasicBlock.scala	/^  val state = RegInit(s_idle)$/;"	l
state	src/main/scala/junctions/SplitDecoupled.scala	/^  val state = RegInit(s_idle)$/;"	l
state	src/main/scala/loop/LiveInNode.scala	/^  val state = RegInit(s_IDLE)$/;"	l
state	src/main/scala/loop/LiveOutNode.scala	/^  val state = RegInit(s_IDLE)$/;"	l
state	src/main/scala/loop/LoopBlock.scala	/^  val state = RegInit(s_idle)$/;"	l
state	src/main/scala/loop/LoopElement.scala	/^  val state = RegInit(s_INIT)$/;"	l
state	src/main/scala/memory/ReadMemoryController.scala	/^  val state = RegInit(s_idle)$/;"	l
state	src/main/scala/memory/ReadTypMemoryController.scala	/^  val state = RegInit(s_idle)$/;"	l
state	src/main/scala/memory/UnifiedController.scala	/^  val state = RegInit(init = sIdle)$/;"	l
state	src/main/scala/memory/UnifiedTypController.scala	/^  val state = RegInit(init = sIdle)$/;"	l
state	src/main/scala/memory/WriteMemoryController.scala	/^  val state = RegInit(s_idle)$/;"	l
state	src/main/scala/memory/WriteTypMemoryController.scala	/^  val state = RegInit(s_idle)$/;"	l
state	src/main/scala/node/Alloca.scala	/^  val state = RegInit(s_idle)$/;"	l
state	src/main/scala/node/BranchNode.scala	/^  val state = RegInit(s_IDLE)$/;"	l
state	src/main/scala/node/BranchNode.scala	/^  val state = RegInit(s_idle)$/;"	l
state	src/main/scala/node/CallInNode.scala	/^  val state = RegInit(s_idle)$/;"	l
state	src/main/scala/node/CallOutNode.scala	/^  val state = RegInit(s_idle)$/;"	l
state	src/main/scala/node/ComputeNode.scala	/^  val state = RegInit(s_IDLE)$/;"	l
state	src/main/scala/node/ConstNode.scala	/^  val state = RegInit(s_IDLE)$/;"	l
state	src/main/scala/node/CustomFunctionalUnit.scala	/^  val state = RegInit(s_idle)$/;"	l
state	src/main/scala/node/Expand.scala	/^  val state = RegInit(s_idle)$/;"	l
state	src/main/scala/node/FusedComputeNode.scala	/^  val state = RegInit(s_idle)$/;"	l
state	src/main/scala/node/GepNode.scala	/^  val state = RegInit(s_IDLE)$/;"	l
state	src/main/scala/node/IcmpNode.scala	/^  val state = RegInit(s_IDLE)$/;"	l
state	src/main/scala/node/JumpNode.scala	/^  val state = RegInit(s_idle)$/;"	l
state	src/main/scala/node/LoadMaskNode.scala	/^  val state = RegInit(s_init)$/;"	l
state	src/main/scala/node/LoadSimple.scala	/^  val state = RegInit(s_idle)$/;"	l
state	src/main/scala/node/PhiNode.scala	/^  val state = RegInit(s_IDLE)$/;"	l
state	src/main/scala/node/RetNode.scala	/^  val state = RegInit(s_IDLE)$/;"	l
state	src/main/scala/node/StoreNode.scala	/^  val state = RegInit(s_idle)$/;"	l
state	src/main/scala/node/StoreSimple.scala	/^  val state = RegInit(s_idle)$/;"	l
state	src/main/scala/node/TypCompute.scala	/^  val state = RegInit(s_idle)$/;"	l
state	src/main/scala/node/TypLoad.scala	/^  val state = RegInit(s_idle)$/;"	l
state	src/main/scala/node/TypStore.scala	/^  val state = RegInit(s_idle)$/;"	l
state	src/test/scala/accel/CacheTests.scala	/^  val state = RegInit(sIdle)$/;"	l
state	src/test/scala/accel/CacheTests.scala	/^  val state = RegInit(sInit)$/;"	l
state	src/test/scala/memory/deprecated/ReadWriteArbiter.scala	/^  val state = RegInit(sIdle)$/;"	l
stencil	src/test/scala/generator/cilk/stencil_test.scala	/^  val stencil = Module(new stencilDF())$/;"	l
stencilDF	src/main/scala/generator/cilk/stencil.scala	/^class stencilDF(implicit p: Parameters) extends stencilDFIO()(p) {$/;"	c
stencilDFIO	src/main/scala/generator/cilk/stencil.scala	/^abstract class stencilDFIO(implicit val p: Parameters) extends Module with CoreParams {$/;"	c
stencilMain	src/main/scala/generator/cilk/stencil.scala	/^object stencilMain extends App {$/;"	c
stencilMainDirect	src/test/scala/generator/cilk/stencil_test.scala	/^class stencilMainDirect(implicit p: Parameters) extends stencilMainIO {$/;"	c
stencilMainIO	src/test/scala/generator/cilk/stencil_test.scala	/^class stencilMainIO(implicit val p: Parameters) extends Module with CoreParams with CacheParams {$/;"	c
stencilMainTM	src/test/scala/generator/cilk/stencil_test.scala	/^class stencilMainTM(implicit p: Parameters) extends stencilMainIO {$/;"	c
stencilTest01	src/test/scala/generator/cilk/stencil_test.scala	/^class stencilTest01[T <: stencilMainIO](c: T) extends PeekPokeTester(c) {$/;"	c
stencilTester1	src/test/scala/generator/cilk/stencil_test.scala	/^class stencilTester1 extends FlatSpec with Matchers {$/;"	c
stencilTester2	src/test/scala/generator/cilk/stencil_test.scala	/^class stencilTester2 extends FlatSpec with Matchers {$/;"	c
stencil_detach1	src/test/scala/generator/cilk/stencil_test.scala	/^  val stencil_detach1 = Module(new stencil_detach1DF())$/;"	l
stencil_detach1	src/test/scala/generator/cilk/stencil_test.scala	/^  val stencil_detach1 = for (i <- 0 until children) yield {$/;"	l
stencil_detach1DF	src/main/scala/generator/cilk/stencil_detach1.scala	/^class stencil_detach1DF(implicit p: Parameters) extends stencil_detach1DFIO()(p) {$/;"	c
stencil_detach1DFIO	src/main/scala/generator/cilk/stencil_detach1.scala	/^abstract class stencil_detach1DFIO(implicit val p: Parameters) extends Module with CoreParams {$/;"	c
stencil_detach1Main	src/main/scala/generator/cilk/stencil_detach1.scala	/^object stencil_detach1Main extends App {$/;"	c
stencil_inner	src/test/scala/generator/cilk/stencil_test.scala	/^  val stencil_inner = Module(new stencil_innerDF())$/;"	l
stencil_inner	src/test/scala/generator/cilk/stencil_test.scala	/^  val stencil_inner = for (i <- 0 until children) yield {$/;"	l
stencil_innerDF	src/main/scala/generator/cilk/stencil_inner.scala	/^class stencil_innerDF(implicit p: Parameters) extends stencil_innerDFIO()(p) {$/;"	c
stencil_innerDFIO	src/main/scala/generator/cilk/stencil_inner.scala	/^abstract class stencil_innerDFIO(implicit val p: Parameters) extends Module with CoreParams {$/;"	c
stencil_innerMain	src/main/scala/generator/cilk/stencil_inner.scala	/^object stencil_innerMain extends App {$/;"	c
store	src/main/scala/dataflow/MemDataFlow.scala	/^    val store = Module(new UnTypStore(NumPredOps=0,NumSuccOps=1,NumOuts=1,ID=i,RouteID=i))$/;"	l
store1	src/main/scala/generator/cilk/cilk_for_test09.scala	/^  val store1 = Module(new UnTypStore(NumPredOps = 0, NumSuccOps = 0, NumOuts = 1, ID = 1, RouteID = 0))$/;"	l
store1	src/main/scala/generator/cilk/cilk_for_test12.scala	/^  val store1 = Module(new UnTypStore(NumPredOps=0, NumSuccOps=0, NumOuts=1,ID=1,RouteID=0))$/;"	l
store10	src/main/scala/generator/cilk/cilk_for_test09.scala	/^  val store10 = Module(new UnTypStore(NumPredOps = 0, NumSuccOps = 0, NumOuts = 1, ID = 10, RouteID = 1))$/;"	l
store10	src/main/scala/generator/test10.scala	/^  val store10 = Module(new UnTypStore(NumPredOps=0, NumSuccOps=0, NumOuts=1,ID=10,RouteID=0))$/;"	l
store10	src/main/scala/generator/test11.scala	/^  val store10 = Module(new UnTypStore(NumPredOps=0, NumSuccOps=0, NumOuts=1,ID=10,RouteID=0))$/;"	l
store10_in	src/main/scala/generator/cilk/cilk_for_test09.scala	/^  val store10_in = Map($/;"	l
store10_in	src/main/scala/generator/test10.scala	/^  val store10_in = Map($/;"	l
store10_in	src/main/scala/generator/test11.scala	/^  val store10_in = Map($/;"	l
store12	src/main/scala/generator/cilk/cilk_for_test05_detach.scala	/^  val store12 = Module(new UnTypStore(NumPredOps=0, NumSuccOps=0, NumOuts=1,ID=12,RouteID=0))$/;"	l
store12	src/main/scala/generator/cilk/cilk_for_test12.scala	/^  val store12 = Module(new UnTypStore(NumPredOps=0, NumSuccOps=1, NumOuts=1,ID=12,RouteID=1))$/;"	l
store12	src/main/scala/generator/cilk/cilk_for_test12_detach1.scala	/^  val store12 = Module(new UnTypStore(NumPredOps=0, NumSuccOps=0, NumOuts=1,ID=12,RouteID=0))$/;"	l
store12	src/main/scala/generator/cilk/cilk_for_test12_detach2.scala	/^  val store12 = Module(new UnTypStore(NumPredOps=0, NumSuccOps=0, NumOuts=1,ID=12,RouteID=0))$/;"	l
store12	src/main/scala/generator/test05b.scala	/^  val store12 = Module(new UnTypStore(NumPredOps=0, NumSuccOps=1, NumOuts=1,ID=12,RouteID=0))$/;"	l
store12	src/main/scala/generator/test06.scala	/^  val store12 = Module(new UnTypStore(NumPredOps=0, NumSuccOps=1, NumOuts=1,ID=12,RouteID=2))$/;"	l
store12_in	src/main/scala/generator/cilk/cilk_for_test05_detach.scala	/^  val store12_in = Map($/;"	l
store12_in	src/main/scala/generator/cilk/cilk_for_test12.scala	/^  val store12_in = Map($/;"	l
store12_in	src/main/scala/generator/cilk/cilk_for_test12_detach1.scala	/^  val store12_in = Map($/;"	l
store12_in	src/main/scala/generator/cilk/cilk_for_test12_detach2.scala	/^  val store12_in = Map($/;"	l
store12_in	src/main/scala/generator/test05b.scala	/^  val store12_in = Map($/;"	l
store12_in	src/main/scala/generator/test06.scala	/^  val store12_in = Map($/;"	l
store13	src/main/scala/generator/cilk/cilk_for_test08_detach.scala	/^  val store13 = Module(new UnTypStore(NumPredOps=0, NumSuccOps=0, NumOuts=1,ID=13,RouteID=0))$/;"	l
store13_in	src/main/scala/generator/cilk/cilk_for_test08_detach.scala	/^  val store13_in = Map($/;"	l
store14	src/main/scala/generator/cilk/cilk_for_test07_detach.scala	/^  val store14 = Module(new UnTypStore(NumPredOps=0, NumSuccOps=0, NumOuts=1,ID=14,RouteID=0))$/;"	l
store14_in	src/main/scala/generator/cilk/cilk_for_test07_detach.scala	/^  val store14_in = Map($/;"	l
store15	src/main/scala/generator/cilk/cilk_for_test12_detach1.scala	/^  val store15 = Module(new UnTypStore(NumPredOps=0, NumSuccOps=0, NumOuts=1,ID=15,RouteID=1))$/;"	l
store15_in	src/main/scala/generator/cilk/cilk_for_test12_detach1.scala	/^  val store15_in = Map($/;"	l
store16	src/main/scala/generator/cilk/mergesort.scala	/^  val store16 = Module(new UnTypStore(NumPredOps=0, NumSuccOps=0, NumOuts=1,ID=16,RouteID=4))$/;"	l
store16	src/main/scala/generator/test05.scala	/^  val store16 = Module(new UnTypStore(NumPredOps=0, NumSuccOps=1, NumOuts=1,ID=16,RouteID=1))$/;"	l
store16_in	src/main/scala/generator/cilk/mergesort.scala	/^  val store16_in = Map($/;"	l
store16_in	src/main/scala/generator/test05.scala	/^  val store16_in = Map($/;"	l
store17	src/main/scala/generator/test15.scala	/^  val store17 = Module(new UnTypStore(NumPredOps=0, NumSuccOps=1, NumOuts=1,ID=17,RouteID=0))$/;"	l
store17_in	src/main/scala/generator/test15.scala	/^  val store17_in = Map($/;"	l
store19	src/main/scala/generator/cilk/stencil_detach1.scala	/^  val store19 = Module(new UnTypStore(NumPredOps = 0, NumSuccOps = 0, NumOuts = 1, ID = 19, RouteID = 0))$/;"	l
store19_in	src/main/scala/generator/cilk/stencil_detach1.scala	/^  val store19_in = Map($/;"	l
store1_in	src/main/scala/generator/cilk/cilk_for_test09.scala	/^  val store1_in = Map($/;"	l
store1_in	src/main/scala/generator/cilk/cilk_for_test12.scala	/^  val store1_in = Map($/;"	l
store2	src/main/scala/generator/cilk/mergesort.scala	/^  val store2 = Module(new UnTypStore(NumPredOps=0, NumSuccOps=0, NumOuts=1,ID=2,RouteID=0))$/;"	l
store21	src/main/scala/generator/cilk/cilk_for_test08_detach.scala	/^  val store21 = Module(new UnTypStore(NumPredOps=0, NumSuccOps=0, NumOuts=1,ID=21,RouteID=1))$/;"	l
store21	src/main/scala/generator/cilk/stencil_inner.scala	/^  val store21 = Module(new UnTypStore(NumPredOps = 0, NumSuccOps = 0, NumOuts = 1, ID = 21, RouteID = 0))$/;"	l
store21_in	src/main/scala/generator/cilk/cilk_for_test08_detach.scala	/^  val store21_in = Map($/;"	l
store21_in	src/main/scala/generator/cilk/stencil_inner.scala	/^  val store21_in = Map($/;"	l
store22	src/main/scala/generator/cilk/cilk_for_test05_detach.scala	/^  val store22 = Module(new UnTypStore(NumPredOps=0, NumSuccOps=0, NumOuts=1,ID=22,RouteID=1))$/;"	l
store22_in	src/main/scala/generator/cilk/cilk_for_test05_detach.scala	/^  val store22_in = Map($/;"	l
store25	src/main/scala/generator/test15.scala	/^  val store25 = Module(new UnTypStore(NumPredOps=0, NumSuccOps=1, NumOuts=1,ID=25,RouteID=1))$/;"	l
store25_in	src/main/scala/generator/test15.scala	/^  val store25_in = Map($/;"	l
store27	src/main/scala/generator/cilk/bgemm_detach3.scala	/^  val store27 = Module(new UnTypStore(NumPredOps=0, NumSuccOps=0, NumOuts=1,ID=27,RouteID=0))$/;"	l
store27_in	src/main/scala/generator/cilk/bgemm_detach3.scala	/^  val store27_in = Map($/;"	l
store29	src/main/scala/generator/cilk/cilk_for_test08_detach.scala	/^  val store29 = Module(new UnTypStore(NumPredOps=0, NumSuccOps=0, NumOuts=1,ID=29,RouteID=2))$/;"	l
store29_in	src/main/scala/generator/cilk/cilk_for_test08_detach.scala	/^  val store29_in = Map($/;"	l
store2_in	src/main/scala/generator/cilk/mergesort.scala	/^  val store2_in = Map($/;"	l
store3	src/main/scala/generator/cilk/cilk_spawn_test01.scala	/^  val store3 = Module(new UnTypStore(NumPredOps=0, NumSuccOps=0, NumOuts=1,ID=3,RouteID=0))$/;"	l
store3	src/main/scala/generator/cilk/fib.scala	/^  val store3 = Module(new UnTypStore(NumPredOps=0, NumSuccOps=0, NumOuts=1,ID=3,RouteID=0))$/;"	l
store3	src/main/scala/generator/test06.scala	/^  val store3 = Module(new UnTypStore(NumPredOps=0, NumSuccOps=1, NumOuts=1,ID=3,RouteID=0))$/;"	l
store33	src/main/scala/generator/cilk/mergesort_merge.scala	/^  val store33 = Module(new UnTypStore(NumPredOps=0, NumSuccOps=1, NumOuts=1,ID=33,RouteID=0))$/;"	l
store33	src/main/scala/generator/test15.scala	/^  val store33 = Module(new UnTypStore(NumPredOps=0, NumSuccOps=1, NumOuts=1,ID=33,RouteID=2))$/;"	l
store33_in	src/main/scala/generator/cilk/mergesort_merge.scala	/^  val store33_in = Map($/;"	l
store33_in	src/main/scala/generator/test15.scala	/^  val store33_in = Map($/;"	l
store39	src/main/scala/generator/cilk/mergesort_merge.scala	/^  val store39 = Module(new UnTypStore(NumPredOps=0, NumSuccOps=1, NumOuts=1,ID=39,RouteID=1))$/;"	l
store39_in	src/main/scala/generator/cilk/mergesort_merge.scala	/^  val store39_in = Map($/;"	l
store3_in	src/main/scala/generator/cilk/cilk_spawn_test01.scala	/^  val store3_in = Map($/;"	l
store3_in	src/main/scala/generator/cilk/fib.scala	/^  val store3_in = Map($/;"	l
store3_in	src/main/scala/generator/test06.scala	/^  val store3_in = Map($/;"	l
store4	src/main/scala/generator/cilk/cilk_for_test02_mul.scala	/^  val store4 = Module(new UnTypStore(NumPredOps=0, NumSuccOps=0, NumOuts=1,ID=4,RouteID=0))$/;"	l
store4	src/main/scala/generator/cilk/cilk_for_test12_detach3.scala	/^  val store4 = Module(new UnTypStore(NumPredOps=0, NumSuccOps=0, NumOuts=1,ID=4,RouteID=0))$/;"	l
store4	src/main/scala/generator/cilk/cilk_spawn_test02.scala	/^  val store4 = Module(new UnTypStore(NumPredOps=0, NumSuccOps=0, NumOuts=1,ID=4,RouteID=0))$/;"	l
store4	src/main/scala/generator/cilk/fib_continue.scala	/^  val store4 = Module(new UnTypStore(NumPredOps=0, NumSuccOps=0, NumOuts=1,ID=4,RouteID=0))$/;"	l
store4	src/main/scala/generator/cilk/mergesort.scala	/^  val store4 = Module(new UnTypStore(NumPredOps=0, NumSuccOps=0, NumOuts=1,ID=4,RouteID=1))$/;"	l
store4_in	src/main/scala/generator/cilk/cilk_for_test02_mul.scala	/^  val store4_in = Map($/;"	l
store4_in	src/main/scala/generator/cilk/cilk_for_test12_detach3.scala	/^  val store4_in = Map($/;"	l
store4_in	src/main/scala/generator/cilk/cilk_spawn_test02.scala	/^  val store4_in = Map($/;"	l
store4_in	src/main/scala/generator/cilk/fib_continue.scala	/^  val store4_in = Map($/;"	l
store4_in	src/main/scala/generator/cilk/mergesort.scala	/^  val store4_in = Map($/;"	l
store5	src/main/scala/generator/test06.scala	/^  val store5 = Module(new UnTypStore(NumPredOps=0, NumSuccOps=1, NumOuts=1,ID=5,RouteID=1))$/;"	l
store5_in	src/main/scala/generator/test06.scala	/^  val store5_in = Map($/;"	l
store6	src/main/scala/generator/cilk/cilk_for_test04_detach.scala	/^  val store6 = Module(new UnTypStore(NumPredOps=0, NumSuccOps=0, NumOuts=1,ID=6,RouteID=0))$/;"	l
store6	src/main/scala/generator/cilk/fib.scala	/^  val store6 = Module(new UnTypStore(NumPredOps=0, NumSuccOps=0, NumOuts=1,ID=6,RouteID=1))$/;"	l
store6	src/main/scala/generator/cilk/mergesort.scala	/^  val store6 = Module(new UnTypStore(NumPredOps=0, NumSuccOps=0, NumOuts=1,ID=6,RouteID=2))$/;"	l
store6_in	src/main/scala/generator/cilk/cilk_for_test04_detach.scala	/^  val store6_in = Map($/;"	l
store6_in	src/main/scala/generator/cilk/fib.scala	/^  val store6_in = Map($/;"	l
store6_in	src/main/scala/generator/cilk/mergesort.scala	/^  val store6_in = Map($/;"	l
store8	src/main/scala/generator/cilk/cilk_spawn_test02.scala	/^  val store8 = Module(new UnTypStore(NumPredOps=0, NumSuccOps=0, NumOuts=1,ID=8,RouteID=1))$/;"	l
store8	src/main/scala/generator/cilk/mergesort.scala	/^  val store8 = Module(new UnTypStore(NumPredOps=0, NumSuccOps=0, NumOuts=1,ID=8,RouteID=3))$/;"	l
store8	src/main/scala/generator/test05.scala	/^  val store8 = Module(new UnTypStore(NumPredOps=0, NumSuccOps=1, NumOuts=1,ID=8,RouteID=0))$/;"	l
store8_in	src/main/scala/generator/cilk/cilk_spawn_test02.scala	/^  val store8_in = Map($/;"	l
store8_in	src/main/scala/generator/cilk/mergesort.scala	/^  val store8_in = Map($/;"	l
store8_in	src/main/scala/generator/test05.scala	/^  val store8_in = Map($/;"	l
store9	src/main/scala/generator/cilk/cilk_for_test01.scala	/^  val store9 = Module(new UnTypStore(NumPredOps=0, NumSuccOps=0, NumOuts=1,ID=9,RouteID=0))$/;"	l
store9	src/main/scala/generator/cilk/cilk_for_test06_detach_2.scala	/^  val store9 = Module(new UnTypStore(NumPredOps = 0, NumSuccOps = 0, NumOuts = 1, ID = 9, RouteID = 0))$/;"	l
store9_in	src/main/scala/generator/cilk/cilk_for_test01.scala	/^  val store9_in = Map($/;"	l
store9_in	src/main/scala/generator/cilk/cilk_for_test06_detach_2.scala	/^  val store9_in = Map($/;"	l
strb	src/main/scala/junctions/nasti.scala	/^  val strb = UInt(width = nastiWStrobeBits)$/;"	l
sub10	src/main/scala/generator/cilk/cilk_for_test05_detach.scala	/^  val sub10 = Module (new ComputeNode(NumOuts = 1, ID = 10, opCode = "sub")(sign=false))$/;"	l
sub10	src/main/scala/generator/cilk/cilk_for_test07_detach.scala	/^  val sub10 = Module (new ComputeNode(NumOuts = 2, ID = 10, opCode = "sub")(sign=false))$/;"	l
sub10	src/main/scala/generator/test04.scala	/^  val sub10 = Module (new ComputeNode(NumOuts = 1, ID = 10, opCode = "sub")(sign=false))$/;"	l
sub10_in	src/main/scala/generator/cilk/cilk_for_test05_detach.scala	/^  val sub10_in = Map($/;"	l
sub10_in	src/main/scala/generator/cilk/cilk_for_test07_detach.scala	/^  val sub10_in = Map($/;"	l
sub10_in	src/main/scala/generator/test04.scala	/^  val sub10_in = Map($/;"	l
sub12	src/main/scala/generator/cilk/fib.scala	/^  val sub12 = Module (new ComputeNode(NumOuts = 1, ID = 12, opCode = "sub")(sign=false))$/;"	l
sub12	src/main/scala/generator/test05.scala	/^  val sub12 = Module (new ComputeNode(NumOuts = 1, ID = 12, opCode = "sub")(sign=false))$/;"	l
sub12_in	src/main/scala/generator/cilk/fib.scala	/^  val sub12_in = Map($/;"	l
sub12_in	src/main/scala/generator/test05.scala	/^  val sub12_in = Map($/;"	l
sub13	src/main/scala/generator/test05b.scala	/^  val sub13 = Module (new ComputeNode(NumOuts = 1, ID = 13, opCode = "sub")(sign=false))$/;"	l
sub13_in	src/main/scala/generator/test05b.scala	/^  val sub13_in = Map($/;"	l
sub17	src/main/scala/generator/test05.scala	/^  val sub17 = Module (new ComputeNode(NumOuts = 1, ID = 17, opCode = "sub")(sign=false))$/;"	l
sub17_in	src/main/scala/generator/test05.scala	/^  val sub17_in = Map($/;"	l
sub20	src/main/scala/generator/cilk/cilk_for_test05_detach.scala	/^  val sub20 = Module (new ComputeNode(NumOuts = 1, ID = 20, opCode = "sub")(sign=false))$/;"	l
sub20_in	src/main/scala/generator/cilk/cilk_for_test05_detach.scala	/^  val sub20_in = Map($/;"	l
sub21	src/main/scala/generator/test15.scala	/^  val sub21 = Module (new ComputeNode(NumOuts = 1, ID = 21, opCode = "sub")(sign=false))$/;"	l
sub21_in	src/main/scala/generator/test15.scala	/^  val sub21_in = Map($/;"	l
sub29	src/main/scala/generator/test15.scala	/^  val sub29 = Module (new ComputeNode(NumOuts = 1, ID = 29, opCode = "sub")(sign=false))$/;"	l
sub29_in	src/main/scala/generator/test15.scala	/^  val sub29_in = Map($/;"	l
sub5	src/main/scala/generator/cilk/stencil_inner.scala	/^  val sub5 = Module(new ComputeNode(NumOuts = 2, ID = 5, opCode = "sub")(sign = false))$/;"	l
sub5_in	src/main/scala/generator/cilk/stencil_inner.scala	/^  val sub5_in = Map($/;"	l
sub7	src/main/scala/generator/cilk/stencil_inner.scala	/^  val sub7 = Module(new ComputeNode(NumOuts = 2, ID = 7, opCode = "sub")(sign = false))$/;"	l
sub7_in	src/main/scala/generator/cilk/stencil_inner.scala	/^  val sub7_in = Map($/;"	l
sub8	src/main/scala/generator/cilk/cilk_for_test07_detach.scala	/^  val sub8 = Module (new ComputeNode(NumOuts = 2, ID = 8, opCode = "sub")(sign=false))$/;"	l
sub8	src/main/scala/generator/cilk/cilk_for_test12_detach1.scala	/^  val sub8 = Module (new ComputeNode(NumOuts = 1, ID = 8, opCode = "sub")(sign=false))$/;"	l
sub8	src/main/scala/generator/cilk/cilk_for_test12_detach2.scala	/^  val sub8 = Module (new ComputeNode(NumOuts = 1, ID = 8, opCode = "sub")(sign=false))$/;"	l
sub8	src/main/scala/generator/cilk/fib.scala	/^  val sub8 = Module (new ComputeNode(NumOuts = 1, ID = 8, opCode = "sub")(sign=false))$/;"	l
sub8	src/main/scala/generator/test04.scala	/^  val sub8 = Module (new ComputeNode(NumOuts = 1, ID = 8, opCode = "sub")(sign=false))$/;"	l
sub8	src/main/scala/generator/test05b.scala	/^  val sub8 = Module (new ComputeNode(NumOuts = 1, ID = 8, opCode = "sub")(sign=false))$/;"	l
sub8_in	src/main/scala/generator/cilk/cilk_for_test07_detach.scala	/^  val sub8_in = Map($/;"	l
sub8_in	src/main/scala/generator/cilk/cilk_for_test12_detach1.scala	/^  val sub8_in = Map($/;"	l
sub8_in	src/main/scala/generator/cilk/cilk_for_test12_detach2.scala	/^  val sub8_in = Map($/;"	l
sub8_in	src/main/scala/generator/cilk/fib.scala	/^  val sub8_in = Map($/;"	l
sub8_in	src/main/scala/generator/test04.scala	/^  val sub8_in = Map($/;"	l
sub8_in	src/main/scala/generator/test05b.scala	/^  val sub8_in = Map($/;"	l
sub9	src/main/scala/generator/cilk/mergesort.scala	/^  val sub9 = Module (new ComputeNode(NumOuts = 1, ID = 9, opCode = "sub")(sign=false))$/;"	l
sub9_in	src/main/scala/generator/cilk/mergesort.scala	/^  val sub9_in = Map($/;"	l
subExs	src/main/scala/config/cde/Expression.scala	/^  def subExs(e:Ex[_]):List[Ex[_]] = e match {$/;"	m
sub_module_1	src/main/scala/generator/test12.scala	/^  val sub_module_1 = Module(new test12_innerDF())$/;"	l
sub_module_1	src/main/scala/generator/test14.scala	/^  val sub_module_1 = Module(new test14_innerDF())$/;"	l
subtraction	src/main/scala/node/TypCompute.scala	/^      def subtraction(l: mat2x2, r: mat2x2)(implicit p: Parameters): mat2x2 = {$/;"	m
subtraction	src/main/scala/node/TypCompute.scala	/^      def subtraction(l: vec2, r: vec2)(implicit p: Parameters): vec2 = {$/;"	m
subtraction	src/main/scala/node/TypCompute.scala	/^      def subtraction(l: vec3, r: vec3)(implicit p: Parameters): vec3 = {$/;"	m
subtraction	src/main/scala/node/TypCompute.scala	/^    def subtraction(l: T, r: T)(implicit p: Parameters): T$/;"	m
subtraction	src/main/scala/node/TypCompute.scala	/^    def subtraction[T](l: T, r: T)(implicit op: OperatorLike[T], p: Parameters): T = op.subtraction(l, r)$/;"	m
succValid	src/main/scala/node/LoadMaskNode.scala	/^  val succValid =  RegInit(Vec(Seq.fill(NumSuccOps)(false.B)))$/;"	l
succ_bundle_R	src/main/scala/node/HandShaking.scala	/^  val succ_bundle_R = Seq.fill(NumSuccOps)(RegInit(ControlBundle.default))$/;"	l
succ_ready_R	src/main/scala/node/HandShaking.scala	/^  val succ_ready_R = Seq.fill(NumSuccOps)(RegInit(false.B))$/;"	l
succ_ready_W	src/main/scala/node/HandShaking.scala	/^  val succ_ready_W = Seq.fill(NumSuccOps)(WireInit(false.B))$/;"	l
succ_valid_R	src/main/scala/node/HandShaking.scala	/^  val succ_valid_R = Seq.fill(NumSuccOps)(RegInit(false.B))$/;"	l
sum	src/main/scala/dataflow/filter/BasicFilter.scala	/^    val sum    = Decoupled(new DataBundle())$/;"	l
sum	src/main/scala/dataflow/filter/CacheVecLoader.scala	/^    val sum    = Flipped(Decoupled(new TypBundle()))$/;"	l
sum	src/main/scala/dataflow/filter/VecFilter.scala	/^    val sum    = Decoupled(new TypBundle())$/;"	l
sw01	src/main/scala/switches/example/ex1.scala	/^  val sw01 = Module(new Dyser($/;"	l
sw02	src/main/scala/switches/example/ex1.scala	/^  val sw02 = Module(new Dyser($/;"	l
sw11	src/main/scala/switches/example/ex1.scala	/^  val sw11 = Module(new Dyser($/;"	l
switchControl_R	src/main/scala/switches/DyserSwitch.scala	/^  val switchControl_R = RegInit(DataBundle.default )$/;"	l
switchIn	src/main/scala/switches/DyserSwitch.scala	/^  val switchIn = Array.fill(NInputs) (Module(new SwitchInControl()(p)).io)$/;"	l
switchParam	src/main/scala/switches/Dyser.scala	/^object switchParam {$/;"	c
switches	src/main/scala/switches/Dyser.scala	/^package switches$/;"	p
switches	src/main/scala/switches/DyserSwitch.scala	/^package switches$/;"	p
switches	src/test/scala/switches/Dyser.scala	/^package switches$/;"	p
switches	src/test/scala/switches/DyserMux.scala	/^package switches$/;"	p
switches	src/test/scala/switches/SwitchInControl.scala	/^package switches$/;"	p
switches.example	src/main/scala/switches/example/ex1.scala	/^package switches.example$/;"	p
switches.example	src/test/scala/switches/example/ex1.scala	/^package switches.example$/;"	p
sym	src/main/scala/config/cde/Parameters.scala	/^    def sym[T](pname:Any, site:View):Ex[T] = {$/;"	m
sym	src/main/scala/config/cde/Parameters.scala	/^  def sym[T](pname:Any, site:View):Ex[T]$/;"	m
sym	src/main/scala/config/cde/Parameters.scala	/^  final def sym[T](field:Field[T]):Ex[T] = sym[T](field.asInstanceOf[Any], deftSite)$/;"	m
sym	src/main/scala/config/cde/Parameters.scala	/^  final def sym[T](pname:Any):Ex[T] = sym[T](pname, deftSite)$/;"	m
sync1	src/main/scala/generator/cilk/cilk_for_test07.scala	/^  val sync1 = Module(new Sync(ID = 1, NumOuts = 1, NumInc = 1, NumDec = 1))  \/\/ Manual fix$/;"	l
sync1	src/main/scala/generator/cilk/cilk_for_test08.scala	/^  val sync1 = Module(new Sync(ID = 1, NumOuts = 1, NumInc = 1, NumDec = 1))$/;"	l
sync10	src/main/scala/generator/cilk/bgemm_detach1.scala	/^  val sync10 = Module(new Sync(ID = 10, NumOuts = 1, NumInc = 1, NumDec = 1))$/;"	l
sync10	src/main/scala/generator/cilk/bgemm_detach2.scala	/^  val sync10 = Module(new Sync(ID = 10, NumOuts = 1, NumInc = 1, NumDec = 1))$/;"	l
sync10	src/main/scala/generator/cilk/cilk_for_test02.scala	/^  val sync10 = Module(new Sync(ID = 10, NumInc=1, NumDec=1, NumOuts=1))$/;"	l
sync10	src/main/scala/generator/cilk/cilk_spawn_test02.scala	/^  val sync10 = Module(new Sync(ID = 10, NumOuts = 1, NumInc = 2, NumDec = 2))  \/\/ Manually updated$/;"	l
sync10_in	src/main/scala/generator/cilk/bgemm_detach1.scala	/^  val sync10_in = Map($/;"	l
sync10_in	src/main/scala/generator/cilk/bgemm_detach2.scala	/^  val sync10_in = Map($/;"	l
sync10_in	src/main/scala/generator/cilk/cilk_for_test02.scala	/^  val sync10_in = Map($/;"	l
sync10_in	src/main/scala/generator/cilk/cilk_spawn_test02.scala	/^  val sync10_in = Map($/;"	l
sync14	src/main/scala/generator/cilk/cilk_for_test01.scala	/^  val sync14 = Module(new Sync(ID = 14,NumInc=1, NumDec=1,NumOuts =1))$/;"	l
sync14_in	src/main/scala/generator/cilk/cilk_for_test01.scala	/^  val sync14_in = Map($/;"	l
sync15	src/main/scala/generator/cilk/cilk_for_test09.scala	/^  val sync15 = Module(new Sync(ID = 15, NumOuts = 1, NumInc = 1, NumDec = 1))$/;"	l
sync15_in	src/main/scala/generator/cilk/cilk_for_test09.scala	/^  val sync15_in = Map($/;"	l
sync16	src/main/scala/generator/cilk/fib.scala	/^  val sync16 = Module(new SyncTC2(ID = 16, NumOuts = 1, NumInc = 2, NumDec = 2))$/;"	l
sync16_in	src/main/scala/generator/cilk/fib.scala	/^  val sync16_in = Map($/;"	l
sync1_in	src/main/scala/generator/cilk/cilk_for_test07.scala	/^  val sync1_in = Map($/;"	l
sync1_in	src/main/scala/generator/cilk/cilk_for_test08.scala	/^  val sync1_in = Map($/;"	l
sync23	src/main/scala/generator/cilk/mergesort.scala	/^  val sync23 = Module(new SyncTC2(ID = 23, NumOuts = 1, NumInc = 2, NumDec = 2))$/;"	l
sync23_in	src/main/scala/generator/cilk/mergesort.scala	/^  val sync23_in = Map($/;"	l
sync6	src/main/scala/generator/cilk/cilk_spawn_test01.scala	/^  val sync6 = Module(new Sync(ID = 6, NumOuts = 1, NumInc = 1, NumDec = 1))$/;"	l
sync6_in	src/main/scala/generator/cilk/cilk_spawn_test01.scala	/^  val sync6_in = Map($/;"	l
sync7	src/main/scala/generator/cilk/cilk_for_test04.scala	/^  val sync7 = Module(new Sync(ID = 7, NumOuts = 1, NumInc = 1, NumDec = 1))$/;"	l
sync7	src/main/scala/generator/cilk/cilk_for_test05.scala	/^  val sync7 = Module(new Sync(ID = 7, NumOuts = 1, NumInc = 1, NumDec = 1))$/;"	l
sync7	src/main/scala/generator/cilk/cilk_for_test06.scala	/^  val sync7 = Module(new SyncNode(ID = 7, NumOuts = 1))$/;"	l
sync7	src/main/scala/generator/cilk/cilk_for_test06_detach.scala	/^  val sync7 = Module(new SyncNode(ID = 7, NumOuts = 1))$/;"	l
sync7	src/main/scala/generator/cilk/cilk_for_test12_detach1.scala	/^  val sync7 = Module(new SyncTC(ID = 7, NumOuts = 1, NumInc = 1, NumDec = 1))$/;"	l
sync7	src/main/scala/generator/cilk/cilk_for_test12_detach2.scala	/^  val sync7 = Module(new SyncTC(ID = 7, NumOuts = 1, NumInc = 1, NumDec = 1))$/;"	l
sync7	src/main/scala/generator/cilk/stencil.scala	/^  val sync7 = Module(new SyncNode(ID = 7, NumOuts = 1))$/;"	l
sync7_in	src/main/scala/generator/cilk/cilk_for_test04.scala	/^  val sync7_in = Map($/;"	l
sync7_in	src/main/scala/generator/cilk/cilk_for_test05.scala	/^  val sync7_in = Map($/;"	l
sync7_in	src/main/scala/generator/cilk/cilk_for_test06.scala	/^  val sync7_in = Map($/;"	l
sync7_in	src/main/scala/generator/cilk/cilk_for_test06_detach.scala	/^  val sync7_in = Map($/;"	l
sync7_in	src/main/scala/generator/cilk/cilk_for_test12_detach1.scala	/^  val sync7_in = Map($/;"	l
sync7_in	src/main/scala/generator/cilk/cilk_for_test12_detach2.scala	/^  val sync7_in = Map($/;"	l
sync7_in	src/main/scala/generator/cilk/stencil.scala	/^  val sync7_in = Map($/;"	l
sync8	src/main/scala/generator/cilk/bgemm.scala	/^  val sync8 = Module(new Sync(ID = 8, NumOuts = 1, NumInc = 1, NumDec = 1))$/;"	l
sync8_in	src/main/scala/generator/cilk/bgemm.scala	/^  val sync8_in = Map($/;"	l
sync9	src/main/scala/generator/cilk/cilk_for_test12.scala	/^  val sync9 = Module(new SyncTC(ID = 9, NumOuts = 1, NumInc = 1, NumDec = 1))$/;"	l
sync9_in	src/main/scala/generator/cilk/cilk_for_test12.scala	/^  val sync9_in = Map($/;"	l
syncCount	src/main/scala/concurrent/Sync.scala	/^  val syncCount = Mem(1 << tlen, UInt(tlen.W))$/;"	l
syncCount	src/main/scala/concurrent/Sync.scala	/^  val syncCount = RegInit(0.U(8.W))$/;"	l
syncCount	src/main/scala/concurrent/Sync.scala	/^  val syncCount = RegInit(VecInit(Seq.fill(1<<tlen)(0.U(tlen.W))))$/;"	l
sync_count	src/main/scala/concurrent/Sync.scala	/^  val sync_count = RegInit(0.U(8.W))$/;"	l
sys	scripts/TypeStackFile.py	/^import sys$/;"	i
sys	scripts/extract_activity.py	/^import sys$/;"	i
t0	src/main/scala/dataflow/fuse/computeFuse03.scala	/^  val t0 = Module(new TestCFU(ID = 0, NumOps = 6, NumIns = 7, NumOuts = 1)(sign = false))$/;"	l
tag	src/main/scala/accel/Cache.scala	/^  val tag     = UInt((List(1,mshrlen).max).W)$/;"	l
tag	src/main/scala/accel/Cache.scala	/^  val tag   = UInt(taglen.W)$/;"	l
tag	src/main/scala/accel/CacheModel.scala	/^  val tag      = (req.addr >> (blen + slen).U)(tlen,0)$/;"	l
tag	src/main/scala/accel/NastiMaster.scala	/^  val tag  = UInt(4.W)$/;"	l
tag	src/main/scala/interfaces/interfaces.scala	/^  val tag     = UInt((List(1,mshrlen).max).W)$/;"	l
tag	src/test/scala/accel/CacheTests.scala	/^  val tag   = req.addr >> (blen + slen).U$/;"	l
tag	src/test/scala/accel/CacheTests.scala	/^  val tag  = (Vec(testVec)(testCnt) >> (blen + slen).U)(tlen - 1, 0)$/;"	l
tag	src/test/scala/memory/ReadMemoryController.scala	/^	var tag  = peek(c.io.MemReq.bits.tag)$/;"	l
tag	src/test/scala/memory/WriteMemoryController.scala	/^	var tag  = peek(c.io.MemReq.bits.tag)	$/;"	l
tag_R	src/test/scala/memory/deprecated/ReadWriteArbiter.scala	/^  val tag_R = RegInit(0.U)$/;"	l
tag_reg	src/main/scala/accel/Cache.scala	/^  val tag_reg  = addr_reg(xlen-1, slen+blen)$/;"	l
taglen	src/main/scala/accel/Cache.scala	/^  val taglen = xlen - (slen + blen)$/;"	l
tags	src/main/scala/accel/CacheModel.scala	/^  val tags  = Mem(nSets, UInt(tlen.W))$/;"	l
tags	src/test/scala/accel/CacheTests.scala	/^  val tags = Mem(nSets, UInt(tlen.W))$/;"	l
tags	src/test/scala/accel/CacheTests.scala	/^  val tags = Vector.fill(3)(rand_tag)$/;"	l
taskArb	src/main/scala/concurrent/TaskController.scala	/^  val taskArb = Module(new RRArbiter(new Call(argTypes), numParent))$/;"	l
taskEntry	src/main/scala/concurrent/TaskController.scala	/^  val taskEntry = parentTable.read(ChildArb.io.out.bits.enable.taskID)$/;"	l
taskEntryReg	src/main/scala/concurrent/TaskController.scala	/^  val taskEntryReg = RegInit(0.U.asTypeOf(new ParentBundle()))$/;"	l
taskID	src/main/scala/interfaces/interfaces.scala	/^  val taskID  = UInt(tlen.W)$/;"	l
taskID	src/main/scala/interfaces/interfaces.scala	/^  val taskID = UInt (tlen.W)$/;"	l
taskID	src/main/scala/interfaces/interfaces.scala	/^  val taskID = UInt(tlen.W)$/;"	l
taskID	src/test/scala/concurrent/DecoupledTaskTest.scala	/^        val taskID = peek(c.io.Out.bits.data(s"field$i").taskID)$/;"	l
taskID	src/test/scala/concurrent/DetachTest.scala	/^        val taskID = peek(c.io.Out(i).bits.taskID)$/;"	l
taskID	src/test/scala/concurrent/ReattachTest.scala	/^      val taskID = peek(c.io.Out(0).bits.taskID)$/;"	l
taskID	src/test/scala/generator/cilk/cilk_for_test12_test.scala	/^  val taskID = 0$/;"	l
taskID	src/test/scala/generator/cilk/fib_test.scala	/^  val taskID = 0$/;"	l
taskID	src/test/scala/generator/cilk/mergesort_test.scala	/^  val taskID = 0$/;"	l
taskID_R	src/main/scala/node/Alloca.scala	/^  val taskID_R = RegInit(0.U(tlen.W))$/;"	l
task_ID_R	src/main/scala/FPU/FPCompare.scala	/^  val task_ID_R = RegNext(next = enable_R.taskID)$/;"	l
task_ID_R	src/main/scala/FPU/FPComputeNode.scala	/^  val task_ID_R = RegNext(next = enable_R.taskID)$/;"	l
task_ID_R	src/main/scala/FPU/ResizeFN.scala	/^  val task_ID_R = RegNext(next = enable_R.taskID)$/;"	l
task_ID_R	src/main/scala/node/ComputeNode.scala	/^  val task_ID_R = RegNext(next = enable_R.taskID)$/;"	l
task_ID_R	src/main/scala/node/IcmpNode.scala	/^  val task_ID_R = RegNext(next = enable_R.taskID)$/;"	l
tbn	src/test/scala/concurrent/DecoupledTaskTest.scala	/^  var tbn = "verilator"$/;"	l
tbn	src/test/scala/concurrent/DetachTest.scala	/^  var tbn = "verilator"$/;"	l
tbn	src/test/scala/concurrent/ReattachTest.scala	/^  var tbn = "verilator"$/;"	l
tbn	src/test/scala/concurrent/TaskControllerTest.scala	/^  var tbn = "verilator"$/;"	l
temp_w	src/main/scala/interfaces/interfaces.scala	/^    val temp_w = Wire(new AllocaIO)$/;"	l
term	src/main/scala/config/cde/Expression.scala	/^    def term(t:Ex[_]):String = {$/;"	m
test	src/test/scala/accel/CacheTests.scala	/^  def test(tag: UInt, idx: UInt, off: UInt, mask: UInt = 0.U((xlen \/ 8).W)) =$/;"	m
test01CacheWrapper	src/test/scala/generator/test01_test.scala	/^class test01CacheWrapper()(implicit p: Parameters) extends test01DF()(p)$/;"	c
test01DF	src/main/scala/generator/test01.scala	/^class test01DF(implicit p: Parameters) extends test01DFIO()(p) {$/;"	c
test01DFIO	src/main/scala/generator/test01.scala	/^abstract class test01DFIO(implicit val p: Parameters) extends Module with CoreParams {$/;"	c
test01Main	src/main/scala/generator/test01.scala	/^object test01Main extends App {$/;"	c
test01Test01	src/test/scala/generator/test01_test.scala	/^class test01Test01(c: test01CacheWrapper) extends PeekPokeTester(c) {$/;"	c
test01Tester	src/test/scala/generator/test01_test.scala	/^class test01Tester extends FlatSpec with Matchers {$/;"	c
test02CacheWrapper	src/test/scala/generator/test02_test.scala	/^class test02CacheWrapper()(implicit p: Parameters) extends test02DF()(p)$/;"	c
test02DF	src/main/scala/generator/test02.scala	/^class test02DF(implicit p: Parameters) extends test02DFIO()(p) {$/;"	c
test02DFIO	src/main/scala/generator/test02.scala	/^abstract class test02DFIO(implicit val p: Parameters) extends Module with CoreParams {$/;"	c
test02Main	src/main/scala/generator/test02.scala	/^object test02Main extends App {$/;"	c
test02Test01	src/test/scala/generator/test02_test.scala	/^class test02Test01(c: test02CacheWrapper) extends PeekPokeTester(c) {$/;"	c
test02Tester	src/test/scala/generator/test02_test.scala	/^class test02Tester extends FlatSpec with Matchers {$/;"	c
test03CacheWrapper	src/test/scala/generator/test03_test.scala	/^class test03CacheWrapper()(implicit p: Parameters) extends test03DF()(p)$/;"	c
test03DF	src/main/scala/generator/test03.scala	/^class test03DF(implicit p: Parameters) extends test03DFIO()(p) {$/;"	c
test03DFIO	src/main/scala/generator/test03.scala	/^abstract class test03DFIO(implicit val p: Parameters) extends Module with CoreParams {$/;"	c
test03Main	src/main/scala/generator/test03.scala	/^object test03Main extends App {$/;"	c
test03Test01	src/test/scala/generator/test03_test.scala	/^class test03Test01(c: test03CacheWrapper) extends PeekPokeTester(c) {$/;"	c
test03Tester	src/test/scala/generator/test03_test.scala	/^class test03Tester extends FlatSpec with Matchers {$/;"	c
test04CacheWrapper	src/test/scala/generator/test04_test.scala	/^class test04CacheWrapper()(implicit p: Parameters) extends test04DF()(p)$/;"	c
test04DF	src/main/scala/generator/test04.scala	/^class test04DF(implicit p: Parameters) extends test04DFIO()(p) {$/;"	c
test04DFIO	src/main/scala/generator/test04.scala	/^abstract class test04DFIO(implicit val p: Parameters) extends Module with CoreParams {$/;"	c
test04Main	src/main/scala/generator/test04.scala	/^object test04Main extends App {$/;"	c
test04Test01	src/test/scala/generator/test04_test.scala	/^class test04Test01(c: test04CacheWrapper) extends PeekPokeTester(c) {$/;"	c
test04Tester	src/test/scala/generator/test04_test.scala	/^class test04Tester extends FlatSpec with Matchers {$/;"	c
test05	src/test/scala/generator/test05_test.scala	/^  val test05 = Module(new test05DF())$/;"	l
test05DF	src/main/scala/generator/test05.scala	/^class test05DF(implicit p: Parameters) extends test05DFIO()(p) {$/;"	c
test05DFIO	src/main/scala/generator/test05.scala	/^abstract class test05DFIO(implicit val p: Parameters) extends Module with CoreParams {$/;"	c
test05Main	src/main/scala/generator/test05.scala	/^object test05Main extends App {$/;"	c
test05Main	src/test/scala/generator/test05_test.scala	/^class test05Main(implicit p: Parameters) extends test05MainIO {$/;"	c
test05MainIO	src/test/scala/generator/test05_test.scala	/^class test05MainIO(implicit val p: Parameters)  extends Module with CoreParams with CacheParams {$/;"	c
test05Test01	src/test/scala/generator/test05_test.scala	/^class test05Test01[T <: test05MainIO](c: T) extends PeekPokeTester(c) {$/;"	c
test05Test02	src/test/scala/generator/test05_test.scala	/^class test05Test02[T <: test05MainIO](c: T) extends PeekPokeTester(c) {$/;"	c
test05Test03	src/test/scala/generator/test05_test.scala	/^class test05Test03[T <: test05MainIO](c: T) extends PeekPokeTester(c) {$/;"	c
test05Tester1	src/test/scala/generator/test05_test.scala	/^class test05Tester1 extends FlatSpec with Matchers {$/;"	c
test05Tester2	src/test/scala/generator/test05_test.scala	/^class test05Tester2 extends FlatSpec with Matchers {$/;"	c
test05Tester3	src/test/scala/generator/test05_test.scala	/^class test05Tester3 extends FlatSpec with Matchers {$/;"	c
test05b	src/test/scala/generator/test05_test.scala	/^  val test05b = Module(new test05bDF())$/;"	l
test05bDF	src/main/scala/generator/test05b.scala	/^class test05bDF(implicit p: Parameters) extends test05bDFIO()(p) {$/;"	c
test05bDFIO	src/main/scala/generator/test05b.scala	/^abstract class test05bDFIO(implicit val p: Parameters) extends Module with CoreParams {$/;"	c
test05bMain	src/main/scala/generator/test05b.scala	/^object test05bMain extends App {$/;"	c
test05bMain	src/test/scala/generator/test05_test.scala	/^class test05bMain(implicit p: Parameters) extends test05MainIO {$/;"	c
test05c	src/test/scala/generator/test05_test.scala	/^  val test05c = Module(new test05cDF())$/;"	l
test05cDF	src/main/scala/generator/test05c.scala	/^class test05cDF(implicit p: Parameters) extends test05cDFIO()(p) {$/;"	c
test05cDFIO	src/main/scala/generator/test05c.scala	/^abstract class test05cDFIO(implicit val p: Parameters) extends Module with CoreParams {$/;"	c
test05cMain	src/main/scala/generator/test05c.scala	/^object test05cMain extends App {$/;"	c
test05cMain	src/test/scala/generator/test05_test.scala	/^class test05cMain(implicit p: Parameters) extends test05MainIO {$/;"	c
test06CacheWrapper	src/test/scala/generator/test06_test.scala	/^class test06CacheWrapper()(implicit p: Parameters) extends test06DF()(p)$/;"	c
test06DF	src/main/scala/generator/test06.scala	/^class test06DF(implicit p: Parameters) extends test06DFIO()(p) {$/;"	c
test06DFIO	src/main/scala/generator/test06.scala	/^abstract class test06DFIO(implicit val p: Parameters) extends Module with CoreParams {$/;"	c
test06Main	src/main/scala/generator/test06.scala	/^object test06Main extends App {$/;"	c
test06Test01	src/test/scala/generator/test06_test.scala	/^class test06Test01(c: test06CacheWrapper) extends PeekPokeTester(c) {$/;"	c
test06Tester	src/test/scala/generator/test06_test.scala	/^class test06Tester extends FlatSpec with Matchers {$/;"	c
test08CacheWrapper	src/test/scala/generator/test08_test.scala	/^class test08CacheWrapper()(implicit p: Parameters) extends test08DF()(p)$/;"	c
test08DF	src/main/scala/generator/test08.scala	/^class test08DF(implicit p: Parameters) extends test08DFIO()(p) {$/;"	c
test08DFIO	src/main/scala/generator/test08.scala	/^abstract class test08DFIO(implicit val p: Parameters) extends Module with CoreParams {$/;"	c
test08Main	src/main/scala/generator/test08.scala	/^object test08Main extends App {$/;"	c
test08Test01	src/test/scala/generator/test08_test.scala	/^class test08Test01(c: test08CacheWrapper) extends PeekPokeTester(c) {$/;"	c
test08Tester	src/test/scala/generator/test08_test.scala	/^class test08Tester extends FlatSpec with Matchers {$/;"	c
test09CacheWrapper	src/test/scala/generator/test09_test.scala	/^class test09CacheWrapper()(implicit p: Parameters) extends test09DF()(p)$/;"	c
test09DF	src/main/scala/generator/test09.scala	/^class test09DF(implicit p: Parameters) extends test09DFIO()(p) {$/;"	c
test09DFIO	src/main/scala/generator/test09.scala	/^abstract class test09DFIO(implicit val p: Parameters) extends Module with CoreParams {$/;"	c
test09Main	src/main/scala/generator/test09.scala	/^object test09Main extends App {$/;"	c
test09Test01	src/test/scala/generator/test09_test.scala	/^class test09Test01(c: test09CacheWrapper) extends PeekPokeTester(c) {$/;"	c
test09Tester	src/test/scala/generator/test09_test.scala	/^class test09Tester extends FlatSpec with Matchers {$/;"	c
test10CacheWrapper	src/test/scala/generator/test10_test.scala	/^class test10CacheWrapper()(implicit p: Parameters) extends test10DF()(p)$/;"	c
test10DF	src/main/scala/generator/test10.scala	/^class test10DF(implicit p: Parameters) extends test10DFIO()(p) {$/;"	c
test10DFIO	src/main/scala/generator/test10.scala	/^abstract class test10DFIO(implicit val p: Parameters) extends Module with CoreParams {$/;"	c
test10Main	src/main/scala/generator/test10.scala	/^object test10Main extends App {$/;"	c
test10Test01	src/test/scala/generator/test10_test.scala	/^class test10Test01(c: test10CacheWrapper) extends PeekPokeTester(c) {$/;"	c
test10Tester	src/test/scala/generator/test10_test.scala	/^class test10Tester extends FlatSpec with Matchers {$/;"	c
test11	src/test/scala/generator/test11_test.scala	/^  val test11 = Module(new test11CacheWrapper())$/;"	l
test11CacheWrapper	src/test/scala/generator/test11_test.scala	/^class test11CacheWrapper()(implicit p: Parameters) extends test11DF()(p)$/;"	c
test11DF	src/main/scala/generator/test11.scala	/^class test11DF(implicit p: Parameters) extends test11DFIO()(p) {$/;"	c
test11DFIO	src/main/scala/generator/test11.scala	/^abstract class test11DFIO(implicit val p: Parameters) extends Module with CoreParams {$/;"	c
test11Main	src/main/scala/generator/test11.scala	/^object test11Main extends App {$/;"	c
test11Main	src/test/scala/generator/test11_test.scala	/^class test11Main(implicit p: Parameters) extends test11MainIO()(p) {$/;"	c
test11MainIO	src/test/scala/generator/test11_test.scala	/^abstract class test11MainIO(implicit val p: Parameters) extends Module with CoreParams {$/;"	c
test11Test01	src/test/scala/generator/test11_test.scala	/^class test11Test01(c: test11Main) extends PeekPokeTester(c) {$/;"	c
test11Tester	src/test/scala/generator/test11_test.scala	/^class test11Tester extends FlatSpec with Matchers {$/;"	c
test11_add	src/test/scala/generator/test11_test.scala	/^  val test11_add = Module(new test11_addDF())$/;"	l
test11_addDF	src/main/scala/generator/test11_add.scala	/^class test11_addDF(implicit p: Parameters) extends test11_addDFIO()(p) {$/;"	c
test11_addDFIO	src/main/scala/generator/test11_add.scala	/^abstract class test11_addDFIO(implicit val p: Parameters) extends Module with CoreParams {$/;"	c
test11_addMain	src/main/scala/generator/test11_add.scala	/^object test11_addMain extends App {$/;"	c
test12CacheWrapper	src/test/scala/generator/test12_test.scala	/^class test12CacheWrapper()(implicit p: Parameters) extends test12DF()(p)$/;"	c
test12DF	src/main/scala/generator/test12.scala	/^class test12DF(implicit p: Parameters) extends test12DFIO() {$/;"	c
test12DFIO	src/main/scala/generator/test12.scala	/^abstract class test12DFIO(implicit val p: Parameters) extends Module with CoreParams {$/;"	c
test12Main	src/main/scala/generator/test12.scala	/^object test12Main extends App {$/;"	c
test12Test01	src/test/scala/generator/test12_test.scala	/^class test12Test01(c: test12CacheWrapper) extends PeekPokeTester(c) {$/;"	c
test12Tester	src/test/scala/generator/test12_test.scala	/^class test12Tester extends FlatSpec with Matchers {$/;"	c
test12_innerDF	src/main/scala/generator/test12_inner.scala	/^class test12_innerDF(implicit p: Parameters) extends test12_innerDFIO() {$/;"	c
test12_innerDFIO	src/main/scala/generator/test12_inner.scala	/^abstract class test12_innerDFIO(implicit val p: Parameters) extends Module with CoreParams {$/;"	c
test12_innerMain	src/main/scala/generator/test12_inner.scala	/^object test12_innerMain extends App {$/;"	c
test14CacheWrapper	src/test/scala/generator/test14_test.scala	/^class test14CacheWrapper()(implicit p: Parameters) extends test14DF()(p)$/;"	c
test14DF	src/main/scala/generator/test14.scala	/^class test14DF(implicit p: Parameters) extends test14DFIO()(p) {$/;"	c
test14DFIO	src/main/scala/generator/test14.scala	/^abstract class test14DFIO(implicit val p: Parameters) extends Module with CoreParams {$/;"	c
test14Main	src/main/scala/generator/test14.scala	/^object test14Main extends App {$/;"	c
test14Test01	src/test/scala/generator/test14_test.scala	/^class test14Test01(c: test14CacheWrapper) extends PeekPokeTester(c) {$/;"	c
test14Tester	src/test/scala/generator/test14_test.scala	/^class test14Tester extends FlatSpec with Matchers {$/;"	c
test14_innerDF	src/main/scala/generator/test14_inner.scala	/^class test14_innerDF(implicit p: Parameters) extends test14_innerDFIO()(p) {$/;"	c
test14_innerDFIO	src/main/scala/generator/test14_inner.scala	/^abstract class test14_innerDFIO(implicit val p: Parameters) extends Module with CoreParams {$/;"	c
test14_innerMain	src/main/scala/generator/test14_inner.scala	/^object test14_innerMain extends App {$/;"	c
test15	src/test/scala/generator/test15_test.scala	/^  val test15 = Module(new test15DF())$/;"	l
test15DF	src/main/scala/generator/test15.scala	/^class test15DF(implicit p: Parameters) extends test15DFIO()(p) {$/;"	c
test15DFIO	src/main/scala/generator/test15.scala	/^abstract class test15DFIO(implicit val p: Parameters) extends Module with CoreParams {$/;"	c
test15Main	src/main/scala/generator/test15.scala	/^object test15Main extends App {$/;"	c
test15Main	src/test/scala/generator/test15_test.scala	/^class test15Main(implicit p: Parameters) extends test15MainIO {$/;"	c
test15MainIO	src/test/scala/generator/test15_test.scala	/^class test15MainIO(implicit val p: Parameters)  extends Module with CoreParams with CacheParams {$/;"	c
test15Test01	src/test/scala/generator/test15_test.scala	/^class test15Test01[T <: test15MainIO](c: T) extends PeekPokeTester(c) {$/;"	c
test15Tester1	src/test/scala/generator/test15_test.scala	/^class test15Tester1 extends FlatSpec with Matchers {$/;"	c
testState	src/test/scala/accel/AccelTests.scala	/^  val testState = RegInit(sIdle)$/;"	l
testState	src/test/scala/accel/coredf/AccelTests01.scala	/^  val testState = RegInit(sIdle)$/;"	l
testState	src/test/scala/accel/coredf/FilterDFTests.scala	/^  val testState = RegInit(sIdle)$/;"	l
testState	src/test/scala/accel/coredf/VecFilterNoKernDFTests.scala	/^  val testState = RegInit(sIdle)$/;"	l
testVals	src/test/scala/concurrent/DecoupledTaskTest.scala	/^  val testVals = 50$/;"	l
testVec	src/test/scala/accel/AccelTests.scala	/^  val testVec = Seq($/;"	l
testVec	src/test/scala/accel/CacheTests.scala	/^  val testVec  = Seq($/;"	l
testVec	src/test/scala/accel/coredf/AccelTests01.scala	/^  val testVec = Seq($/;"	l
testVec	src/test/scala/accel/coredf/FilterDFTests.scala	/^  val testVec = Seq($/;"	l
testVec	src/test/scala/accel/coredf/VecFilterNoKernDFTests.scala	/^  val testVec = Seq($/;"	l
this	src/main/scala/config/cde/Config.scala	/^  def this(that: Config) = this(that.topDefinitions,$/;"	m
this	src/main/scala/config/configurations.scala	/^  def this(f: (View, View, View) => PartialFunction[Any, Any]) = this(Parameters(f))$/;"	m
tile_list	src/test/scala/generator/cilk/fib_test.scala	/^  val tile_list = List(12)$/;"	l
tile_list	src/test/scala/generator/cilk/mergesort_test.scala	/^    val tile_list = List(1)$/;"	l
time	src/test/scala/generator/cilk/bgemm_test.scala	/^  var time = 0 \/\/Cycle counter$/;"	l
time	src/test/scala/generator/cilk/cilk_for_test01_test.scala	/^  var time = 1  \/\/Cycle counter$/;"	l
time	src/test/scala/generator/cilk/cilk_for_test02_test.scala	/^  var time = 1  \/\/Cycle counter$/;"	l
time	src/test/scala/generator/cilk/cilk_for_test04_test.scala	/^  var time = 0$/;"	l
time	src/test/scala/generator/cilk/cilk_for_test05_test.scala	/^  var time = 0  \/\/Cycle counter$/;"	l
time	src/test/scala/generator/cilk/cilk_for_test06_test.scala	/^  var time = 0 \/\/Cycle counter$/;"	l
time	src/test/scala/generator/cilk/cilk_for_test07_test.scala	/^  var time = 0$/;"	l
time	src/test/scala/generator/cilk/cilk_for_test08_test.scala	/^  var time = 0$/;"	l
time	src/test/scala/generator/cilk/cilk_for_test09_test.scala	/^  var time = 0$/;"	l
time	src/test/scala/generator/cilk/cilk_for_test12_test.scala	/^  var time = 0$/;"	l
time	src/test/scala/generator/cilk/cilk_spawn_test01_test.scala	/^  var time = 1  \/\/Cycle counter$/;"	l
time	src/test/scala/generator/cilk/cilk_spawn_test02_test.scala	/^  var time = 1  \/\/Cycle counter$/;"	l
time	src/test/scala/generator/cilk/fib_test.scala	/^  var time = 0$/;"	l
time	src/test/scala/generator/cilk/mergesort_test.scala	/^  var time = 0$/;"	l
time	src/test/scala/generator/cilk/stencil_test.scala	/^  var time = 0$/;"	l
time	src/test/scala/generator/test01_test.scala	/^  var time = 1$/;"	l
time	src/test/scala/generator/test02_test.scala	/^  var time = 1$/;"	l
time	src/test/scala/generator/test03_test.scala	/^  var time = 1  \/\/Cycle counter$/;"	l
time	src/test/scala/generator/test04_test.scala	/^  var time = 1  \/\/Cycle counter$/;"	l
time	src/test/scala/generator/test05_test.scala	/^  var time = 0$/;"	l
time	src/test/scala/generator/test06_test.scala	/^  var time = 1  \/\/Cycle counter$/;"	l
time	src/test/scala/generator/test08_test.scala	/^  var time = 1  \/\/Cycle counter$/;"	l
time	src/test/scala/generator/test09_test.scala	/^  var time = 1  \/\/Cycle counter$/;"	l
time	src/test/scala/generator/test10_test.scala	/^  var time = 1  \/\/Cycle counter$/;"	l
time	src/test/scala/generator/test11_test.scala	/^  var time = 1  \/\/Cycle counter$/;"	l
time	src/test/scala/generator/test12_test.scala	/^  var time = 1 \/\/Cycle counter$/;"	l
time	src/test/scala/generator/test14_test.scala	/^  var time = 1  \/\/Cycle counter$/;"	l
time	src/test/scala/generator/test15_test.scala	/^  var time = 0$/;"	l
time	src/test/scala/memory/ReadWriteArbiter01.scala	/^  var time =  -10$/;"	l
time	src/test/scala/memory/UnifiedController.scala	/^  var time =  -10$/;"	l
time	src/test/scala/node/PhiNode.scala	/^  var time = 1$/;"	l
time	src/test/scala/verilogmain/TypStackSweeper.scala	/^  var time = 0$/;"	l
time	src/test/scala/verilogmain/TypeStackSweeper16b.scala	/^  var time = 0$/;"	l
timeOut	src/test/scala/concurrent/DecoupledTaskTest.scala	/^  var timeOut = 1000$/;"	l
timeout	src/test/scala/accel/CacheTests.scala	/^  val timeout = Reg(UInt(32.W))$/;"	l
tlen	src/main/scala/config/config.scala	/^  val tlen    = p(TLEN)$/;"	l
tmp_bb_my_pfor_end	src/main/scala/generator/cilk/cilk_for_test06.scala	/^  val tmp_bb_my_pfor_end = Module(new UBranchNode(NumOuts = 3, ID = 22))$/;"	l
tmp_bb_my_pfor_end	src/main/scala/generator/cilk/cilk_for_test06_detach.scala	/^  val tmp_bb_my_pfor_end = Module(new UBranchNode(NumOuts = 4, ID = 22))$/;"	l
tmp_bb_my_pfor_end	src/main/scala/generator/cilk/stencil.scala	/^  val tmp_bb_my_pfor_end = Module(new UBranchNode(NumOuts = 2, ID = 22))$/;"	l
tmp_ubranch	src/main/scala/generator/cilk/stencil_detach1.scala	/^  val tmp_ubranch = Module(new UBranchEndNode(ID = 22))$/;"	l
toCollector	src/main/scala/config/cde/Config.scala	/^  def toCollector = new Collector(this.topDefinitions, this.knobValues)$/;"	m
toInstance	src/main/scala/config/cde/Config.scala	/^  def toInstance = new Instance(this.topDefinitions, this.knobValues)$/;"	m
toInstance	src/main/scala/config/configurations.scala	/^  def toInstance = this$/;"	m
token	src/main/scala/node/HandShaking.scala	/^  val token = RegInit(0.U)$/;"	l
token	src/main/scala/node/LoadMaskNode.scala	/^  val token  = RegInit(0.U)$/;"	l
tokenCMP_w	src/main/scala/node/Relay.scala	/^  val tokenCMP_w  = Vec(Seq.fill(NumConsum){false.B})$/;"	l
tokenConsum_reg	src/main/scala/node/Relay.scala	/^  val tokenConsum_reg = RegInit(Vec(Seq.fill(NumConsum)(0.U(tlen.W))))$/;"	l
tokenIn_reg	src/main/scala/node/Relay.scala	/^  val tokenIn_reg = RegInit(0.U(tlen.W))$/;"	l
topConstraints	src/main/scala/config/cde/Config.scala	/^  val topConstraints: List[ViewSym=>Ex[Boolean]] = List( ex => ExLit[Boolean](true) ),$/;"	l
topDefinitions	src/main/scala/config/cde/Config.scala	/^  val topDefinitions: World.TopDefs = { (a,b,c) => throw new CDEMatchError(a) },$/;"	l
toplevel	src/main/scala/arbiters/ArbiterTree.scala	/^  var toplevel = Seq.fill(0) { Module(new LockingRRArbiter(gen,4,count=Locks)).io }$/;"	l
toplevel	src/main/scala/muxes/Muxes.scala	/^  var toplevel = Seq.fill(0) { Module(new Demux(gen, 4)).io }$/;"	l
typadd	src/main/scala/dataflow/TestCacheDataFlow.scala	/^	val typadd = Module(new TypCompute(NumOuts=1,ID=0,"Add")(true)(new vec2))$/;"	l
typadd	src/main/scala/dataflow/TypeMemDataFlow.scala	/^val typadd = Module(new TypCompute(NumOuts=1,ID=0,"Add")(true)(new vec2))$/;"	l
type_word	src/main/scala/node/LoadMaskNode.scala	/^  val type_word = MT_W$/;"	l
udiv0	src/main/scala/generator/cilk/stencil_detach1.scala	/^  val udiv0 = Module(new ComputeNode(NumOuts = 3, ID = 0, opCode = "udiv")(sign = false))$/;"	l
udiv0	src/main/scala/generator/test02.scala	/^  val udiv0 = Module (new ComputeNode(NumOuts = 1, ID = 0, opCode = "udiv")(sign=false))$/;"	l
udiv0_in	src/main/scala/generator/cilk/stencil_detach1.scala	/^  val udiv0_in = Map($/;"	l
udiv0_in	src/main/scala/generator/test02.scala	/^  val udiv0_in = Map($/;"	l
udiv14	src/main/scala/generator/cilk/mergesort.scala	/^  val udiv14 = Module (new ComputeNode(NumOuts = 3, ID = 14, opCode = "udiv")(sign=false))$/;"	l
udiv14_in	src/main/scala/generator/cilk/mergesort.scala	/^  val udiv14_in = Map($/;"	l
udiv15	src/main/scala/generator/cilk/stencil_detach1.scala	/^  val udiv15 = Module(new ComputeNode(NumOuts = 1, ID = 15, opCode = "udiv")(sign = false))$/;"	l
udiv15_in	src/main/scala/generator/cilk/stencil_detach1.scala	/^  val udiv15_in = Map($/;"	l
unfurl	src/main/scala/config/cde/Expression.scala	/^  def unfurl(e:Ex[_]):List[Ex[_]] =$/;"	m
unsafeConvert	src/main/scala/FPU/FPALU.scala	/^  def unsafeConvert(x: UInt, to: FType) = if (this == to) x else {$/;"	m
up	src/main/scala/config/cde/Parameters.scala	/^        val up = _world._otherView(_look, site)$/;"	l
update	src/main/scala/concurrent/Sync.scala	/^  val update   = RegInit(false.B)$/;"	l
update	src/main/scala/concurrent/Sync.scala	/^  val update   = RegNext(init = false.B, next = updateArb.io.out.fire() && updateArb.io.out.bits.control)$/;"	l
updateArb	src/main/scala/concurrent/Sync.scala	/^  val updateArb = Module(new Arbiter(new ControlBundle(), 2))$/;"	l
updateArb	src/main/scala/concurrent/Sync.scala	/^  val updateArb = Module(new Arbiter(new ControlBundle, 2))$/;"	l
updateArb_R	src/main/scala/concurrent/Sync.scala	/^  val updateArb_R = RegInit(ControlBundle.default)$/;"	l
updateID	src/main/scala/concurrent/Sync.scala	/^  val updateID = RegNext(init = 0.U, next = updateArb.io.out.bits.taskID)$/;"	l
usage	src/test/scala/verilogmain/TypStackSweeper.scala	/^    val usage = optionslist.mkString(",")$/;"	l
usage	src/test/scala/verilogmain/TypeStackSweeper16b.scala	/^    val usage = optionslist.mkString(",")$/;"	l
user	src/main/scala/junctions/nasti.scala	/^  val user = UInt(width = nastiARUserBits)$/;"	l
user	src/main/scala/junctions/nasti.scala	/^  val user = UInt(width = nastiAWUserBits)$/;"	l
user	src/main/scala/junctions/nasti.scala	/^  val user = UInt(width = nastiBUserBits)$/;"	l
user	src/main/scala/junctions/nasti.scala	/^  val user = UInt(width = nastiRUserBits)$/;"	l
user	src/main/scala/junctions/nasti.scala	/^  val user = UInt(width = nastiWUserBits)$/;"	l
utility	src/main/scala/utility/Constants.scala	/^package utility$/;"	p
utility	src/main/scala/utility/Printf.scala	/^package utility$/;"	p
v	src/test/scala/accel/CacheTests.scala	/^  val v    = Mem(nSets, Bool())$/;"	l
valid	src/main/scala/accel/Cache.scala	/^  val valid    = RegInit(0.U(nSets.W))$/;"	l
valid	src/main/scala/accel/CacheModel.scala	/^  val valid = Mem(nSets, Bool())$/;"	l
valid	src/main/scala/accel/DataBundleReg.scala	/^  val valid = RegInit(Vec(Seq.fill(cNum)(false.B)))$/;"	l
valid	src/main/scala/interfaces/interfaces.scala	/^  val valid = Bool()$/;"	l
valid	src/main/scala/interfaces/interfaces.scala	/^val valid = Bool ()$/;"	l
valid	src/main/scala/loop/LoopElement.scala	/^    val valid = Output(Bool())$/;"	l
valid	src/main/scala/loop/LoopHeader.scala	/^  val valid = Output(Bool())$/;"	l
validMask_1	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  wire  validMask_1;$/;"	n
validReg	src/main/scala/junctions/SplitDecoupled.scala	/^    val validReg = Seq.fill(argTypes(i)){RegInit(false.B)}$/;"	l
validReg	src/main/scala/loop/LoopBlock.scala	/^    val validReg = Seq.fill(NumIns(i)){RegInit(false.B)}$/;"	l
valid_data	src/test/scala/generator/cilk/bgemm_test.scala	/^  var valid_data = true$/;"	l
valid_data	src/test/scala/generator/cilk/cilk_for_test04_test.scala	/^  var valid_data = true$/;"	l
valid_data	src/test/scala/generator/cilk/cilk_for_test06_test.scala	/^  var valid_data = true$/;"	l
valid_data	src/test/scala/generator/cilk/cilk_for_test07_test.scala	/^  var valid_data = true$/;"	l
valid_data	src/test/scala/generator/cilk/cilk_for_test08_test.scala	/^  var valid_data = true$/;"	l
valid_data	src/test/scala/generator/cilk/cilk_for_test09_test.scala	/^  var valid_data = true$/;"	l
valid_data	src/test/scala/generator/cilk/cilk_for_test12_test.scala	/^  var valid_data = true$/;"	l
valid_data	src/test/scala/generator/cilk/mergesort_test.scala	/^  var valid_data = true$/;"	l
valid_data	src/test/scala/generator/cilk/stencil_test.scala	/^  var valid_data = true$/;"	l
valid_data	src/test/scala/generator/test05_test.scala	/^  var valid_data = true$/;"	l
valid_data	src/test/scala/generator/test15_test.scala	/^  var valid_data = true$/;"	l
valids	src/main/scala/loop/LoopHeader.scala	/^  val valids = WireInit(VecInit(Seq.fill(NumInputs){false.B}))$/;"	l
value	scripts/Output16b/TypeStackFile_2_2_2_low.v	/^  reg  value;$/;"	r
vec2	src/main/scala/node/TypCompute.scala	/^class vec2(implicit p: Parameters) extends Numbers {$/;"	c
vec2likeNumber	src/main/scala/node/TypCompute.scala	/^    implicit object vec2likeNumber extends OperatorLike[vec2] {$/;"	c
vec3	src/main/scala/node/TypCompute.scala	/^class vec3(implicit p: Parameters) extends Numbers {$/;"	c
vec3likeNumber	src/main/scala/node/TypCompute.scala	/^    implicit object vec3likeNumber extends OperatorLike[vec3] {$/;"	c
verb	src/main/scala/config/config.scala	/^  val verb    = p(VERBOSITY)$/;"	l
verilog	src/main/scala/verilogmain/TypeMemDataflow.scala	/^  val verilog = new FileWriter(new File(dir, s"${chirrtl.main}.v"))$/;"	l
verilogFile	src/main/scala/accel/Main.scala	/^  val verilogFile = new File(dir, s"${chirrtl.main}.v")$/;"	l
verilogFile	src/main/scala/generator/cilk/bgemm.scala	/^  val verilogFile = new File(dir, s"${chirrtl.main}.v")$/;"	l
verilogFile	src/main/scala/generator/cilk/bgemm_detach1.scala	/^  val verilogFile = new File(dir, s"${chirrtl.main}.v")$/;"	l
verilogFile	src/main/scala/generator/cilk/bgemm_detach2.scala	/^  val verilogFile = new File(dir, s"${chirrtl.main}.v")$/;"	l
verilogFile	src/main/scala/generator/cilk/bgemm_detach3.scala	/^  val verilogFile = new File(dir, s"${chirrtl.main}.v")$/;"	l
verilogFile	src/main/scala/generator/cilk/cilk_for_test01.scala	/^  val verilogFile = new File(dir, s"${chirrtl.main}.v")$/;"	l
verilogFile	src/main/scala/generator/cilk/cilk_for_test02.scala	/^  val verilogFile = new File(dir, s"${chirrtl.main}.v")$/;"	l
verilogFile	src/main/scala/generator/cilk/cilk_for_test02_mul.scala	/^  val verilogFile = new File(dir, s"${chirrtl.main}.v")$/;"	l
verilogFile	src/main/scala/generator/cilk/cilk_for_test04_detach.scala	/^  val verilogFile = new File(dir, s"${chirrtl.main}.v")$/;"	l
verilogFile	src/main/scala/generator/cilk/cilk_for_test05_detach.scala	/^  val verilogFile = new File(dir, s"${chirrtl.main}.v")$/;"	l
verilogFile	src/main/scala/generator/cilk/cilk_for_test06_detach.scala	/^  val verilogFile = new File(dir, s"${chirrtl.main}.v")$/;"	l
verilogFile	src/main/scala/generator/cilk/cilk_for_test06_detach_2.scala	/^  val verilogFile = new File(dir, s"${chirrtl.main}.v")$/;"	l
verilogFile	src/main/scala/generator/cilk/cilk_for_test07.scala	/^  val verilogFile = new File(dir, s"${chirrtl.main}.v")$/;"	l
verilogFile	src/main/scala/generator/cilk/cilk_for_test07_detach.scala	/^  val verilogFile = new File(dir, s"${chirrtl.main}.v")$/;"	l
verilogFile	src/main/scala/generator/cilk/cilk_for_test08_detach.scala	/^  val verilogFile = new File(dir, s"${chirrtl.main}.v")$/;"	l
verilogFile	src/main/scala/generator/cilk/cilk_for_test09.scala	/^  val verilogFile = new File(dir, s"${chirrtl.main}.v")$/;"	l
verilogFile	src/main/scala/generator/cilk/cilk_for_test09_inner.scala	/^  val verilogFile = new File(dir, s"${chirrtl.main}.v")$/;"	l
verilogFile	src/main/scala/generator/cilk/cilk_for_test12.scala	/^  val verilogFile = new File(dir, s"${chirrtl.main}.v")$/;"	l
verilogFile	src/main/scala/generator/cilk/cilk_for_test12_detach1.scala	/^  val verilogFile = new File(dir, s"${chirrtl.main}.v")$/;"	l
verilogFile	src/main/scala/generator/cilk/cilk_for_test12_detach2.scala	/^  val verilogFile = new File(dir, s"${chirrtl.main}.v")$/;"	l
verilogFile	src/main/scala/generator/cilk/cilk_for_test12_detach3.scala	/^  val verilogFile = new File(dir, s"${chirrtl.main}.v")$/;"	l
verilogFile	src/main/scala/generator/cilk/cilk_spawn_test01.scala	/^  val verilogFile = new File(dir, s"${chirrtl.main}.v")$/;"	l
verilogFile	src/main/scala/generator/cilk/cilk_spawn_test02.scala	/^  val verilogFile = new File(dir, s"${chirrtl.main}.v")$/;"	l
verilogFile	src/main/scala/generator/cilk/fib.scala	/^  val verilogFile = new File(dir, s"${chirrtl.main}.v")$/;"	l
verilogFile	src/main/scala/generator/cilk/fib_continue.scala	/^  val verilogFile = new File(dir, s"${chirrtl.main}.v")$/;"	l
verilogFile	src/main/scala/generator/cilk/mergesort.scala	/^  val verilogFile = new File(dir, s"${chirrtl.main}.v")$/;"	l
verilogFile	src/main/scala/generator/cilk/mergesort_merge.scala	/^  val verilogFile = new File(dir, s"${chirrtl.main}.v")$/;"	l
verilogFile	src/main/scala/generator/cilk/stencil.scala	/^  val verilogFile = new File(dir, s"${chirrtl.main}.v")$/;"	l
verilogFile	src/main/scala/generator/cilk/stencil_detach1.scala	/^  val verilogFile = new File(dir, s"${chirrtl.main}.v")$/;"	l
verilogFile	src/main/scala/generator/cilk/stencil_inner.scala	/^  val verilogFile = new File(dir, s"${chirrtl.main}.v")$/;"	l
verilogFile	src/main/scala/generator/test01.scala	/^  val verilogFile = new File(dir, s"${chirrtl.main}.v")$/;"	l
verilogFile	src/main/scala/generator/test02.scala	/^  val verilogFile = new File(dir, s"${chirrtl.main}.v")$/;"	l
verilogFile	src/main/scala/generator/test03.scala	/^  val verilogFile = new File(dir, s"${chirrtl.main}.v")$/;"	l
verilogFile	src/main/scala/generator/test04.scala	/^  val verilogFile = new File(dir, s"${chirrtl.main}.v")$/;"	l
verilogFile	src/main/scala/generator/test05.scala	/^  val verilogFile = new File(dir, s"${chirrtl.main}.v")$/;"	l
verilogFile	src/main/scala/generator/test05b.scala	/^  val verilogFile = new File(dir, s"${chirrtl.main}.v")$/;"	l
verilogFile	src/main/scala/generator/test05c.scala	/^  val verilogFile = new File(dir, s"${chirrtl.main}.v")$/;"	l
verilogFile	src/main/scala/generator/test06.scala	/^  val verilogFile = new File(dir, s"${chirrtl.main}.v")$/;"	l
verilogFile	src/main/scala/generator/test08.scala	/^  val verilogFile = new File(dir, s"${chirrtl.main}.v")$/;"	l
verilogFile	src/main/scala/generator/test09.scala	/^  val verilogFile = new File(dir, s"${chirrtl.main}.v")$/;"	l
verilogFile	src/main/scala/generator/test10.scala	/^  val verilogFile = new File(dir, s"${chirrtl.main}.v")$/;"	l
verilogFile	src/main/scala/generator/test11.scala	/^  val verilogFile = new File(dir, s"${chirrtl.main}.v")$/;"	l
verilogFile	src/main/scala/generator/test11_add.scala	/^  val verilogFile = new File(dir, s"${chirrtl.main}.v")$/;"	l
verilogFile	src/main/scala/generator/test12.scala	/^  val verilogFile = new File(dir, s"${chirrtl.main}.v")$/;"	l
verilogFile	src/main/scala/generator/test12_inner.scala	/^  val verilogFile = new File(dir, s"${chirrtl.main}.v")$/;"	l
verilogFile	src/main/scala/generator/test14.scala	/^  val verilogFile = new File(dir, s"${chirrtl.main}.v")$/;"	l
verilogFile	src/main/scala/generator/test14_inner.scala	/^  val verilogFile = new File(dir, s"${chirrtl.main}.v")$/;"	l
verilogFile	src/main/scala/generator/test15.scala	/^  val verilogFile = new File(dir, s"${chirrtl.main}.v")$/;"	l
verilogFileA	src/main/scala/generator/cilk/cilk_for_test04.scala	/^  val verilogFileA = new File(dirA, s"${chirrtlA.main}.v")$/;"	l
verilogFileA	src/main/scala/generator/cilk/cilk_for_test05.scala	/^  val verilogFileA = new File(dirA, s"${chirrtlA.main}.v")$/;"	l
verilogFileA	src/main/scala/generator/cilk/cilk_for_test06.scala	/^  val verilogFileA = new File(dirA, s"${chirrtlA.main}.v")$/;"	l
verilogFileA	src/main/scala/generator/cilk/cilk_for_test08.scala	/^  val verilogFileA = new File(dirA, s"${chirrtlA.main}.v")$/;"	l
verilogFileB	src/main/scala/generator/cilk/cilk_for_test04.scala	/^  val verilogFileB = new File(dirB, s"${chirrtlB.main}.v")$/;"	l
verilogFileB	src/main/scala/generator/cilk/cilk_for_test05.scala	/^  val verilogFileB = new File(dirB, s"${chirrtlB.main}.v")$/;"	l
verilogFileB	src/main/scala/generator/cilk/cilk_for_test06.scala	/^  val verilogFileB = new File(dirB, s"${chirrtlB.main}.v")$/;"	l
verilogFileB	src/main/scala/generator/cilk/cilk_for_test08.scala	/^  val verilogFileB = new File(dirB, s"${chirrtlB.main}.v")$/;"	l
verilogFileC	src/main/scala/generator/cilk/cilk_for_test04.scala	/^  val verilogFileC = new File(dirC, s"${chirrtlC.main}.v")$/;"	l
verilogFileC	src/main/scala/generator/cilk/cilk_for_test05.scala	/^  val verilogFileC = new File(dirC, s"${chirrtlC.main}.v")$/;"	l
verilogFileC	src/main/scala/generator/cilk/cilk_for_test06.scala	/^  val verilogFileC = new File(dirC, s"${chirrtlC.main}.v")$/;"	l
verilogFileC	src/main/scala/generator/cilk/cilk_for_test08.scala	/^  val verilogFileC = new File(dirC, s"${chirrtlC.main}.v")$/;"	l
verilogWriter	src/main/scala/accel/Main.scala	/^  val verilogWriter = new FileWriter(verilogFile)$/;"	l
verilogWriter	src/main/scala/generator/cilk/bgemm.scala	/^  val verilogWriter = new FileWriter(verilogFile)$/;"	l
verilogWriter	src/main/scala/generator/cilk/bgemm_detach1.scala	/^  val verilogWriter = new FileWriter(verilogFile)$/;"	l
verilogWriter	src/main/scala/generator/cilk/bgemm_detach2.scala	/^  val verilogWriter = new FileWriter(verilogFile)$/;"	l
verilogWriter	src/main/scala/generator/cilk/bgemm_detach3.scala	/^  val verilogWriter = new FileWriter(verilogFile)$/;"	l
verilogWriter	src/main/scala/generator/cilk/cilk_for_test01.scala	/^  val verilogWriter = new FileWriter(verilogFile)$/;"	l
verilogWriter	src/main/scala/generator/cilk/cilk_for_test02.scala	/^  val verilogWriter = new FileWriter(verilogFile)$/;"	l
verilogWriter	src/main/scala/generator/cilk/cilk_for_test02_mul.scala	/^  val verilogWriter = new FileWriter(verilogFile)$/;"	l
verilogWriter	src/main/scala/generator/cilk/cilk_for_test04_detach.scala	/^  val verilogWriter = new FileWriter(verilogFile)$/;"	l
verilogWriter	src/main/scala/generator/cilk/cilk_for_test05_detach.scala	/^  val verilogWriter = new FileWriter(verilogFile)$/;"	l
verilogWriter	src/main/scala/generator/cilk/cilk_for_test06_detach.scala	/^  val verilogWriter = new FileWriter(verilogFile)$/;"	l
verilogWriter	src/main/scala/generator/cilk/cilk_for_test06_detach_2.scala	/^  val verilogWriter = new FileWriter(verilogFile)$/;"	l
verilogWriter	src/main/scala/generator/cilk/cilk_for_test07.scala	/^  val verilogWriter = new FileWriter(verilogFile)$/;"	l
verilogWriter	src/main/scala/generator/cilk/cilk_for_test07_detach.scala	/^  val verilogWriter = new FileWriter(verilogFile)$/;"	l
verilogWriter	src/main/scala/generator/cilk/cilk_for_test08_detach.scala	/^  val verilogWriter = new FileWriter(verilogFile)$/;"	l
verilogWriter	src/main/scala/generator/cilk/cilk_for_test09.scala	/^  val verilogWriter = new FileWriter(verilogFile)$/;"	l
verilogWriter	src/main/scala/generator/cilk/cilk_for_test09_inner.scala	/^  val verilogWriter = new FileWriter(verilogFile)$/;"	l
verilogWriter	src/main/scala/generator/cilk/cilk_for_test12.scala	/^  val verilogWriter = new FileWriter(verilogFile)$/;"	l
verilogWriter	src/main/scala/generator/cilk/cilk_for_test12_detach1.scala	/^  val verilogWriter = new FileWriter(verilogFile)$/;"	l
verilogWriter	src/main/scala/generator/cilk/cilk_for_test12_detach2.scala	/^  val verilogWriter = new FileWriter(verilogFile)$/;"	l
verilogWriter	src/main/scala/generator/cilk/cilk_for_test12_detach3.scala	/^  val verilogWriter = new FileWriter(verilogFile)$/;"	l
verilogWriter	src/main/scala/generator/cilk/cilk_spawn_test01.scala	/^  val verilogWriter = new FileWriter(verilogFile)$/;"	l
verilogWriter	src/main/scala/generator/cilk/cilk_spawn_test02.scala	/^  val verilogWriter = new FileWriter(verilogFile)$/;"	l
verilogWriter	src/main/scala/generator/cilk/fib.scala	/^  val verilogWriter = new FileWriter(verilogFile)$/;"	l
verilogWriter	src/main/scala/generator/cilk/fib_continue.scala	/^  val verilogWriter = new FileWriter(verilogFile)$/;"	l
verilogWriter	src/main/scala/generator/cilk/mergesort.scala	/^  val verilogWriter = new FileWriter(verilogFile)$/;"	l
verilogWriter	src/main/scala/generator/cilk/mergesort_merge.scala	/^  val verilogWriter = new FileWriter(verilogFile)$/;"	l
verilogWriter	src/main/scala/generator/cilk/stencil.scala	/^  val verilogWriter = new FileWriter(verilogFile)$/;"	l
verilogWriter	src/main/scala/generator/cilk/stencil_detach1.scala	/^  val verilogWriter = new FileWriter(verilogFile)$/;"	l
verilogWriter	src/main/scala/generator/cilk/stencil_inner.scala	/^  val verilogWriter = new FileWriter(verilogFile)$/;"	l
verilogWriter	src/main/scala/generator/test01.scala	/^  val verilogWriter = new FileWriter(verilogFile)$/;"	l
verilogWriter	src/main/scala/generator/test02.scala	/^  val verilogWriter = new FileWriter(verilogFile)$/;"	l
verilogWriter	src/main/scala/generator/test03.scala	/^  val verilogWriter = new FileWriter(verilogFile)$/;"	l
verilogWriter	src/main/scala/generator/test04.scala	/^  val verilogWriter = new FileWriter(verilogFile)$/;"	l
verilogWriter	src/main/scala/generator/test05.scala	/^  val verilogWriter = new FileWriter(verilogFile)$/;"	l
verilogWriter	src/main/scala/generator/test05b.scala	/^  val verilogWriter = new FileWriter(verilogFile)$/;"	l
verilogWriter	src/main/scala/generator/test05c.scala	/^  val verilogWriter = new FileWriter(verilogFile)$/;"	l
verilogWriter	src/main/scala/generator/test06.scala	/^  val verilogWriter = new FileWriter(verilogFile)$/;"	l
verilogWriter	src/main/scala/generator/test08.scala	/^  val verilogWriter = new FileWriter(verilogFile)$/;"	l
verilogWriter	src/main/scala/generator/test09.scala	/^  val verilogWriter = new FileWriter(verilogFile)$/;"	l
verilogWriter	src/main/scala/generator/test10.scala	/^  val verilogWriter = new FileWriter(verilogFile)$/;"	l
verilogWriter	src/main/scala/generator/test11.scala	/^  val verilogWriter = new FileWriter(verilogFile)$/;"	l
verilogWriter	src/main/scala/generator/test11_add.scala	/^  val verilogWriter = new FileWriter(verilogFile)$/;"	l
verilogWriter	src/main/scala/generator/test12.scala	/^  val verilogWriter = new FileWriter(verilogFile)$/;"	l
verilogWriter	src/main/scala/generator/test12_inner.scala	/^  val verilogWriter = new FileWriter(verilogFile)$/;"	l
verilogWriter	src/main/scala/generator/test14.scala	/^  val verilogWriter = new FileWriter(verilogFile)$/;"	l
verilogWriter	src/main/scala/generator/test14_inner.scala	/^  val verilogWriter = new FileWriter(verilogFile)$/;"	l
verilogWriter	src/main/scala/generator/test15.scala	/^  val verilogWriter = new FileWriter(verilogFile)$/;"	l
verilogWriterA	src/main/scala/generator/cilk/cilk_for_test04.scala	/^  val verilogWriterA = new FileWriter(verilogFileA)$/;"	l
verilogWriterA	src/main/scala/generator/cilk/cilk_for_test05.scala	/^  val verilogWriterA = new FileWriter(verilogFileA)$/;"	l
verilogWriterA	src/main/scala/generator/cilk/cilk_for_test06.scala	/^  val verilogWriterA = new FileWriter(verilogFileA)$/;"	l
verilogWriterA	src/main/scala/generator/cilk/cilk_for_test08.scala	/^  val verilogWriterA = new FileWriter(verilogFileA)$/;"	l
verilogWriterB	src/main/scala/generator/cilk/cilk_for_test04.scala	/^  val verilogWriterB = new FileWriter(verilogFileB)$/;"	l
verilogWriterB	src/main/scala/generator/cilk/cilk_for_test05.scala	/^  val verilogWriterB = new FileWriter(verilogFileB)$/;"	l
verilogWriterB	src/main/scala/generator/cilk/cilk_for_test06.scala	/^  val verilogWriterB = new FileWriter(verilogFileB)$/;"	l
verilogWriterB	src/main/scala/generator/cilk/cilk_for_test08.scala	/^  val verilogWriterB = new FileWriter(verilogFileB)$/;"	l
verilogWriterC	src/main/scala/generator/cilk/cilk_for_test04.scala	/^  val verilogWriterC = new FileWriter(verilogFileC)$/;"	l
verilogWriterC	src/main/scala/generator/cilk/cilk_for_test05.scala	/^  val verilogWriterC = new FileWriter(verilogFileC)$/;"	l
verilogWriterC	src/main/scala/generator/cilk/cilk_for_test06.scala	/^  val verilogWriterC = new FileWriter(verilogFileC)$/;"	l
verilogWriterC	src/main/scala/generator/cilk/cilk_for_test08.scala	/^  val verilogWriterC = new FileWriter(verilogFileC)$/;"	l
verilogmain	src/main/scala/verilogmain/TypeMemDataflow.scala	/^package verilogmain$/;"	p
verilogmain	src/test/scala/verilogmain/Dataflow64.scala	/^package verilogmain$/;"	p
verilogmain	src/test/scala/verilogmain/FusedDataflow.scala	/^package verilogmain$/;"	p
verilogmain	src/test/scala/verilogmain/MixedDataflow32.scala	/^package verilogmain$/;"	p
verilogmain	src/test/scala/verilogmain/MixedDataflow64.scala	/^package verilogmain$/;"	p
verilogmain	src/test/scala/verilogmain/TypStackSweeper.scala	/^package verilogmain$/;"	p
verilogmain	src/test/scala/verilogmain/TypeStackSweeper16b.scala	/^package verilogmain$/;"	p
w	src/main/scala/accel/NastiMaster.scala	/^    val w = Wire(new NastiMasterReq)$/;"	l
w	src/main/scala/accel/NastiMaster.scala	/^    val w = Wire(new NastiMasterResp)$/;"	l
w	src/main/scala/junctions/nasti.scala	/^    val w = Wire(new NastiWriteDataChannel)$/;"	l
w	src/main/scala/junctions/nasti.scala	/^  val w  = Decoupled(new NastiWriteDataChannel)$/;"	l
wBytes	src/main/scala/accel/Cache.scala	/^  val wBytes = xlen \/ 8$/;"	l
wState	src/main/scala/accel/NastiMaster.scala	/^  val wState = RegInit(sIdle);    \/\/ Write data channel state$/;"	l
w_chosen	src/main/scala/junctions/nasti.scala	/^    val w_chosen = Reg(UInt(width = arbIdBits))$/;"	l
w_done	src/main/scala/junctions/nasti.scala	/^    val w_done = Reg(init = Bool(true))$/;"	l
w_r	src/main/scala/accel/NastiMaster.scala	/^  val w_r  = RegInit(NastiWriteDataChannel(0.U))$/;"	l
w_valid_r	src/main/scala/accel/NastiMaster.scala	/^  val w_valid_r = RegInit(false.B)$/;"	l
waddr	src/main/scala/arbiters/TypeStackFile.scala	/^  val waddr = Cat(WriteController.io.MemReq.bits.taskID, WriteController.io.MemReq.bits.addr(wordindex + log2Ceil(Size) - 1, wordindex))$/;"	l
waddr	src/main/scala/regfile/RegFile.scala	/^  val waddr  = Input(UInt(max(1,log2Ceil(size)).W))$/;"	l
wdata	src/main/scala/accel/Cache.scala	/^  val wdata = Mux(!is_alloc, Fill(nWords, cpu_data),$/;"	l
wdata	src/main/scala/regfile/RegFile.scala	/^  val wdata  = Input(UInt(xlen.W))$/;"	l
wen	src/main/scala/accel/Cache.scala	/^  val wen = is_write && (hit || is_alloc_reg) && !io.cpu.abort || is_alloc$/;"	l
wen	src/main/scala/regfile/RegFile.scala	/^  val wen    = Input(Bool())$/;"	l
wire	src/main/scala/accel/Cache.scala	/^    val wire = Wire(new MemReq())$/;"	l
wire	src/main/scala/accel/Cache.scala	/^    val wire = Wire(new MemResp())$/;"	l
wire	src/main/scala/interfaces/interfaces.scala	/^    val wire = Wire(new AllocaReq)$/;"	l
wire	src/main/scala/interfaces/interfaces.scala	/^    val wire = Wire(new AllocaResp)$/;"	l
wire	src/main/scala/interfaces/interfaces.scala	/^    val wire = Wire(new ControlBundle)$/;"	l
wire	src/main/scala/interfaces/interfaces.scala	/^    val wire = Wire(new DataBundle)$/;"	l
wire	src/main/scala/interfaces/interfaces.scala	/^    val wire = Wire(new FUResp)$/;"	l
wire	src/main/scala/interfaces/interfaces.scala	/^    val wire = Wire(new MemReq())$/;"	l
wire	src/main/scala/interfaces/interfaces.scala	/^    val wire = Wire(new MemResp())$/;"	l
wire	src/main/scala/interfaces/interfaces.scala	/^    val wire = Wire(new ReadReq)$/;"	l
wire	src/main/scala/interfaces/interfaces.scala	/^    val wire = Wire(new ReadResp)$/;"	l
wire	src/main/scala/interfaces/interfaces.scala	/^    val wire = Wire(new TypBundle)$/;"	l
wire	src/main/scala/interfaces/interfaces.scala	/^    val wire = Wire(new WriteReq)$/;"	l
wire	src/main/scala/interfaces/interfaces.scala	/^    val wire = new CustomDataBundle(gen)$/;"	l
wmask	src/main/scala/accel/Cache.scala	/^  val wmask = Mux(!is_alloc, (cpu_mask << Cat(off_reg, 0.U(byteOffsetBits.W))).asUInt.zext, -1.S).asUInt()$/;"	l
wmask	src/main/scala/regfile/RegFile.scala	/^  val wmask  = Input(UInt((xlen\/8).W))$/;"	l
wmeta	src/main/scala/accel/Cache.scala	/^  val wmeta = Wire(new MetaData)$/;"	l
wordCount	src/main/scala/accel/Core.scala	/^  val wordCount = Reg(UInt(32.W))$/;"	l
wordIdx	src/main/scala/accel/CacheModel.scala	/^  val wordIdx  = req.addr(blen-1, byteOffsetBits)$/;"	l
wordSelBits	src/main/scala/accel/DataBundleReg.scala	/^  val wordSelBits = log2Ceil(xlen\/8)$/;"	l
wordSelBits	src/main/scala/accel/SimpleReg.scala	/^  val wordSelBits = log2Ceil(xlen\/8)$/;"	l
wordindex	src/main/scala/arbiters/TypeStackFile.scala	/^  val wordindex = log2Ceil(xlen_bytes)$/;"	l
wordindex	src/main/scala/stack/StackMem.scala	/^  val wordindex = log2Ceil(xlen_bytes)$/;"	l
wordmask	src/main/scala/node/helpers.scala	/^      val wordmask = Typ2BitMask(sel)$/;"	l
wordmask	src/main/scala/node/helpers.scala	/^      val wordmask = Typ2ByteMask(sel)$/;"	l
wrAddr	src/main/scala/accel/NastiMemSlave.scala	/^        val wrAddr = (dutMem.aw.bits.addr >> size).asUInt() + wCnt.asUInt()$/;"	l
write	src/test/scala/accel/CacheTests.scala	/^  val write = (((0 until bBytes) foldLeft 0.U){ (write, i) => write | Mux($/;"	l
write	src/test/scala/generator/cilk/bgemm_test.scala	/^    val write = Input(Bool())                 \/\/ Initialization write strobe$/;"	l
write	src/test/scala/generator/cilk/cilk_for_test04_test.scala	/^    val write = Input(Bool())$/;"	l
write	src/test/scala/generator/cilk/cilk_for_test06_test.scala	/^    val write = Input(Bool()) \/\/ Initialization write strobe$/;"	l
write	src/test/scala/generator/cilk/cilk_for_test07_test.scala	/^    val write = Input(Bool())                 \/\/ Initialization write strobe$/;"	l
write	src/test/scala/generator/cilk/cilk_for_test08_test.scala	/^    val write = Input(Bool())                 \/\/ Initialization write strobe$/;"	l
write	src/test/scala/generator/cilk/cilk_for_test09_test.scala	/^    val write = Input(Bool())                 \/\/ Initialization write strobe$/;"	l
write	src/test/scala/generator/cilk/cilk_for_test12_test.scala	/^    val write = Input(Bool())$/;"	l
write	src/test/scala/generator/cilk/fib_test.scala	/^    val write = Input(Bool())$/;"	l
write	src/test/scala/generator/cilk/mergesort_test.scala	/^    val write = Input(Bool())$/;"	l
write	src/test/scala/generator/cilk/stencil_test.scala	/^    val write = Input(Bool())$/;"	l
write	src/test/scala/generator/test05_test.scala	/^    val write = Input(Bool())$/;"	l
write	src/test/scala/generator/test15_test.scala	/^    val write = Input(Bool())$/;"	l
writeAddrReadyReg	src/main/scala/accel/DataBundleReg.scala	/^  val writeAddrReadyReg = RegInit(false.B)$/;"	l
writeAddrReadyReg	src/main/scala/accel/SimpleReg.scala	/^  val writeAddrReadyReg = RegInit(false.B)$/;"	l
writeAddrReg	src/main/scala/accel/DataBundleReg.scala	/^  val writeAddrReg = RegInit(0.U(32.W))$/;"	l
writeAddrReg	src/main/scala/accel/SimpleReg.scala	/^  val writeAddrReg = RegInit(0.U(32.W))$/;"	l
writeBankSelect	src/main/scala/accel/DataBundleReg.scala	/^  val writeBankSelect = writeAddrReg(bankSelBit)$/;"	l
writeBankSelect	src/main/scala/accel/SimpleReg.scala	/^  val writeBankSelect = writeAddrReg(bankSelBit)$/;"	l
writeData	src/main/scala/accel/CacheModel.scala	/^  val writeData = Vec(bBytes,UInt(8.W))$/;"	l
writeData	src/main/scala/accel/Core.scala	/^  val writeData = wordCount$/;"	l
writeMask	src/main/scala/accel/CacheModel.scala	/^  val writeMask = Vec(bBytes,Bool())$/;"	l
writeReadyReg	src/main/scala/accel/DataBundleReg.scala	/^  val writeReadyReg = RegNext(canDoWrite, false.B)$/;"	l
writeReadyReg	src/main/scala/accel/SimpleReg.scala	/^  val writeReadyReg = RegNext(canDoWrite, false.B)$/;"	l
writeRegSelect	src/main/scala/accel/DataBundleReg.scala	/^  val writeRegSelect = writeAddrReg(regSelBits+wordSelBits-1, wordSelBits)$/;"	l
writeRegSelect	src/main/scala/accel/SimpleReg.scala	/^  val writeRegSelect = writeAddrReg(regSelBits+wordSelBits-1, wordSelBits)$/;"	l
writeRespValidReg	src/main/scala/accel/DataBundleReg.scala	/^  val writeRespValidReg = RegInit(false.B)$/;"	l
writeRespValidReg	src/main/scala/accel/SimpleReg.scala	/^  val writeRespValidReg = RegInit(false.B)$/;"	l
writeResult	src/test/scala/generator/cilk/cilk_for_test06_test.scala	/^  val writeResult = inA.zip(inB).zip(outDataVec)$/;"	l
write_entry	src/main/scala/memory/WriteMemoryController.scala	/^    val write_entry = Module(new WriteTableEntry(i))$/;"	l
write_entry	src/main/scala/memory/WriteTypMemoryController.scala	/^    val write_entry = Module(new WriteTypTableEntry(i))$/;"	l
writer	src/test/scala/generator/cilk/cilk_for_test06_test.scala	/^  val writer = new BufferedWriter(new FileWriter(file))$/;"	l
x	src/main/scala/FPU/FPCompare.scala	/^            val x =$/;"	l
x	src/main/scala/FPU/FPUDiv.scala	/^    val x = RegInit(0.U(xlen.W))$/;"	l
x	src/main/scala/FPU/SharedDiv.scala	/^  val x = fNFromRecFN(t.expWidth, t.sigWidth, ds.io.out)$/;"	l
x	src/main/scala/memory/ReadMemoryController.scala	/^    val x = RegInit(0.U(xlen.W))$/;"	l
x	src/main/scala/memory/ReadTypMemoryController.scala	/^    val x = RegInit(0.U(xlen.W))$/;"	l
x	src/main/scala/memory/WriteTypMemoryController.scala	/^    val x = RegInit(0.U(xlen.W))$/;"	l
x	src/main/scala/muxes/Muxes.scala	/^  val x = io.sel$/;"	l
x	src/main/scala/node/CustomFunctionalUnit.scala	/^    val x = RegInit(0.U(xlen.W))$/;"	l
x	src/main/scala/node/FusedComputeNode.scala	/^    val x = RegInit(0.U(xlen.W))$/;"	l
x	src/main/scala/node/LoadSimple.scala	/^    val x = RegInit(0.U(xlen.W))$/;"	l
x	src/main/scala/node/StoreSimple.scala	/^    val x = RegInit(0.U(xlen.W))$/;"	l
x	src/main/scala/node/TypCompute.scala	/^        val x = Wire(new mat2x2)$/;"	l
x	src/main/scala/node/TypCompute.scala	/^        val x = Wire(new vec2)$/;"	l
x	src/main/scala/node/TypCompute.scala	/^        val x = Wire(new vec3)$/;"	l
x	src/main/scala/node/TypCompute.scala	/^    val x = RegInit(0.U(xlen.W))$/;"	l
x	src/main/scala/node/TypLoad.scala	/^    val x = RegInit(0.U(xlen.W))$/;"	l
x	src/main/scala/node/TypStore.scala	/^    val x = RegInit(0.U(xlen.W))$/;"	l
xlen	src/main/scala/config/config.scala	/^  val xlen    = p(XLEN)$/;"	l
xlen_bytes	src/main/scala/arbiters/TypeStackFile.scala	/^  val xlen_bytes = xlen \/ 8$/;"	l
xlen_bytes	src/main/scala/memory/ReadMemoryController.scala	/^  val xlen_bytes = xlen \/ 8$/;"	l
xlen_bytes	src/main/scala/memory/ReadTypMemoryController.scala	/^  val xlen_bytes = xlen \/ 8$/;"	l
xlen_bytes	src/main/scala/memory/WriteMemoryController.scala	/^  val xlen_bytes = xlen \/ 8$/;"	l
xlen_bytes	src/main/scala/memory/WriteTypMemoryController.scala	/^  val xlen_bytes = xlen \/ 8$/;"	l
xlen_bytes	src/main/scala/stack/StackMem.scala	/^  val xlen_bytes = xlen \/ 8$/;"	l
y	src/main/scala/memory/WriteMemoryController.scala	/^    val y = (sendbytemask === 0.asUInt((xlen\/4).W))$/;"	l
y	src/main/scala/memory/WriteTypMemoryController.scala	/^    val y  = (recvptr === (Beats-1).U)$/;"	l
y	src/main/scala/node/LoadMaskNode.scala	/^   val y = (sendbytemask === 0.asUInt(16.W))$/;"	l
yticklabels	scripts/extract_activity.py	/^yticklabels = []$/;"	v
yticks	scripts/extract_activity.py	/^yticks = []$/;"	v
z	src/main/scala/node/LoadMaskNode.scala	/^   val z = linebuffer.asUInt$/;"	l
zipfile	scripts/TypeStackFile.py	/^import zipfile$/;"	i
